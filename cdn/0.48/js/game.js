!function(b){if("object"==typeof exports&&"undefined"!=typeof module){module.exports=b()}else{if("function"==typeof define&&define.amd){define([],b)}else{var a;"undefined"!=typeof window?a=window:"undefined"!=typeof global?a=global:"undefined"!=typeof self&&(a=self),a.io=b()}}}(function(){var d,b,a;return(function c(f,k,h){function g(n,l){if(!k[n]){if(!f[n]){var i=typeof require=="function"&&require;if(!l&&i){return i(n,!0)}if(e){return e(n,!0)}throw new Error("Cannot find module '"+n+"'")}var m=k[n]={exports:{}};f[n][0].call(m.exports,function(o){var p=f[n][1][o];return g(p?p:o)},m,m.exports,c,f,k,h)}return k[n].exports}var e=typeof require=="function"&&require;for(var j=0;j<h.length;j++){g(h[j])}return g})({1:[function(g,f,e){f.exports=g("./lib/")},{"./lib/":2}],2:[function(j,k,m){var h=j("./url");var g=j("socket.io-parser");var e=j("./manager");var i=j("debug")("socket.io-client");k.exports=m=l;var f=m.managers={};function l(p,o){if(typeof p=="object"){o=p;p=undefined}o=o||{};var n=h(p);var q=n.source;var s=n.id;var r;if(o.forceNew||o["force new connection"]||false===o.multiplex){i("ignoring socket cache for %s",q);r=e(q,o)}else{if(!f[s]){i("new io instance for %s",q);f[s]=e(q,o)}r=f[s]}return r.socket(n.path)}m.protocol=g.protocol;m.connect=l;m.Manager=j("./manager");m.Socket=j("./socket")},{"./manager":3,"./socket":5,"./url":6,debug:9,"socket.io-parser":40}],3:[function(j,k,m){var h=j("./url");var o=j("engine.io-client");var i=j("./socket");var q=j("component-emitter");var g=j("socket.io-parser");var n=j("./on");var p=j("component-bind");var l=j("object-component");var f=j("debug")("socket.io-client:manager");k.exports=e;function e(s,r){if(!(this instanceof e)){return new e(s,r)}if(s&&("object"==typeof s)){r=s;s=undefined}r=r||{};r.path=r.path||"/socket.io";this.nsps={};this.subs=[];this.opts=r;this.reconnection(r.reconnection!==false);this.reconnectionAttempts(r.reconnectionAttempts||Infinity);this.reconnectionDelay(r.reconnectionDelay||1000);this.reconnectionDelayMax(r.reconnectionDelayMax||5000);this.timeout(null==r.timeout?20000:r.timeout);this.readyState="closed";this.uri=s;this.connected=0;this.attempts=0;this.encoding=false;this.packetBuffer=[];this.encoder=new g.Encoder();this.decoder=new g.Decoder();this.autoConnect=r.autoConnect!==false;if(this.autoConnect){this.open()}}e.prototype.emitAll=function(){this.emit.apply(this,arguments);for(var r in this.nsps){this.nsps[r].emit.apply(this.nsps[r],arguments)}};q(e.prototype);e.prototype.reconnection=function(r){if(!arguments.length){return this._reconnection}this._reconnection=!!r;return this};e.prototype.reconnectionAttempts=function(r){if(!arguments.length){return this._reconnectionAttempts}this._reconnectionAttempts=r;return this};e.prototype.reconnectionDelay=function(r){if(!arguments.length){return this._reconnectionDelay}this._reconnectionDelay=r;return this};e.prototype.reconnectionDelayMax=function(r){if(!arguments.length){return this._reconnectionDelayMax}this._reconnectionDelayMax=r;return this};e.prototype.timeout=function(r){if(!arguments.length){return this._timeout}this._timeout=r;return this};e.prototype.maybeReconnectOnOpen=function(){if(!this.openReconnect&&!this.reconnecting&&this._reconnection&&this.attempts===0){this.openReconnect=true;this.reconnect()}};e.prototype.open=e.prototype.connect=function(u){f("readyState %s",this.readyState);if(~this.readyState.indexOf("open")){return this}f("opening %s",this.uri);this.engine=o(this.uri,this.opts);var r=this.engine;var t=this;this.readyState="opening";var w=n(r,"open",function(){t.onopen();u&&u()});var s=n(r,"error",function(z){f("connect_error");t.cleanup();t.readyState="closed";t.emitAll("connect_error",z);if(u){var y=new Error("Connection error");y.data=z;u(y)}t.maybeReconnectOnOpen()});if(false!==this._timeout){var v=this._timeout;f("connect attempt will timeout after %d",v);var x=setTimeout(function(){f("connect attempt timed out after %d",v);w.destroy();r.close();r.emit("error","timeout");t.emitAll("connect_timeout",v)},v);this.subs.push({destroy:function(){clearTimeout(x)}})}this.subs.push(w);this.subs.push(s);return this};e.prototype.onopen=function(){f("open");this.cleanup();this.readyState="open";this.emit("open");var r=this.engine;this.subs.push(n(r,"data",p(this,"ondata")));this.subs.push(n(this.decoder,"decoded",p(this,"ondecoded")));this.subs.push(n(r,"error",p(this,"onerror")));this.subs.push(n(r,"close",p(this,"onclose")))};e.prototype.ondata=function(r){this.decoder.add(r)};e.prototype.ondecoded=function(r){this.emit("packet",r)};e.prototype.onerror=function(r){f("error",r);this.emitAll("error",r)};e.prototype.socket=function(t){var r=this.nsps[t];if(!r){r=new i(this,t);this.nsps[t]=r;var s=this;r.on("connect",function(){s.connected++})}return r};e.prototype.destroy=function(r){--this.connected||this.close()};e.prototype.packet=function(s){f("writing packet %j",s);var r=this;if(!r.encoding){r.encoding=true;this.encoder.encode(s,function(u){for(var t=0;t<u.length;t++){r.engine.write(u[t])}r.encoding=false;r.processPacketQueue()})}else{r.packetBuffer.push(s)}};e.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var r=this.packetBuffer.shift();this.packet(r)}};e.prototype.cleanup=function(){var r;while(r=this.subs.shift()){r.destroy()}this.packetBuffer=[];this.encoding=false;this.decoder.destroy()};e.prototype.close=e.prototype.disconnect=function(){this.skipReconnect=true;this.engine.close()};e.prototype.onclose=function(r){f("close");this.cleanup();this.readyState="closed";this.emit("close",r);if(this._reconnection&&!this.skipReconnect){this.reconnect()}};e.prototype.reconnect=function(){if(this.reconnecting){return this}var r=this;this.attempts++;if(this.attempts>this._reconnectionAttempts){f("reconnect failed");this.emitAll("reconnect_failed");this.reconnecting=false}else{var s=this.attempts*this.reconnectionDelay();s=Math.min(s,this.reconnectionDelayMax());f("will wait %dms before reconnect attempt",s);this.reconnecting=true;var t=setTimeout(function(){f("attempting reconnect");r.emitAll("reconnect_attempt",r.attempts);r.emitAll("reconnecting",r.attempts);r.open(function(u){if(u){f("reconnect attempt error");r.reconnecting=false;r.reconnect();r.emitAll("reconnect_error",u.data)}else{f("reconnect success");r.onreconnect()}})},s);this.subs.push({destroy:function(){clearTimeout(t)}})}};e.prototype.onreconnect=function(){var r=this.attempts;this.attempts=0;this.reconnecting=false;this.emitAll("reconnect",r)}},{"./on":4,"./socket":5,"./url":6,"component-bind":7,"component-emitter":8,debug:9,"engine.io-client":10,"object-component":37,"socket.io-parser":40}],4:[function(h,g,f){g.exports=e;function e(k,j,i){k.on(j,i);return{destroy:function(){k.removeListener(j,i)}}}},{}],5:[function(h,i,k){var f=h("socket.io-parser");var p=h("component-emitter");var j=h("to-array");var m=h("./on");var n=h("component-bind");var e=h("debug")("socket.io-client:socket");var l=h("has-binary");var o=h("indexof");i.exports=k=g;var r={connect:1,connect_error:1,connect_timeout:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1};var q=p.prototype.emit;function g(t,s){this.io=t;this.nsp=s;this.json=this;this.ids=0;this.acks={};if(this.io.autoConnect){this.open()}this.receiveBuffer=[];this.sendBuffer=[];this.connected=false;this.disconnected=true;this.subEvents()}p(g.prototype);g.prototype.subEvents=function(){var s=this.io;this.subs=[m(s,"open",n(this,"onopen")),m(s,"packet",n(this,"onpacket")),m(s,"close",n(this,"onclose"))]};g.prototype.open=g.prototype.connect=function(){if(this.connected){return this}this.io.open();if("open"==this.io.readyState){this.onopen()}return this};g.prototype.send=function(){var s=j(arguments);s.unshift("message");this.emit.apply(this,s);return this};g.prototype.emit=function(u){if(r.hasOwnProperty(u)){q.apply(this,arguments);return this}var t=j(arguments);var s=f.EVENT;if(l(t)){s=f.BINARY_EVENT}var v={type:s,data:t};if("function"==typeof t[t.length-1]){e("emitting packet with ack id %d",this.ids);this.acks[this.ids]=t.pop();v.id=this.ids++}if(this.connected){this.packet(v)}else{this.sendBuffer.push(v)}return this};g.prototype.packet=function(s){s.nsp=this.nsp;this.io.packet(s)};g.prototype.onopen=function(){e("transport is open - connecting");if("/"!=this.nsp){this.packet({type:f.CONNECT})}};g.prototype.onclose=function(s){e("close (%s)",s);this.connected=false;this.disconnected=true;this.emit("disconnect",s)};g.prototype.onpacket=function(s){if(s.nsp!=this.nsp){return}switch(s.type){case f.CONNECT:this.onconnect();break;case f.EVENT:this.onevent(s);break;case f.BINARY_EVENT:this.onevent(s);break;case f.ACK:this.onack(s);break;case f.BINARY_ACK:this.onack(s);break;case f.DISCONNECT:this.ondisconnect();break;case f.ERROR:this.emit("error",s.data);break}};g.prototype.onevent=function(t){var s=t.data||[];e("emitting event %j",s);if(null!=t.id){e("attaching ack callback to event");s.push(this.ack(t.id))}if(this.connected){q.apply(this,s)}else{this.receiveBuffer.push(s)}};g.prototype.ack=function(u){var s=this;var t=false;return function(){if(t){return}t=true;var v=j(arguments);e("sending ack %j",v);var w=l(v)?f.BINARY_ACK:f.ACK;s.packet({type:w,id:u,data:v})}};g.prototype.onack=function(t){e("calling ack %s with %j",t.id,t.data);var s=this.acks[t.id];s.apply(this,t.data);delete this.acks[t.id]};g.prototype.onconnect=function(){this.connected=true;this.disconnected=false;this.emit("connect");this.emitBuffered()};g.prototype.emitBuffered=function(){var s;for(s=0;s<this.receiveBuffer.length;s++){q.apply(this,this.receiveBuffer[s])}this.receiveBuffer=[];for(s=0;s<this.sendBuffer.length;s++){this.packet(this.sendBuffer[s])}this.sendBuffer=[]};g.prototype.ondisconnect=function(){e("server disconnect (%s)",this.nsp);this.destroy();this.onclose("io server disconnect")};g.prototype.destroy=function(){for(var s=0;s<this.subs.length;s++){this.subs[s].destroy()}this.io.destroy(this)};g.prototype.close=g.prototype.disconnect=function(){if(!this.connected){return this}e("performing disconnect (%s)",this.nsp);this.packet({type:f.DISCONNECT});this.destroy();this.onclose("io client disconnect");return this}},{"./on":4,"component-bind":7,"component-emitter":8,debug:9,"has-binary":32,indexof:36,"socket.io-parser":40,"to-array":44}],6:[function(g,f,e){(function(j){var k=g("parseuri");var h=g("debug")("socket.io-client:url");f.exports=i;function i(l,n){var m=l;var n=n||j.location;if(null==l){l=n.protocol+"//"+n.hostname}if("string"==typeof l){if("/"==l.charAt(0)){if("undefined"!=typeof n){l=n.hostname+l}}if(!/^(https?|wss?):\/\//.test(l)){h("protocol-less url %s",l);if("undefined"!=typeof n){l=n.protocol+"//"+l}else{l="https://"+l}}h("parse %s",l);m=k(l)}if(!m.port){if(/^(http|ws)$/.test(m.protocol)){m.port="80"}else{if(/^(http|ws)s$/.test(m.protocol)){m.port="443"}}}m.path=m.path||"/";m.id=m.protocol+"://"+m.host+":"+m.port;m.href=m.protocol+"://"+m.host+(n&&n.port==m.port?"":(":"+m.port));return m}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{debug:9,parseuri:38}],7:[function(g,f,e){var h=[].slice;f.exports=function(k,j){if("string"==typeof j){j=k[j]}if("function"!=typeof j){throw new Error("bind() requires a function")}var i=h.call(arguments,2);return function(){return j.apply(k,i.concat(h.call(arguments)))}}},{}],8:[function(i,g,f){g.exports=h;function h(j){if(j){return e(j)}}function e(k){for(var j in h.prototype){k[j]=h.prototype[j]}return k}h.prototype.on=h.prototype.addEventListener=function(k,j){this._callbacks=this._callbacks||{};(this._callbacks[k]=this._callbacks[k]||[]).push(j);return this};h.prototype.once=function(m,l){var k=this;this._callbacks=this._callbacks||{};function j(){k.off(m,j);l.apply(this,arguments)}j.fn=l;this.on(m,j);return this};h.prototype.off=h.prototype.removeListener=h.prototype.removeAllListeners=h.prototype.removeEventListener=function(n,l){this._callbacks=this._callbacks||{};if(0==arguments.length){this._callbacks={};return this}var m=this._callbacks[n];if(!m){return this}if(1==arguments.length){delete this._callbacks[n];return this}var j;for(var k=0;k<m.length;k++){j=m[k];if(j===l||j.fn===l){m.splice(k,1);break}}return this};h.prototype.emit=function(n){this._callbacks=this._callbacks||{};var k=[].slice.call(arguments,1),m=this._callbacks[n];if(m){m=m.slice(0);for(var l=0,j=m.length;l<j;++l){m[l].apply(this,k)}}return this};h.prototype.listeners=function(j){this._callbacks=this._callbacks||{};return this._callbacks[j]||[]};h.prototype.hasListeners=function(j){return !!this.listeners(j).length}},{}],9:[function(j,h,g){h.exports=f;function f(e){if(!f.enabled(e)){return function(){}}return function(l){l=i(l);var n=new Date;var m=n-(f[e]||n);f[e]=n;l=e+" "+l+" +"+f.humanize(m);window.console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}}f.names=[];f.skips=[];f.enable=function(m){try{localStorage.debug=m}catch(p){}var o=(m||"").split(/[\s,]+/),l=o.length;for(var n=0;n<l;n++){m=o[n].replace("*",".*?");if(m[0]==="-"){f.skips.push(new RegExp("^"+m.substr(1)+"$"))}else{f.names.push(new RegExp("^"+m+"$"))}}};f.disable=function(){f.enable("")};f.humanize=function(l){var n=1000,m=60*1000,e=60*m;if(l>=e){return(l/e).toFixed(1)+"h"}if(l>=m){return(l/m).toFixed(1)+"m"}if(l>=n){return(l/n|0)+"s"}return l+"ms"};f.enabled=function(l){for(var m=0,e=f.skips.length;m<e;m++){if(f.skips[m].test(l)){return false}}for(var m=0,e=f.names.length;m<e;m++){if(f.names[m].test(l)){return true}}return false};function i(e){if(e instanceof Error){return e.stack||e.message}return e}try{if(window.localStorage){f.enable(localStorage.debug)}}catch(k){}},{}],10:[function(g,f,e){f.exports=g("./lib/")},{"./lib/":11}],11:[function(g,f,e){f.exports=g("./socket");f.exports.parser=g("engine.io-parser")},{"./socket":12,"engine.io-parser":21}],12:[function(g,f,e){(function(k){var n=g("./transports");var r=g("component-emitter");var i=g("debug")("engine.io-client:socket");var p=g("indexof");var h=g("engine.io-parser");var m=g("parseuri");var o=g("parsejson");var l=g("parseqs");f.exports=j;function s(){}function j(v,u){if(!(this instanceof j)){return new j(v,u)}u=u||{};if(v&&"object"==typeof v){u=v;v=null}if(v){v=m(v);u.host=v.host;u.secure=v.protocol=="https"||v.protocol=="wss";u.port=v.port;if(v.query){u.query=v.query}}this.secure=null!=u.secure?u.secure:(k.location&&"https:"==location.protocol);if(u.host){var t=u.host.split(":");u.hostname=t.shift();if(t.length){u.port=t.pop()}}this.agent=u.agent||false;this.hostname=u.hostname||(k.location?location.hostname:"localhost");this.port=u.port||(k.location&&location.port?location.port:(this.secure?443:80));this.query=u.query||{};if("string"==typeof this.query){this.query=l.decode(this.query)}this.upgrade=false!==u.upgrade;this.path=(u.path||"/engine.io").replace(/\/$/,"")+"/";this.forceJSONP=!!u.forceJSONP;this.jsonp=false!==u.jsonp;this.forceBase64=!!u.forceBase64;this.enablesXDR=!!u.enablesXDR;this.timestampParam=u.timestampParam||"t";this.timestampRequests=u.timestampRequests;this.transports=u.transports||["polling","websocket"];this.readyState="";this.writeBuffer=[];this.callbackBuffer=[];this.policyPort=u.policyPort||843;this.rememberUpgrade=u.rememberUpgrade||false;this.open();this.binaryType=null;this.onlyBinaryUpgrades=u.onlyBinaryUpgrades}j.priorWebsocketSuccess=false;r(j.prototype);j.protocol=h.protocol;j.Socket=j;j.Transport=g("./transport");j.transports=g("./transports");j.parser=g("engine.io-parser");j.prototype.createTransport=function(t){i('creating transport "%s"',t);var u=q(this.query);u.EIO=h.protocol;u.transport=t;if(this.id){u.sid=this.id}var v=new n[t]({agent:this.agent,hostname:this.hostname,port:this.port,secure:this.secure,path:this.path,query:u,forceJSONP:this.forceJSONP,jsonp:this.jsonp,forceBase64:this.forceBase64,enablesXDR:this.enablesXDR,timestampRequests:this.timestampRequests,timestampParam:this.timestampParam,policyPort:this.policyPort,socket:this});return v};function q(u){var v={};for(var t in u){if(u.hasOwnProperty(t)){v[t]=u[t]}}return v}j.prototype.open=function(){var v;if(this.rememberUpgrade&&j.priorWebsocketSuccess&&this.transports.indexOf("websocket")!=-1){v="websocket"}else{if(0==this.transports.length){var t=this;setTimeout(function(){t.emit("error","No transports available")},0);return}else{v=this.transports[0]}}this.readyState="opening";var v;try{v=this.createTransport(v)}catch(u){this.transports.shift();this.open();return}v.open();this.setTransport(v)};j.prototype.setTransport=function(u){i("setting transport %s",u.name);var t=this;if(this.transport){i("clearing existing transport %s",this.transport.name);this.transport.removeAllListeners()}this.transport=u;u.on("drain",function(){t.onDrain()}).on("packet",function(v){t.onPacket(v)}).on("error",function(v){t.onError(v)}).on("close",function(){t.onClose("transport close")})};j.prototype.probe=function(t){i('probing transport "%s"',t);var w=this.createTransport(t,{probe:1}),y=false,C=this;j.priorWebsocketSuccess=false;function x(){if(C.onlyBinaryUpgrades){var F=!this.supportsBinary&&C.transport.supportsBinary;y=y||F}if(y){return}i('probe transport "%s" opened',t);var G=window.setInterval(function E(){if(w!=null&&!y){w.send([{type:"ping",data:"probe"}])}else{window.clearInterval(G)}},500);w.once("packet",function(I){if(y){return}if("pong"==I.type&&"probe"==I.data){window.clearInterval(G);i('probe transport "%s" pong',t);C.upgrading=true;C.emit("upgrading",w);j.priorWebsocketSuccess="websocket"==w.name;i('pausing current transport "%s"',C.transport.name);C.transport.pause(function(){if(y){return}if("closed"==C.readyState||"closing"==C.readyState){return}i("changing transport and sending upgrade packet");u();C.setTransport(w);w.send([{type:"upgrade"}]);C.emit("upgrade",w);w=null;C.upgrading=false;C.flush()})}else{i('probe transport "%s" failed',t);var H=new Error("probe error");H.transport=w.name;C.emit("upgradeError",H)}})}function A(){if(y){return}y=true;u();w.close();w=null}function z(F){var E=new Error("probe error: "+F);E.transport=w.name;A();i('probe transport "%s" failed because of error: %s',t,F);C.emit("upgradeError",E)}function D(){z("transport closed")}function B(){z("socket closed")}function v(E){if(w&&E.name!=w.name){i('"%s" works - aborting "%s"',E.name,w.name);A()}}function u(){w.removeListener("open",x);w.removeListener("error",z);w.removeListener("close",D);C.removeListener("close",B);C.removeListener("upgrading",v)}w.once("open",x);w.once("error",z);w.once("close",D);this.once("close",B);this.once("upgrading",v);w.open()};j.prototype.onOpen=function(){i("socket open");this.readyState="open";j.priorWebsocketSuccess="websocket"==this.transport.name;this.emit("open");this.flush();if("open"==this.readyState&&this.upgrade&&this.transport.pause){i("starting upgrade probes");for(var u=0,t=this.upgrades.length;u<t;u++){this.probe(this.upgrades[u])}}};j.prototype.onPacket=function(u){if("opening"==this.readyState||"open"==this.readyState){i('socket receive: type "%s", data "%s"',u.type,u.data);this.emit("packet",u);this.emit("heartbeat");switch(u.type){case"open":this.onHandshake(o(u.data));break;case"pong":this.setPing();break;case"error":var t=new Error("server error");t.code=u.data;this.emit("error",t);break;case"message":this.emit("data",u.data);this.emit("message",u.data);break}}else{i('packet received with socket readyState "%s"',this.readyState)}};j.prototype.onHandshake=function(t){this.emit("handshake",t);this.id=t.sid;this.transport.query.sid=t.sid;this.upgrades=this.filterUpgrades(t.upgrades);this.pingInterval=t.pingInterval;this.pingTimeout=t.pingTimeout;this.onOpen();if("closed"==this.readyState){return}this.setPing();this.removeListener("heartbeat",this.onHeartbeat);this.on("heartbeat",this.onHeartbeat)};j.prototype.onHeartbeat=function(u){clearTimeout(this.pingTimeoutTimer);var t=this;t.pingTimeoutTimer=setTimeout(function(){if("closed"==t.readyState){return}t.onClose("ping timeout")},u||(t.pingInterval+t.pingTimeout))};j.prototype.setPing=function(){var t=this;clearTimeout(t.pingIntervalTimer);t.pingIntervalTimer=setTimeout(function(){i("writing ping packet - expecting pong within %sms",t.pingTimeout);t.ping();t.onHeartbeat(t.pingTimeout)},t.pingInterval)};j.prototype.ping=function(){this.sendPacket("ping")};j.prototype.onDrain=function(){for(var t=0;t<this.prevBufferLen;t++){if(this.callbackBuffer[t]){this.callbackBuffer[t]()}}this.writeBuffer.splice(0,this.prevBufferLen);this.callbackBuffer.splice(0,this.prevBufferLen);this.prevBufferLen=0;if(this.writeBuffer.length==0){this.emit("drain")}else{this.flush()}};j.prototype.flush=function(){if("closed"!=this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){i("flushing %d packets in socket",this.writeBuffer.length);this.transport.send(this.writeBuffer);this.prevBufferLen=this.writeBuffer.length;this.emit("flush")}};j.prototype.write=j.prototype.send=function(u,t){this.sendPacket("message",u,t);return this};j.prototype.sendPacket=function(u,v,t){var w={type:u,data:v};this.emit("packetCreate",w);this.writeBuffer.push(w);this.callbackBuffer.push(t);this.flush()};j.prototype.close=function(){if("opening"==this.readyState||"open"==this.readyState){this.onClose("forced close");i("socket closing - telling transport to close");this.transport.close()}return this};j.prototype.onError=function(t){i("socket error %j",t);j.priorWebsocketSuccess=false;this.emit("error",t);this.onClose("transport error",t)};j.prototype.onClose=function(u,v){if("opening"==this.readyState||"open"==this.readyState){i('socket close with reason: "%s"',u);var t=this;clearTimeout(this.pingIntervalTimer);clearTimeout(this.pingTimeoutTimer);setTimeout(function(){t.writeBuffer=[];t.callbackBuffer=[];t.prevBufferLen=0},0);this.transport.removeAllListeners("close");this.transport.close();this.transport.removeAllListeners();this.readyState="closed";this.id=null;this.emit("close",u,v)}};j.prototype.filterUpgrades=function(v){var w=[];for(var u=0,t=v.length;u<t;u++){if(~p(this.transports,v[u])){w.push(v[u])}}return w}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./transport":13,"./transports":14,"component-emitter":8,debug:9,"engine.io-parser":21,indexof:36,parsejson:28,parseqs:29,parseuri:30}],13:[function(h,f,e){var j=h("engine.io-parser");var g=h("component-emitter");f.exports=i;function i(k){this.path=k.path;this.hostname=k.hostname;this.port=k.port;this.secure=k.secure;this.query=k.query;this.timestampParam=k.timestampParam;this.timestampRequests=k.timestampRequests;this.readyState="";this.agent=k.agent||false;this.socket=k.socket;this.enablesXDR=k.enablesXDR}g(i.prototype);i.timestamps=0;i.prototype.onError=function(m,l){var k=new Error(m);k.type="TransportError";k.description=l;this.emit("error",k);return this};i.prototype.open=function(){if("closed"==this.readyState||""==this.readyState){this.readyState="opening";this.doOpen()}return this};i.prototype.close=function(){if("opening"==this.readyState||"open"==this.readyState){this.doClose();this.onClose()}return this};i.prototype.send=function(k){if("open"==this.readyState){this.write(k)}else{throw new Error("Transport not open")}};i.prototype.onOpen=function(){this.readyState="open";this.writable=true;this.emit("open")};i.prototype.onData=function(k){var l=j.decodePacket(k,this.socket.binaryType);this.onPacket(l)};i.prototype.onPacket=function(k){this.emit("packet",k)};i.prototype.onClose=function(){this.readyState="closed";this.emit("close")}},{"component-emitter":8,"engine.io-parser":21}],14:[function(g,f,e){(function(k){var j=g("xmlhttprequest");var i=g("./polling-xhr");var m=g("./polling-jsonp");var h=g("./websocket");e.polling=l;e.websocket=h;function l(p){var t;var q=false;var o=false;var s=false!==p.jsonp;if(k.location){var r="https:"==location.protocol;var n=location.port;if(!n){n=r?443:80}q=p.hostname!=location.hostname||n!=p.port;o=p.secure!=r}p.xdomain=q;p.xscheme=o;t=new j(p);if("open" in t&&!p.forceJSONP){return new i(p)}else{if(!s){throw new Error("JSONP disabled")}return new m(p)}}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./polling-jsonp":15,"./polling-xhr":16,"./websocket":18,xmlhttprequest:19}],15:[function(g,f,e){(function(h){var p=g("./polling");var j=g("component-inherit");f.exports=l;var n=/\n/g;var i=/\\n/g;var o;var m=0;function k(){}function l(r){p.call(this,r);this.query=this.query||{};if(!o){if(!h.___eio){h.___eio=[]}o=h.___eio}this.index=o.length;var q=this;o.push(function(s){q.onData(s)});this.query.j=this.index;if(h.document&&h.addEventListener){h.addEventListener("beforeunload",function(){if(q.script){q.script.onerror=k}})}}j(l,p);l.prototype.supportsBinary=false;l.prototype.doClose=function(){if(this.script){this.script.parentNode.removeChild(this.script);this.script=null}if(this.form){this.form.parentNode.removeChild(this.form);this.form=null}p.prototype.doClose.call(this)};l.prototype.doPoll=function(){var r=this;var q=document.createElement("script");if(this.script){this.script.parentNode.removeChild(this.script);this.script=null}q.async=true;q.src=this.uri();q.onerror=function(u){r.onError("jsonp poll error",u)};var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(q,t);this.script=q;var s="undefined"!=typeof navigator&&/gecko/i.test(navigator.userAgent);if(s){setTimeout(function(){var u=document.createElement("iframe");document.body.appendChild(u);document.body.removeChild(u)},100)}};l.prototype.doWrite=function(w,y){var z=this;if(!this.form){var r=document.createElement("form");var s=document.createElement("textarea");var q=this.iframeId="eio_iframe_"+this.index;var v;r.className="socketio";r.style.position="absolute";r.style.top="-1000px";r.style.left="-1000px";r.target=q;r.method="POST";r.setAttribute("accept-charset","utf-8");s.name="d";r.appendChild(s);document.body.appendChild(r);this.form=r;this.area=s}this.form.action=this.uri();function t(){u();y()}function u(){if(z.iframe){try{z.form.removeChild(z.iframe)}catch(B){z.onError("jsonp polling iframe removal error",B)}}try{var A='<iframe src="javascript:0" name="'+z.iframeId+'">';v=document.createElement(A)}catch(B){v=document.createElement("iframe");v.name=z.iframeId;v.src="javascript:0"}v.id=z.iframeId;z.form.appendChild(v);z.iframe=v}u();w=w.replace(i,"\\\n");this.area.value=w.replace(n,"\\n");try{this.form.submit()}catch(x){}if(this.iframe.attachEvent){this.iframe.onreadystatechange=function(){if(z.iframe.readyState=="complete"){t()}}}else{this.iframe.onload=t}}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./polling":17,"component-inherit":20}],16:[function(g,f,e){(function(j){var o=g("xmlhttprequest");var p=g("./polling");var n=g("component-emitter");var k=g("component-inherit");var i=g("debug")("engine.io-client:polling-xhr");f.exports=m;f.exports.Request=h;function l(){}function m(s){p.call(this,s);if(j.location){var t="https:"==location.protocol;var r=location.port;if(!r){r=t?443:80}this.xd=s.hostname!=j.location.hostname||r!=s.port;this.xs=s.secure!=t}}k(m,p);m.prototype.supportsBinary=true;m.prototype.request=function(r){r=r||{};r.uri=this.uri();r.xd=this.xd;r.xs=this.xs;r.agent=this.agent||false;r.supportsBinary=this.supportsBinary;r.enablesXDR=this.enablesXDR;return new h(r)};m.prototype.doWrite=function(v,s){var u=typeof v!=="string"&&v!==undefined;var t=this.request({method:"POST",data:v,isBinary:u});var r=this;t.on("success",s);t.on("error",function(w){r.onError("xhr post error",w)});this.sendXhr=t};m.prototype.doPoll=function(){i("xhr poll");var s=this.request();var r=this;s.on("data",function(t){r.onData(t)});s.on("error",function(t){r.onError("xhr poll error",t)});this.pollXhr=s};function h(r){this.method=r.method||"GET";this.uri=r.uri;this.xd=!!r.xd;this.xs=!!r.xs;this.async=false!==r.async;this.data=undefined!=r.data?r.data:null;this.agent=r.agent;this.isBinary=r.isBinary;this.supportsBinary=r.supportsBinary;this.enablesXDR=r.enablesXDR;this.create()}n(h.prototype);h.prototype.create=function(){var t=this.xhr=new o({agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR});var r=this;try{i("xhr open %s: %s",this.method,this.uri);t.open(this.method,this.uri,this.async);if(this.supportsBinary){t.responseType="arraybuffer"}if("POST"==this.method){try{if(this.isBinary){t.setRequestHeader("Content-type","application/octet-stream")}else{t.setRequestHeader("Content-type","text/plain;charset=UTF-8")}}catch(s){}}if("withCredentials" in t){t.withCredentials=true}if(this.hasXDR()){t.onload=function(){r.onLoad()};t.onerror=function(){r.onError(t.responseText)}}else{t.onreadystatechange=function(){if(4!=t.readyState){return}if(200==t.status||1223==t.status){r.onLoad()}else{setTimeout(function(){r.onError(t.status)},0)}}}i("xhr data %s",this.data);t.send(this.data)}catch(s){setTimeout(function(){r.onError(s)},0);return}if(j.document){this.index=h.requestsCount++;h.requests[this.index]=this}};h.prototype.onSuccess=function(){this.emit("success");this.cleanup()};h.prototype.onData=function(r){this.emit("data",r);this.onSuccess()};h.prototype.onError=function(r){this.emit("error",r);this.cleanup()};h.prototype.cleanup=function(){if("undefined"==typeof this.xhr||null===this.xhr){return}if(this.hasXDR()){this.xhr.onload=this.xhr.onerror=l}else{this.xhr.onreadystatechange=l}try{this.xhr.abort()}catch(r){}if(j.document){delete h.requests[this.index]}this.xhr=null};h.prototype.onLoad=function(){var r;try{var t;try{t=this.xhr.getResponseHeader("Content-Type")}catch(s){}if(t==="application/octet-stream"){r=this.xhr.response}else{if(!this.supportsBinary){r=this.xhr.responseText}else{r="ok"}}}catch(s){this.onError(s)}if(null!=r){this.onData(r)}};h.prototype.hasXDR=function(){return"undefined"!==typeof j.XDomainRequest&&!this.xs&&this.enablesXDR};h.prototype.abort=function(){this.cleanup()};if(j.document){h.requestsCount=0;h.requests={};if(j.attachEvent){j.attachEvent("onunload",q)}else{if(j.addEventListener){j.addEventListener("beforeunload",q)}}}function q(){for(var r in h.requests){if(h.requests.hasOwnProperty(r)){h.requests[r].abort()}}}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./polling":17,"component-emitter":8,"component-inherit":20,debug:9,xmlhttprequest:19}],17:[function(g,h,k){var m=g("../transport");var j=g("parseqs");var e=g("engine.io-parser");var l=g("component-inherit");var f=g("debug")("engine.io-client:polling");h.exports=n;var i=(function(){var o=g("xmlhttprequest");var p=new o({agent:this.agent,xdomain:false});return null!=p.responseType})();function n(p){var o=(p&&p.forceBase64);if(!i||o){this.supportsBinary=false}m.call(this,p)}l(n,m);n.prototype.name="polling";n.prototype.doOpen=function(){this.poll()};n.prototype.pause=function(o){var s=0;var p=this;this.readyState="pausing";function r(){f("paused");p.readyState="paused";o()}if(this.polling||!this.writable){var q=0;if(this.polling){f("we are currently polling - waiting to pause");q++;this.once("pollComplete",function(){f("pre-pause polling complete");--q||r()})}if(!this.writable){f("we are currently writing - waiting to pause");q++;this.once("drain",function(){f("pre-pause writing complete");--q||r()})}}else{r()}};n.prototype.poll=function(){f("polling");this.polling=true;this.doPoll();this.emit("poll")};n.prototype.onData=function(p){var o=this;f("polling got data %s",p);var q=function(t,r,s){if("opening"==o.readyState){o.onOpen()}if("close"==t.type){o.onClose();return false}o.onPacket(t)};e.decodePayload(p,this.socket.binaryType,q);if("closed"!=this.readyState){this.polling=false;this.emit("pollComplete");if("open"==this.readyState){this.poll()}else{f('ignoring poll - transport state "%s"',this.readyState)}}};n.prototype.doClose=function(){var o=this;function p(){f("writing close packet");o.write([{type:"close"}])}if("open"==this.readyState){f("transport open - closing");p()}else{f("transport not open - deferring close");this.once("open",p)}};n.prototype.write=function(q){var p=this;this.writable=false;var o=function(){p.writable=true;p.emit("drain")};var p=this;e.encodePayload(q,this.supportsBinary,function(r){p.doWrite(r,o)})};n.prototype.uri=function(){var q=this.query||{};var p=this.secure?"https":"http";var o="";if(false!==this.timestampRequests){q[this.timestampParam]=+new Date+"-"+m.timestamps++}if(!this.supportsBinary&&!q.sid){q.b64=1}q=j.encode(q);if(this.port&&(("https"==p&&this.port!=443)||("http"==p&&this.port!=80))){o=":"+this.port}if(q.length){q="?"+q}return p+"://"+this.hostname+o+this.path+q}},{"../transport":13,"component-inherit":20,debug:9,"engine.io-parser":21,parseqs:29,xmlhttprequest:19}],18:[function(h,i,k){var m=h("../transport");var e=h("engine.io-parser");var j=h("parseqs");var l=h("component-inherit");var f=h("debug")("engine.io-client:websocket");var n=h("ws");i.exports=g;function g(p){var o=(p&&p.forceBase64);if(o){this.supportsBinary=false}m.call(this,p)}l(g,m);g.prototype.name="websocket";g.prototype.supportsBinary=true;g.prototype.doOpen=function(){if(!this.check()){return}var o=this;var r=this.uri();var q=void (0);var p={agent:this.agent};this.ws=new n(r,q,p);if(this.ws.binaryType===undefined){this.supportsBinary=false}this.ws.binaryType="arraybuffer";this.addEventListeners()};g.prototype.addEventListeners=function(){var o=this;this.ws.onopen=function(){o.onOpen()};this.ws.onclose=function(){o.onClose()};this.ws.onmessage=function(p){o.onData(p.data)};this.ws.onerror=function(p){o.onError("websocket error",p)}};if("undefined"!=typeof navigator&&/iPad|iPhone|iPod/i.test(navigator.userAgent)){g.prototype.onData=function(p){var o=this;setTimeout(function(){m.prototype.onData.call(o,p)},0)}}g.prototype.write=function(r){var p=this;this.writable=false;for(var q=0,o=r.length;q<o;q++){e.encodePacket(r[q],this.supportsBinary,function(t){try{p.ws.send(t)}catch(u){f("websocket closed before onclose event")}})}function s(){p.writable=true;p.emit("drain")}setTimeout(s,0)};g.prototype.onClose=function(){m.prototype.onClose.call(this)};g.prototype.doClose=function(){if(typeof this.ws!=="undefined"){this.ws.close()}};g.prototype.uri=function(){var q=this.query||{};var p=this.secure?"wss":"ws";var o="";if(this.port&&(("wss"==p&&this.port!=443)||("ws"==p&&this.port!=80))){o=":"+this.port}if(this.timestampRequests){q[this.timestampParam]=+new Date}if(!this.supportsBinary){q.b64=1}q=j.encode(q);if(q.length){q="?"+q}return p+"://"+this.hostname+o+this.path+q};g.prototype.check=function(){return !!n&&!("__initialize" in n&&this.name===g.prototype.name)}},{"../transport":13,"component-inherit":20,debug:9,"engine.io-parser":21,parseqs:29,ws:31}],19:[function(h,g,f){var e=h("has-cors");g.exports=function(l){var k=l.xdomain;var i=l.xscheme;var j=l.enablesXDR;try{if("undefined"!=typeof XDomainRequest&&!i&&j){return new XDomainRequest()}}catch(m){}try{if("undefined"!=typeof XMLHttpRequest&&(!k||e)){return new XMLHttpRequest()}}catch(m){}if(!k){try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(m){}}}},{"has-cors":34}],20:[function(g,f,e){f.exports=function(i,h){var j=function(){};j.prototype=h.prototype;i.prototype=new j;i.prototype.constructor=i}},{}],21:[function(g,f,e){(function(j){var v=g("./keys");var m=g("arraybuffer.slice");var k=g("base64-arraybuffer");var i=g("after");var u=g("utf8");var r=navigator.userAgent.match(/Android/i);e.protocol=3;var q=e.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6};var l=v(q);var n={type:"error",data:"parser error"};var o=g("blob");e.encodePacket=function(y,B,z,A){if("function"==typeof B){A=B;B=false}if("function"==typeof z){A=z;z=null}var w=(y.data===undefined)?undefined:y.data.buffer||y.data;if(j.ArrayBuffer&&w instanceof ArrayBuffer){return t(y,B,A)}else{if(o&&w instanceof j.Blob){return s(y,B,A)}}var x=q[y.type];if(undefined!==y.data){x+=z?u.encode(String(y.data)):String(y.data)}return A(""+x)};function t(A,C,B){if(!C){return e.encodeBase64Packet(A,B)}var z=A.data;var y=new Uint8Array(z);var x=new Uint8Array(1+z.byteLength);x[0]=q[A.type];for(var w=0;w<y.length;w++){x[w+1]=y[w]}return B(x.buffer)}function p(x,z,y){if(!z){return e.encodeBase64Packet(x,y)}var w=new FileReader();w.onload=function(){x.data=w.result;e.encodePacket(x,z,true,y)};return w.readAsArrayBuffer(x.data)}function s(y,A,z){if(!A){return e.encodeBase64Packet(y,z)}if(r){return p(y,A,z)}var x=new Uint8Array(1);x[0]=q[y.type];var w=new o([x.buffer,y.data]);return z(w)}e.encodeBase64Packet=function(w,D){var E="b"+e.packets[w.type];if(o&&w.data instanceof o){var A=new FileReader();A.onload=function(){var F=A.result.split(",")[1];D(E+F)};return A.readAsDataURL(w.data)}var C;try{C=String.fromCharCode.apply(null,new Uint8Array(w.data))}catch(B){var x=new Uint8Array(w.data);var y=new Array(x.length);for(var z=0;z<x.length;z++){y[z]=x[z]}C=String.fromCharCode.apply(null,y)}E+=j.btoa(C);return D(E)};e.decodePacket=function(A,C,w){if(typeof A=="string"||A===undefined){if(A.charAt(0)=="b"){return e.decodeBase64Packet(A.substr(1),C)}if(w){try{A=u.decode(A)}catch(B){return n}}var z=A.charAt(0);if(Number(z)!=z||!l[z]){return n}if(A.length>1){return{type:l[z],data:A.substring(1)}}else{return{type:l[z]}}}var x=new Uint8Array(A);var z=x[0];var y=m(A,1);if(o&&C==="blob"){y=new o([y])}return{type:l[z],data:y}};e.decodeBase64Packet=function(y,z){var w=l[y.charAt(0)];if(!j.ArrayBuffer){return{type:w,data:{base64:true,data:y.substr(1)}}}var x=k.decode(y.substr(1));if(z==="blob"&&o){x=new o([x])}return{type:w,data:x}};e.encodePayload=function(y,A,z){if(typeof A=="function"){z=A;A=null}if(A){if(o&&!r){return e.encodePayloadAsBlob(y,z)}return e.encodePayloadAsArrayBuffer(y,z)}if(!y.length){return z("0:")}function w(B){return B.length+":"+B}function x(C,B){e.encodePacket(C,A,true,function(D){B(null,w(D))})}h(y,x,function(C,B){return z(B.join(""))})};function h(A,C,x){var w=new Array(A.length);var B=i(A.length,x);var y=function(E,F,D){C(F,function(G,H){w[E]=H;D(G,w)})};for(var z=0;z<A.length;z++){y(z,A[z],B)}}e.decodePayload=function(D,w,G){if(typeof D!="string"){return e.decodePayloadAsBinary(D,w,G)}if(typeof w==="function"){G=w;w=null}var x;if(D==""){return G(n,0,1)}var y="",z,A;for(var E=0,B=D.length;E<B;E++){var C=D.charAt(E);if(":"!=C){y+=C}else{if(""==y||(y!=(z=Number(y)))){return G(n,0,1)}A=D.substr(E+1,z);if(y!=A.length){return G(n,0,1)}if(A.length){x=e.decodePacket(A,w,true);if(n.type==x.type&&n.data==x.data){return G(n,0,1)}var F=G(x,E+z,B);if(false===F){return}}E+=z;y=""}}if(y!=""){return G(n,0,1)}};e.encodePayloadAsArrayBuffer=function(x,y){if(!x.length){return y(new ArrayBuffer(0))}function w(A,z){e.encodePacket(A,true,true,function(B){return z(null,B)})}h(x,w,function(A,C){var D=C.reduce(function(F,G){var E;if(typeof G==="string"){E=G.length}else{E=G.byteLength}return F+E.toString().length+E+2},0);var B=new Uint8Array(D);var z=0;C.forEach(function(I){var E=typeof I==="string";var H=I;if(E){var F=new Uint8Array(I.length);for(var G=0;G<I.length;G++){F[G]=I.charCodeAt(G)}H=F.buffer}if(E){B[z++]=0}else{B[z++]=1}var J=H.byteLength.toString();for(var G=0;G<J.length;G++){B[z++]=parseInt(J[G])}B[z++]=255;var F=new Uint8Array(H);for(var G=0;G<F.length;G++){B[z++]=F[G]}});return y(B.buffer)})};e.encodePayloadAsBlob=function(x,y){function w(A,z){e.encodePacket(A,true,true,function(H){var F=new Uint8Array(1);F[0]=1;if(typeof H==="string"){var C=new Uint8Array(H.length);for(var E=0;E<H.length;E++){C[E]=H.charCodeAt(E)}H=C.buffer;F[0]=0}var B=(H instanceof ArrayBuffer)?H.byteLength:H.size;var I=B.toString();var G=new Uint8Array(I.length+1);for(var E=0;E<I.length;E++){G[E]=parseInt(I[E])}G[I.length]=255;if(o){var D=new o([F.buffer,G.buffer,H]);z(null,D)}})}h(x,w,function(A,z){return y(new o(z))})};e.decodePayloadAsBinary=function(C,w,I){if(typeof w==="function"){I=w;w=null}var H=C;var J=[];var F=false;while(H.byteLength>0){var x=new Uint8Array(H);var y=x[0]===0;var G="";for(var B=1;;B++){if(x[B]==255){break}if(G.length>310){F=true;break}G+=x[B]}if(F){return I(n,0,1)}H=m(H,2+G.length);G=parseInt(G);var A=m(H,0,G);if(y){try{A=String.fromCharCode.apply(null,new Uint8Array(A))}catch(D){var z=new Uint8Array(A);A="";for(var B=0;B<z.length;B++){A+=String.fromCharCode(z[B])}}}J.push(A);H=m(H,G)}var E=J.length;J.forEach(function(K,L){I(e.decodePacket(K,w,true),L,E)})}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./keys":22,after:23,"arraybuffer.slice":24,"base64-arraybuffer":25,blob:26,utf8:27}],22:[function(h,f,e){f.exports=Object.keys||function g(m){var j=[];var k=Object.prototype.hasOwnProperty;for(var l in m){if(k.call(m,l)){j.push(l)}}return j}},{}],23:[function(h,f,e){f.exports=i;function i(m,n,l){var j=false;l=l||g;k.count=m;return(m===0)?n():k;function k(p,o){if(k.count<=0){throw new Error("after called too many times")}--k.count;if(p){j=true;n(p);n=l}else{if(k.count===0&&!j){n(null,o)}}}}function g(){}},{}],24:[function(g,f,e){f.exports=function(n,p,k){var j=n.byteLength;p=p||0;k=k||j;if(n.slice){return n.slice(p,k)}if(p<0){p+=j}if(k<0){k+=j}if(k>j){k=j}if(p>=j||p>=k||j===0){return new ArrayBuffer(0)}var o=new Uint8Array(n);var h=new Uint8Array(k-p);for(var l=p,m=0;l<k;l++,m++){h[m]=o[l]}return h.buffer}},{}],25:[function(g,f,e){(function(h){e.encode=function(n){var l=new Uint8Array(n),m,j=l.length,k="";for(m=0;m<j;m+=3){k+=h[l[m]>>2];k+=h[((l[m]&3)<<4)|(l[m+1]>>4)];k+=h[((l[m+1]&15)<<2)|(l[m+2]>>6)];k+=h[l[m+2]&63]}if((j%3)===2){k=k.substring(0,k.length-1)+"="}else{if(j%3===1){k=k.substring(0,k.length-2)+"=="}}return k};e.decode=function(r){var k=r.length*0.75,s=r.length,q,m=0,n,l,j,u;if(r[r.length-1]==="="){k--;if(r[r.length-2]==="="){k--}}var o=new ArrayBuffer(k),t=new Uint8Array(o);for(q=0;q<s;q+=4){n=h.indexOf(r[q]);l=h.indexOf(r[q+1]);j=h.indexOf(r[q+2]);u=h.indexOf(r[q+3]);t[m++]=(n<<2)|(l>>4);t[m++]=((l&15)<<4)|(j>>2);t[m++]=((j&3)<<6)|(u&63)}return o}})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/")},{}],26:[function(g,f,e){(function(l){var k=l.BlobBuilder||l.WebKitBlobBuilder||l.MSBlobBuilder||l.MozBlobBuilder;var i=(function(){try{var m=new Blob(["hi"]);return m.size==2}catch(n){return false}})();var j=k&&k.prototype.append&&k.prototype.getBlob;function h(o,m){m=m||{};var p=new k();for(var n=0;n<o.length;n++){p.append(o[n])}return(m.type)?p.getBlob(m.type):p.getBlob()}f.exports=(function(){if(i){return l.Blob}else{if(j){return h}else{return undefined}}})()}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],27:[function(g,f,e){(function(h){
/*! http://mths.be/utf8js v2.0.0 by @mathias */
;(function(v){var o=typeof e=="object"&&e;var B=typeof f=="object"&&f&&f.exports==o&&f;var u=typeof h=="object"&&h;if(u.global===u||u.window===u){v=u}var t=String.fromCharCode;function n(F){var E=[];var D=0;var G=F.length;var H;var C;while(D<G){H=F.charCodeAt(D++);if(H>=55296&&H<=56319&&D<G){C=F.charCodeAt(D++);if((C&64512)==56320){E.push(((H&1023)<<10)+(C&1023)+65536)}else{E.push(H);D--}}else{E.push(H)}}return E}function y(G){var E=G.length;var D=-1;var F;var C="";while(++D<E){F=G[D];if(F>65535){F-=65536;C+=t(F>>>10&1023|55296);F=56320|F&1023}C+=t(F)}return C}function m(D,C){return t(((D>>C)&63)|128)}function x(C){if((C&4294967168)==0){return t(C)}var D="";if((C&4294965248)==0){D=t(((C>>6)&31)|192)}else{if((C&4294901760)==0){D=t(((C>>12)&15)|224);D+=m(C,6)}else{if((C&4292870144)==0){D=t(((C>>18)&7)|240);D+=m(C,12);D+=m(C,6)}}}D+=t((C&63)|128);return D}function w(F){var E=n(F);var G=E.length;var D=-1;var C;var H="";while(++D<G){C=E[D];H+=x(C)}return H}function i(){if(r>=q){throw Error("Invalid byte index")}var C=s[r]&255;r++;if((C&192)==128){return C&63}throw Error("Invalid continuation byte")}function k(){var D;var C;var G;var F;var E;if(r>q){throw Error("Invalid byte index")}if(r==q){return false}D=s[r]&255;r++;if((D&128)==0){return D}if((D&224)==192){var C=i();E=((D&31)<<6)|C;if(E>=128){return E}else{throw Error("Invalid continuation byte")}}if((D&240)==224){C=i();G=i();E=((D&15)<<12)|(C<<6)|G;if(E>=2048){return E}else{throw Error("Invalid continuation byte")}}if((D&248)==240){C=i();G=i();F=i();E=((D&15)<<18)|(C<<12)|(G<<6)|F;if(E>=65536&&E<=1114111){return E}}throw Error("Invalid UTF-8 detected")}var s;var q;var r;function j(E){s=n(E);q=s.length;r=0;var C=[];var D;while((D=k())!==false){C.push(D)}return y(C)}var l={version:"2.0.0",encode:w,decode:j};if(typeof d=="function"&&typeof d.amd=="object"&&d.amd){d(function(){return l})}else{if(o&&!o.nodeType){if(B){B.exports=l}else{var z={};var p=z.hasOwnProperty;for(var A in l){p.call(l,A)&&(o[A]=l[A])}}}else{v.utf8=l}}}(this))}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],28:[function(g,f,e){(function(l){var h=/^[\],:{}\s]*$/;var k=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g;var n=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;var o=/(?:^|:|,)(?:\s*\[)+/g;var m=/^\s+/;var j=/\s+$/;f.exports=function i(p){if("string"!=typeof p||!p){return null}p=p.replace(m,"").replace(j,"");if(l.JSON&&JSON.parse){return JSON.parse(p)}if(h.test(p.replace(k,"@").replace(n,"]").replace(o,""))){return(new Function("return "+p))()}}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],29:[function(g,f,e){e.encode=function(j){var k="";for(var h in j){if(j.hasOwnProperty(h)){if(k.length){k+="&"}k+=encodeURIComponent(h)+"="+encodeURIComponent(j[h])}}return k};e.decode=function(h){var m={};var n=h.split("&");for(var k=0,j=n.length;k<j;k++){var o=n[k].split("=");m[decodeURIComponent(o[0])]=decodeURIComponent(o[1])}return m}},{}],30:[function(h,f,e){var g=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;var j=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];f.exports=function i(r){var q=r,l=r.indexOf("["),p=r.indexOf("]");if(l!=-1&&p!=-1){r=r.substring(0,l)+r.substring(l,p).replace(/:/g,";")+r.substring(p,r.length)}var k=g.exec(r||""),o={},n=14;while(n--){o[j[n]]=k[n]||""}if(l!=-1&&p!=-1){o.source=q;o.host=o.host.substring(1,o.host.length-1).replace(/;/g,":");o.authority=o.authority.replace("[","").replace("]","").replace(/;/g,":");o.ipv6uri=true}return o}},{}],31:[function(j,h,f){var i=(function(){return this})();var g=i.WebSocket||i.MozWebSocket;h.exports=g?e:null;function e(n,m,l){var k;if(m){k=new g(n,m)}else{k=new g(n)}return k}if(g){e.prototype=g.prototype}},{}],32:[function(g,f,e){(function(j){var h=g("isarray");f.exports=i;function i(l){function k(o){if(!o){return false}if((j.Buffer&&j.Buffer.isBuffer(o))||(j.ArrayBuffer&&o instanceof ArrayBuffer)||(j.Blob&&o instanceof Blob)||(j.File&&o instanceof File)){return true}if(h(o)){for(var n=0;n<o.length;n++){if(k(o[n])){return true}}}else{if(o&&"object"==typeof o){if(o.toJSON){o=o.toJSON()}for(var m in o){if(o.hasOwnProperty(m)&&k(o[m])){return true}}}}return false}return k(l)}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{isarray:33}],33:[function(g,f,e){f.exports=Array.isArray||function(h){return Object.prototype.toString.call(h)=="[object Array]"}},{}],34:[function(i,f,e){var h=i("global");try{f.exports="XMLHttpRequest" in h&&"withCredentials" in new h.XMLHttpRequest()}catch(g){f.exports=false}},{global:35}],35:[function(g,f,e){f.exports=(function(){return this})()},{}],36:[function(h,f,e){var g=[].indexOf;f.exports=function(j,l){if(g){return j.indexOf(l)}for(var k=0;k<j.length;++k){if(j[k]===l){return k}}return -1}},{}],37:[function(h,g,e){var f=Object.prototype.hasOwnProperty;e.keys=Object.keys||function(k){var j=[];for(var i in k){if(f.call(k,i)){j.push(i)}}return j};e.values=function(k){var j=[];for(var i in k){if(f.call(k,i)){j.push(k[i])}}return j};e.merge=function(j,i){for(var k in i){if(f.call(i,k)){j[k]=i[k]}}return j};e.length=function(i){return e.keys(i).length};e.isEmpty=function(i){return 0==e.length(i)}},{}],38:[function(h,f,e){var g=/^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;var j=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];f.exports=function i(o){var k=g.exec(o||""),n={},l=14;while(l--){n[j[l]]=k[l]||""}return n}},{}],39:[function(g,f,e){(function(i){var h=g("isarray");var j=g("./is-buffer");e.deconstructPacket=function(o){var l=[];var k=o.data;function n(s){if(!s){return s}if(j(s)){var t={_placeholder:true,num:l.length};l.push(s);return t}else{if(h(s)){var r=new Array(s.length);for(var q=0;q<s.length;q++){r[q]=n(s[q])}return r}else{if("object"==typeof s&&!(s instanceof Date)){var r={};for(var p in s){r[p]=n(s[p])}return r}}}return s}var m=o;m.data=n(k);m.attachments=l.length;return{packet:m,buffers:l}};e.reconstructPacket=function(n,l){var k=0;function m(r){if(r&&r._placeholder){var o=l[r.num];return o}else{if(h(r)){for(var q=0;q<r.length;q++){r[q]=m(r[q])}return r}else{if(r&&"object"==typeof r){for(var p in r){r[p]=m(r[p])}return r}}}return r}n.data=m(n.data);n.attachments=undefined;return n};e.removeBlobs=function(m,o){function n(t,u,q){if(!t){return t}if((i.Blob&&t instanceof Blob)||(i.File&&t instanceof File)){k++;var p=new FileReader();p.onload=function(){if(q){q[u]=this.result}else{l=this.result}if(!--k){o(l)}};p.readAsArrayBuffer(t)}else{if(h(t)){for(var s=0;s<t.length;s++){n(t[s],s,t)}}else{if(t&&"object"==typeof t&&!j(t)){for(var r in t){n(t[r],r,t)}}}}}var k=0;var l=m;n(l);if(!k){o(l)}}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./is-buffer":41,isarray:42}],40:[function(g,h,l){var f=g("debug")("socket.io-parser");var t=g("json3");var o=g("isarray");var q=g("component-emitter");var n=g("./binary");var e=g("./is-buffer");l.protocol=4;l.types=["CONNECT","DISCONNECT","EVENT","BINARY_EVENT","ACK","BINARY_ACK","ERROR"];l.CONNECT=0;l.DISCONNECT=1;l.EVENT=2;l.ACK=3;l.ERROR=4;l.BINARY_EVENT=5;l.BINARY_ACK=6;l.Encoder=k;l.Decoder=s;function k(){}k.prototype.encode=function(v,w){f("encoding packet %j",v);if(l.BINARY_EVENT==v.type||l.BINARY_ACK==v.type){i(v,w)}else{var u=j(v);w([u])}};function j(v){var w="";var u=false;w+=v.type;if(l.BINARY_EVENT==v.type||l.BINARY_ACK==v.type){w+=v.attachments;w+="-"}if(v.nsp&&"/"!=v.nsp){u=true;w+=v.nsp}if(null!=v.id){if(u){w+=",";u=false}w+=v.id}if(null!=v.data){if(u){w+=","}w+=t.stringify(v.data)}f("encoded %j as %s",v,w);return w}function i(v,w){function u(A){var y=n.deconstructPacket(A);var z=j(y.packet);var x=y.buffers;x.unshift(z);w(x)}n.removeBlobs(v,u)}function s(){this.reconstructor=null}q(s.prototype);s.prototype.add=function(v){var u;if("string"==typeof v){u=m(v);if(l.BINARY_EVENT==u.type||l.BINARY_ACK==u.type){this.reconstructor=new r(u);if(this.reconstructor.reconPack.attachments==0){this.emit("decoded",u)}}else{this.emit("decoded",u)}}else{if(e(v)||v.base64){if(!this.reconstructor){throw new Error("got binary data when not reconstructing a packet")}else{u=this.reconstructor.takeBinaryData(v);if(u){this.reconstructor=null;this.emit("decoded",u)}}}else{throw new Error("Unknown type: "+v)}}};function m(y){var x={};var u=0;x.type=Number(y.charAt(0));if(null==l.types[x.type]){return p()}if(l.BINARY_EVENT==x.type||l.BINARY_ACK==x.type){x.attachments="";while(y.charAt(++u)!="-"){x.attachments+=y.charAt(u)}x.attachments=Number(x.attachments)}if("/"==y.charAt(u+1)){x.nsp="";while(++u){var z=y.charAt(u);if(","==z){break}x.nsp+=z;if(u+1==y.length){break}}}else{x.nsp="/"}var v=y.charAt(u+1);if(""!=v&&Number(v)==v){x.id="";while(++u){var z=y.charAt(u);if(null==z||Number(z)!=z){--u;break}x.id+=y.charAt(u);if(u+1==y.length){break}}x.id=Number(x.id)}if(y.charAt(++u)){try{x.data=t.parse(y.substr(u))}catch(w){return p()}}f("decoded %s as %j",y,x);return x}s.prototype.destroy=function(){if(this.reconstructor){this.reconstructor.finishedReconstruction()}};function r(u){this.reconPack=u;this.buffers=[]}r.prototype.takeBinaryData=function(u){this.buffers.push(u);if(this.buffers.length==this.reconPack.attachments){var v=n.reconstructPacket(this.reconPack,this.buffers);this.finishedReconstruction();return v}return null};r.prototype.finishedReconstruction=function(){this.reconPack=null;this.buffers=[]};function p(u){return{type:l.ERROR,data:"parser error"}}},{"./binary":39,"./is-buffer":41,"component-emitter":8,debug:9,isarray:42,json3:43}],41:[function(g,f,e){(function(h){f.exports=i;function i(j){return(h.Buffer&&h.Buffer.isBuffer(j))||(h.ArrayBuffer&&j instanceof ArrayBuffer)}}).call(this,typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],42:[function(g,f,e){f.exports=g(33)},{}],43:[function(g,f,e){
/*! JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */
;(function(M){var q={}.toString,m,h,F;var D=typeof d==="function"&&d.amd;var R=typeof JSON=="object"&&JSON;var L=typeof e=="object"&&e&&!e.nodeType&&e;if(L&&R){L.stringify=R.stringify;L.parse=R.parse}else{L=M.JSON=R||{}}var w=new Date(-3509827334573292);try{w=w.getUTCFullYear()==-109252&&w.getUTCMonth()===0&&w.getUTCDate()===1&&w.getUTCHours()==10&&w.getUTCMinutes()==37&&w.getUTCSeconds()==6&&w.getUTCMilliseconds()==708}catch(r){}function j(T){if(j[T]!==F){return j[T]}var U;if(T=="bug-string-char-index"){U="a"[0]!="a"}else{if(T=="json"){U=j("json-stringify")&&j("json-parse")}else{var ab,Y='{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';if(T=="json-stringify"){var Z=L.stringify,aa=typeof Z=="function"&&w;if(aa){(ab=function(){return 1}).toJSON=ab;try{aa=Z(0)==="0"&&Z(new Number())==="0"&&Z(new String())=='""'&&Z(q)===F&&Z(F)===F&&Z()===F&&Z(ab)==="1"&&Z([ab])=="[1]"&&Z([F])=="[null]"&&Z(null)=="null"&&Z([F,q,null])=="[null,null,null]"&&Z({a:[ab,true,false,null,"\x00\b\n\f\r\t"]})==Y&&Z(null,ab)==="1"&&Z([1,2],null,1)=="[\n 1,\n 2\n]"&&Z(new Date(-8640000000000000))=='"-271821-04-20T00:00:00.000Z"'&&Z(new Date(8640000000000000))=='"+275760-09-13T00:00:00.000Z"'&&Z(new Date(-62198755200000))=='"-000001-01-01T00:00:00.000Z"'&&Z(new Date(-1))=='"1969-12-31T23:59:59.999Z"'}catch(V){aa=false}}U=aa}if(T=="json-parse"){var X=L.parse;if(typeof X=="function"){try{if(X("0")===0&&!X(false)){ab=X(Y);var W=ab.a.length==5&&ab.a[0]===1;if(W){try{W=!X('"\t"')}catch(V){}if(W){try{W=X("01")!==1}catch(V){}}if(W){try{W=X("1.")!==1}catch(V){}}}}}catch(V){W=false}}U=W}}}return j[T]=!!U}if(!j("json")){var N="[object Function]";var K="[object Date]";var H="[object Number]";var I="[object String]";var z="[object Array]";var v="[object Boolean]";var A=j("bug-string-char-index");if(!w){var n=Math.floor;var S=[0,31,59,90,120,151,181,212,243,273,304,334];var y=function(T,U){return S[U]+365*(T-1970)+n((T-1969+(U=+(U>1)))/4)-n((T-1901+U)/100)+n((T-1601+U)/400)}}if(!(m={}.hasOwnProperty)){m=function(V){var T={},U;if((T.__proto__=null,T.__proto__={toString:1},T).toString!=q){m=function(Y){var X=this.__proto__,W=Y in (this.__proto__=null,this);this.__proto__=X;return W}}else{U=T.constructor;m=function(X){var W=(this.constructor||U).prototype;return X in this&&!(X in W&&this[X]===W[X])}}T=null;return m.call(this,V)}}var O={"boolean":1,number:1,string:1,"undefined":1};var p=function(T,V){var U=typeof T[V];return U=="object"?!!T[V]:!O[U]};h=function(V,Y){var W=0,T,U,X;(T=function(){this.valueOf=0}).prototype.valueOf=0;U=new T();for(X in U){if(m.call(U,X)){W++}}T=U=null;if(!W){U=["valueOf","toString","toLocaleString","propertyIsEnumerable","isPrototypeOf","hasOwnProperty","constructor"];h=function(aa,ae){var ad=q.call(aa)==N,ac,ab;var Z=!ad&&typeof aa.constructor!="function"&&p(aa,"hasOwnProperty")?aa.hasOwnProperty:m;for(ac in aa){if(!(ad&&ac=="prototype")&&Z.call(aa,ac)){ae(ac)}}for(ab=U.length;ac=U[--ab];Z.call(aa,ac)&&ae(ac)){}}}else{if(W==2){h=function(aa,ad){var Z={},ac=q.call(aa)==N,ab;for(ab in aa){if(!(ac&&ab=="prototype")&&!m.call(Z,ab)&&(Z[ab]=1)&&m.call(aa,ab)){ad(ab)}}}}else{h=function(aa,ad){var ac=q.call(aa)==N,ab,Z;for(ab in aa){if(!(ac&&ab=="prototype")&&m.call(aa,ab)&&!(Z=ab==="constructor")){ad(ab)}}if(Z||m.call(aa,(ab="constructor"))){ad(ab)}}}}return h(V,Y)};if(!j("json-stringify")){var l={92:"\\\\",34:'\\"',8:"\\b",12:"\\f",10:"\\n",13:"\\r",9:"\\t"};var E="000000";var o=function(T,U){return(E+(U||0)).slice(-T)};var t="\\u00";var x=function(Z){var T='"',W=0,X=Z.length,Y=X>10&&A,V;if(Y){V=Z.split("")}for(;W<X;W++){var U=Z.charCodeAt(W);switch(U){case 8:case 9:case 10:case 12:case 13:case 34:case 92:T+=l[U];break;default:if(U<32){T+=t+o(2,U.toString(16));break}T+=Y?V[W]:A?Z.charAt(W):Z[W]}}return T+'"'};var k=function(Z,aq,X,ac,an,T,aa){var aj,V,ag,ap,ao,ab,am,ak,ah,ae,ai,U,Y,W,al,af;try{aj=aq[Z]}catch(ad){}if(typeof aj=="object"&&aj){V=q.call(aj);if(V==K&&!m.call(aj,"toJSON")){if(aj>-1/0&&aj<1/0){if(y){ao=n(aj/86400000);for(ag=n(ao/365.2425)+1970-1;y(ag+1,0)<=ao;ag++){}for(ap=n((ao-y(ag,0))/30.42);y(ag,ap+1)<=ao;ap++){}ao=1+ao-y(ag,ap);ab=(aj%86400000+86400000)%86400000;am=n(ab/3600000)%24;ak=n(ab/60000)%60;ah=n(ab/1000)%60;ae=ab%1000}else{ag=aj.getUTCFullYear();ap=aj.getUTCMonth();ao=aj.getUTCDate();am=aj.getUTCHours();ak=aj.getUTCMinutes();ah=aj.getUTCSeconds();ae=aj.getUTCMilliseconds()}aj=(ag<=0||ag>=10000?(ag<0?"-":"+")+o(6,ag<0?-ag:ag):o(4,ag))+"-"+o(2,ap+1)+"-"+o(2,ao)+"T"+o(2,am)+":"+o(2,ak)+":"+o(2,ah)+"."+o(3,ae)+"Z"}else{aj=null}}else{if(typeof aj.toJSON=="function"&&((V!=H&&V!=I&&V!=z)||m.call(aj,"toJSON"))){aj=aj.toJSON(Z)}}}if(X){aj=X.call(aq,Z,aj)}if(aj===null){return"null"}V=q.call(aj);if(V==v){return""+aj}else{if(V==H){return aj>-1/0&&aj<1/0?""+aj:"null"}else{if(V==I){return x(""+aj)}}}if(typeof aj=="object"){for(W=aa.length;W--;){if(aa[W]===aj){throw TypeError()}}aa.push(aj);ai=[];al=T;T+=an;if(V==z){for(Y=0,W=aj.length;Y<W;Y++){U=k(Y,aj,X,ac,an,T,aa);ai.push(U===F?"null":U)}af=ai.length?(an?"[\n"+T+ai.join(",\n"+T)+"\n"+al+"]":("["+ai.join(",")+"]")):"[]"}else{h(ac||aj,function(at){var ar=k(at,aj,X,ac,an,T,aa);if(ar!==F){ai.push(x(at)+":"+(an?" ":"")+ar)}});af=ai.length?(an?"{\n"+T+ai.join(",\n"+T)+"\n"+al+"}":("{"+ai.join(",")+"}")):"{}"}aa.pop();return af}};L.stringify=function(T,V,W){var U,ac,aa,Z;if(typeof V=="function"||typeof V=="object"&&V){if((Z=q.call(V))==N){ac=V}else{if(Z==z){aa={};for(var Y=0,X=V.length,ab;Y<X;ab=V[Y++],((Z=q.call(ab)),Z==I||Z==H)&&(aa[ab]=1)){}}}}if(W){if((Z=q.call(W))==H){if((W-=W%1)>0){for(U="",W>10&&(W=10);U.length<W;U+=" "){}}}else{if(Z==I){U=W.length<=10?W:W.slice(0,10)}}}return k("",(ab={},ab[""]=T,ab),ac,aa,U,"",[])}}if(!j("json-parse")){var G=String.fromCharCode;var i={92:"\\",34:'"',47:"/",98:"\b",116:"\t",110:"\n",102:"\f",114:"\r"};var B,Q;var C=function(){B=Q=null;throw SyntaxError()};var u=function(){var Y=Q,W=Y.length,X,V,T,Z,U;while(B<W){U=Y.charCodeAt(B);switch(U){case 9:case 10:case 13:case 32:B++;break;case 123:case 125:case 91:case 93:case 58:case 44:X=A?Y.charAt(B):Y[B];B++;return X;case 34:for(X="@",B++;B<W;){U=Y.charCodeAt(B);if(U<32){C()}else{if(U==92){U=Y.charCodeAt(++B);switch(U){case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:X+=i[U];B++;break;case 117:V=++B;for(T=B+4;B<T;B++){U=Y.charCodeAt(B);if(!(U>=48&&U<=57||U>=97&&U<=102||U>=65&&U<=70)){C()}}X+=G("0x"+Y.slice(V,B));break;default:C()}}else{if(U==34){break}U=Y.charCodeAt(B);V=B;while(U>=32&&U!=92&&U!=34){U=Y.charCodeAt(++B)}X+=Y.slice(V,B)}}}if(Y.charCodeAt(B)==34){B++;return X}C();default:V=B;if(U==45){Z=true;U=Y.charCodeAt(++B)}if(U>=48&&U<=57){if(U==48&&((U=Y.charCodeAt(B+1)),U>=48&&U<=57)){C()}Z=false;for(;B<W&&((U=Y.charCodeAt(B)),U>=48&&U<=57);B++){}if(Y.charCodeAt(B)==46){T=++B;for(;T<W&&((U=Y.charCodeAt(T)),U>=48&&U<=57);T++){}if(T==B){C()}B=T}U=Y.charCodeAt(B);if(U==101||U==69){U=Y.charCodeAt(++B);if(U==43||U==45){B++}for(T=B;T<W&&((U=Y.charCodeAt(T)),U>=48&&U<=57);T++){}if(T==B){C()}B=T}return +Y.slice(V,B)}if(Z){C()}if(Y.slice(B,B+4)=="true"){B+=4;return true}else{if(Y.slice(B,B+5)=="false"){B+=5;return false}else{if(Y.slice(B,B+4)=="null"){B+=4;return null}}}C()}}return"$"};var P=function(U){var T,V;if(U=="$"){C()}if(typeof U=="string"){if((A?U.charAt(0):U[0])=="@"){return U.slice(1)}if(U=="["){T=[];for(;;V||(V=true)){U=u();if(U=="]"){break}if(V){if(U==","){U=u();if(U=="]"){C()}}else{C()}}if(U==","){C()}T.push(P(U))}return T}else{if(U=="{"){T={};for(;;V||(V=true)){U=u();if(U=="}"){break}if(V){if(U==","){U=u();if(U=="}"){C()}}else{C()}}if(U==","||typeof U!="string"||(A?U.charAt(0):U[0])!="@"||u()!=":"){C()}T[U.slice(1)]=P(u())}return T}}C()}return U};var J=function(V,U,W){var T=s(V,U,W);if(T===F){delete V[U]}else{V[U]=T}};var s=function(W,V,X){var U=W[V],T;if(typeof U=="object"&&U){if(q.call(U)==z){for(T=U.length;T--;){J(U,T,X)}}else{h(U,function(Y){J(U,Y,X)})}}return X.call(W,V,U)};L.parse=function(V,W){var T,U;B=0;Q=""+V;T=P(u());if(u()!="$"){C()}B=Q=null;return W&&q.call(W)==N?s((U={},U[""]=T,U),"",W):T}}}if(D){d(function(){return L})}}(this))},{}],44:[function(h,g,e){g.exports=f;function f(l,j){var m=[];j=j||0;for(var k=j||0;k<l.length;k++){m[k-j]=l[k]}return m}},{}]},{},[1])(1)});(function(dV,el,fE){function eT(f0,f1){f1=f1||Error;return function(){var f8=2;var f2=arguments,f7=f2[0],f6="["+(f0?f0+":":"")+f7+"] ",f5=f2[1],f3,f4;f6+=f5.replace(/\{\d+\}/g,function(ga){var f9=+ga.slice(1,-1),gb=f9+f8;if(gb<f2.length){return fr(f2[gb])}return ga});f6+="\nhttp://errors.angularjs.org/1.4.3/"+(f0?f0+"/":"")+f7;for(f4=f8,f3="?";f4<f2.length;f4++,f3="&"){f6+=f3+"p"+(f4-f8)+"="+encodeURIComponent(fr(f2[f4]))}return new f1(f6)}}var cq=/^\/(.+)\/([a-z]*)$/;var fv="validity";var db=function(f0){return w(f0)?f0.toLowerCase():f0};var O=Object.prototype.hasOwnProperty;var a4=function(f0){return w(f0)?f0.toUpperCase():f0};var cK=function(f0){return w(f0)?f0.replace(/[A-Z]/g,function(f1){return String.fromCharCode(f1.charCodeAt(0)|32)}):f0};var e7=function(f0){return w(f0)?f0.replace(/[a-z]/g,function(f1){return String.fromCharCode(f1.charCodeAt(0)&~32)}):f0};if("i"!=="I".toLowerCase()){db=cK;a4=e7}var e8,ac,fz,cW=[].slice,dZ=[].splice,cl=[].push,eC=Object.prototype.toString,ak=Object.getPrototypeOf,eW=eT("ng"),cY=dV.angular||(dV.angular={}),fY,k=0;e8=el.documentMode;function b2(f1){if(f1==null||eS(f1)){return false}var f0="length" in Object(f1)&&f1.length;if(f1.nodeType===bB&&f0){return true}return w(f1)||U(f1)||f0===0||typeof f0==="number"&&f0>0&&(f0-1) in f1}function bj(f5,f3,f2){var f1,f4;if(f5){if(bn(f5)){for(f1 in f5){if(f1!="prototype"&&f1!="length"&&f1!="name"&&(!f5.hasOwnProperty||f5.hasOwnProperty(f1))){f3.call(f2,f5[f1],f1,f5)}}}else{if(U(f5)||b2(f5)){var f0=typeof f5!=="object";for(f1=0,f4=f5.length;f1<f4;f1++){if(f0||f1 in f5){f3.call(f2,f5[f1],f1,f5)}}}else{if(f5.forEach&&f5.forEach!==bj){f5.forEach(f3,f2,f5)}else{if(fO(f5)){for(f1 in f5){f3.call(f2,f5[f1],f1,f5)}}else{if(typeof f5.hasOwnProperty==="function"){for(f1 in f5){if(f5.hasOwnProperty(f1)){f3.call(f2,f5[f1],f1,f5)}}}else{for(f1 in f5){if(O.call(f5,f1)){f3.call(f2,f5[f1],f1,f5)}}}}}}}}return f5}function dy(f4,f2,f1){var f3=Object.keys(f4).sort();for(var f0=0;f0<f3.length;f0++){f2.call(f1,f4[f3[f0]],f3[f0])}return f3}function dP(f0){return function(f2,f1){f0(f1,f2)}}function aP(){return ++k}function cn(f1,f0){if(f0){f1.$$hashKey=f0}else{delete f1.$$hashKey}}function c0(f7,f4,f9){var f5=f7.$$hashKey;for(var f3=0,ga=f4.length;f3<ga;++f3){var f2=f4[f3];if(!s(f2)&&!bn(f2)){continue}var gb=Object.keys(f2);for(var f1=0,f6=gb.length;f1<f6;f1++){var f8=gb[f1];var f0=f2[f8];if(f9&&s(f0)){if(fe(f0)){f7[f8]=new Date(f0.valueOf())}else{if(!s(f7[f8])){f7[f8]=U(f0)?[]:{}}c0(f7[f8],[f0],true)}}else{f7[f8]=f0}}}cn(f7,f5);return f7}function fU(f0){return c0(f0,cW.call(arguments,1),false)}function b3(f0){return c0(f0,cW.call(arguments,1),true)}function de(f0){return parseInt(f0,10)}function eo(f1,f0){return fU(Object.create(f1),f0)}function eD(){}eD.$inject=[];function aU(f0){return f0}aU.$inject=[];function V(f0){return function(){return f0}}function dx(f0){return bn(f0.toString)&&f0.toString!==Object.prototype.toString}function x(f0){return typeof f0==="undefined"}function eX(f0){return typeof f0!=="undefined"}function s(f0){return f0!==null&&typeof f0==="object"}function fO(f0){return f0!==null&&typeof f0==="object"&&!ak(f0)}function w(f0){return typeof f0==="string"}function p(f0){return typeof f0==="number"}function fe(f0){return eC.call(f0)==="[object Date]"}var U=Array.isArray;function bn(f0){return typeof f0==="function"}function az(f0){return eC.call(f0)==="[object RegExp]"}function eS(f0){return f0&&f0.window===f0}function dO(f0){return f0&&f0.$evalAsync&&f0.$watch}function cP(f0){return eC.call(f0)==="[object File]"}function eB(f0){return eC.call(f0)==="[object FormData]"}function a(f0){return eC.call(f0)==="[object Blob]"}function aH(f0){return typeof f0==="boolean"}function fH(f0){return f0&&bn(f0.then)}var fy=/^\[object (Uint8(Clamped)?)|(Uint16)|(Uint32)|(Int8)|(Int16)|(Int32)|(Float(32)|(64))Array\]$/;function dM(f0){return fy.test(eC.call(f0))}var aL=function(f0){return w(f0)?f0.trim():f0};var ex=function(f0){return f0.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};function q(f0){return !!(f0&&(f0.nodeName||(f0.prop&&f0.attr&&f0.find)))}function t(f3){var f2={},f0=f3.split(","),f1;for(f1=0;f1<f0.length;f1++){f2[f0[f1]]=true}return f2}function d4(f0){return db(f0.nodeName||(f0[0]&&f0[0].nodeName))}function an(f1,f0){return Array.prototype.indexOf.call(f1,f0)!=-1}function eI(f2,f1){var f0=f2.indexOf(f1);if(f0>=0){f2.splice(f0,1)}return f0}function fV(f0,f7,f1,f6){if(eS(f0)||dO(f0)){throw eW("cpws","Can't copy! Making copies of Window or Scope instances is not supported.")}if(dM(f7)){throw eW("cpta","Can't copy! TypedArray destination cannot be mutated.")}if(!f7){f7=f0;if(s(f0)){var f5;if(f1&&(f5=f1.indexOf(f0))!==-1){return f6[f5]}if(U(f0)){return fV(f0,[],f1,f6)}else{if(dM(f0)){f7=new f0.constructor(f0)}else{if(fe(f0)){f7=new Date(f0.getTime())}else{if(az(f0)){f7=new RegExp(f0.source,f0.toString().match(/[^\/]*$/)[0]);f7.lastIndex=f0.lastIndex}else{var f2=Object.create(ak(f0));return fV(f0,f2,f1,f6)}}}}if(f6){f1.push(f0);f6.push(f7)}}}else{if(f0===f7){throw eW("cpi","Can't copy! Source and destination are identical.")}f1=f1||[];f6=f6||[];if(s(f0)){f1.push(f0);f6.push(f7)}var f9,f8;if(U(f0)){f7.length=0;for(var f3=0;f3<f0.length;f3++){f7.push(fV(f0[f3],null,f1,f6))}}else{var f4=f7.$$hashKey;if(U(f7)){f7.length=0}else{bj(f7,function(gb,ga){delete f7[ga]})}if(fO(f0)){for(f8 in f0){f7[f8]=fV(f0[f8],null,f1,f6)}}else{if(f0&&typeof f0.hasOwnProperty==="function"){for(f8 in f0){if(f0.hasOwnProperty(f8)){f7[f8]=fV(f0[f8],null,f1,f6)}}}else{for(f8 in f0){if(O.call(f0,f8)){f7[f8]=fV(f0[f8],null,f1,f6)}}}}cn(f7,f4)}}return f7}function d8(f3,f4){if(U(f3)){f4=f4||[];for(var f1=0,f2=f3.length;f1<f2;f1++){f4[f1]=f3[f1]}}else{if(s(f3)){f4=f4||{};for(var f0 in f3){if(!(f0.charAt(0)==="$"&&f0.charAt(1)==="$")){f4[f0]=f3[f0]}}}}return f4||f3}function dY(f6,f5){if(f6===f5){return true}if(f6===null||f5===null){return false}if(f6!==f6&&f5!==f5){return true}var f4=typeof f6,f2=typeof f5,f3,f1,f0;if(f4==f2){if(f4=="object"){if(U(f6)){if(!U(f5)){return false}if((f3=f6.length)==f5.length){for(f1=0;f1<f3;f1++){if(!dY(f6[f1],f5[f1])){return false}}return true}}else{if(fe(f6)){if(!fe(f5)){return false}return dY(f6.getTime(),f5.getTime())}else{if(az(f6)){return az(f5)?f6.toString()==f5.toString():false}else{if(dO(f6)||dO(f5)||eS(f6)||eS(f5)||U(f5)||fe(f5)||az(f5)){return false}f0=fM();for(f1 in f6){if(f1.charAt(0)==="$"||bn(f6[f1])){continue}if(!dY(f6[f1],f5[f1])){return false}f0[f1]=true}for(f1 in f5){if(!(f1 in f0)&&f1.charAt(0)!=="$"&&f5[f1]!==fE&&!bn(f5[f1])){return false}}return true}}}}}return false}var al=function(){if(eX(al.isActive_)){return al.isActive_}var f1=!!(el.querySelector("[ng-csp]")||el.querySelector("[data-ng-csp]"));if(!f1){try{new Function("")}catch(f0){f1=true}}return(al.isActive_=f1)};var c7=function(){if(eX(c7.name_)){return c7.name_}var f3;var f1,f2=di.length,f4,f0;for(f1=0;f1<f2;++f1){f4=di[f1];if(f3=el.querySelector("["+f4.replace(":","\\:")+"jq]")){f0=f3.getAttribute(f4+"jq");break}}return(c7.name_=f0)};function fB(f2,f1,f0){return f2.concat(cW.call(f1,f0))}function eV(f0,f1){return cW.call(f0,f1||0)}function cv(f1,f2){var f0=arguments.length>2?eV(arguments,2):[];if(bn(f2)&&!(f2 instanceof RegExp)){return f0.length?function(){return arguments.length?f2.apply(f1,fB(f0,arguments,0)):f2.apply(f1,f0)}:function(){return arguments.length?f2.apply(f1,arguments):f2.call(f1)}}else{return f2}}function e(f0,f1){var f2=f1;if(typeof f0==="string"&&f0.charAt(0)==="$"&&f0.charAt(1)==="$"){f2=fE}else{if(eS(f1)){f2="$WINDOW"}else{if(f1&&el===f1){f2="$DOCUMENT"}else{if(dO(f1)){f2="$SCOPE"}}}}return f2}function aA(f1,f0){if(typeof f1==="undefined"){return fE}if(!p(f0)){f0=f0?2:null}return JSON.stringify(f1,e,f0)}function a2(f0){return w(f0)?JSON.parse(f0):f0}function fF(f0,f2){var f1=Date.parse("Jan 01, 1970 00:00:00 "+f0)/60000;return isNaN(f1)?f2:f1}function aI(f0,f1){f0=new Date(f0.getTime());f0.setMinutes(f0.getMinutes()+f1);return f0}function a0(f1,f3,f0){f0=f0?-1:1;var f2=fF(f3,f1.getTimezoneOffset());return aI(f1,f0*(f2-f1.getTimezoneOffset()))}function ce(f0){f0=ac(f0).clone();try{f0.empty()}catch(f2){}var f1=ac("<div>").append(f0).html();try{return f0[0].nodeType===bz?db(f1):f1.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(f3,f4){return"<"+db(f4)})}catch(f2){return db(f1)}}function bR(f0){try{return decodeURIComponent(f0)}catch(f1){}}function ah(f3){var f2={},f0,f1;bj((f3||"").split("&"),function(f4){if(f4){f0=f4.replace(/\+/g,"%20").split("=");f1=bR(f0[0]);if(eX(f1)){var f5=eX(f0[1])?bR(f0[1]):true;if(!O.call(f2,f1)){f2[f1]=f5}else{if(U(f2[f1])){f2[f1].push(f5)}else{f2[f1]=[f2[f1],f5]}}}}});return f2}function eu(f1){var f0=[];bj(f1,function(f3,f2){if(U(f3)){bj(f3,function(f4){f0.push(I(f2,true)+(f4===true?"":"="+I(f4,true)))})}else{f0.push(I(f2,true)+(f3===true?"":"="+I(f3,true)))}});return f0.length?f0.join("&"):""}function bv(f0){return I(f0,true).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function I(f1,f0){return encodeURIComponent(f1).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,(f0?"%20":"+"))}var di=["ng-","data-ng-","ng:","x-ng-"];function dk(f3,f1){var f0,f2,f4=di.length;for(f2=0;f2<f4;++f2){f0=di[f2]+f1;if(w(f0=f3.getAttribute(f0))){return f0}}return null}function b4(f3,f2){var f4,f1,f0={};bj(di,function(f6){var f5=f6+"app";if(!f4&&f3.hasAttribute&&f3.hasAttribute(f5)){f4=f3;f1=f3.getAttribute(f5)}});bj(di,function(f7){var f5=f7+"app";var f6;if(!f4&&(f6=f3.querySelector("["+f5.replace(":","\\:")+"]"))){f4=f6;f1=f6.getAttribute(f5)}});if(f4){f0.strictDi=dk(f4,"strict-di")!==null;f2(f4,f1?[f1]:[],f0)}}function bp(f5,f4,f3){if(!s(f3)){f3={}}var f1={strictDi:false};f3=fU(f1,f3);var f6=function(){f5=ac(f5);if(f5.injector()){var f7=(f5[0]===el)?"document":ce(f5);throw eW("btstrpd","App Already Bootstrapped with this Element '{0}'",f7.replace(/</,"&lt;").replace(/>/,"&gt;"))}f4=f4||[];f4.unshift(["$provide",function(ga){ga.value("$rootElement",f5)}]);if(f3.debugInfoEnabled){f4.push(["$compileProvider",function(ga){ga.debugInfoEnabled(true)}])}f4.unshift("ng");var f9=cA(f4,f3.strictDi);f9.invoke(["$rootScope","$rootElement","$compile","$injector",function f8(gb,ga,gc,gd){gb.$apply(function(){ga.data("$injector",gd);gc(ga)(gb)})}]);return f9};var f2=/^NG_ENABLE_DEBUG_INFO!/;var f0=/^NG_DEFER_BOOTSTRAP!/;if(dV&&f2.test(dV.name)){f3.debugInfoEnabled=true;dV.name=dV.name.replace(f2,"")}if(dV&&!f0.test(dV.name)){return f6()}dV.name=dV.name.replace(f0,"");cY.resumeBootstrap=function(f7){bj(f7,function(f8){f4.push(f8)});return f6()};if(bn(cY.resumeDeferredBootstrap)){cY.resumeDeferredBootstrap()}}function bK(){dV.name="NG_ENABLE_DEBUG_INFO!"+dV.name;dV.location.reload()}function ci(f0){var f1=cY.element(f0).injector();if(!f1){throw eW("test","no injector found for element argument to getTestability")}return f1.get("$$testability")}var D=/[A-Z]/g;function Q(f0,f1){f1=f1||"_";return f0.replace(D,function(f2,f3){return(f3?f1:"")+f2.toLowerCase()})}var c9=false;var b1;function v(){var f1;if(c9){return}var f0=c7();fz=dV.jQuery;if(eX(f0)){fz=f0===null?fE:dV[f0]}if(fz&&fz.fn.on){ac=fz;fU(fz.fn,{scope:dQ.scope,isolateScope:dQ.isolateScope,controller:dQ.controller,injector:dQ.injector,inheritedData:dQ.inheritedData});f1=fz.cleanData;fz.cleanData=function(f2){var f4;if(!b1){for(var f3=0,f5;(f5=f2[f3])!=null;f3++){f4=fz._data(f5,"events");if(f4&&f4.$destroy){fz(f5).triggerHandler("$destroy")}}}else{b1=false}f1(f2)}}else{ac=ff}cY.element=ac;c9=true}function dF(f0,f1,f2){if(!f0){throw eW("areq","Argument '{0}' is {1}",(f1||"?"),(f2||"required"))}return f0}function dg(f0,f1,f2){if(f2&&U(f0)){f0=f0[f0.length-1]}dF(bn(f0),f1,"not a function, got "+(f0&&typeof f0==="object"?f0.constructor.name||"Object":typeof f0));return f0}function fa(f0,f1){if(f0==="hasOwnProperty"){throw eW("badname","hasOwnProperty is not a valid {0} name",f1)}}function c6(f7,f6,f5){if(!f6){return f7}var f4=f6.split(".");var f3;var f1=f7;var f0=f4.length;for(var f2=0;f2<f0;f2++){f3=f4[f2];if(f7){f7=(f1=f7)[f3]}}if(!f5&&bn(f7)){return cv(f1,f7)}return f7}function a9(f1){var f3=f1[0];var f0=f1[f1.length-1];var f2=[f3];do{f3=f3.nextSibling;if(!f3){break}f2.push(f3)}while(f3!==f0);return ac(f2)}function fM(){return Object.create(null)}var bB=1;var bi=2;var bz=3;var e5=8;var bk=9;var aj=11;function fs(f4){var f2=eT("$injector");var f0=eT("ng");function f3(f7,f6,f5){return f7[f6]||(f7[f6]=f5())}var f1=f3(f4,"angular",Object);f1.$$minErr=f1.$$minErr||eT;return f3(f1,"module",function(){var f5={};return function f6(f7,f9,f8){var ga=function(gb,gc){if(gb==="hasOwnProperty"){throw f0("badname","hasOwnProperty is not a valid {0} name",gc)}};ga(f7,"module");if(f9&&f5.hasOwnProperty(f7)){f5[f7]=null}return f3(f5,f7,function(){if(!f9){throw f2("nomod","Module '{0}' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.",f7)}var gg=[];var gh=[];var gf=[];var gc=gb("$injector","invoke","push",gh);var ge={_invokeQueue:gg,_configBlocks:gh,_runBlocks:gf,requires:f9,name:f7,provider:gd("$provide","provider"),factory:gd("$provide","factory"),service:gd("$provide","service"),value:gb("$provide","value"),constant:gb("$provide","constant","unshift"),decorator:gd("$provide","decorator"),animation:gd("$animateProvider","register"),filter:gd("$filterProvider","register"),controller:gd("$controllerProvider","register"),directive:gd("$compileProvider","directive"),config:gc,run:function(gi){gf.push(gi);return this}};if(f8){gc(f8)}return ge;function gb(gk,gl,gj,gi){if(!gi){gi=gg}return function(){gi[gj||"push"]([gk,gl,arguments]);return ge}}function gd(gi,gj){return function(gl,gk){if(gk&&bn(gk)){gk.$$moduleName=f7}gg.push([gi,gj,arguments]);return ge}}})}})}function fh(f1){var f0=[];return JSON.stringify(f1,function(f2,f3){f3=e(f2,f3);if(s(f3)){if(f0.indexOf(f3)>=0){return"<<already seen>>"}f0.push(f3)}return f3})}function fr(f0){if(typeof f0==="function"){return f0.toString().replace(/ \{[\s\S]*$/,"")}else{if(typeof f0==="undefined"){return"undefined"}else{if(typeof f0!=="string"){return fh(f0)}}}return f0}var ag={full:"1.4.3",major:1,minor:4,dot:3,codeName:"foam-acceleration"};function aG(f0){fU(f0,{bootstrap:bp,copy:fV,extend:fU,merge:b3,equals:dY,element:ac,forEach:bj,injector:cA,noop:eD,bind:cv,toJson:aA,fromJson:a2,identity:aU,isUndefined:x,isDefined:eX,isString:w,isFunction:bn,isObject:s,isNumber:p,isElement:q,isArray:U,version:ag,isDate:fe,lowercase:db,uppercase:a4,callbacks:{counter:0},getTestability:ci,"$$minErr":eT,"$$csp":al,reloadWithDebugInfo:bK});fY=fs(dV);try{fY("ngLocale")}catch(f1){fY("ngLocale",[]).provider("$locale",cb)}fY("ng",["ngLocale"],["$provide",function f2(f3){f3.provider({$$sanitizeUri:dR});f3.provider("$compile",ea).directive({a:bf,input:d5,textarea:d5,form:bX,script:aW,select:ae,style:e1,option:cU,ngBind:y,ngBindHtml:l,ngBindTemplate:dE,ngClass:H,ngClassEven:eG,ngClassOdd:j,ngCloak:cT,ngController:ey,ngForm:bL,ngHide:eR,ngIf:cr,ngInclude:dp,ngInit:d1,ngNonBindable:eH,ngPluralize:c8,ngRepeat:eb,ngShow:aZ,ngStyle:cx,ngSwitch:ew,ngSwitchWhen:ca,ngSwitchDefault:fj,ngOptions:dX,ngTransclude:bC,ngModel:bh,ngList:cF,ngChange:b7,pattern:dq,ngPattern:dq,required:cj,ngRequired:cj,minlength:aM,ngMinlength:aM,maxlength:fm,ngMaxlength:fm,ngValue:b5,ngModelOptions:d0}).directive({ngInclude:dN}).directive(ed).directive(aB);f3.provider({$anchorScroll:fl,$animate:d3,$$animateQueue:bb,$$AnimateRunner:cZ,$browser:ec,$cacheFactory:c,$controller:dt,$document:dA,$exceptionHandler:fS,$filter:bo,$interpolate:eq,$interval:ai,$http:dm,$httpParamSerializer:av,$httpParamSerializerJQLike:aR,$httpBackend:fq,$location:m,$log:dr,$parse:dh,$rootScope:dG,$q:c1,$$q:bx,$sce:bd,$sceDelegate:bw,$sniffer:dW,$templateCache:bO,$templateRequest:d6,$$testability:fI,$timeout:fW,$window:N,$$rAF:bF,$$jqLite:bY,$$HashMap:ct,$$cookieReader:dH})}])}ff.expando="ng339";var fZ=ff.cache={},aw=1,cp=function(f0,f2,f1){f0.addEventListener(f2,f1,false)},e2=function(f0,f2,f1){f0.removeEventListener(f2,f1,false)};ff._data=function(f0){return this.cache[f0[this.expando]]||{}};function bQ(){return ++aw}var F=/([\:\-\_]+(.))/g;var b6=/^moz([A-Z])/;var d={mouseleave:"mouseout",mouseenter:"mouseover"};var c3=eT("jqLite");function ar(f0){return f0.replace(F,function(f1,f3,f2,f4){return f4?f2.toUpperCase():f2}).replace(b6,"Moz$1")}var bI=/^<(\w+)\s*\/?>(?:<\/\1>|)$/;var A=/<|&#?\w+;/;var ee=/<([\w:]+)/;var a6=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi;var aN={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};aN.optgroup=aN.option;aN.tbody=aN.tfoot=aN.colgroup=aN.caption=aN.thead;aN.th=aN.td;function g(f0){return !A.test(f0)}function aO(f1){var f0=f1.nodeType;return f0===bB||!f0||f0===bk}function cV(f1){for(var f0 in fZ[f1.ng339]){return true}return false}function ev(f6,f5){var f4,f0,f7,f2=f5.createDocumentFragment(),f1=[],f3;if(g(f6)){f1.push(f5.createTextNode(f6))}else{f4=f4||f2.appendChild(f5.createElement("div"));f0=(ee.exec(f6)||["",""])[1].toLowerCase();f7=aN[f0]||aN._default;f4.innerHTML=f7[1]+f6.replace(a6,"<$1></$2>")+f7[2];f3=f7[0];while(f3--){f4=f4.lastChild}f1=fB(f1,f4.childNodes);f4=f2.firstChild;f4.textContent=""}f2.textContent="";f2.innerHTML="";bj(f1,function(f8){f2.appendChild(f8)});return f2}function aC(f2,f1){f1=f1||el;var f0;if((f0=bI.exec(f2))){return[f1.createElement(f0[1])]}if((f0=ev(f2,f1))){return f0.childNodes}return[]}function ff(f0){if(f0 instanceof ff){return f0}var f1;if(w(f0)){f0=aL(f0);f1=true}if(!(this instanceof ff)){if(f1&&f0.charAt(0)!="<"){throw c3("nosel","Looking up elements via selectors is not supported by jqLite! See: http://docs.angularjs.org/api/angular.element")}return new ff(f0)}if(f1){X(this,aC(f0))}else{X(this,f0)}}function dz(f0){return f0.cloneNode(true)}function bu(f2,f3){if(!f3){dL(f2)}if(f2.querySelectorAll){var f4=f2.querySelectorAll("*");for(var f1=0,f0=f4.length;f1<f0;f1++){dL(f4[f1])}}}function aa(f2,f4,f3,f6){if(eX(f6)){throw c3("offargs","jqLite#off() does not support the `selector` argument")}var f0=b8(f2);var f1=f0&&f0.events;var f5=f0&&f0.handle;if(!f5){return}if(!f4){for(f4 in f1){if(f4!=="$destroy"){e2(f2,f4,f5)}delete f1[f4]}}else{bj(f4.split(" "),function(f8){if(eX(f3)){var f7=f1[f8];eI(f7||[],f3);if(f7&&f7.length>0){return}}e2(f2,f8,f5);delete f1[f8]})}}function dL(f3,f2){var f1=f3.ng339;var f0=f1&&fZ[f1];if(f0){if(f2){delete f0.data[f2];return}if(f0.handle){if(f0.events.$destroy){f0.handle({},"$destroy")}aa(f3)}delete fZ[f1];f3.ng339=fE}}function b8(f3,f1){var f2=f3.ng339,f0=f2&&fZ[f2];if(f1&&!f0){f3.ng339=f2=bQ();f0=fZ[f2]={events:{},data:{},handle:fE}}return f0}function am(f2,f1,f5){if(aO(f2)){var f6=eX(f5);var f7=!f6&&f1&&!s(f1);var f3=!f1;var f0=b8(f2,!f7);var f4=f0&&f0.data;if(f6){f4[f1]=f5}else{if(f3){return f4}else{if(f7){return f4&&f4[f1]}else{fU(f4,f1)}}}}}function br(f1,f0){if(!f1.getAttribute){return false}return((" "+(f1.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+f0+" ")>-1)}function df(f1,f0){if(f0&&f1.setAttribute){bj(f0.split(" "),function(f2){f1.setAttribute("class",aL((" "+(f1.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+aL(f2)+" "," ")))})}}function ds(f1,f0){if(f0&&f1.setAttribute){var f2=(" "+(f1.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");bj(f0.split(" "),function(f3){f3=aL(f3);if(f2.indexOf(" "+f3+" ")===-1){f2+=f3+" "}});f1.setAttribute("class",aL(f2))}}function X(f0,f3){if(f3){if(f3.nodeType){f0[f0.length++]=f3}else{var f2=f3.length;if(typeof f2==="number"&&f3.window!==f3){if(f2){for(var f1=0;f1<f2;f1++){f0[f0.length++]=f3[f1]}}}else{f0[f0.length++]=f3}}}}function aV(f1,f0){return cR(f1,"$"+(f0||"ngController")+"Controller")}function cR(f2,f0,f4){if(f2.nodeType==bk){f2=f2.documentElement}var f5=U(f0)?f0:[f0];while(f2){for(var f1=0,f3=f5.length;f1<f3;f1++){if((f4=ac.data(f2,f5[f1]))!==fE){return f4}}f2=f2.parentNode||(f2.nodeType===aj&&f2.host)}}function W(f0){bu(f0,true);while(f0.firstChild){f0.removeChild(f0.firstChild)}}function aD(f0,f2){if(!f2){bu(f0)}var f1=f0.parentNode;if(f1){f1.removeChild(f0)}}function fb(f0,f1){f1=f1||dV;if(f1.document.readyState==="complete"){f1.setTimeout(f0)}else{ac(f1).on("load",f0)}}var dQ=ff.prototype={ready:function(f1){var f2=false;function f0(){if(f2){return}f2=true;f1()}if(el.readyState==="complete"){setTimeout(f0)}else{this.on("DOMContentLoaded",f0);ff(dV).on("load",f0)}},toString:function(){var f0=[];bj(this,function(f1){f0.push(""+f1)});return"["+f0.join(", ")+"]"},eq:function(f0){return(f0>=0)?ac(this[f0]):ac(this[this.length+f0])},length:0,push:cl,sort:[].sort,splice:[].splice};var cE={};bj("multiple,selected,checked,disabled,readOnly,required,open".split(","),function(f0){cE[db(f0)]=f0});var c5={};bj("input,select,option,textarea,button,form,details".split(","),function(f0){c5[f0]=true});var fQ={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};function da(f2,f0){var f1=cE[f0.toLowerCase()];return f1&&c5[d4(f2)]&&f1}function a3(f1,f0){var f2=f1.nodeName;return(f2==="INPUT"||f2==="TEXTAREA")&&fQ[f0]}bj({data:am,removeData:dL,hasData:cV},function(f1,f0){ff[f0]=f1});bj({data:am,inheritedData:cR,scope:function(f0){return ac.data(f0,"$scope")||cR(f0.parentNode||f0,["$isolateScope","$scope"])},isolateScope:function(f0){return ac.data(f0,"$isolateScope")||ac.data(f0,"$isolateScopeNoTemplate")},controller:aV,injector:function(f0){return cR(f0,"$injector")},removeAttr:function(f1,f0){f1.removeAttribute(f0)},hasClass:br,css:function(f1,f0,f2){f0=ar(f0);if(eX(f2)){f1.style[f0]=f2}else{return f1.style[f0]}},attr:function(f4,f2,f5){var f0=f4.nodeType;if(f0===bz||f0===bi||f0===e5){return}var f3=db(f2);if(cE[f3]){if(eX(f5)){if(!!f5){f4[f2]=true;f4.setAttribute(f2,f3)}else{f4[f2]=false;f4.removeAttribute(f3)}}else{return(f4[f2]||(f4.attributes.getNamedItem(f2)||eD).specified)?f3:fE}}else{if(eX(f5)){f4.setAttribute(f2,f5)}else{if(f4.getAttribute){var f1=f4.getAttribute(f2,2);return f1===null?fE:f1}}}},prop:function(f1,f0,f2){if(eX(f2)){f1[f0]=f2}else{return f1[f0]}},text:(function(){f0.$dv="";return f0;function f0(f2,f3){if(x(f3)){var f1=f2.nodeType;return(f1===bB||f1===bz)?f2.textContent:""}f2.textContent=f3}})(),val:function(f1,f2){if(x(f2)){if(f1.multiple&&d4(f1)==="select"){var f0=[];bj(f1.options,function(f3){if(f3.selected){f0.push(f3.value||f3.text)}});return f0.length===0?null:f0}return f1.value}f1.value=f2},html:function(f0,f1){if(x(f1)){return f0.innerHTML}bu(f0,true);f0.innerHTML=f1},empty:W},function(f1,f0){ff.prototype[f0]=function(f7,f5){var f4,ga;var f2=this.length;if(f1!==W&&(((f1.length==2&&(f1!==br&&f1!==aV))?f7:f5)===fE)){if(s(f7)){for(f4=0;f4<f2;f4++){if(f1===am){f1(this[f4],f7)}else{for(ga in f7){f1(this[f4],ga,f7[ga])}}}return this}else{var f9=f1.$dv;var f6=(f9===fE)?Math.min(f2,1):f2;for(var f3=0;f3<f6;f3++){var f8=f1(this[f3],f7,f5);f9=f9?f9+f8:f8}return f9}}else{for(f4=0;f4<f2;f4++){f1(this[f4],f7,f5)}return this}}});function cI(f2,f1){var f0=function(f8,f7){f8.isDefaultPrevented=function(){return f8.defaultPrevented};var f4=f1[f7||f8.type];var f6=f4?f4.length:0;if(!f6){return}if(x(f8.immediatePropagationStopped)){var f3=f8.stopImmediatePropagation;f8.stopImmediatePropagation=function(){f8.immediatePropagationStopped=true;if(f8.stopPropagation){f8.stopPropagation()}if(f3){f3.call(f8)}}}f8.isImmediatePropagationStopped=function(){return f8.immediatePropagationStopped===true};if((f6>1)){f4=d8(f4)}for(var f5=0;f5<f6;f5++){if(!f8.isImmediatePropagationStopped()){f4[f5].call(f2,f8)}}};f0.elem=f2;return f0}bj({removeData:dL,on:function bg(f3,f6,f7,f8){if(eX(f8)){throw c3("onargs","jqLite#on() does not support the `selector` or `eventData` parameters")}if(!aO(f3)){return}var f0=b8(f3,true);var f9=f0.events;var f4=f0.handle;if(!f4){f4=f0.handle=cI(f3,f9)}var f5=f6.indexOf(" ")>=0?f6.split(" "):[f6];var f2=f5.length;while(f2--){f6=f5[f2];var f1=f9[f6];if(!f1){f9[f6]=[];if(f6==="mouseenter"||f6==="mouseleave"){bg(f3,d[f6],function(ga){var gc=this,gb=ga.relatedTarget;if(!gb||(gb!==gc&&!gc.contains(gb))){f4(ga,f6)}})}else{if(f6!=="$destroy"){cp(f3,f6,f4)}}f1=f9[f6]}f1.push(f7)}},off:aa,one:function(f1,f3,f2){f1=ac(f1);f1.on(f3,function f0(){f1.off(f3,f2);f1.off(f3,f0)});f1.on(f3,f2)},replaceWith:function(f1,f3){var f0,f2=f1.parentNode;bu(f1);bj(new ff(f3),function(f4){if(f0){f2.insertBefore(f4,f0.nextSibling)}else{f2.replaceChild(f4,f1)}f0=f4})},children:function(f1){var f0=[];bj(f1.childNodes,function(f2){if(f2.nodeType===bB){f0.push(f2)}});return f0},contents:function(f0){return f0.contentDocument||f0.childNodes||[]},append:function(f2,f4){var f0=f2.nodeType;if(f0!==bB&&f0!==aj){return}f4=new ff(f4);for(var f1=0,f3=f4.length;f1<f3;f1++){var f5=f4[f1];f2.appendChild(f5)}},prepend:function(f1,f2){if(f1.nodeType===bB){var f0=f1.firstChild;bj(new ff(f2),function(f3){f1.insertBefore(f3,f0)})}},wrap:function(f1,f0){f0=ac(f0).eq(0).clone()[0];var f2=f1.parentNode;if(f2){f2.replaceChild(f0,f1)}f0.appendChild(f1)},remove:aD,detach:function(f0){aD(f0,true)},after:function(f2,f6){var f0=f2,f4=f2.parentNode;f6=new ff(f6);for(var f1=0,f3=f6.length;f1<f3;f1++){var f5=f6[f1];f4.insertBefore(f5,f0.nextSibling);f0=f5}},addClass:ds,removeClass:df,toggleClass:function(f1,f0,f2){if(f0){bj(f0.split(" "),function(f4){var f3=f2;if(x(f3)){f3=!br(f1,f4)}(f3?ds:df)(f1,f4)})}},parent:function(f0){var f1=f0.parentNode;return f1&&f1.nodeType!==aj?f1:null},next:function(f0){return f0.nextElementSibling},find:function(f1,f0){if(f1.getElementsByTagName){return f1.getElementsByTagName(f0)}else{return[]}},clone:dz,triggerHandler:function(f6,f3,f4){var f5,f0,f8;var f7=f3.type||f3;var f1=b8(f6);var f9=f1&&f1.events;var f2=f9&&f9[f7];if(f2){f5={preventDefault:function(){this.defaultPrevented=true},isDefaultPrevented:function(){return this.defaultPrevented===true},stopImmediatePropagation:function(){this.immediatePropagationStopped=true},isImmediatePropagationStopped:function(){return this.immediatePropagationStopped===true},stopPropagation:eD,type:f7,target:f6};if(f3.type){f5=fU(f5,f3)}f0=d8(f2);f8=f4?[f5].concat(f4):[f5];bj(f0,function(ga){if(!f5.isImmediatePropagationStopped()){ga.apply(f6,f8)}})}}},function(f1,f0){ff.prototype[f0]=function(f4,f3,f2){var f7;for(var f5=0,f6=this.length;f5<f6;f5++){if(x(f7)){f7=f1(this[f5],f4,f3,f2);if(eX(f7)){f7=ac(f7)}}else{X(f7,f1(this[f5],f4,f3,f2))}}return eX(f7)?f7:this};ff.prototype.bind=ff.prototype.on;ff.prototype.unbind=ff.prototype.off});function bY(){this.$get=function f0(){return fU(ff,{hasClass:function(f2,f1){if(f2.attr){f2=f2[0]}return br(f2,f1)},addClass:function(f2,f1){if(f2.attr){f2=f2[0]}return ds(f2,f1)},removeClass:function(f2,f1){if(f2.attr){f2=f2[0]}return df(f2,f1)}})}}function ef(f2,f0){var f1=f2&&f2.$$hashKey;if(f1){if(typeof f1==="function"){f1=f2.$$hashKey()}return f1}var f3=typeof f2;if(f3=="function"||(f3=="object"&&f2!==null)){f1=f2.$$hashKey=f3+":"+(f0||aP)()}else{f1=f3+":"+f2}return f1}function cu(f2,f0){if(f0){var f1=0;this.nextUid=function(){return ++f1}}bj(f2,this.put,this)}cu.prototype={put:function(f0,f1){this[ef(f0,this.nextUid)]=f1},get:function(f0){return this[ef(f0,this.nextUid)]},remove:function(f0){var f1=this[f0=ef(f0,this.nextUid)];delete this[f0];return f1}};var ct=[function(){this.$get=[function(){return cu}]}];var dK=/^function\s*[^\(]*\(\s*([^\)]*)\)/m;var cQ=/,/;var fp=/^\s*(_?)(\S+?)\1\s*$/;var c4=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;var fo=eT("$injector");function ez(f2){var f1=f2.toString().replace(c4,""),f0=f1.match(dK);if(f0){return"function("+(f0[1]||"").replace(/[\s\r\n]+/," ")+")"}return"fn"}function eL(f3,f2,f0){var f5,f1,f6,f4;if(typeof f3==="function"){if(!(f5=f3.$inject)){f5=[];if(f3.length){if(f2){if(!w(f0)||!f0){f0=f3.name||ez(f3)}throw fo("strictdi","{0} is not using explicit annotation and cannot be invoked in strict mode",f0)}f1=f3.toString().replace(c4,"");f6=f1.match(dK);bj(f6[1].split(cQ),function(f7){f7.replace(fp,function(ga,f8,f9){f5.push(f9)})})}f3.$inject=f5}}else{if(U(f3)){f4=f3.length-1;dg(f3[f4],"fn");f5=f3.slice(0,f4)}else{dg(f3,"fn",true)}}return f5}function cA(gf,f9){f9=(f9===true);var f2={},ge="Provider",ga=[],f6=new cu([],true),f4={$provide:{provider:f8(gh),factory:f8(f5),service:f8(gi),value:f8(gc),constant:f8(f1),decorator:f0}},gj=(f4.$injector=gd(f4,function(gl,gk){if(cY.isString(gk)){ga.push(gk)}throw fo("unpr","Unknown provider: {0}",ga.join(" <- "))})),gg={},gb=(gg.$injector=gd(gg,function(gl,gk){var gm=gj.get(gl+ge,gk);return gb.invoke(gm.$get,gm,fE,gl)}));bj(f3(gf),function(gk){if(gk){gb.invoke(gk)}});return gb;function f8(gk){return function(gl,gm){if(s(gl)){bj(gl,dP(gk))}else{return gk(gl,gm)}}}function gh(gk,gl){fa(gk,"service");if(bn(gl)||U(gl)){gl=gj.instantiate(gl)}if(!gl.$get){throw fo("pget","Provider '{0}' must define $get factory method.",gk)}return f4[gk+ge]=gl}function f7(gm,gl){return function gk(){var gn=gb.invoke(gl,this);if(x(gn)){throw fo("undef","Provider '{0}' must return a value from $get factory method.",gm)}return gn}}function f5(gk,gl,gm){return gh(gk,{$get:gm!==false?f7(gk,gl):gl})}function gi(gk,gl){return f5(gk,["$injector",function(gm){return gm.instantiate(gl)}])}function gc(gk,gl){return f5(gk,V(gl),false)}function f1(gk,gl){fa(gk,"constant");f4[gk]=gl;gg[gk]=gl}function f0(gl,gm){var gk=gj.get(gl+ge),gn=gk.$get;gk.$get=function(){var go=gb.invoke(gn,gk);return gb.invoke(gm,null,{$delegate:go})}}function f3(gk){var gm=[],gl;bj(gk,function(go){if(f6.get(go)){return}f6.put(go,true);function gn(gq){var gr,gs;for(gr=0,gs=gq.length;gr<gs;gr++){var gu=gq[gr],gt=gj.get(gu[0]);gt[gu[1]].apply(gt,gu[2])}}try{if(w(go)){gl=fY(go);gm=gm.concat(f3(gl.requires)).concat(gl._runBlocks);gn(gl._invokeQueue);gn(gl._configBlocks)}else{if(bn(go)){gm.push(gj.invoke(go))}else{if(U(go)){gm.push(gj.invoke(go))}else{dg(go,"module")}}}}catch(gp){if(U(go)){go=go[go.length-1]}if(gp.message&&gp.stack&&gp.stack.indexOf(gp.message)==-1){gp=gp.message+"\n"+gp.stack}throw fo("modulerr","Failed to instantiate module {0} due to:\n{1}",go,gp.stack||gp.message||gp)}});return gm}function gd(gm,gl){function go(gq,gp){if(gm.hasOwnProperty(gq)){if(gm[gq]===f2){throw fo("cdep","Circular dependency found: {0}",gq+" <- "+ga.join(" <- "))}return gm[gq]}else{try{ga.unshift(gq);gm[gq]=f2;return gm[gq]=gl(gq,gp)}catch(gr){if(gm[gq]===f2){delete gm[gq]}throw gr}finally{ga.shift()}}}function gn(gv,gx,gq,gt){if(typeof gq==="string"){gt=gq;gq=null}var gu=[],gp=cA.$$annotate(gv,f9,gt),gr,gs,gw;for(gs=0,gr=gp.length;gs<gr;gs++){gw=gp[gs];if(typeof gw!=="string"){throw fo("itkn","Incorrect injection token! Expected service name as string, got {0}",gw)}gu.push(gq&&gq.hasOwnProperty(gw)?gq[gw]:go(gw,gt))}if(U(gv)){gv=gv[gr]}return gv.apply(gx,gu)}function gk(gq,gt,gr){var gp=Object.create((U(gq)?gq[gq.length-1]:gq).prototype||null);var gs=gn(gq,gp,gt,gr);return s(gs)||bn(gs)?gs:gp}return{invoke:gn,instantiate:gk,get:go,annotate:cA.$$annotate,has:function(gp){return f4.hasOwnProperty(gp+ge)||gm.hasOwnProperty(gp)}}}}cA.$$annotate=eL;function fl(){var f0=true;this.disableAutoScrolling=function(){f0=false};this.$get=["$window","$location","$rootScope",function(f2,f4,f8){var f7=f2.document;function f5(gc){var gb=null;Array.prototype.some.call(gc,function(gd){if(d4(gd)==="a"){gb=gd;return true}});return gb}function ga(){var gd=f9.yOffset;if(bn(gd)){gd=gd()}else{if(q(gd)){var gc=gd[0];var gb=f2.getComputedStyle(gc);if(gb.position!=="fixed"){gd=0}else{gd=gc.getBoundingClientRect().bottom}}else{if(!p(gd)){gd=0}}}return gd}function f6(gc){if(gc){gc.scrollIntoView();var gd=ga();if(gd){var gb=gc.getBoundingClientRect().top;f2.scrollBy(0,gb-gd)}}else{f2.scrollTo(0,0)}}function f9(gb){gb=w(gb)?gb:f4.hash();var gc;if(!gb){f6(null)}else{if((gc=f7.getElementById(gb))){f6(gc)}else{if((gc=f5(f7.getElementsByName(gb)))){f6(gc)}else{if(gb==="top"){f6(null)}}}}}if(f0){f8.$watch(function f1(){return f4.hash()},function f3(gc,gb){if(gc===gb&&gc===""){return}fb(function(){f8.$evalAsync(f9)})})}return f9}]}var b0=eT("$animate");var R=1;var ax="ng-animate";function en(f1,f0){if(!f1&&!f0){return""}if(!f1){return f0}if(!f0){return f1}if(U(f1)){f1=f1.join(" ")}if(U(f0)){f0=f0.join(" ")}return f1+" "+f0}function au(f1){for(var f0=0;f0<f1.length;f0++){var f2=f1[f0];if(f2.nodeType===R){return f2}}}function cJ(f0){if(w(f0)){f0=f0.split(" ")}var f1=fM();bj(f0,function(f2){if(f2.length){f1[f2]=true}});return f1}function fX(f0){return s(f0)?f0:{}}var cZ=function(){this.$get=["$q","$$rAF",function(f1,f2){function f0(){}f0.all=eD;f0.chain=eD;f0.prototype={end:eD,cancel:eD,resume:eD,pause:eD,complete:eD,then:function(f4,f3){return f1(function(f5){f2(function(){f5()})}).then(f4,f3)}};return f0}]};var bb=function(){var f1=new cu();var f0=[];this.$get=["$$AnimateRunner","$rootScope",function(f4,f2){return{enabled:eD,on:eD,off:eD,pin:eD,push:function(f7,f8,f6,f5){f5&&f5();f6=f6||{};f6.from&&f7.css(f6.from);f6.to&&f7.css(f6.to);if(f6.addClass||f6.removeClass){f3(f7,f6.addClass,f6.removeClass)}return new f4()}};function f3(f6,f9,f5){var f8=f1.get(f6);var f7;if(!f8){f1.put(f6,f8={});f0.push(f6)}if(f9){bj(f9.split(" "),function(ga){if(ga){f8[ga]=true}})}if(f5){bj(f5.split(" "),function(ga){if(ga){f8[ga]=false}})}if(f0.length>1){return}f2.$$postDigest(function(){bj(f0,function(gb){var ge=f1.get(gb);if(ge){var gd=cJ(gb.attr("class"));var ga="";var gc="";bj(ge,function(gf,gh){var gg=!!gd[gh];if(gf!==gg){if(gf){ga+=(ga.length?" ":"")+gh}else{gc+=(gc.length?" ":"")+gh}}});bj(gb,function(gf){ga&&ds(gf,ga);gc&&df(gf,gc)});f1.remove(gb)}});f0.length=0})}}]};var d3=["$provide",function(f0){var f1=this;this.$$registeredAnimations=Object.create(null);this.register=function(f3,f2){if(f3&&f3.charAt(0)!=="."){throw b0("notcsel","Expecting class selector starting with '.' got '{0}'.",f3)}var f4=f3+"-animation";f1.$$registeredAnimations[f3.substr(1)]=f4;f0.factory(f4,f2)};this.classNameFilter=function(f3){if(arguments.length===1){this.$$classNameFilter=(f3 instanceof RegExp)?f3:null;if(this.$$classNameFilter){var f2=new RegExp("(\\s+|\\/)"+ax+"(\\s+|\\/)");if(f2.test(this.$$classNameFilter.toString())){throw b0("nongcls",'$animateProvider.classNameFilter(regex) prohibits accepting a regex value which matches/contains the "{0}" CSS class.',ax)}}}return this.$$classNameFilter};this.$get=["$$animateQueue",function(f2){function f3(f5,f4,f7){if(f7){var f6=au(f7);if(f6&&!f6.parentNode&&!f6.previousElementSibling){f7=null}}f7?f7.after(f5):f4.prepend(f5)}return{on:f2.on,off:f2.off,pin:f2.pin,enabled:f2.enabled,cancel:function(f4){f4.end&&f4.end()},enter:function(f5,f6,f7,f4){f6=f6&&ac(f6);f7=f7&&ac(f7);f6=f6||f7.parent();f3(f5,f6,f7);return f2.push(f5,"enter",fX(f4))},move:function(f5,f6,f7,f4){f6=f6&&ac(f6);f7=f7&&ac(f7);f6=f6||f7.parent();f3(f5,f6,f7);return f2.push(f5,"move",fX(f4))},leave:function(f5,f4){return f2.push(f5,"leave",fX(f4),function(){f5.remove()})},addClass:function(f5,f6,f4){f4=fX(f4);f4.addClass=en(f4.addclass,f6);return f2.push(f5,"addClass",f4)},removeClass:function(f5,f6,f4){f4=fX(f4);f4.removeClass=en(f4.removeClass,f6);return f2.push(f5,"removeClass",f4)},setClass:function(f6,f7,f4,f5){f5=fX(f5);f5.addClass=en(f5.addClass,f7);f5.removeClass=en(f5.removeClass,f4);return f2.push(f6,"setClass",f5)},animate:function(f5,f8,f7,f6,f4){f4=fX(f4);f4.from=f4.from?fU(f4.from,f8):f8;f4.to=f4.to?fU(f4.to,f7):f7;f6=f6||"ng-inline-animate";f4.tempClasses=en(f4.tempClasses,f6);return f2.push(f5,"animate",f4)}}}]}];function ad(){this.$get=["$$rAF","$timeout",function(f1,f0){return f1.supported?function(f2){return f1(f2)}:function(f2){return f0(f2,0,false)}}]}function cs(gd,gj,gk,gm){var gg=this,gn=gj[0],f4=gd.location,gf=gd.history,f5=gd.setTimeout,f6=gd.clearTimeout,gc={};gg.isMock=false;var gq=0;var gp=[];gg.$$completeOutstandingRequest=ga;gg.$$incOutstandingRequestCount=function(){gq++};function ga(gr){try{gr.apply(null,eV(arguments,1))}finally{gq--;if(gq===0){while(gp.length){try{gp.pop()()}catch(gs){gk.error(gs)}}}}}function gi(gs){var gr=gs.indexOf("#");return gr===-1?"":gs.substr(gr)}gg.notifyWhenNoOutstandingRequests=function(gr){if(gq===0){gr()}else{gp.push(gr)}};var f2,f1,gb=f4.href,f0=gj.find("base"),gl=null;f7();f1=f2;gg.url=function(gr,gs,gu){if(x(gu)){gu=null}if(f4!==gd.location){f4=gd.location}if(gf!==gd.history){gf=gd.history}if(gr){var gv=f1===gu;if(gb===gr&&(!gm.history||gv)){return gg}var gt=gb&&i(gb)===i(gr);gb=gr;f1=gu;if(gm.history&&(!gt||!gv)){gf[gs?"replaceState":"pushState"](gu,"",gr);f7();f1=f2}else{if(!gt||gl){gl=gr}if(gs){f4.replace(gr)}else{if(!gt){f4.href=gr}else{f4.hash=gi(gr)}}}return gg}else{return gl||f4.href.replace(/%27/g,"'")}};gg.state=function(){return f2};var f8=[],f9=false;function gh(){f7();f3()}function go(){try{return gf.state}catch(gr){}}var ge=null;function f7(){f2=go();f2=x(f2)?null:f2;if(dY(f2,ge)){f2=ge}ge=f2}function f3(){if(gb===gg.url()&&f1===f2){return}gb=gg.url();f1=f2;bj(f8,function(gr){gr(gg.url(),f2)})}gg.onUrlChange=function(gr){if(!f9){if(gm.history){ac(gd).on("popstate",gh)}ac(gd).on("hashchange",gh);f9=true}f8.push(gr);return gr};gg.$$applicationDestroyed=function(){ac(gd).off("hashchange popstate",gh)};gg.$$checkUrlChange=f3;gg.baseHref=function(){var gr=f0.attr("href");return gr?gr.replace(/^(https?\:)?\/\/[^\/]*/,""):""};gg.defer=function(gs,gr){var gt;gq++;gt=f5(function(){delete gc[gt];ga(gs)},gr||0);gc[gt]=true;return gt};gg.defer.cancel=function(gr){if(gc[gr]){delete gc[gr];f6(gr);ga(eD);return true}return false}}function ec(){this.$get=["$window","$log","$sniffer","$document",function(f3,f0,f2,f1){return new cs(f3,f1,f0,f2)}]}function c(){this.$get=function(){var f0={};function f1(ga,gc){if(ga in f0){throw eT("$cacheFactory")("iid","CacheId '{0}' is already taken!",ga)}var gb=0,f5=fU({},gc,{id:ga}),f4={},f2=(gc&&gc.capacity)||Number.MAX_VALUE,f3={},f9=null,f7=null;return f0[ga]={put:function(ge,gf){if(x(gf)){return}if(f2<Number.MAX_VALUE){var gd=f3[ge]||(f3[ge]={key:ge});f6(gd)}if(!(ge in f4)){gb++}f4[ge]=gf;if(gb>f2){this.remove(f7.key)}return gf},get:function(ge){if(f2<Number.MAX_VALUE){var gd=f3[ge];if(!gd){return}f6(gd)}return f4[ge]},remove:function(ge){if(f2<Number.MAX_VALUE){var gd=f3[ge];if(!gd){return}if(gd==f9){f9=gd.p}if(gd==f7){f7=gd.n}f8(gd.n,gd.p);delete f3[ge]}delete f4[ge];gb--},removeAll:function(){f4={};gb=0;f3={};f9=f7=null},destroy:function(){f4=null;f5=null;f3=null;delete f0[ga]},info:function(){return fU({},f5,{size:gb})}};function f6(gd){if(gd!=f9){if(!f7){f7=gd}else{if(f7==gd){f7=gd.n}}f8(gd.n,gd.p);f8(gd,f9);f9=gd;f9.n=null}}function f8(gd,ge){if(gd!=ge){if(gd){gd.p=ge}if(ge){ge.n=gd}}}}f1.info=function(){var f2={};bj(f0,function(f3,f4){f2[f4]=f3.info()});return f2};f1.get=function(f2){return f0[f2]};return f1}}function bO(){this.$get=["$cacheFactory",function(f0){return f0("templates")}]}var C=eT("$compile");ea.$inject=["$provide","$$sanitizeUriProvider"];function ea(f8,f9){var gd={},f5="Directive",f1=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,gc=/(([\w\-]+)(?:\:([^;]+))?;?)/,f6=t("ngSrc,ngSrcset,src,srcset"),f2=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/;var f7=/^(on[a-z]+|formaction)$/;function gb(ge,gh,gg){var gf=/^\s*([@&]|=(\*?))(\??)\s*(\w*)\s*$/;var gi={};bj(ge,function(gl,gj){var gk=gl.match(gf);if(!gk){throw C("iscp","Invalid {3} for directive '{0}'. Definition: {... {1}: '{2}' ...}",gh,gj,gl,(gg?"controller bindings definition":"isolate scope definition"))}gi[gj]={mode:gk[1][0],collection:gk[2]==="*",optional:gk[3]==="?",attrName:gk[4]||gj}});return gi}function ga(gh,gg){var gi={isolateScope:null,bindToController:null};if(s(gh.scope)){if(gh.bindToController===true){gi.bindToController=gb(gh.scope,gg,true);gi.isolateScope={}}else{gi.isolateScope=gb(gh.scope,gg,false)}}if(s(gh.bindToController)){gi.bindToController=gb(gh.bindToController,gg,true)}if(s(gi.bindToController)){var ge=gh.controller;var gf=gh.controllerAs;if(!ge){throw C("noctrl","Cannot bind to controller without directive '{0}'s controller.",gg)}else{if(!d2(ge,gf)){throw C("noident","Cannot bind to controller without identifier for directive '{0}'.",gg)}}}return gi}function f4(ge){var gf=ge.charAt(0);if(!gf||gf!==db(gf)){throw C("baddir","Directive name '{0}' is invalid. The first character must be a lowercase letter",ge)}if(ge!==ge.trim()){throw C("baddir","Directive name '{0}' is invalid. The name should not contain leading or trailing whitespaces",ge)}}this.directive=function f3(gf,ge){fa(gf,"directive");if(w(gf)){f4(gf);dF(ge,"directiveFactory");if(!gd.hasOwnProperty(gf)){gd[gf]=[];f8.factory(gf+f5,["$injector","$exceptionHandler",function(gh,gg){var gi=[];bj(gd[gf],function(gk,gj){try{var gm=gh.invoke(gk);if(bn(gm)){gm={compile:V(gm)}}else{if(!gm.compile&&gm.link){gm.compile=V(gm.link)}}gm.priority=gm.priority||0;gm.index=gj;gm.name=gm.name||gf;gm.require=gm.require||(gm.controller&&gm.name);gm.restrict=gm.restrict||"EA";var gn=gm.$$bindings=ga(gm,gm.name);if(s(gn.isolateScope)){gm.$$isolateBindings=gn.isolateScope}gm.$$moduleName=gk.$$moduleName;gi.push(gm)}catch(gl){gg(gl)}});return gi}])}gd[gf].push(ge)}else{bj(gf,dP(f3))}return this};this.aHrefSanitizationWhitelist=function(ge){if(eX(ge)){f9.aHrefSanitizationWhitelist(ge);return this}else{return f9.aHrefSanitizationWhitelist()}};this.imgSrcSanitizationWhitelist=function(ge){if(eX(ge)){f9.imgSrcSanitizationWhitelist(ge);return this}else{return f9.imgSrcSanitizationWhitelist()}};var f0=true;this.debugInfoEnabled=function(ge){if(eX(ge)){f0=ge;return this}return f0};this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$document","$sce","$animate","$$sanitizeUri",function(gO,gs,gf,gJ,gU,gK,gu,gz,gj,gP,gF){var gi=function(g0,gX){if(gX){var g1=Object.keys(gX);var gZ,gW,gY;for(gZ=0,gW=g1.length;gZ<gW;gZ++){gY=g1[gZ];this[gY]=gX[gY]}}else{this.$attr={}}this.$$element=g0};gi.prototype={$normalize:bl,$addClass:function(gW){if(gW&&gW.length>0){gP.addClass(this.$$element,gW)}},$removeClass:function(gW){if(gW&&gW.length>0){gP.removeClass(this.$$element,gW)}},$updateClass:function(gZ,gW){var gX=L(gZ,gW);if(gX&&gX.length){gP.addClass(this.$$element,gX)}var gY=L(gW,gZ);if(gY&&gY.length){gP.removeClass(this.$$element,gY)}},$set:function(he,g4,g1,g8){var g5=this.$$element[0],hb=da(g5,he),hc=a3(g5,he),g7=he,gX;if(hb){this.$$element.prop(he,g4);g8=hb}else{if(hc){this[hc]=g4;g7=hc}}this[he]=g4;if(g8){this.$attr[he]=g8}else{g8=this.$attr[he];if(!g8){this.$attr[he]=g8=Q(he,"-")}}gX=d4(this.$$element);if((gX==="a"&&he==="href")||(gX==="img"&&he==="src")){this[he]=g4=gF(g4,he==="src")}else{if(gX==="img"&&he==="srcset"){var g3="";var gW=aL(g4);var gZ=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/;var ha=/\s/.test(gW)?gZ:/(,)/;var g2=gW.split(ha);var g6=Math.floor(g2.length/2);for(var g9=0;g9<g6;g9++){var hd=g9*2;g3+=gF(aL(g2[hd]),true);g3+=(" "+aL(g2[hd+1]))}var gY=aL(g2[g9*2]).split(/\s/);g3+=gF(aL(gY[0]),true);if(gY.length===2){g3+=(" "+aL(gY[1]))}this[he]=g4=g3}}if(g1!==false){if(g4===null||g4===fE){this.$$element.removeAttr(g8)}else{this.$$element.attr(g8,g4)}}var g0=this.$$observers;g0&&bj(g0[g7],function(hf){try{hf(g4)}catch(hg){gf(hg)}})},$observe:function(gY,g0){var gX=this,gW=(gX.$$observers||(gX.$$observers=fM())),gZ=(gW[gY]||(gW[gY]=[]));gZ.push(g0);gu.$evalAsync(function(){if(!gZ.$$inter&&gX.hasOwnProperty(gY)){g0(gX[gY])}});return function(){eI(gZ,g0)}}};function gE(gW,gX){try{gW.addClass(gX)}catch(gY){}}var gL=gs.startSymbol(),gN=gs.endSymbol(),gI=(gL=="{{"||gN=="}}")?aU:function gI(gW){return gW.replace(/\{\{/g,gL).replace(/}}/g,gN)},gv=/^ngAttr[A-Z]/;gm.$$addBindingInfo=f0?function gp(gW,gX){var gY=gW.data("$binding")||[];if(U(gX)){gY=gY.concat(gX)}else{gY.push(gX)}gW.data("$binding",gY)}:eD;gm.$$addBindingClass=f0?function gT(gW){gE(gW,"ng-binding")}:eD;gm.$$addScopeInfo=f0?function gG(gX,gY,gZ,g0){var gW=gZ?(g0?"$isolateScopeNoTemplate":"$isolateScope"):"$scope";gX.data(gW,gY)}:eD;gm.$$addScopeClass=f0?function gt(gW,gX){gE(gW,gX?"ng-isolate-scope":"ng-scope")}:eD;return gm;function gm(g2,g1,gY,g3,gX){if(!(g2 instanceof ac)){g2=ac(g2)}bj(g2,function(g5,g4){if(g5.nodeType==bz&&g5.nodeValue.match(/\S+/)){g2[g4]=ac(g5).wrap("<span></span>").parent()[0]}});var gZ=go(g2,g1,g2,gY,g3,gX);gm.$$addScopeClass(g2);var g0=null;return function gW(g8,g4,g6){dF(g8,"scope");g6=g6||{};var ha=g6.parentBoundTranscludeFn,g7=g6.transcludeControllers,g5=g6.futureParentElement;if(ha&&ha.$$boundTransclude){ha=ha.$$boundTransclude}if(!g0){g0=gC(g5)}var hb;if(g0!=="html"){hb=ac(gw(g0,ac("<div>").append(g2).html()))}else{if(g4){hb=dQ.clone.call(g2)}else{hb=g2}}if(g7){for(var g9 in g7){hb.data("$"+g9+"Controller",g7[g9].instance)}}gm.$$addScopeInfo(hb,g8);if(g4){g4(hb,g8)}if(gZ){gZ(g8,hb,hb,ha)}return hb}}function gC(gW){var gX=gW&&gW[0];if(!gX){return"html"}else{return d4(gX)!=="foreignobject"&&gX.toString().match(/SVG/)?"svg":"html"}}function go(gX,g9,g5,g4,gW,g8){var gZ=[],g6,gY,g1,g7,g3,g2,hb;for(var g0=0;g0<gX.length;g0++){g6=new gi();gY=gV(gX[g0],[],g6,g0===0?g4:fE,gW);g1=(gY.length)?gA(gY,gX[g0],g6,g9,g5,null,[],[],g8):null;if(g1&&g1.scope){gm.$$addScopeClass(g6.$$element)}g3=(g1&&g1.terminal||!(g7=gX[g0].childNodes)||!g7.length)?null:go(g7,g1?((g1.transcludeOnThisElement||!g1.templateOnThisElement)&&g1.transclude):g9);if(g1||g3){gZ.push(g0,g1,g3);g2=true;hb=hb||g1}g8=null}return g2?ha:null;function ha(hq,he,ho,hn){var hh,hj,hd,hk,hf,hp,hm,hi;var hg;if(hb){var hl=he.length;hg=new Array(hl);for(hf=0;hf<gZ.length;hf+=3){hm=gZ[hf];hg[hm]=he[hm]}}else{hg=he}for(hf=0,hp=gZ.length;hf<hp;){hd=hg[gZ[hf++]];hh=gZ[hf++];hj=gZ[hf++];if(hh){if(hh.scope){hk=hq.$new();gm.$$addScopeInfo(ac(hd),hk);var hc=hh.$$destroyBindings;if(hc){hh.$$destroyBindings=null;hk.$on("$destroyed",hc)}}else{hk=hq}if(hh.transcludeOnThisElement){hi=gg(hq,hh.transclude,hn)}else{if(!hh.templateOnThisElement&&hn){hi=hn}else{if(!hn&&g9){hi=gg(hq,g9)}else{hi=null}}}hh(hj,hk,hd,ho,hi,hh)}else{if(hj){hj(hq,hd.childNodes,fE,hn)}}}}}function gg(gY,gZ,gX){var gW=function(g3,g1,g4,g0,g2){if(!g3){g3=gY.$new(false,g2);g3.$$transcluded=true}return gZ(g3,g1,{parentBoundTranscludeFn:gX,transcludeControllers:g4,futureParentElement:g0})};return gW}function gV(hb,g2,g8,g0,gZ){var g1=hb.nodeType,hg=g8.$attr,g5,gY;switch(g1){case bB:gk(g2,bl(d4(hb)),"E",g0,gZ);for(var ha,hh,gW,g3,g9,g7,g6=hb.attributes,hc=0,he=g6&&g6.length;hc<he;hc++){var hd=false;var g4=false;ha=g6[hc];hh=ha.name;g9=aL(ha.value);g3=bl(hh);if(g7=gv.test(g3)){hh=hh.replace(bc,"").substr(8).replace(/_(.)/g,function(hi,hj){return hj.toUpperCase()})}var gX=g3.replace(/(Start|End)$/,"");if(gQ(gX)){if(g3===gX+"Start"){hd=hh;g4=hh.substr(0,hh.length-5)+"end";hh=hh.substr(0,hh.length-6)}}gW=bl(hh.toLowerCase());hg[gW]=hh;if(g7||!g8.hasOwnProperty(gW)){g8[gW]=g9;if(da(hb,gW)){g8[gW]=true}}gy(hb,g2,g9,gW,g7);gk(g2,gW,"A",g0,gZ,hd,g4)}gY=hb.className;if(s(gY)){gY=gY.animVal}if(w(gY)&&gY!==""){while(g5=gc.exec(gY)){gW=bl(g5[2]);if(gk(g2,gW,"C",g0,gZ)){g8[gW]=aL(g5[3])}gY=gY.substr(g5.index+g5[0].length)}}break;case bz:if(e8===11){while(hb.parentNode&&hb.nextSibling&&hb.nextSibling.nodeType===bz){hb.nodeValue=hb.nodeValue+hb.nextSibling.nodeValue;hb.parentNode.removeChild(hb.nextSibling)}}gr(g2,hb.nodeValue);break;case e5:try{g5=f1.exec(hb.nodeValue);if(g5){gW=bl(g5[1]);if(gk(g2,gW,"M",g0,gZ)){g8[gW]=aL(g5[2])}}}catch(hf){}break}g2.sort(gR);return g2}function gM(gZ,gW,gY){var gX=[];var g0=0;if(gW&&gZ.hasAttribute&&gZ.hasAttribute(gW)){do{if(!gZ){throw C("uterdir","Unterminated attribute, found '{0}' but no matching '{1}' found.",gW,gY)}if(gZ.nodeType==bB){if(gZ.hasAttribute(gW)){g0++}if(gZ.hasAttribute(gY)){g0--}}gX.push(gZ);gZ=gZ.nextSibling}while(g0>0)}else{gX.push(gZ)}return ac(gX)}function gS(gX,gW,gY){return function(g1,g0,gZ,g3,g2){g0=gM(g0[0],gW,gY);return gX(g1,g0,gZ,g3,g2)}}function gA(g3,g4,hj,hk,he,g7,ho,gW,gY){gY=gY||{};var g9=-Number.MAX_VALUE,hh=gY.newScopeDirective,g8=gY.controllerDirectives,hf=gY.newIsolateScopeDirective,hu=gY.templateDirective,hr=gY.nonTlbTranscludeDirective,g2=false,gZ=false,hn=gY.hasElementTranscludeDirective,hq=hj.$$element=ac(g4),gX,g5,hd,hi=g7,hb=hk,ht,g1;for(var hv=0,hl=g3.length;hv<hl;hv++){gX=g3[hv];var hs=gX.$$start;var g0=gX.$$end;if(hs){hq=gM(g4,hs,g0)}hd=fE;if(g9>gX.priority){break}if(g1=gX.scope){if(!gX.templateUrl){if(s(g1)){gx("new/isolated scope",hf||hh,gX,hq);hf=gX}else{gx("new/isolated scope",hf,gX,hq)}}hh=hh||gX}g5=gX.name;if(!gX.templateUrl&&gX.controller){g1=gX.controller;g8=g8||fM();gx("'"+g5+"' controller",g8[g5],gX,hq);g8[g5]=gX}if(g1=gX.transclude){g2=true;if(!gX.$$tlb){gx("transclusion",hr,gX,hq);hr=gX}if(g1=="element"){hn=true;g9=gX.priority;hd=hq;hq=hj.$$element=ac(el.createComment(" "+g5+": "+hj[g5]+" "));g4=hq[0];gn(he,eV(hd),g4);hb=gm(hd,hk,g9,hi&&hi.name,{nonTlbTranscludeDirective:hr})}else{hd=ac(dz(g4)).contents();hq.empty();hb=gm(hd,hk)}}if(gX.template){gZ=true;gx("template",hu,gX,hq);hu=gX;g1=(bn(gX.template))?gX.template(hq,hj):gX.template;g1=gI(g1);if(gX.replace){hi=gX;if(g(g1)){hd=[]}else{hd=by(gw(gX.templateNamespace,aL(g1)))}g4=hd[0];if(hd.length!=1||g4.nodeType!==bB){throw C("tplrt","Template for directive '{0}' must have exactly one root element. {1}",g5,"")}gn(he,hq,g4);var ha={$attr:{}};var hm=gV(g4,[],ha);var g6=g3.splice(hv+1,g3.length-(hv+1));if(hf){gD(hm)}g3=g3.concat(hm).concat(g6);gh(hj,ha);hl=g3.length}else{hq.html(g1)}}if(gX.templateUrl){gZ=true;gx("template",hu,gX,hq);hu=gX;if(gX.replace){hi=gX}hc=gH(g3.splice(hv,g3.length-hv),hq,hj,he,g2&&hb,ho,gW,{controllerDirectives:g8,newScopeDirective:(hh!==gX)&&hh,newIsolateScopeDirective:hf,templateDirective:hu,nonTlbTranscludeDirective:hr});hl=g3.length}else{if(gX.compile){try{ht=gX.compile(hq,hj,hb);if(bn(ht)){hg(null,ht,hs,g0)}else{if(ht){hg(ht.pre,ht.post,hs,g0)}}}catch(hx){gf(hx,ce(hq))}}}if(gX.terminal){hc.terminal=true;g9=Math.max(g9,gX.priority)}}hc.scope=hh&&hh.scope===true;hc.transcludeOnThisElement=g2;hc.templateOnThisElement=gZ;hc.transclude=hb;gY.hasElementTranscludeDirective=hn;return hc;function hg(hB,hz,hy,hA){if(hB){if(hy){hB=gS(hB,hy,hA)}hB.require=gX.require;hB.directiveName=g5;if(hf===gX||gX.$$isolateScope){hB=gl(hB,{isolateScope:true})}ho.push(hB)}if(hz){if(hy){hz=gS(hz,hy,hA)}hz.require=gX.require;hz.directiveName=g5;if(hf===gX||gX.$$isolateScope){hz=gl(hz,{isolateScope:true})}gW.push(hz)}}function hw(hE,hB,hJ,hy){var hH;if(w(hB)){var hD=hB.match(f2);var hz=hB.substring(hD[0].length);var hG=hD[1]||hD[3];var hF=hD[2]==="?";if(hG==="^^"){hJ=hJ.parent()}else{hH=hy&&hy[hz];hH=hH&&hH.instance}if(!hH){var hA="$"+hz+"Controller";hH=hG?hJ.inheritedData(hA):hJ.data(hA)}if(!hH&&!hF){throw C("ctreq","Controller '{0}', required by directive '{1}', can't be found!",hz,hE)}}else{if(U(hB)){hH=[];for(var hC=0,hI=hB.length;hC<hI;hC++){hH[hC]=hw(hE,hB[hC],hJ,hy)}}}return hH||null}function hp(hH,hG,hI,hE,hD,hJ){var hy=fM();for(var hA in hE){var hF=hE[hA];var hz={$scope:hF===hf||hF.$$isolateScope?hD:hJ,$element:hH,$attrs:hG,$transclude:hI};var hB=hF.controller;if(hB=="@"){hB=hG[hF.name]}var hC=gK(hB,hz,true,hF.controllerAs);hy[hF.name]=hC;if(!hn){hH.data("$"+hF.name+"Controller",hC.instance)}}return hy}function hc(hI,hA,hB,hD,hP,hy){var hN,hE,hC,hH,hF,hQ,hz,hG,hJ;if(g4===hB){hJ=hj;hG=hj.$$element}else{hG=ac(hB);hJ=new gi(hG,hj)}if(hf){hF=hA.$new(true)}if(hP){hz=hK;hz.$$boundTransclude=hP}if(g8){hQ=hp(hG,hJ,hz,g8,hF,hA)}if(hf){gm.$$addScopeInfo(hG,hF,true,!(hu&&(hu===hf||hu===hf.$$originalDirective)));gm.$$addScopeClass(hG,true);hF.$$isolateBindings=hf.$$isolateBindings;ge(hA,hJ,hF,hF.$$isolateBindings,hf,hF)}if(hQ){var hM=hf||hh;var hS;var hL;if(hM&&hQ[hM.name]){hS=hM.$$bindings.bindToController;hH=hQ[hM.name];if(hH&&hH.identifier&&hS){hL=hH;hy.$$destroyBindings=ge(hA,hJ,hH.instance,hS,hM)}}for(hN in hQ){hH=hQ[hN];var hR=hH();if(hR!==hH.instance){hH.instance=hR;hG.data("$"+hN+"Controller",hR);if(hH===hL){hy.$$destroyBindings();hy.$$destroyBindings=ge(hA,hJ,hR,hS,hM)}}}}for(hN=0,hE=ho.length;hN<hE;hN++){hC=ho[hN];gq(hC,hC.isolateScope?hF:hA,hG,hJ,hC.require&&hw(hC.directiveName,hC.require,hG,hQ),hz)}var hO=hA;if(hf&&(hf.template||hf.templateUrl===null)){hO=hF}hI&&hI(hO,hB.childNodes,fE,hP);for(hN=gW.length-1;hN>=0;hN--){hC=gW[hN];gq(hC,hC.isolateScope?hF:hA,hG,hJ,hC.require&&hw(hC.directiveName,hC.require,hG,hQ),hz)}function hK(hW,hV,hT){var hU;if(!dO(hW)){hT=hV;hV=hW;hW=fE}if(hn){hU=hQ}if(!hT){hT=hn?hG.parent():hG}return hP(hW,hV,hU,hT,hO)}}}function gD(gY){for(var gW=0,gX=gY.length;gW<gX;gW++){gY[gW]=eo(gY[gW],{$$isolateScope:true})}}function gk(g3,gW,g7,g6,gX,g4,gZ){if(gW===gX){return null}var g1=null;if(gd.hasOwnProperty(gW)){for(var g5,gY=gO.get(gW+f5),g0=0,g8=gY.length;g0<g8;g0++){try{g5=gY[g0];if((g6===fE||g6>g5.priority)&&g5.restrict.indexOf(g7)!=-1){if(g4){g5=eo(g5,{$$start:g4,$$end:gZ})}g3.push(g5);g1=g5}}catch(g2){gf(g2)}}}return g1}function gQ(gW){if(gd.hasOwnProperty(gW)){for(var g0,gZ=gO.get(gW+f5),gX=0,gY=gZ.length;gX<gY;gX++){g0=gZ[gX];if(g0.multiElement){return true}}}return false}function gh(g0,gZ){var gX=gZ.$attr,gY=g0.$attr,gW=g0.$$element;bj(g0,function(g2,g1){if(g1.charAt(0)!="$"){if(gZ[g1]&&gZ[g1]!==g2){g2+=(g1==="style"?";":" ")+gZ[g1]}g0.$set(g1,g2,true,gX[g1])}});bj(gZ,function(g2,g1){if(g1=="class"){gE(gW,g2);g0["class"]=(g0["class"]?g0["class"]+" ":"")+g2}else{if(g1=="style"){gW.attr("style",gW.attr("style")+";"+g2);g0.style=(g0.style?g0.style+";":"")+g2}else{if(g1.charAt(0)!="$"&&!g0.hasOwnProperty(g1)){g0[g1]=g2;gY[g1]=gX[g1]}}}})}function gH(g1,g5,g0,g9,g3,gW,gY,hb){var g6=[],hc,gZ,g2=g5[0],g4=g1.shift(),g8=eo(g4,{templateUrl:null,transclude:null,replace:null,$$originalDirective:g4}),gX=(bn(g4.templateUrl))?g4.templateUrl(g5,g0):g4.templateUrl,ha=g4.templateNamespace;g5.empty();gJ(gX).then(function(hj){var hm,hh,hg,hl;hj=gI(hj);if(g4.replace){if(g(hj)){hg=[]}else{hg=by(gw(ha,aL(hj)))}hm=hg[0];if(hg.length!=1||hm.nodeType!==bB){throw C("tplrt","Template for directive '{0}' must have exactly one root element. {1}",g4.name,gX)}hh={$attr:{}};gn(g9,g5,hm);var hk=gV(hm,[],hh);if(s(g4.scope)){gD(hk)}g1=hk.concat(g1);gh(g0,hh)}else{hm=g2;g5.html(hj)}g1.unshift(g8);hc=gA(g1,hm,g0,g3,g5,g4,gW,gY,hb);bj(g9,function(hq,hp){if(hq==hm){g9[hp]=g5[0]}});gZ=go(g5[0].childNodes,g3);while(g6.length){var ho=g6.shift(),hn=g6.shift(),hd=g6.shift(),hf=g6.shift(),hi=g5[0];if(ho.$$destroyed){continue}if(hn!==g2){var he=hn.className;if(!(hb.hasElementTranscludeDirective&&g4.replace)){hi=dz(hm)}gn(hd,ac(hn),hi);gE(ac(hi),he)}if(hc.transcludeOnThisElement){hl=gg(ho,hc.transclude,hf)}else{hl=hf}hc(gZ,ho,hi,g9,hl,hc)}g6=null});return function g7(he,hg,hi,hd,hf){var hh=hf;if(hg.$$destroyed){return}if(g6){g6.push(hg,hi,hd,hh)}else{if(hc.transcludeOnThisElement){hh=gg(hg,hc.transclude,hf)}hc(gZ,hg,hi,hd,hh,hc)}}}function gR(gX,gW){var gY=gW.priority-gX.priority;if(gY!==0){return gY}if(gX.name!==gW.name){return(gX.name<gW.name)?-1:1}return gX.index-gW.index}function gx(gZ,gX,g0,gW){function gY(g1){return g1?(" (module: "+g1+")"):""}if(gX){throw C("multidir","Multiple directives [{0}{1}, {2}{3}] asking for {4} on: {5}",gX.name,gY(gX.$$moduleName),g0.name,gY(g0.$$moduleName),gZ,ce(gW))}}function gr(gY,gZ){var gW=gs(gZ,true);if(gW){gY.push({priority:0,compile:function gX(g2){var g3=g2.parent(),g1=!!g3.length;if(g1){gm.$$addBindingClass(g3)}return function g0(g6,g7){var g5=g7.parent();if(!g1){gm.$$addBindingClass(g5)}gm.$$addBindingInfo(g5,gW.expressions);g6.$watch(gW,function g4(g8){g7[0].nodeValue=g8})}}})}}function gw(gX,gW){gX=db(gX||"html");switch(gX){case"svg":case"math":var gY=el.createElement("div");gY.innerHTML="<"+gX+">"+gW+"</"+gX+">";return gY.childNodes[0].childNodes;default:return gW}}function gB(gY,gX){if(gX=="srcdoc"){return gj.HTML}var gW=d4(gY);if(gX=="xlinkHref"||(gW=="form"&&gX=="action")||(gW!="img"&&(gX=="src"||gX=="ngSrc"))){return gj.RESOURCE_URL}}function gy(gZ,g2,g1,gX,g0){var gY=gB(gZ,gX);g0=f6[gX]||g0;var gW=gs(g1,true,gY,g0);if(!gW){return}if(gX==="multiple"&&d4(gZ)==="select"){throw C("selmulti","Binding to the 'multiple' attribute is not supported. Element: {0}",ce(gZ))}g2.push({priority:100,compile:function(){return{pre:function g3(g8,g7,g4){var g6=(g4.$$observers||(g4.$$observers={}));if(f7.test(gX)){throw C("nodomevents","Interpolations for HTML DOM event attributes are disallowed.  Please use the ng- versions (such as ng-click instead of onclick) instead.")}var g9=g4[gX];if(g9!==g1){gW=g9&&gs(g9,true,gY,g0);g1=g9}if(!gW){return}g4[gX]=gW(g8);(g6[gX]||(g6[gX]=[])).$$inter=true;(g4.$$observers&&g4.$$observers[gX].$$scope||g8).$watch(gW,function g5(hb,ha){if(gX==="class"&&hb!=ha){g4.$updateClass(hb,ha)}else{g4.$set(gX,hb)}})}}}})}function gn(g8,gY,g7){var g5=gY[0],gX=gY.length,g6=g5.parentNode,g2,g9;if(g8){for(g2=0,g9=g8.length;g2<g9;g2++){if(g8[g2]==g5){g8[g2++]=g7;for(var g0=g2,ha=g0+gX-1,g3=g8.length;g0<g3;g0++,ha++){if(ha<g3){g8[g0]=g8[ha]}else{delete g8[g0]}}g8.length-=gX-1;if(g8.context===g5){g8.context=g7}break}}}if(g6){g6.replaceChild(g7,g5)}var g4=el.createDocumentFragment();g4.appendChild(g5);if(ac.hasData(g5)){ac(g7).data(ac(g5).data());if(!fz){delete ac.cache[g5[ac.expando]]}else{b1=true;fz.cleanData([g5])}}for(var gZ=1,gW=gY.length;gZ<gW;gZ++){var g1=gY[gZ];ac(g1).remove();g4.appendChild(g1);delete gY[gZ]}gY[0]=g7;gY.length=1}function gl(gX,gW){return fU(function(){return gX.apply(null,arguments)},gX,gW)}function gq(gY,gZ,gW,gX,g2,g0){try{gY(gZ,gW,gX,g2,g0)}catch(g1){gf(g1,ce(gW))}}function ge(gY,gX,gW,g3,g1,gZ){var g0;bj(g3,function(g8,g5){var ha=g8.attrName,hb=g8.optional,g9=g8.mode,he,g7,hd,g6;if(!O.call(gX,ha)){gX[ha]=fE}switch(g9){case"@":if(!gX[ha]&&!hb){gW[g5]=fE}gX.$observe(ha,function(hf){gW[g5]=hf});gX.$$observers[ha].$$scope=gY;if(gX[ha]){gW[g5]=gs(gX[ha])(gY)}break;case"=":if(hb&&!gX[ha]){return}g7=gU(gX[ha]);if(g7.literal){g6=dY}else{g6=function(hg,hf){return hg===hf||(hg!==hg&&hf!==hf)}}hd=g7.assign||function(){he=gW[g5]=g7(gY);throw C("nonassign","Expression '{0}' used with directive '{1}' is non-assignable!",gX[ha],g1.name)};he=gW[g5]=g7(gY);var g4=function g4(hf){if(!g6(hf,gW[g5])){if(!g6(hf,he)){gW[g5]=hf}else{hd(gY,hf=gW[g5])}}return he=hf};g4.$stateful=true;var hc;if(g8.collection){hc=gY.$watchCollection(gX[ha],g4)}else{hc=gY.$watch(gU(gX[ha],g4),null,g7.literal)}g0=(g0||[]);g0.push(hc);break;case"&":g7=gU(gX[ha]);if(g7===eD&&hb){break}gW[g5]=function(hf){return g7(gY,hf)};break}});var g2=g0?function g2(){for(var g4=0,g5=g0.length;g4<g5;++g4){g0[g4]()}}:eD;if(gZ&&g2!==eD){gZ.$on("$destroy",g2);return eD}return g2}}]}var bc=/^((?:x|data)[\:\-_])/i;function bl(f0){return ar(f0.replace(bc,""))}function es(f3,f1,f0,f2){}function aS(f4,f2,f3,f0,f1){}function L(f7,f6){var f2="",f1=f7.split(/\s+/),f0=f6.split(/\s+/);outer:for(var f5=0;f5<f1.length;f5++){var f4=f1[f5];for(var f3=0;f3<f0.length;f3++){if(f4==f0[f3]){continue outer}}f2+=(f2.length>0?" ":"")+f4}return f2}function by(f2){f2=ac(f2);var f0=f2.length;if(f0<=1){return f2}while(f0--){var f1=f2[f0];if(f1.nodeType===e5){dZ.call(f2,f0,1)}}return f2}var dS=eT("$controller");var bU=/^(\S+)(\s+as\s+(\w+))?$/;function d2(f0,f2){if(f2&&w(f2)){return f2}if(w(f0)){var f1=bU.exec(f0);if(f1){return f1[3]}}}function dt(){var f1={},f0=false;this.register=function(f2,f3){fa(f2,"controller");if(s(f2)){fU(f1,f2)}else{f1[f2]=f3}};this.allowGlobals=function(){f0=true};this.$get=["$injector","$window",function(f2,f3){return function(gb,f5,f8,f7){var gd,f9,f6,ga;f8=f8===true;if(f7&&w(f7)){ga=f7}if(w(gb)){f9=gb.match(bU);if(!f9){throw dS("ctrlfmt","Badly formed controller string '{0}'. Must match `__name__ as __id__` or `__name__`.",gb)}f6=f9[1],ga=ga||f9[3];gb=f1.hasOwnProperty(f6)?f1[f6]:c6(f5.$scope,f6,true)||(f0?c6(f3,f6,true):fE);dg(gb,f6,true)}if(f8){var gc=(U(gb)?gb[gb.length-1]:gb).prototype;gd=Object.create(gc||null);if(ga){f4(f5,ga,gd,f6||gb.name)}var ge;return ge=fU(function(){var gf=f2.invoke(gb,gd,f5,f6);if(gf!==gd&&(s(gf)||bn(gf))){gd=gf;if(ga){f4(f5,ga,gd,f6||gb.name)}}return gd},{instance:gd,identifier:ga})}gd=f2.instantiate(gb,f5,f6);if(ga){f4(f5,ga,gd,f6||gb.name)}return gd};function f4(f8,f7,f5,f6){if(!(f8&&s(f8.$scope))){throw eT("$controller")("noscp","Cannot export controller '{0}' as '{1}'! No $scope object provided via `locals`.",f6,f7)}f8.$scope[f7]=f5}}]}function dA(){this.$get=["$window",function(f0){return ac(f0.document)}]}function fS(){this.$get=["$log",function(f0){return function(f1,f2){f0.error.apply(f0,arguments)}}]}var aE="application/json";var b9={"Content-Type":aE+";charset=utf-8"};var ep=/^\[|^\{(?!\{)/;var d9={"[":/]$/,"{":/}$/};var cc=/^\)\]\}',?\n/;function fK(f0){if(s(f0)){return fe(f0)?f0.toISOString():aA(f0)}return f0}function av(){this.$get=function(){return function f0(f2){if(!f2){return""}var f1=[];dy(f2,function(f4,f3){if(f4===null||x(f4)){return}if(U(f4)){bj(f4,function(f6,f5){f1.push(I(f3)+"="+I(fK(f6)))})}else{f1.push(I(f3)+"="+I(fK(f4)))}});return f1.join("&")}}}function aR(){this.$get=function(){return function f0(f3){if(!f3){return""}var f2=[];f1(f3,"",true);return f2.join("&");function f1(f6,f5,f4){if(f6===null||x(f6)){return}if(U(f6)){bj(f6,function(f7){f1(f7,f5+"[]")})}else{if(s(f6)&&!fe(f6)){dy(f6,function(f8,f7){f1(f8,f5+(f4?"":"[")+f7+(f4?"":"]"))})}else{f2.push(I(f5)+"="+I(fK(f6)))}}}}}}function B(f0,f2){if(w(f0)){var f1=f0.replace(cc,"").trim();if(f1){var f3=f2("Content-Type");if((f3&&(f3.indexOf(aE)===0))||e9(f1)){f0=a2(f1)}}}return f0}function e9(f1){var f0=f1.match(ep);return f0&&d9[f0[0]].test(f1)}function eQ(f3){var f1=fM(),f2;function f0(f4,f5){if(f4){f1[f4]=f1[f4]?f1[f4]+", "+f5:f5}}if(w(f3)){bj(f3.split("\n"),function(f4){f2=f4.indexOf(":");f0(db(aL(f4.substr(0,f2))),aL(f4.substr(f2+1)))})}else{if(s(f3)){bj(f3,function(f5,f4){f0(db(f4),aL(f5))})}}return f1}function bs(f0){var f1;return function(f2){if(!f1){f1=eQ(f0)}if(f2){var f3=f1[db(f2)];if(f3===void 0){f3=null}return f3}return f1}}function u(f2,f3,f0,f1){if(bn(f1)){return f1(f2,f3,f0)}bj(f1,function(f4){f2=f4(f2,f3,f0)});return f2}function aT(f0){return 200<=f0&&f0<300}function dm(){var f2=this.defaults={transformResponse:[B],transformRequest:[function(f3){return s(f3)&&!cP(f3)&&!a(f3)&&!eB(f3)?aA(f3):f3}],headers:{common:{Accept:"application/json, text/plain, */*"},post:d8(b9),put:d8(b9),patch:d8(b9)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"};var f1=false;this.useApplyAsync=function(f3){if(eX(f3)){f1=!!f3;return this}return f1};var f0=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector",function(ga,gf,f9,gb,f6,gd){var ge=f9("$http");f2.paramSerializer=w(f2.paramSerializer)?gd.get(f2.paramSerializer):f2.paramSerializer;var gc=[];bj(f0,function(gg){gc.unshift(w(gg)?gd.get(gg):gd.invoke(gg))});function f7(gm){if(!cY.isObject(gm)){throw eT("$http")("badreq","Http request configuration must be an object.  Received: {0}",gm)}var gj=fU({method:"get",transformRequest:f2.transformRequest,transformResponse:f2.transformResponse,paramSerializer:f2.paramSerializer},gm);gj.headers=gk(gm);gj.method=a4(gj.method);gj.paramSerializer=w(gj.paramSerializer)?gd.get(gj.paramSerializer):gj.paramSerializer;var gh=function(gr){var gs=gr.headers;var gq=u(gr.data,bs(gs),fE,gr.transformRequest);if(x(gq)){bj(gs,function(gt,gu){if(db(gu)==="content-type"){delete gs[gu]}})}if(x(gr.withCredentials)&&!x(f2.withCredentials)){gr.withCredentials=f2.withCredentials}return f4(gr,gq).then(gi,gi)};var gg=[gh,fE];var gp=f6.when(gj);bj(gc,function(gq){if(gq.request||gq.requestError){gg.unshift(gq.request,gq.requestError)}if(gq.response||gq.responseError){gg.push(gq.response,gq.responseError)}});while(gg.length){var go=gg.shift();var gl=gg.shift();gp=gp.then(go,gl)}gp.success=function(gq){dg(gq,"fn");gp.then(function(gr){gq(gr.data,gr.status,gr.headers,gj)});return gp};gp.error=function(gq){dg(gq,"fn");gp.then(null,function(gr){gq(gr.data,gr.status,gr.headers,gj)});return gp};return gp;function gi(gq){var gr=fU({},gq);if(!gq.data){gr.data=gq.data}else{gr.data=u(gq.data,gq.headers,gq.status,gj.transformResponse)}return(aT(gq.status))?gr:f6.reject(gr)}function gn(gt,gq){var gr,gs={};bj(gt,function(gv,gu){if(bn(gv)){gr=gv(gq);if(gr!=null){gs[gu]=gr}}else{gs[gu]=gv}});return gs}function gk(gt){var gr=f2.headers,gv=fU({},gt.headers),gu,gq,gs;gr=fU({},gr.common,gr[db(gt.method)]);defaultHeadersIteration:for(gu in gr){gq=db(gu);for(gs in gv){if(db(gs)===gq){continue defaultHeadersIteration}}gv[gu]=gr[gu]}return gn(gv,d8(gt))}}f7.pendingRequests=[];f3("get","delete","head","jsonp");f5("post","put","patch");f7.defaults=f2;return f7;function f3(gg){bj(arguments,function(gh){f7[gh]=function(gj,gi){return f7(fU({},gi||{},{method:gh,url:gj}))}})}function f5(gg){bj(arguments,function(gh){f7[gh]=function(gj,gk,gi){return f7(fU({},gi||{},{method:gh,url:gj,data:gk}))}})}function f4(gk,gp){var gr=f6.defer(),gs=gr.promise,gg,gn,gh=gk.headers,gi=f8(gk.url,gk.paramSerializer(gk.params));f7.pendingRequests.push(gk);gs.then(gl,gl);if((gk.cache||f2.cache)&&gk.cache!==false&&(gk.method==="GET"||gk.method==="JSONP")){gg=s(gk.cache)?gk.cache:s(f2.cache)?f2.cache:ge}if(gg){gn=gg.get(gi);if(eX(gn)){if(fH(gn)){gn.then(gj,gj)}else{if(U(gn)){go(gn[1],gn[0],d8(gn[2]),gn[3])}else{go(gn,200,{},"OK")}}}else{gg.put(gi,gs)}}if(x(gn)){var gq=dD(gk.url)?gf()[gk.xsrfCookieName||f2.xsrfCookieName]:fE;if(gq){gh[(gk.xsrfHeaderName||f2.xsrfHeaderName)]=gq}ga(gk.method,gi,gp,gm,gh,gk.timeout,gk.withCredentials,gk.responseType)}return gs;function gm(gt,gu,gv,gx){if(gg){if(aT(gt)){gg.put(gi,[gt,gu,eQ(gv),gx])}else{gg.remove(gi)}}function gw(){go(gu,gt,gv,gx)}if(f1){gb.$applyAsync(gw)}else{gw();if(!gb.$$phase){gb.$apply()}}}function go(gu,gt,gw,gv){gt=Math.max(gt,0);(aT(gt)?gr.resolve:gr.reject)({data:gu,status:gt,headers:bs(gw),config:gk,statusText:gv})}function gj(gt){go(gt.data,gt.status,d8(gt.headers()),gt.statusText)}function gl(){var gt=f7.pendingRequests.indexOf(gk);if(gt!==-1){f7.pendingRequests.splice(gt,1)}}}function f8(gg,gh){if(gh.length>0){gg+=((gg.indexOf("?")==-1)?"?":"&")+gh}return gg}}]}function fi(){return new dV.XMLHttpRequest()}function fq(){this.$get=["$browser","$window","$document",function(f0,f2,f1){return dB(f0,fi,f0.defer,f2.angular.callbacks,f1[0])}]}function dB(f0,f3,f1,f4,f2){return function(f7,f8,gj,gl,gb,gg,gc,gd){f0.$$incOutstandingRequestCount();f8=f8||f0.url();if(db(f7)=="jsonp"){var f6="_"+(f4.counter++).toString(36);f4[f6]=function(gn){f4[f6].data=gn;f4[f6].called=true};var ga=f5(f8.replace("JSON_CALLBACK","angular.callbacks."+f6),f6,function(gn,go){f9(gl,gn,f4[f6].data,"",go);f4[f6]=eD})}else{var gm=f3();gm.open(f7,f8,true);bj(gb,function(go,gn){if(eX(go)){gm.setRequestHeader(gn,go)}});gm.onload=function gk(){var gp=gm.statusText||"";var go=("response" in gm)?gm.response:gm.responseText;var gn=gm.status===1223?204:gm.status;if(gn===0){gn=go?200:r(f8).protocol=="file"?404:0}f9(gl,gn,go,gm.getAllResponseHeaders(),gp)};var gh=function(){f9(gl,-1,null,null,"")};gm.onerror=gh;gm.onabort=gh;if(gc){gm.withCredentials=true}if(gd){try{gm.responseType=gd}catch(ge){if(gd!=="json"){throw ge}}}gm.send(gj)}if(gg>0){var gi=f1(gf,gg)}else{if(fH(gg)){gg.then(gf)}}function gf(){ga&&ga();gm&&gm.abort()}function f9(gr,gn,go,gp,gq){if(gi!==fE){f1.cancel(gi)}ga=gm=null;gr(gn,go,gp,gq);f0.$$completeOutstandingRequest(eD)}};function f5(f8,f9,f6){var f7=f2.createElement("script"),ga=null;f7.type="text/javascript";f7.src=f8;f7.async=true;ga=function(gc){e2(f7,"load",ga);e2(f7,"error",ga);f2.body.removeChild(f7);f7=null;var gb=-1;var gd="unknown";if(gc){if(gc.type==="load"&&!f4[f9].called){gc={type:"error"}}gd=gc.type;gb=gc.type==="error"?404:200}if(f6){f6(gb,gd)}};cp(f7,"load",ga);cp(f7,"error",ga);f2.body.appendChild(f7);return ga}}var dU=cY.$interpolateMinErr=eT("$interpolate");dU.throwNoconcat=function(f0){throw dU("noconcat","Error while interpolating: {0}\nStrict Contextual Escaping disallows interpolations that concatenate multiple expressions when a trusted value is required.  See http://docs.angularjs.org/api/ng.$sce",f0)};dU.interr=function(f1,f0){return dU("interr","Can't interpolate: {0}\n{1}",f1,f0.toString())};function eq(){var f1="{{";var f0="}}";this.startSymbol=function(f2){if(f2){f1=f2;return this}else{return f1}};this.endSymbol=function(f2){if(f2){f0=f2;return this}else{return f0}};this.$get=["$parse","$exceptionHandler","$sce",function(f4,ga,f9){var f2=f1.length,f8=f0.length,gc=new RegExp(f1.replace(/./g,gb),"g"),f3=new RegExp(f0.replace(/./g,gb),"g");function gb(gd){return"\\\\\\"+gd}function f7(gd){return gd.replace(gc,f1).replace(f3,f0)}function f6(gd){if(gd==null){return""}switch(typeof gd){case"string":break;case"number":gd=""+gd;break;default:gd=aA(gd)}return gd}function f5(gr,gg,gn,gs){gs=!!gs;var gq,gk,gm=0,gl=[],ge=[],gt=gr.length,gi,gp=[],gf=[];while(gm<gt){if(((gq=gr.indexOf(f1,gm))!=-1)&&((gk=gr.indexOf(f0,gq+f2))!=-1)){if(gm!==gq){gp.push(f7(gr.substring(gm,gq)))}gi=gr.substring(gq+f2,gk);gl.push(gi);ge.push(f4(gi,gd));gm=gk+f8;gf.push(gp.length);gp.push("")}else{if(gm!==gt){gp.push(f7(gr.substring(gm)))}break}}if(gn&&gp.length>1){dU.throwNoconcat(gr)}if(!gg||gl.length){var go=function(gu){for(var gv=0,gw=gl.length;gv<gw;gv++){if(gs&&x(gu[gv])){return}gp[gf[gv]]=gu[gv]}return gp.join("")};var gj=function(gu){return gn?f9.getTrusted(gn,gu):f9.valueOf(gu)};return fU(function gh(gw){var gv=0;var gx=gl.length;var gu=new Array(gx);try{for(;gv<gx;gv++){gu[gv]=ge[gv](gw)}return go(gu)}catch(gy){ga(dU.interr(gr,gy))}},{exp:gr,expressions:gl,$$watchDelegate:function(gv,gw){var gu;return gv.$watchGroup(ge,function gx(gA,gy){var gz=go(gA);if(bn(gw)){gw.call(this,gz,gA!==gy?gu:gz,gv)}gu=gz})}})}function gd(gv){try{gv=gj(gv);return gs&&!eX(gv)?gv:f6(gv)}catch(gu){ga(dU.interr(gr,gu))}}}f5.startSymbol=function(){return f1};f5.endSymbol=function(){return f0};return f5}]}function ai(){this.$get=["$rootScope","$window","$q","$$q",function(f0,f5,f3,f1){var f4={};function f2(gf,f9,gd,gc){var f8=arguments.length>4,ge=f8?eV(arguments,4):[],gb=f5.setInterval,gg=f5.clearInterval,f6=0,f7=(eX(gc)&&!gc),gh=(f7?f1:f3).defer(),gi=gh.promise;gd=eX(gd)?gd:0;gi.then(null,null,(!f8)?gf:function(){gf.apply(null,ge)});gi.$$intervalId=gb(function ga(){gh.notify(f6++);if(gd>0&&f6>=gd){gh.resolve(f6);gg(gi.$$intervalId);delete f4[gi.$$intervalId]}if(!f7){f0.$apply()}},f9);f4[gi.$$intervalId]=gh;return gi}f2.cancel=function(f6){if(f6&&f6.$$intervalId in f4){f4[f6.$$intervalId].reject("canceled");f5.clearInterval(f6.$$intervalId);delete f4[f6.$$intervalId];return true}return false};return f2}]}function cb(){this.$get=function(){return{id:"en-us",NUMBER_FORMATS:{DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{minInt:1,minFrac:0,maxFrac:3,posPre:"",posSuf:"",negPre:"-",negSuf:"",gSize:3,lgSize:3},{minInt:1,minFrac:2,maxFrac:2,posPre:"\u00A4",posSuf:"",negPre:"(\u00A4",negSuf:")",gSize:3,lgSize:3}],CURRENCY_SYM:"$"},DATETIME_FORMATS:{MONTH:"January,February,March,April,May,June,July,August,September,October,November,December".split(","),SHORTMONTH:"Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),DAY:"Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),SHORTDAY:"Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(","),AMPMS:["AM","PM"],medium:"MMM d, y h:mm:ss a","short":"M/d/yy h:mm a",fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",mediumDate:"MMM d, y",shortDate:"M/d/yy",mediumTime:"h:mm:ss a",shortTime:"h:mm a",ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"]},pluralCat:function(f0){if(f0===1){return"one"}return"other"}}}}var fk=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,ej={http:80,https:443,ftp:21};var dc=eT("$location");function cX(f2){var f0=f2.split("/"),f1=f0.length;while(f1--){f0[f1]=bv(f0[f1])}return f0.join("/")}function aY(f1,f2){var f0=r(f1);f2.$$protocol=f0.protocol;f2.$$host=f0.hostname;f2.$$port=de(f0.port)||ej[f0.protocol]||null}function bJ(f1,f3){var f0=(f1.charAt(0)!=="/");if(f0){f1="/"+f1}var f2=r(f1);f3.$$path=decodeURIComponent(f0&&f2.pathname.charAt(0)==="/"?f2.pathname.substring(1):f2.pathname);f3.$$search=ah(f2.search);f3.$$hash=decodeURIComponent(f2.hash);if(f3.$$path&&f3.$$path.charAt(0)!="/"){f3.$$path="/"+f3.$$path}}function cf(f0,f1){if(f1.indexOf(f0)===0){return f1.substr(f0.length)}}function i(f1){var f0=f1.indexOf("#");return f0==-1?f1:f1.substr(0,f0)}function z(f0){return f0.replace(/(#.+)|#$/,"$1")}function fN(f0){return f0.substr(0,i(f0).lastIndexOf("/")+1)}function cB(f0){return f0.substring(0,f0.indexOf("/",f0.indexOf("//")+2))}function cC(f0,f2){this.$$html5=true;f2=f2||"";var f1=fN(f0);aY(f0,this);this.$$parse=function(f3){var f4=cf(f1,f3);if(!w(f4)){throw dc("ipthprfx",'Invalid url "{0}", missing path prefix "{1}".',f3,f1)}bJ(f4,this);if(!this.$$path){this.$$path="/"}this.$$compose()};this.$$compose=function(){var f3=eu(this.$$search),f4=this.$$hash?"#"+bv(this.$$hash):"";this.$$url=cX(this.$$path)+(f3?"?"+f3:"")+f4;this.$$absUrl=f1+this.$$url.substr(1)};this.$$parseLinkUrl=function(f4,f3){if(f3&&f3[0]==="#"){this.hash(f3.slice(1));return true}var f6,f5;var f7;if((f6=cf(f0,f4))!==fE){f5=f6;if((f6=cf(f2,f6))!==fE){f7=f1+(cf("/",f6)||f6)}else{f7=f0+f5}}else{if((f6=cf(f1,f4))!==fE){f7=f1+f6}else{if(f1==f4+"/"){f7=f1}}}if(f7){this.$$parse(f7)}return !!f7}}function bZ(f1,f0){var f2=fN(f1);aY(f1,this);this.$$parse=function(f4){var f5=cf(f1,f4)||cf(f2,f4);var f3;if(!x(f5)&&f5.charAt(0)==="#"){f3=cf(f0,f5);if(x(f3)){f3=f5}}else{if(this.$$html5){f3=f5}else{f3="";if(x(f5)){f1=f4;this.replace()}}}bJ(f3,this);this.$$path=f6(this.$$path,f3,f1);this.$$compose();function f6(ga,f7,f9){var f8=/^\/[A-Z]:(\/.*)/;var gb;if(f7.indexOf(f9)===0){f7=f7.replace(f9,"")}if(f8.exec(f7)){return ga}gb=f8.exec(ga);return gb?gb[1]:ga}};this.$$compose=function(){var f3=eu(this.$$search),f4=this.$$hash?"#"+bv(this.$$hash):"";this.$$url=cX(this.$$path)+(f3?"?"+f3:"")+f4;this.$$absUrl=f1+(this.$$url?f0+this.$$url:"")};this.$$parseLinkUrl=function(f4,f3){if(i(f1)==i(f4)){this.$$parse(f4);return true}return false}}function fc(f1,f0){this.$$html5=true;bZ.apply(this,arguments);var f2=fN(f1);this.$$parseLinkUrl=function(f4,f3){if(f3&&f3[0]==="#"){this.hash(f3.slice(1));return true}var f6;var f5;if(f1==i(f4)){f6=f4}else{if((f5=cf(f2,f4))){f6=f1+f0+f5}else{if(f2===f4+"/"){f6=f2}}}if(f6){this.$$parse(f6)}return !!f6};this.$$compose=function(){var f3=eu(this.$$search),f4=this.$$hash?"#"+bv(this.$$hash):"";this.$$url=cX(this.$$path)+(f3?"?"+f3:"")+f4;this.$$absUrl=f1+f0+this.$$url}}var cz={$$html5:false,$$replace:false,absUrl:M("$$absUrl"),url:function(f1){if(x(f1)){return this.$$url}var f0=fk.exec(f1);if(f0[1]||f1===""){this.path(decodeURIComponent(f0[1]))}if(f0[2]||f0[1]||f1===""){this.search(f0[3]||"")}this.hash(f0[5]||"");return this},protocol:M("$$protocol"),host:M("$$host"),port:M("$$port"),path:fG("$$path",function(f0){f0=f0!==null?f0.toString():"";return f0.charAt(0)=="/"?f0:"/"+f0}),search:function(f0,f1){switch(arguments.length){case 0:return this.$$search;case 1:if(w(f0)||p(f0)){f0=f0.toString();this.$$search=ah(f0)}else{if(s(f0)){f0=fV(f0,{});bj(f0,function(f3,f2){if(f3==null){delete f0[f2]}});this.$$search=f0}else{throw dc("isrcharg","The first argument of the `$location#search()` call must be a string or an object.")}}break;default:if(x(f1)||f1===null){delete this.$$search[f0]}else{this.$$search[f0]=f1}}this.$$compose();return this},hash:fG("$$hash",function(f0){return f0!==null?f0.toString():""}),replace:function(){this.$$replace=true;return this}};bj([fc,bZ,cC],function(f0){f0.prototype=Object.create(cz);f0.prototype.state=function(f1){if(!arguments.length){return this.$$state}if(f0!==cC||!this.$$html5){throw dc("nostate","History API state support is available only in HTML5 mode and only in browsers supporting HTML5 History API")}this.$$state=x(f1)?null:f1;return this}});function M(f0){return function(){return this[f0]}}function fG(f1,f0){return function(f2){if(x(f2)){return this[f1]}this[f1]=f0(f2);this.$$compose();return this}}function m(){var f0="",f1={enabled:false,requireBase:true,rewriteLinks:true};this.hashPrefix=function(f2){if(eX(f2)){f0=f2;return this}else{return f0}};this.html5Mode=function(f2){if(aH(f2)){f1.enabled=f2;return this}else{if(s(f2)){if(aH(f2.enabled)){f1.enabled=f2.enabled}if(aH(f2.requireBase)){f1.requireBase=f2.requireBase}if(aH(f2.rewriteLinks)){f1.rewriteLinks=f2.rewriteLinks}return this}else{return f1}}};this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(ge,gg,f3,gf,f4){var f8,f9,f2=gg.baseHref(),gb=gg.url(),gd;if(f1.enabled){if(!f2&&f1.requireBase){throw dc("nobase","$location in HTML5 mode requires a <base> tag to be present!")}gd=cB(gb)+(f2||"/");f9=f3.history?cC:fc}else{gd=i(gb);f9=bZ}f8=new f9(gd,"#"+f0);f8.$$parseLinkUrl(gb,gb);f8.$$state=gg.state();var f6=/^\s*(javascript|mailto):/i;function ga(gi,gj,gl){var gk=f8.url();var gh=f8.$$state;try{gg.url(gi,gj,gl);f8.$$state=gg.state()}catch(gm){f8.url(gk);f8.$$state=gh;throw gm}}gf.on("click",function(gi){if(!f1.rewriteLinks||gi.ctrlKey||gi.metaKey||gi.shiftKey||gi.which==2||gi.button==2){return}var gk=ac(gi.target);while(d4(gk[0])!=="a"){if(gk[0]===gf[0]||!(gk=gk.parent())[0]){return}}var gj=gk.prop("href");var gh=gk.attr("href")||gk.attr("xlink:href");if(s(gj)&&gj.toString()==="[object SVGAnimatedString]"){gj=r(gj.animVal).href}if(f6.test(gj)){return}if(gj&&!gk.attr("target")&&!gi.isDefaultPrevented()){if(f8.$$parseLinkUrl(gj,gh)){gi.preventDefault();if(f8.absUrl()!=gg.url()){ge.$apply();f4.angular["ff-684208-preventDefault"]=true}}}});if(z(f8.absUrl())!=z(gb)){gg.url(f8.absUrl(),true)}var f7=true;gg.onUrlChange(function(gi,gh){ge.$evalAsync(function(){var gl=f8.absUrl();var gk=f8.$$state;var gj;f8.$$parse(gi);f8.$$state=gh;gj=ge.$broadcast("$locationChangeStart",gi,gl,gh,gk).defaultPrevented;if(f8.absUrl()!==gi){return}if(gj){f8.$$parse(gl);f8.$$state=gk;ga(gl,false,gk)}else{f7=false;f5(gl,gk)}});if(!ge.$$phase){ge.$digest()}});ge.$watch(function gc(){var gk=z(gg.url());var gl=z(f8.absUrl());var gi=gg.state();var gh=f8.$$replace;var gj=gk!==gl||(f8.$$html5&&f3.history&&gi!==f8.$$state);if(f7||gj){f7=false;ge.$evalAsync(function(){var gn=f8.absUrl();var gm=ge.$broadcast("$locationChangeStart",gn,gk,f8.$$state,gi).defaultPrevented;if(f8.absUrl()!==gn){return}if(gm){f8.$$parse(gk);f8.$$state=gi}else{if(gj){ga(gn,gh,gi===f8.$$state?null:f8.$$state)}f5(gk,gi)}})}f8.$$replace=false});return f8;function f5(gi,gh){ge.$broadcast("$locationChangeSuccess",f8.absUrl(),gi,f8.$$state,gh)}}]}function dr(){var f1=true,f0=this;this.debugEnabled=function(f2){if(eX(f2)){f1=f2;return this}else{return f1}};this.$get=["$window",function(f4){return{log:f3("log"),info:f3("info"),warn:f3("warn"),error:f3("error"),debug:(function(){var f5=f3("debug");return function(){if(f1){f5.apply(f0,arguments)}}}())};function f2(f5){if(f5 instanceof Error){if(f5.stack){f5=(f5.message&&f5.stack.indexOf(f5.message)===-1)?"Error: "+f5.message+"\n"+f5.stack:f5.stack}else{if(f5.sourceURL){f5=f5.message+"\n"+f5.sourceURL+":"+f5.line}}}return f5}function f3(f6){var f5=f4.console||{},f8=f5[f6]||f5.log||eD,f9=false;try{f9=!!f8.apply}catch(f7){}if(f9){return function(){var ga=[];bj(arguments,function(gb){ga.push(f2(gb))});return f8.apply(f5,ga)}}return function(gb,ga){f8(gb,ga==null?"":ga)}}}]}var af=eT("$parse");function cd(f0,f1){if(f0==="__defineGetter__"||f0==="__defineSetter__"||f0==="__lookupGetter__"||f0==="__lookupSetter__"||f0==="__proto__"){throw af("isecfld","Attempting to access a disallowed field in Angular expressions! Expression: {0}",f1)}return f0}function h(f1,f0){if(f1){if(f1.constructor===f1){throw af("isecfn","Referencing Function in Angular expressions is disallowed! Expression: {0}",f0)}else{if(f1.window===f1){throw af("isecwindow","Referencing the Window in Angular expressions is disallowed! Expression: {0}",f0)}else{if(f1.children&&(f1.nodeName||(f1.prop&&f1.attr&&f1.find))){throw af("isecdom","Referencing DOM nodes in Angular expressions is disallowed! Expression: {0}",f0)}else{if(f1===Object){throw af("isecobj","Referencing Object in Angular expressions is disallowed! Expression: {0}",f0)}}}}}return f1}var o=Function.prototype.call;var eK=Function.prototype.apply;var eE=Function.prototype.bind;function dw(f1,f0){if(f1){if(f1.constructor===f1){throw af("isecfn","Referencing Function in Angular expressions is disallowed! Expression: {0}",f0)}else{if(f1===o||f1===eK||f1===eE){throw af("isecff","Referencing call, apply or bind in Angular expressions is disallowed! Expression: {0}",f0)}}}}var a5=fM();bj("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(f0){a5[f0]=true});var bH={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'};var aK=function(f0){this.options=f0};aK.prototype={constructor:aK,lex:function(f7){this.text=f7;this.index=0;this.tokens=[];while(this.index<this.text.length){var f6=this.text.charAt(this.index);if(f6==='"'||f6==="'"){this.readString(f6)}else{if(this.isNumber(f6)||f6==="."&&this.isNumber(this.peek())){this.readNumber()}else{if(this.isIdent(f6)){this.readIdent()}else{if(this.is(f6,"(){}[].,;:?")){this.tokens.push({index:this.index,text:f6});this.index++}else{if(this.isWhitespace(f6)){this.index++}else{var f2=f6+this.peek();var f0=f2+this.peek(2);var f5=a5[f6];var f4=a5[f2];var f1=a5[f0];if(f5||f4||f1){var f3=f1?f0:(f4?f2:f6);this.tokens.push({index:this.index,text:f3,operator:true});this.index+=f3.length}else{this.throwError("Unexpected next character ",this.index,this.index+1)}}}}}}}return this.tokens},is:function(f0,f1){return f1.indexOf(f0)!==-1},peek:function(f1){var f0=f1||1;return(this.index+f0<this.text.length)?this.text.charAt(this.index+f0):false},isNumber:function(f0){return("0"<=f0&&f0<="9")&&typeof f0==="string"},isWhitespace:function(f0){return(f0===" "||f0==="\r"||f0==="\t"||f0==="\n"||f0==="\v"||f0==="\u00A0")},isIdent:function(f0){return("a"<=f0&&f0<="z"||"A"<=f0&&f0<="Z"||"_"===f0||f0==="$")},isExpOperator:function(f0){return(f0==="-"||f0==="+"||this.isNumber(f0))},throwError:function(f1,f3,f0){f0=f0||this.index;var f2=(eX(f3)?"s "+f3+"-"+this.index+" ["+this.text.substring(f3,f0)+"]":" "+f0);throw af("lexerr","Lexer Error: {0} at column{1} in expression [{2}].",f1,f2,this.text)},readNumber:function(){var f2="";var f3=this.index;while(this.index<this.text.length){var f1=db(this.text.charAt(this.index));if(f1=="."||this.isNumber(f1)){f2+=f1}else{var f0=this.peek();if(f1=="e"&&this.isExpOperator(f0)){f2+=f1}else{if(this.isExpOperator(f1)&&f0&&this.isNumber(f0)&&f2.charAt(f2.length-1)=="e"){f2+=f1}else{if(this.isExpOperator(f1)&&(!f0||!this.isNumber(f0))&&f2.charAt(f2.length-1)=="e"){this.throwError("Invalid exponent")}else{break}}}}this.index++}this.tokens.push({index:f3,text:f2,constant:true,value:Number(f2)})},readIdent:function(){var f1=this.index;while(this.index<this.text.length){var f0=this.text.charAt(this.index);if(!(this.isIdent(f0)||this.isNumber(f0))){break}this.index++}this.tokens.push({index:f1,text:this.text.slice(f1,this.index),identifier:true})},readString:function(f0){var f7=this.index;this.index++;var f1="";var f2=f0;var f5=false;while(this.index<this.text.length){var f3=this.text.charAt(this.index);f2+=f3;if(f5){if(f3==="u"){var f4=this.text.substring(this.index+1,this.index+5);if(!f4.match(/[\da-f]{4}/i)){this.throwError("Invalid unicode escape [\\u"+f4+"]")}this.index+=4;f1+=String.fromCharCode(parseInt(f4,16))}else{var f6=bH[f3];f1=f1+(f6||f3)}f5=false}else{if(f3==="\\"){f5=true}else{if(f3===f0){this.index++;this.tokens.push({index:f7,text:f2,constant:true,value:f1});return}else{f1+=f3}}}this.index++}this.throwError("Unterminated quote",f7)}};var E=function(f1,f0){this.lexer=f1;this.options=f0};E.Program="Program";E.ExpressionStatement="ExpressionStatement";E.AssignmentExpression="AssignmentExpression";E.ConditionalExpression="ConditionalExpression";E.LogicalExpression="LogicalExpression";E.BinaryExpression="BinaryExpression";E.UnaryExpression="UnaryExpression";E.CallExpression="CallExpression";E.MemberExpression="MemberExpression";E.Identifier="Identifier";E.Literal="Literal";E.ArrayExpression="ArrayExpression";E.Property="Property";E.ObjectExpression="ObjectExpression";E.ThisExpression="ThisExpression";E.NGValueParameter="NGValueParameter";E.prototype={ast:function(f1){this.text=f1;this.tokens=this.lexer.lex(f1);var f0=this.program();if(this.tokens.length!==0){this.throwError("is an unexpected token",this.tokens[0])}return f0},program:function(){var f0=[];while(true){if(this.tokens.length>0&&!this.peek("}",")",";","]")){f0.push(this.expressionStatement())}if(!this.expect(";")){return{type:E.Program,body:f0}}}},expressionStatement:function(){return{type:E.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){var f1=this.expression();var f0;while((f0=this.expect("|"))){f1=this.filter(f1)}return f1},expression:function(){return this.assignment()},assignment:function(){var f0=this.ternary();if(this.expect("=")){f0={type:E.AssignmentExpression,left:f0,right:this.assignment(),operator:"="}}return f0},ternary:function(){var f2=this.logicalOR();var f1;var f0;if(this.expect("?")){f1=this.expression();if(this.consume(":")){f0=this.expression();return{type:E.ConditionalExpression,test:f2,alternate:f1,consequent:f0}}}return f2},logicalOR:function(){var f0=this.logicalAND();while(this.expect("||")){f0={type:E.LogicalExpression,operator:"||",left:f0,right:this.logicalAND()}}return f0},logicalAND:function(){var f0=this.equality();while(this.expect("&&")){f0={type:E.LogicalExpression,operator:"&&",left:f0,right:this.equality()}}return f0},equality:function(){var f1=this.relational();var f0;while((f0=this.expect("==","!=","===","!=="))){f1={type:E.BinaryExpression,operator:f0.text,left:f1,right:this.relational()}}return f1},relational:function(){var f1=this.additive();var f0;while((f0=this.expect("<",">","<=",">="))){f1={type:E.BinaryExpression,operator:f0.text,left:f1,right:this.additive()}}return f1},additive:function(){var f1=this.multiplicative();var f0;while((f0=this.expect("+","-"))){f1={type:E.BinaryExpression,operator:f0.text,left:f1,right:this.multiplicative()}}return f1},multiplicative:function(){var f1=this.unary();var f0;while((f0=this.expect("*","/","%"))){f1={type:E.BinaryExpression,operator:f0.text,left:f1,right:this.unary()}}return f1},unary:function(){var f0;if((f0=this.expect("+","-","!"))){return{type:E.UnaryExpression,operator:f0.text,prefix:true,argument:this.unary()}}else{return this.primary()}},primary:function(){var f1;if(this.expect("(")){f1=this.filterChain();this.consume(")")}else{if(this.expect("[")){f1=this.arrayDeclaration()}else{if(this.expect("{")){f1=this.object()}else{if(this.constants.hasOwnProperty(this.peek().text)){f1=fV(this.constants[this.consume().text])}else{if(this.peek().identifier){f1=this.identifier()}else{if(this.peek().constant){f1=this.constant()}else{this.throwError("not a primary expression",this.peek())}}}}}}var f0;while((f0=this.expect("(","[","."))){if(f0.text==="("){f1={type:E.CallExpression,callee:f1,arguments:this.parseArguments()};this.consume(")")}else{if(f0.text==="["){f1={type:E.MemberExpression,object:f1,property:this.expression(),computed:true};this.consume("]")}else{if(f0.text==="."){f1={type:E.MemberExpression,object:f1,property:this.identifier(),computed:false}}else{this.throwError("IMPOSSIBLE")}}}}return f1},filter:function(f1){var f2=[f1];var f0={type:E.CallExpression,callee:this.identifier(),arguments:f2,filter:true};while(this.expect(":")){f2.push(this.expression())}return f0},parseArguments:function(){var f0=[];if(this.peekToken().text!==")"){do{f0.push(this.expression())}while(this.expect(","))}return f0},identifier:function(){var f0=this.consume();if(!f0.identifier){this.throwError("is not a valid identifier",f0)}return{type:E.Identifier,name:f0.text}},constant:function(){return{type:E.Literal,value:this.consume().value}},arrayDeclaration:function(){var f0=[];if(this.peekToken().text!=="]"){do{if(this.peek("]")){break}f0.push(this.expression())}while(this.expect(","))}this.consume("]");return{type:E.ArrayExpression,elements:f0}},object:function(){var f0=[],f1;if(this.peekToken().text!=="}"){do{if(this.peek("}")){break}f1={type:E.Property,kind:"init"};if(this.peek().constant){f1.key=this.constant()}else{if(this.peek().identifier){f1.key=this.identifier()}else{this.throwError("invalid key",this.peek())}}this.consume(":");f1.value=this.expression();f0.push(f1)}while(this.expect(","))}this.consume("}");return{type:E.ObjectExpression,properties:f0}},throwError:function(f1,f0){throw af("syntax","Syntax Error: Token '{0}' {1} at column {2} of the expression [{3}] starting at [{4}].",f0.text,f1,(f0.index+1),this.text,this.text.substring(f0.index))},consume:function(f1){if(this.tokens.length===0){throw af("ueoe","Unexpected end of expression: {0}",this.text)}var f0=this.expect(f1);if(!f0){this.throwError("is unexpected, expecting ["+f1+"]",this.peek())}return f0},peekToken:function(){if(this.tokens.length===0){throw af("ueoe","Unexpected end of expression: {0}",this.text)}return this.tokens[0]},peek:function(f3,f2,f1,f0){return this.peekAhead(0,f3,f2,f1,f0)},peekAhead:function(f2,f6,f5,f4,f3){if(this.tokens.length>f2){var f1=this.tokens[f2];var f0=f1.text;if(f0===f6||f0===f5||f0===f4||f0===f3||(!f6&&!f5&&!f4&&!f3)){return f1}}return false},expect:function(f4,f3,f2,f1){var f0=this.peek(f4,f3,f2,f1);if(f0){this.tokens.shift();return f0}return false},constants:{"true":{type:E.Literal,value:true},"false":{type:E.Literal,value:false},"null":{type:E.Literal,value:null},"undefined":{type:E.Literal,value:fE},"this":{type:E.ThisExpression}}};function ei(f0,f1){return typeof f0!=="undefined"?f0:f1}function cD(f0,f1){if(typeof f0==="undefined"){return f1}if(typeof f1==="undefined"){return f0}return f0+f1}function eO(f2,f0){var f1=f2(f0);return !f1.$stateful}function bG(f0,f3){var f2;var f1;switch(f0.type){case E.Program:f2=true;bj(f0.body,function(f4){bG(f4.expression,f3);f2=f2&&f4.expression.constant});f0.constant=f2;break;case E.Literal:f0.constant=true;f0.toWatch=[];break;case E.UnaryExpression:bG(f0.argument,f3);f0.constant=f0.argument.constant;f0.toWatch=f0.argument.toWatch;break;case E.BinaryExpression:bG(f0.left,f3);bG(f0.right,f3);f0.constant=f0.left.constant&&f0.right.constant;f0.toWatch=f0.left.toWatch.concat(f0.right.toWatch);break;case E.LogicalExpression:bG(f0.left,f3);bG(f0.right,f3);f0.constant=f0.left.constant&&f0.right.constant;f0.toWatch=f0.constant?[]:[f0];break;case E.ConditionalExpression:bG(f0.test,f3);bG(f0.alternate,f3);bG(f0.consequent,f3);f0.constant=f0.test.constant&&f0.alternate.constant&&f0.consequent.constant;f0.toWatch=f0.constant?[]:[f0];break;case E.Identifier:f0.constant=false;f0.toWatch=[f0];break;case E.MemberExpression:bG(f0.object,f3);if(f0.computed){bG(f0.property,f3)}f0.constant=f0.object.constant&&(!f0.computed||f0.property.constant);f0.toWatch=[f0];break;case E.CallExpression:f2=f0.filter?eO(f3,f0.callee.name):false;f1=[];bj(f0.arguments,function(f4){bG(f4,f3);f2=f2&&f4.constant;if(!f4.constant){f1.push.apply(f1,f4.toWatch)}});f0.constant=f2;f0.toWatch=f0.filter&&eO(f3,f0.callee.name)?f1:[f0];break;case E.AssignmentExpression:bG(f0.left,f3);bG(f0.right,f3);f0.constant=f0.left.constant&&f0.right.constant;f0.toWatch=[f0];break;case E.ArrayExpression:f2=true;f1=[];bj(f0.elements,function(f4){bG(f4,f3);f2=f2&&f4.constant;if(!f4.constant){f1.push.apply(f1,f4.toWatch)}});f0.constant=f2;f0.toWatch=f1;break;case E.ObjectExpression:f2=true;f1=[];bj(f0.properties,function(f4){bG(f4.value,f3);f2=f2&&f4.value.constant;if(!f4.value.constant){f1.push.apply(f1,f4.value.toWatch)}});f0.constant=f2;f0.toWatch=f1;break;case E.ThisExpression:f0.constant=false;f0.toWatch=[];break}}function a7(f0){if(f0.length!=1){return}var f1=f0[0].expression;var f2=f1.toWatch;if(f2.length!==1){return f2}return f2[0]!==f1?f2:fE}function eM(f0){return f0.type===E.Identifier||f0.type===E.MemberExpression}function a1(f0){if(f0.body.length===1&&eM(f0.body[0].expression)){return{type:E.AssignmentExpression,left:f0.body[0].expression,right:{type:E.NGValueParameter},operator:"="}}}function cH(f0){return f0.body.length===0||f0.body.length===1&&(f0.body[0].expression.type===E.Literal||f0.body[0].expression.type===E.ArrayExpression||f0.body[0].expression.type===E.ObjectExpression)}function b(f0){return f0.constant}function fd(f0,f1){this.astBuilder=f0;this.$filter=f1}fd.prototype={compile:function(f5,f3){var f7=this;var f0=this.astBuilder.ast(f5);this.state={nextId:0,filters:{},expensiveChecks:f3,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};bG(f0,f7.$filter);var f2="";var f8;this.stage="assign";if((f8=a1(f0))){this.state.computing="assign";var f9=this.nextId();this.recurse(f8,f9);f2="fn.assign="+this.generateFunction("assign","s,v,l")}var f4=a7(f0.body);f7.stage="inputs";bj(f4,function(gd,ga){var gb="fn"+ga;f7.state[gb]={vars:[],body:[],own:{}};f7.state.computing=gb;var gc=f7.nextId();f7.recurse(gd,gc);f7.return_(gc);f7.state.inputs.push(gb);gd.watchId=ga});this.state.computing="fn";this.stage="main";this.recurse(f0);var f1='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+f2+this.watchFns()+"return fn;";var f6=(new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","ifDefined","plus","text",f1))(this.$filter,cd,h,dw,ei,cD,f5);this.state=this.stage=fE;f6.literal=cH(f0);f6.constant=b(f0);return f6},USE:"use",STRICT:"strict",watchFns:function(){var f0=[];var f2=this.state.inputs;var f1=this;bj(f2,function(f3){f0.push("var "+f3+"="+f1.generateFunction(f3,"s"))});if(f2.length){f0.push("fn.inputs=["+f2.join(",")+"];")}return f0.join("")},generateFunction:function(f0,f1){return"function("+f1+"){"+this.varsPrefix(f0)+this.body(f0)+"};"},filterPrefix:function(){var f1=[];var f0=this;bj(this.state.filters,function(f3,f2){f1.push(f3+"=$filter("+f0.escape(f2)+")")});if(f1.length){return"var "+f1.join(",")+";"}return""},varsPrefix:function(f0){return this.state[f0].vars.length?"var "+this.state[f0].vars.join(",")+";":""},body:function(f0){return this.state[f0].body.join("")},recurse:function(f0,f7,f1,f3,f4,f9){var f2,f8,ga=this,f6,f5;f3=f3||eD;if(!f9&&eX(f0.watchId)){f7=f7||this.nextId();this.if_("i",this.lazyAssign(f7,this.computedMember("i",f0.watchId)),this.lazyRecurse(f0,f7,f1,f3,f4,true));return}switch(f0.type){case E.Program:bj(f0.body,function(gb,gc){ga.recurse(gb.expression,fE,fE,function(gd){f8=gd});if(gc!==f0.body.length-1){ga.current().body.push(f8,";")}else{ga.return_(f8)}});break;case E.Literal:f5=this.escape(f0.value);this.assign(f7,f5);f3(f5);break;case E.UnaryExpression:this.recurse(f0.argument,fE,fE,function(gb){f8=gb});f5=f0.operator+"("+this.ifDefined(f8,0)+")";this.assign(f7,f5);f3(f5);break;case E.BinaryExpression:this.recurse(f0.left,fE,fE,function(gb){f2=gb});this.recurse(f0.right,fE,fE,function(gb){f8=gb});if(f0.operator==="+"){f5=this.plus(f2,f8)}else{if(f0.operator==="-"){f5=this.ifDefined(f2,0)+f0.operator+this.ifDefined(f8,0)}else{f5="("+f2+")"+f0.operator+"("+f8+")"}}this.assign(f7,f5);f3(f5);break;case E.LogicalExpression:f7=f7||this.nextId();ga.recurse(f0.left,f7);ga.if_(f0.operator==="&&"?f7:ga.not(f7),ga.lazyRecurse(f0.right,f7));f3(f7);break;case E.ConditionalExpression:f7=f7||this.nextId();ga.recurse(f0.test,f7);ga.if_(f7,ga.lazyRecurse(f0.alternate,f7),ga.lazyRecurse(f0.consequent,f7));f3(f7);break;case E.Identifier:f7=f7||this.nextId();if(f1){f1.context=ga.stage==="inputs"?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",f0.name)+"?l:s");f1.computed=false;f1.name=f0.name}cd(f0.name);ga.if_(ga.stage==="inputs"||ga.not(ga.getHasOwnProperty("l",f0.name)),function(){ga.if_(ga.stage==="inputs"||"s",function(){if(f4&&f4!==1){ga.if_(ga.not(ga.nonComputedMember("s",f0.name)),ga.lazyAssign(ga.nonComputedMember("s",f0.name),"{}"))}ga.assign(f7,ga.nonComputedMember("s",f0.name))})},f7&&ga.lazyAssign(f7,ga.nonComputedMember("l",f0.name)));if(ga.state.expensiveChecks||ba(f0.name)){ga.addEnsureSafeObject(f7)}f3(f7);break;case E.MemberExpression:f2=f1&&(f1.context=this.nextId())||this.nextId();f7=f7||this.nextId();ga.recurse(f0.object,f2,fE,function(){ga.if_(ga.notNull(f2),function(){if(f0.computed){f8=ga.nextId();ga.recurse(f0.property,f8);ga.addEnsureSafeMemberName(f8);if(f4&&f4!==1){ga.if_(ga.not(ga.computedMember(f2,f8)),ga.lazyAssign(ga.computedMember(f2,f8),"{}"))}f5=ga.ensureSafeObject(ga.computedMember(f2,f8));ga.assign(f7,f5);if(f1){f1.computed=true;f1.name=f8}}else{cd(f0.property.name);if(f4&&f4!==1){ga.if_(ga.not(ga.nonComputedMember(f2,f0.property.name)),ga.lazyAssign(ga.nonComputedMember(f2,f0.property.name),"{}"))}f5=ga.nonComputedMember(f2,f0.property.name);if(ga.state.expensiveChecks||ba(f0.property.name)){f5=ga.ensureSafeObject(f5)}ga.assign(f7,f5);if(f1){f1.computed=false;f1.name=f0.property.name}}},function(){ga.assign(f7,"undefined")});f3(f7)},!!f4);break;case E.CallExpression:f7=f7||this.nextId();if(f0.filter){f8=ga.filter(f0.callee.name);f6=[];bj(f0.arguments,function(gc){var gb=ga.nextId();ga.recurse(gc,gb);f6.push(gb)});f5=f8+"("+f6.join(",")+")";ga.assign(f7,f5);f3(f7)}else{f8=ga.nextId();f2={};f6=[];ga.recurse(f0.callee,f8,f2,function(){ga.if_(ga.notNull(f8),function(){ga.addEnsureSafeFunction(f8);bj(f0.arguments,function(gb){ga.recurse(gb,ga.nextId(),fE,function(gc){f6.push(ga.ensureSafeObject(gc))})});if(f2.name){if(!ga.state.expensiveChecks){ga.addEnsureSafeObject(f2.context)}f5=ga.member(f2.context,f2.name,f2.computed)+"("+f6.join(",")+")"}else{f5=f8+"("+f6.join(",")+")"}f5=ga.ensureSafeObject(f5);ga.assign(f7,f5)},function(){ga.assign(f7,"undefined")});f3(f7)})}break;case E.AssignmentExpression:f8=this.nextId();f2={};if(!eM(f0.left)){throw af("lval","Trying to assing a value to a non l-value")}this.recurse(f0.left,fE,f2,function(){ga.if_(ga.notNull(f2.context),function(){ga.recurse(f0.right,f8);ga.addEnsureSafeObject(ga.member(f2.context,f2.name,f2.computed));f5=ga.member(f2.context,f2.name,f2.computed)+f0.operator+f8;ga.assign(f7,f5);f3(f7||f5)})},1);break;case E.ArrayExpression:f6=[];bj(f0.elements,function(gb){ga.recurse(gb,ga.nextId(),fE,function(gc){f6.push(gc)})});f5="["+f6.join(",")+"]";this.assign(f7,f5);f3(f5);break;case E.ObjectExpression:f6=[];bj(f0.properties,function(gb){ga.recurse(gb.value,ga.nextId(),fE,function(gc){f6.push(ga.escape(gb.key.type===E.Identifier?gb.key.name:(""+gb.key.value))+":"+gc)})});f5="{"+f6.join(",")+"}";this.assign(f7,f5);f3(f5);break;case E.ThisExpression:this.assign(f7,"s");f3("s");break;case E.NGValueParameter:this.assign(f7,"v");f3("v");break}},getHasOwnProperty:function(f2,f3){var f1=f2+"."+f3;var f0=this.current().own;if(!f0.hasOwnProperty(f1)){f0[f1]=this.nextId(false,f2+"&&("+this.escape(f3)+" in "+f2+")")}return f0[f1]},assign:function(f1,f0){if(!f1){return}this.current().body.push(f1,"=",f0,";");return f1},filter:function(f0){if(!this.state.filters.hasOwnProperty(f0)){this.state.filters[f0]=this.nextId(true)}return this.state.filters[f0]},ifDefined:function(f1,f0){return"ifDefined("+f1+","+this.escape(f0)+")"},plus:function(f1,f0){return"plus("+f1+","+f0+")"},return_:function(f0){this.current().body.push("return ",f0,";")},if_:function(f3,f2,f1){if(f3===true){f2()}else{var f0=this.current().body;f0.push("if(",f3,"){");f2();f0.push("}");if(f1){f0.push("else{");f1();f0.push("}")}}},not:function(f0){return"!("+f0+")"},notNull:function(f0){return f0+"!=null"},nonComputedMember:function(f1,f0){return f1+"."+f0},computedMember:function(f1,f0){return f1+"["+f0+"]"},member:function(f2,f0,f1){if(f1){return this.computedMember(f2,f0)}return this.nonComputedMember(f2,f0)},addEnsureSafeObject:function(f0){this.current().body.push(this.ensureSafeObject(f0),";")},addEnsureSafeMemberName:function(f0){this.current().body.push(this.ensureSafeMemberName(f0),";")},addEnsureSafeFunction:function(f0){this.current().body.push(this.ensureSafeFunction(f0),";")},ensureSafeObject:function(f0){return"ensureSafeObject("+f0+",text)"},ensureSafeMemberName:function(f0){return"ensureSafeMemberName("+f0+",text)"},ensureSafeFunction:function(f0){return"ensureSafeFunction("+f0+",text)"},lazyRecurse:function(f0,f5,f4,f3,f2,f6){var f1=this;return function(){f1.recurse(f0,f5,f4,f3,f2,f6)}},lazyAssign:function(f2,f1){var f0=this;return function(){f0.assign(f2,f1)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(f0){return"\\u"+("0000"+f0.charCodeAt(0).toString(16)).slice(-4)},escape:function(f0){if(w(f0)){return"'"+f0.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'"}if(p(f0)){return f0.toString()}if(f0===true){return"true"}if(f0===false){return"false"}if(f0===null){return"null"}if(typeof f0==="undefined"){return"undefined"}throw af("esc","IMPOSSIBLE")},nextId:function(f0,f1){var f2="v"+(this.state.nextId++);if(!f0){this.current().vars.push(f2+(f1?"="+f1:""))}return f2},current:function(){return this.state[this.state.computing]}};function er(f0,f1){this.astBuilder=f0;this.$filter=f1}er.prototype={compile:function(f5,f1){var f7=this;var f0=this.astBuilder.ast(f5);this.expression=f5;this.expensiveChecks=f1;bG(f0,f7.$filter);var f8;var f9;if((f8=a1(f0))){f9=this.recurse(f8)}var f2=a7(f0.body);var f4;if(f2){f4=[];bj(f2,function(gc,gb){var ga=f7.recurse(gc);gc.input=ga;f4.push(ga);gc.watchId=gb})}var f3=[];bj(f0.body,function(ga){f3.push(f7.recurse(ga.expression))});var f6=f0.body.length===0?function(){}:f0.body.length===1?f3[0]:function(gb,gc){var ga;bj(f3,function(gd){ga=gd(gb,gc)});return ga};if(f9){f6.assign=function(ga,gb,gc){return f9(ga,gc,gb)}}if(f4){f6.inputs=f4}f6.literal=cH(f0);f6.constant=b(f0);return f6},recurse:function(f0,f5,f4){var f6,f3,f1=this,f2,f7;if(f0.input){return this.inputs(f0.input,f0.watchId)}switch(f0.type){case E.Literal:return this.value(f0.value,f5);case E.UnaryExpression:f3=this.recurse(f0.argument);return this["unary"+f0.operator](f3,f5);case E.BinaryExpression:f6=this.recurse(f0.left);f3=this.recurse(f0.right);return this["binary"+f0.operator](f6,f3,f5);case E.LogicalExpression:f6=this.recurse(f0.left);f3=this.recurse(f0.right);return this["binary"+f0.operator](f6,f3,f5);case E.ConditionalExpression:return this["ternary?:"](this.recurse(f0.test),this.recurse(f0.alternate),this.recurse(f0.consequent),f5);case E.Identifier:cd(f0.name,f1.expression);return f1.identifier(f0.name,f1.expensiveChecks||ba(f0.name),f5,f4,f1.expression);case E.MemberExpression:f6=this.recurse(f0.object,false,!!f4);if(!f0.computed){cd(f0.property.name,f1.expression);f3=f0.property.name}if(f0.computed){f3=this.recurse(f0.property)}return f0.computed?this.computedMember(f6,f3,f5,f4,f1.expression):this.nonComputedMember(f6,f3,f1.expensiveChecks,f5,f4,f1.expression);case E.CallExpression:f2=[];bj(f0.arguments,function(f8){f2.push(f1.recurse(f8))});if(f0.filter){f3=this.$filter(f0.callee.name)}if(!f0.filter){f3=this.recurse(f0.callee,true)}return f0.filter?function(gc,ge,ga,f8){var f9=[];for(var gb=0;gb<f2.length;++gb){f9.push(f2[gb](gc,ge,ga,f8))}var gd=f3.apply(fE,f9,f8);return f5?{context:fE,name:fE,value:gd}:gd}:function(gc,ge,ga,f8){var gf=f3(gc,ge,ga,f8);var gd;if(gf.value!=null){h(gf.context,f1.expression);dw(gf.value,f1.expression);var f9=[];for(var gb=0;gb<f2.length;++gb){f9.push(h(f2[gb](gc,ge,ga,f8),f1.expression))}gd=h(gf.value.apply(gf.context,f9),f1.expression)}return f5?{value:gd}:gd};case E.AssignmentExpression:f6=this.recurse(f0.left,true,1);f3=this.recurse(f0.right);return function(gb,gc,ga,f9){var f8=f6(gb,gc,ga,f9);var gd=f3(gb,gc,ga,f9);h(f8.value,f1.expression);f8.context[f8.name]=gd;return f5?{value:gd}:gd};case E.ArrayExpression:f2=[];bj(f0.elements,function(f8){f2.push(f1.recurse(f8))});return function(gb,gd,f9,f8){var gc=[];for(var ga=0;ga<f2.length;++ga){gc.push(f2[ga](gb,gd,f9,f8))}return f5?{value:gc}:gc};case E.ObjectExpression:f2=[];bj(f0.properties,function(f8){f2.push({key:f8.key.type===E.Identifier?f8.key.name:(""+f8.key.value),value:f1.recurse(f8.value)})});return function(gb,gd,f9,f8){var gc={};for(var ga=0;ga<f2.length;++ga){gc[f2[ga].key]=f2[ga].value(gb,gd,f9,f8)}return f5?{value:gc}:gc};case E.ThisExpression:return function(f8){return f5?{value:f8}:f8};case E.NGValueParameter:return function(ga,gb,f9,f8){return f5?{value:f9}:f9}}},"unary+":function(f1,f0){return function(f5,f6,f4,f3){var f2=f1(f5,f6,f4,f3);if(eX(f2)){f2=+f2}else{f2=0}return f0?{value:f2}:f2}},"unary-":function(f1,f0){return function(f5,f6,f4,f3){var f2=f1(f5,f6,f4,f3);if(eX(f2)){f2=-f2}else{f2=0}return f0?{value:f2}:f2}},"unary!":function(f1,f0){return function(f5,f6,f4,f3){var f2=!f1(f5,f6,f4,f3);return f0?{value:f2}:f2}},"binary+":function(f2,f1,f0){return function(f7,f8,f6,f5){var f4=f2(f7,f8,f6,f5);var f9=f1(f7,f8,f6,f5);var f3=cD(f4,f9);return f0?{value:f3}:f3}},"binary-":function(f2,f1,f0){return function(f7,f8,f6,f5){var f4=f2(f7,f8,f6,f5);var f9=f1(f7,f8,f6,f5);var f3=(eX(f4)?f4:0)-(eX(f9)?f9:0);return f0?{value:f3}:f3}},"binary*":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)*f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary/":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)/f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary%":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)%f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary===":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)===f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary!==":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)!==f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary==":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)==f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary!=":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)!=f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary<":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)<f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary>":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)>f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary<=":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)<=f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary>=":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)>=f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary&&":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)&&f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"binary||":function(f2,f1,f0){return function(f6,f7,f5,f4){var f3=f2(f6,f7,f5,f4)||f1(f6,f7,f5,f4);return f0?{value:f3}:f3}},"ternary?:":function(f3,f2,f1,f0){return function(f7,f8,f6,f5){var f4=f3(f7,f8,f6,f5)?f2(f7,f8,f6,f5):f1(f7,f8,f6,f5);return f0?{value:f4}:f4}},value:function(f1,f0){return function(){return f0?{context:fE,name:fE,value:f1}:f1}},identifier:function(f0,f3,f2,f1,f4){return function(f7,ga,f6,f5){var f9=ga&&(f0 in ga)?ga:f7;if(f1&&f1!==1&&f9&&!(f9[f0])){f9[f0]={}}var f8=f9?f9[f0]:fE;if(f3){h(f8,f4)}if(f2){return{context:f9,name:f0,value:f8}}else{return f8}}},computedMember:function(f3,f2,f1,f0,f4){return function(f8,ga,f7,f6){var f5=f3(f8,ga,f7,f6);var gb;var f9;if(f5!=null){gb=f2(f8,ga,f7,f6);cd(gb,f4);if(f0&&f0!==1&&f5&&!(f5[gb])){f5[gb]={}}f9=f5[gb];h(f9,f4)}if(f1){return{context:f5,name:gb,value:f9}}else{return f9}}},nonComputedMember:function(f4,f3,f2,f1,f0,f5){return function(f9,gb,f8,f7){var f6=f4(f9,gb,f8,f7);if(f0&&f0!==1&&f6&&!(f6[f3])){f6[f3]={}}var ga=f6!=null?f6[f3]:fE;if(f2||ba(f3)){h(ga,f5)}if(f1){return{context:f6,name:f3,value:ga}}else{return ga}}},inputs:function(f0,f1){return function(f3,f4,f5,f2){if(f2){return f2[f1]}return f0(f3,f4,f5)}}};var n=function(f1,f2,f0){this.lexer=f1;this.$filter=f2;this.options=f0;this.ast=new E(this.lexer);this.astCompiler=f0.csp?new er(this.ast,f2):new fd(this.ast,f2)};n.prototype={constructor:n,parse:function(f0){return this.astCompiler.compile(f0,this.options.expensiveChecks)}};function e0(f6,f5,f7,f4){h(f6,f4);var f3=f5.split("."),f2;for(var f1=0;f3.length>1;f1++){f2=cd(f3.shift(),f4);var f0=h(f6[f2],f4);if(!f0){f0={};f6[f2]=f0}f6=f0}f2=cd(f3.shift(),f4);h(f6[f2],f4);f6[f2]=f7;return f7}var S=fM();var eY=fM();function ba(f0){return f0=="constructor"}var aF=Object.prototype.valueOf;function fJ(f0){return bn(f0.valueOf)?f0.valueOf():aF.call(f0)}function dh(){var f1=fM();var f0=fM();this.$get=["$filter","$sniffer",function(f7,f2){var f8={csp:f2.csp,expensiveChecks:false},f6={csp:f2.csp,expensiveChecks:true};return function f3(gi,gh,gj){var gf,gl,gk;switch(typeof gi){case"string":gi=gi.trim();gk=gi;var gd=(gj?f0:f1);gf=gd[gk];if(!gf){if(gi.charAt(0)===":"&&gi.charAt(1)===":"){gl=true;gi=gi.substring(2)}var gm=gj?f6:f8;var gg=new aK(gm);var ge=new n(gg,f7,gm);gf=ge.parse(gi);if(gf.constant){gf.$$watchDelegate=ga}else{if(gl){gf.$$watchDelegate=gf.literal?gc:f4}else{if(gf.inputs){gf.$$watchDelegate=f5}}}gd[gk]=gf}return f9(gf,gh);case"function":return f9(gi,gh);default:return eD}};function gb(ge,gd){if(ge==null||gd==null){return ge===gd}if(typeof ge==="object"){ge=fJ(ge);if(typeof ge==="object"){return false}}return ge===gd||(ge!==ge&&gd!==gd)}function f5(gp,gf,gq,gd,gj){var gi=gd.inputs;var gk;if(gi.length===1){var go=gb;gi=gi[0];return gp.$watch(function ge(gr){var gs=gi(gr);if(!gb(gs,go)){gk=gd(gr,fE,fE,[gs]);go=gs&&fJ(gs)}return gk},gf,gq,gj)}var gm=[];var gl=[];for(var gh=0,gn=gi.length;gh<gn;gh++){gm[gh]=gb;gl[gh]=null}return gp.$watch(function gg(gt){var gv=false;for(var gr=0,gs=gi.length;gr<gs;gr++){var gu=gi[gr](gt);if(gv||(gv=!gb(gu,gm[gr]))){gl[gr]=gu;gm[gr]=gu&&fJ(gu)}}if(gv){gk=gd(gt,fE,fE,gl)}return gk},gf,gq,gj)}function f4(gg,gi,gd,ge){var gk,gf;return gk=gg.$watch(function gj(gl){return ge(gl)},function gh(gn,gl,gm){gf=gn;if(bn(gi)){gi.apply(this,arguments)}if(eX(gn)){gm.$$postDigest(function(){if(eX(gf)){gk()}})}},gd)}function gc(gj,gf,gl,gd){var gg,gh;return gg=gj.$watch(function gk(gm){return gd(gm)},function ge(go,gm,gn){gh=go;if(bn(gf)){gf.call(this,go,gm,gn)}if(gi(go)){gn.$$postDigest(function(){if(gi(gh)){gg()}})}},gl);function gi(gn){var gm=true;bj(gn,function(go){if(!eX(go)){gm=false}});return gm}}function ga(gf,gi,gd,ge){var gj;return gj=gf.$watch(function gh(gk){return ge(gk)},function gg(gm,gk,gl){if(bn(gi)){gi.apply(this,arguments)}gj()},gd)}function f9(ge,gh){if(!gh){return ge}var gg=ge.$$watchDelegate;var gj=gg!==gc&&gg!==f4;var gf=gj?function gd(gm,go,gl,gk){var gn=ge(gm,go,gl,gk);return gh(gn,gm,go)}:function gi(gn,gp,gm,gl){var go=ge(gn,gp,gm,gl);var gk=gh(go,gn,gp);return eX(go)?gk:go};if(ge.$$watchDelegate&&ge.$$watchDelegate!==f5){gf.$$watchDelegate=ge.$$watchDelegate}else{if(!gh.$stateful){gf.$$watchDelegate=f5;gf.inputs=ge.inputs?ge.inputs:[ge]}}return gf}}]}function c1(){this.$get=["$rootScope","$exceptionHandler",function(f0,f1){return fP(function(f2){f0.$evalAsync(f2)},f1)}]}function bx(){this.$get=["$browser","$exceptionHandler",function(f0,f1){return fP(function(f2){f0.defer(f2)},f1)}]}function fP(ga,gh){var f8=eT("$q",TypeError);function gf(gj,gm,gi){var gl=false;function gk(gn){return function(go){if(gl){return}gl=true;gn.call(gj,go)}}return[gk(gm),gk(gi)]}var f3=function(){return new f0()};function f4(){this.$$state={status:0}}f4.prototype={then:function(gl,gj,gk){var gi=new f0();this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([gi,gl,gj,gk]);if(this.$$state.status>0){gc(this.$$state)}return gi.promise},"catch":function(gi){return this.then(null,gi)},"finally":function(gj,gi){return this.then(function(gk){return f1(gk,true,gj)},function(gk){return f1(gk,false,gj)},gi)}};function ge(gi,gj){return function(gk){gj.call(gi,gk)}}function f6(gm){var gl,gi,go;go=gm.pending;gm.processScheduled=false;gm.pending=fE;for(var gj=0,gk=go.length;gj<gk;++gj){gi=go[gj][0];gl=go[gj][gm.status];try{if(bn(gl)){gi.resolve(gl(gm.value))}else{if(gm.status===1){gi.resolve(gm.value)}else{gi.reject(gm.value)}}}catch(gn){gi.reject(gn);gh(gn)}}}function gc(gi){if(gi.processScheduled||!gi.pending){return}gi.processScheduled=true;ga(function(){f6(gi)})}function f0(){this.promise=new f4();this.resolve=ge(this,this.resolve);this.reject=ge(this,this.reject);this.notify=ge(this,this.notify)}f0.prototype={resolve:function(gi){if(this.promise.$$state.status){return}if(gi===this.promise){this.$$reject(f8("qcycle","Expected promise to be resolved with value other than itself '{0}'",gi))}else{this.$$resolve(gi)}},$$resolve:function(gl){var gk,gi;gi=gf(this,this.$$resolve,this.$$reject);try{if((s(gl)||bn(gl))){gk=gl&&gl.then}if(bn(gk)){this.promise.$$state.status=-1;gk.call(gl,gi[0],gi[1],this.notify)}else{this.promise.$$state.value=gl;this.promise.$$state.status=1;gc(this.promise.$$state)}}catch(gj){gi[1](gj);gh(gj)}},reject:function(gi){if(this.promise.$$state.status){return}this.$$reject(gi)},$$reject:function(gi){this.promise.$$state.value=gi;this.promise.$$state.status=2;gc(this.promise.$$state)},notify:function(gi){var gj=this.promise.$$state.pending;if((this.promise.$$state.status<=0)&&gj&&gj.length){ga(function(){var go,gk;for(var gl=0,gm=gj.length;gl<gm;gl++){gk=gj[gl][0];go=gj[gl][3];try{gk.notify(bn(go)?go(gi):gi)}catch(gn){gh(gn)}}})}}};var f7=function(gj){var gi=new f0();gi.reject(gj);return gi.promise};var f5=function f5(gk,gj){var gi=new f0();if(gj){gi.resolve(gk)}else{gi.reject(gk)}return gi.promise};var f1=function f1(gj,gm,gl){var gi=null;try{if(bn(gl)){gi=gl()}}catch(gk){return f5(gk,false)}if(fH(gi)){return gi.then(function(){return f5(gj,gm)},function(gn){return f5(gn,false)})}else{return f5(gj,gm)}};var gb=function(gk,gm,gj,gl){var gi=new f0();gi.resolve(gk);return gi.promise.then(gm,gj,gl)};var gg=gb;function f2(gl){var gj=new f0(),gi=0,gk=U(gl)?[]:{};bj(gl,function(gn,gm){gi++;gb(gn).then(function(go){if(gk.hasOwnProperty(gm)){return}gk[gm]=go;if(!(--gi)){gj.resolve(gk)}},function(go){if(gk.hasOwnProperty(gm)){return}gj.reject(go)})});if(gi===0){gj.resolve(gk)}return gj.promise}var gd=function f9(gl){if(!bn(gl)){throw f8("norslvr","Expected resolverFn, got '{0}'",gl)}if(!(this instanceof f9)){return new f9(gl)}var gj=new f0();function gk(gm){gj.resolve(gm)}function gi(gm){gj.reject(gm)}gl(gk,gi);return gj.promise};gd.defer=f3;gd.reject=f7;gd.when=gb;gd.resolve=gg;gd.all=f2;return gd}function bF(){this.$get=["$window","$timeout",function(f0,f1){var f5=f0.requestAnimationFrame||f0.webkitRequestAnimationFrame;var f4=f0.cancelAnimationFrame||f0.webkitCancelAnimationFrame||f0.webkitCancelRequestAnimationFrame;var ga=!!f5;var f8=ga?function(gb){var gc=f5(gb);return function(){f4(gc)}}:function(gb){var gc=f1(gb,16.66,false);return function(){f1.cancel(gc)}};f7.supported=ga;var f6;var f3=0;var f2=[];return f7;function f9(){for(var gc=0;gc<f2.length;gc++){var gb=f2[gc];if(gb){f2[gc]=null;gb()}}f3=f2.length=0}function f7(gc){var gb=f2.length;f3++;f2.push(gc);if(gb===0){f6=f8(f9)}return function gd(){if(gb>=0){f2[gb]=null;gb=null;if(--f3===0&&f6){f6();f6=null;f2.length=0}}}}}]}function dG(){var f4=10;var f2=eT("$rootScope");var f3=null;var f0=null;this.digestTtl=function(f5){if(arguments.length){f4=f5}return f4};function f1(f5){function f6(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=aP();this.$$ChildScope=null}f6.prototype=f5;return f6}this.$get=["$injector","$exceptionHandler","$parse","$browser",function(gj,gk,f7,gl){function f8(gm){gm.currentScope.$$destroyed=true}function gf(){this.$id=aP();this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=false;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$$isolateBindings=null}gf.prototype={constructor:gf,$new:function(gm,gn){var go;gn=gn||this;if(gm){go=new gf();go.$root=this.$root}else{if(!this.$$ChildScope){this.$$ChildScope=f1(this)}go=new this.$$ChildScope()}go.$parent=gn;go.$$prevSibling=gn.$$childTail;if(gn.$$childHead){gn.$$childTail.$$nextSibling=go;gn.$$childTail=go}else{gn.$$childHead=gn.$$childTail=go}if(gm||gn!=this){go.$on("$destroy",f8)}return go},$watch:function(gp,gm,gu,go){var gn=f7(gp);if(gn.$$watchDelegate){return gn.$$watchDelegate(this,gm,gu,gn,gp)}var gt=this,gr=gt.$$watchers,gs={fn:gm,last:gc,get:gn,exp:go||gp,eq:!!gu};f3=null;if(!bn(gm)){gs.fn=eD}if(!gr){gr=gt.$$watchers=[]}gr.unshift(gs);f9(this,1);return function gq(){if(eI(gr,gs)>=0){f9(gt,-1)}f3=null}},$watchGroup:function(gm,gn){var gt=new Array(gm.length);var gw=new Array(gm.length);var gq=[];var gv=this;var go=false;var gr=true;if(!gm.length){var gp=true;gv.$evalAsync(function(){if(gp){gn(gw,gw,gv)}});return function gs(){gp=false}}if(gm.length===1){return this.$watch(gm[0],function gu(gz,gx,gy){gw[0]=gz;gt[0]=gx;gn(gw,(gz===gx)?gw:gt,gy)})}bj(gm,function(gA,gy){var gx=gv.$watch(gA,function gz(gC,gB){gw[gy]=gC;gt[gy]=gB;if(!go){go=true;gv.$evalAsync(gu)}});gq.push(gx)});function gu(){go=false;if(gr){gr=false;gn(gw,gw,gv)}else{gn(gw,gt,gv)}}return function gs(){while(gq.length){gq.shift()()}}},$watchCollection:function(gr,gq){gs.$stateful=true;var gA=this;var go;var gm;var gz;var gv=(gq.length>1);var gy=0;var gw=f7(gr,gs);var gu=[];var gx={};var gt=true;var gp=0;function gs(gB){go=gB;var gG,gF,gE,gD,gH;if(x(go)){return}if(!s(go)){if(gm!==go){gm=go;gy++}}else{if(b2(go)){if(gm!==gu){gm=gu;gp=gm.length=0;gy++}gG=go.length;if(gp!==gG){gy++;gm.length=gp=gG}for(var gC=0;gC<gG;gC++){gH=gm[gC];gD=go[gC];gE=(gH!==gH)&&(gD!==gD);if(!gE&&(gH!==gD)){gy++;gm[gC]=gD}}}else{if(gm!==gx){gm=gx={};gp=0;gy++}gG=0;for(gF in go){if(go.hasOwnProperty(gF)){gG++;gD=go[gF];gH=gm[gF];if(gF in gm){gE=(gH!==gH)&&(gD!==gD);if(!gE&&(gH!==gD)){gy++;gm[gF]=gD}}else{gp++;gm[gF]=gD;gy++}}}if(gp>gG){gy++;for(gF in gm){if(!go.hasOwnProperty(gF)){gp--;delete gm[gF]}}}}}return gy}function gn(){if(gt){gt=false;gq(go,go,gA)}else{gq(go,gz,gA)}if(gv){if(!s(go)){gz=go}else{if(b2(go)){gz=new Array(go.length);for(var gC=0;gC<go.length;gC++){gz[gC]=go[gC]}}else{gz={};for(var gB in go){if(O.call(go,gB)){gz[gB]=go[gB]}}}}}}return this.$watch(gw,gn)},$digest:function(){var gw,gy,gA,gq,gn,gm,go=f4,gr,gv,gu=this,gt=[],gp,gz,gx;gg("$digest");gl.$$checkUrlChange();if(this===gh&&f0!==null){gl.defer.cancel(f0);gb()}f3=null;do{gm=false;gv=gu;while(f6.length){try{gx=f6.shift();gx.scope.$eval(gx.expression,gx.locals)}catch(gs){gk(gs)}f3=null}traverseScopesLoop:do{if((gq=gv.$$watchers)){gn=gq.length;while(gn--){try{gw=gq[gn];if(gw){if((gy=gw.get(gv))!==(gA=gw.last)&&!(gw.eq?dY(gy,gA):(typeof gy==="number"&&typeof gA==="number"&&isNaN(gy)&&isNaN(gA)))){gm=true;f3=gw;gw.last=gw.eq?fV(gy,null):gy;gw.fn(gy,((gA===gc)?gy:gA),gv);if(go<5){gp=4-go;if(!gt[gp]){gt[gp]=[]}gt[gp].push({msg:bn(gw.exp)?"fn: "+(gw.exp.name||gw.exp.toString()):gw.exp,newVal:gy,oldVal:gA})}}else{if(gw===f3){gm=false;break traverseScopesLoop}}}}catch(gs){gk(gs)}}}if(!(gr=((gv.$$watchersCount&&gv.$$childHead)||(gv!==gu&&gv.$$nextSibling)))){while(gv!==gu&&!(gr=gv.$$nextSibling)){gv=gv.$parent}}}while((gv=gr));if((gm||f6.length)&&!(go--)){ga();throw f2("infdig","{0} $digest() iterations reached. Aborting!\nWatchers fired in the last 5 iterations: {1}",f4,gt)}}while(gm||f6.length);ga();while(ge.length){try{ge.shift()()}catch(gs){gk(gs)}}},$destroy:function(){if(this.$$destroyed){return}var gn=this.$parent;this.$broadcast("$destroy");this.$$destroyed=true;if(this===gh){gl.$$applicationDestroyed()}f9(this,-this.$$watchersCount);for(var gm in this.$$listenerCount){gd(this,this.$$listenerCount[gm],gm)}if(gn&&gn.$$childHead==this){gn.$$childHead=this.$$nextSibling}if(gn&&gn.$$childTail==this){gn.$$childTail=this.$$prevSibling}if(this.$$prevSibling){this.$$prevSibling.$$nextSibling=this.$$nextSibling}if(this.$$nextSibling){this.$$nextSibling.$$prevSibling=this.$$prevSibling}this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=eD;this.$on=this.$watch=this.$watchGroup=function(){return eD};this.$$listeners={};this.$parent=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=this.$root=this.$$watchers=null},$eval:function(gn,gm){return f7(gn)(this,gm)},$evalAsync:function(gn,gm){if(!gh.$$phase&&!f6.length){gl.defer(function(){if(f6.length){gh.$digest()}})}f6.push({scope:this,expression:gn,locals:gm})},$$postDigest:function(gm){ge.push(gm)},$apply:function(gn){try{gg("$apply");return this.$eval(gn)}catch(gm){gk(gm)}finally{ga();try{gh.$digest()}catch(gm){gk(gm);throw gm}}},$applyAsync:function(go){var gn=this;go&&gi.push(gm);f5();function gm(){gn.$eval(go)}},$on:function(gn,go){var gq=this.$$listeners[gn];if(!gq){this.$$listeners[gn]=gq=[]}gq.push(go);var gp=this;do{if(!gp.$$listenerCount[gn]){gp.$$listenerCount[gn]=0}gp.$$listenerCount[gn]++}while((gp=gp.$parent));var gm=this;return function(){var gr=gq.indexOf(go);if(gr!==-1){gq[gr]=null;gd(gm,1,gn)}}},$emit:function(gn,gu){var gs=[],gq,gw=this,gv=false,gm={name:gn,targetScope:gw,stopPropagation:function(){gv=true},preventDefault:function(){gm.defaultPrevented=true},defaultPrevented:false},gp=fB([gm],arguments,1),gr,go;do{gq=gw.$$listeners[gn]||gs;gm.currentScope=gw;for(gr=0,go=gq.length;gr<go;gr++){if(!gq[gr]){gq.splice(gr,1);gr--;go--;continue}try{gq[gr].apply(null,gp)}catch(gt){gk(gt)}}if(gv){gm.currentScope=null;return gm}gw=gw.$parent}while(gw);gm.currentScope=null;return gm},$broadcast:function(gn,gv){var gt=this,gu=gt,gr=gt,gm={name:gn,targetScope:gt,preventDefault:function(){gm.defaultPrevented=true},defaultPrevented:false};if(!gt.$$listenerCount[gn]){return gm}var gp=fB([gm],arguments,1),gw,gq,go;while((gu=gr)){gm.currentScope=gu;gw=gu.$$listeners[gn]||[];for(gq=0,go=gw.length;gq<go;gq++){if(!gw[gq]){gw.splice(gq,1);gq--;go--;continue}try{gw[gq].apply(null,gp)}catch(gs){gk(gs)}}if(!(gr=((gu.$$listenerCount[gn]&&gu.$$childHead)||(gu!==gt&&gu.$$nextSibling)))){while(gu!==gt&&!(gr=gu.$$nextSibling)){gu=gu.$parent}}}gm.currentScope=null;return gm}};var gh=new gf();var f6=gh.$$asyncQueue=[];var ge=gh.$$postDigestQueue=[];var gi=gh.$$applyAsyncQueue=[];return gh;function gg(gm){if(gh.$$phase){throw f2("inprog","{0} already in progress",gh.$$phase)}gh.$$phase=gm}function ga(){gh.$$phase=null}function f9(gn,gm){do{gn.$$watchersCount+=gm}while((gn=gn.$parent))}function gd(go,gn,gm){do{go.$$listenerCount[gm]-=gn;if(go.$$listenerCount[gm]===0){delete go.$$listenerCount[gm]}}while((go=go.$parent))}function gc(){}function gb(){while(gi.length){try{gi.shift()()}catch(gm){gk(gm)}}f0=null}function f5(){if(f0===null){f0=gl.defer(function(){gh.$apply(gb)})}}}]}function dR(){var f1=/^\s*(https?|ftp|mailto|tel|file):/,f0=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(f2){if(eX(f2)){f1=f2;return this}return f1};this.imgSrcSanitizationWhitelist=function(f2){if(eX(f2)){f0=f2;return this}return f0};this.$get=function(){return function f2(f5,f6){var f4=f6?f0:f1;var f3;f3=r(f5).href;if(f3!==""&&!f3.match(f4)){return"unsafe:"+f3}return f5}}}var dJ=eT("$sce");var bM={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"};function cS(f0){if(f0==="self"){return f0}else{if(w(f0)){if(f0.indexOf("***")>-1){throw dJ("iwcard","Illegal sequence *** in string matcher.  String: {0}",f0)}f0=ex(f0).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*");return new RegExp("^"+f0+"$")}else{if(az(f0)){return new RegExp("^"+f0.source+"$")}else{throw dJ("imatcher",'Matchers may only be "self", string patterns or RegExp objects')}}}}function aQ(f0){var f1=[];if(eX(f0)){bj(f0,function(f2){f1.push(cS(f2))})}return f1}function bw(){this.SCE_CONTEXTS=bM;var f1=["self"],f0=[];this.resourceUrlWhitelist=function(f2){if(arguments.length){f1=aQ(f2)}return f1};this.resourceUrlBlacklist=function(f2){if(arguments.length){f0=aQ(f2)}return f0};this.$get=["$injector",function(f7){var f9=function f9(gc){throw dJ("unsafe","Attempting to use an unsafe value in a safe context.")};if(f7.has("$sanitize")){f9=f7.get("$sanitize")}function f2(gd,gc){if(gd==="self"){return dD(gc)}else{return !!gd.exec(gc.href)}}function f4(gc){var ge=r(gc.toString());var gd,gg,gf=false;for(gd=0,gg=f1.length;gd<gg;gd++){if(f2(f1[gd],ge)){gf=true;break}}if(gf){for(gd=0,gg=f0.length;gd<gg;gd++){if(f2(f0[gd],ge)){gf=false;break}}}return gf}function ga(gd){var gc=function gg(gh){this.$$unwrapTrustedValue=function(){return gh}};if(gd){gc.prototype=new gd()}gc.prototype.valueOf=function gf(){return this.$$unwrapTrustedValue()};gc.prototype.toString=function ge(){return this.$$unwrapTrustedValue().toString()};return gc}var f8=ga(),f6={};f6[bM.HTML]=ga(f8);f6[bM.CSS]=ga(f8);f6[bM.URL]=ga(f8);f6[bM.JS]=ga(f8);f6[bM.RESOURCE_URL]=ga(f6[bM.URL]);function f5(gc,gd){var ge=(f6.hasOwnProperty(gc)?f6[gc]:null);if(!ge){throw dJ("icontext","Attempted to trust a value in invalid context. Context: {0}; Value: {1}",gc,gd)}if(gd===null||gd===fE||gd===""){return gd}if(typeof gd!=="string"){throw dJ("itype","Attempted to trust a non-string value in a content requiring a string: Context: {0}",gc)}return new ge(gd)}function gb(gc){if(gc instanceof f8){return gc.$$unwrapTrustedValue()}else{return gc}}function f3(gd,ge){if(ge===null||ge===fE||ge===""){return ge}var gc=(f6.hasOwnProperty(gd)?f6[gd]:null);if(gc&&ge instanceof gc){return ge.$$unwrapTrustedValue()}if(gd===bM.RESOURCE_URL){if(f4(ge)){return ge}else{throw dJ("insecurl","Blocked loading resource from url not allowed by $sceDelegate policy.  URL: {0}",ge.toString())}}else{if(gd===bM.HTML){return f9(ge)}}throw dJ("unsafe","Attempting to use an unsafe value in a safe context.")}return{trustAs:f5,getTrusted:f3,valueOf:gb}}]}function bd(){var f0=true;this.enabled=function(f1){if(arguments.length){f0=!!f1}return f0};this.$get=["$parse","$sceDelegate",function(f4,f7){if(f0&&e8<8){throw dJ("iequirks","Strict Contextual Escaping does not support Internet Explorer version < 11 in quirks mode.  You can fix this by adding the text <!doctype html> to the top of your HTML document.  See http://docs.angularjs.org/api/ng.$sce for more information.")}var f6=d8(bM);f6.isEnabled=function(){return f0};f6.trustAs=f7.trustAs;f6.getTrusted=f7.getTrusted;f6.valueOf=f7.valueOf;if(!f0){f6.trustAs=f6.getTrusted=function(f8,f9){return f9};f6.valueOf=aU}f6.parseAs=function f3(f9,ga){var f8=f4(ga);if(f8.literal&&f8.constant){return f8}else{return f4(ga,function(gb){return f6.getTrusted(f9,gb)})}};var f5=f6.parseAs,f2=f6.getTrusted,f1=f6.trustAs;bj(bM,function(f9,f8){var ga=db(f8);f6[ar("parse_as_"+ga)]=function(gb){return f5(f9,gb)};f6[ar("get_trusted_"+ga)]=function(gb){return f2(f9,gb)};f6[ar("trust_as_"+ga)]=function(gb){return f1(f9,gb)}});return f6}]}function dW(){this.$get=["$window","$document",function(f4,f7){var f5={},f6=de((/android (\d+)/.exec(db((f4.navigator||{}).userAgent))||[])[1]),f2=/Boxee/i.test((f4.navigator||{}).userAgent),ga=f7[0]||{},f0,f3=/^(Moz|webkit|ms)(?=[A-Z])/,f9=ga.body&&ga.body.style,gb=false,gc=false,f8;if(f9){for(var f1 in f9){if(f8=f3.exec(f1)){f0=f8[0];f0=f0.substr(0,1).toUpperCase()+f0.substr(1);break}}if(!f0){f0=("WebkitOpacity" in f9)&&"webkit"}gb=!!(("transition" in f9)||(f0+"Transition" in f9));gc=!!(("animation" in f9)||(f0+"Animation" in f9));if(f6&&(!gb||!gc)){gb=w(f9.webkitTransition);gc=w(f9.webkitAnimation)}}return{history:!!(f4.history&&f4.history.pushState&&!(f6<4)&&!f2),hasEvent:function(gd){if(gd==="input"&&e8<=11){return false}if(x(f5[gd])){var ge=ga.createElement("div");f5[gd]="on"+gd in ge}return f5[gd]},csp:al(),vendorPrefix:f0,transitions:gb,animations:gc,android:f6}}]}var C=eT("$compile");function d6(){this.$get=["$templateCache","$http","$q","$sce",function(f0,f4,f2,f1){function f3(f7,f8){f3.totalPendingRequests++;if(!w(f7)||!f0.get(f7)){f7=f1.getTrustedResourceUrl(f7)}var f6=f4.defaults&&f4.defaults.transformResponse;if(U(f6)){f6=f6.filter(function(ga){return ga!==B})}else{if(f6===B){f6=null}}var f5={cache:f0,transformResponse:f6};return f4.get(f7,f5)["finally"](function(){f3.totalPendingRequests--}).then(function(ga){f0.put(f7,ga.data);return ga.data},f9);function f9(ga){if(!f8){throw C("tpload","Failed to load template: {0} (HTTP status: {1} {2})",f7,ga.status,ga.statusText)}return f2.reject(ga)}}f3.totalPendingRequests=0;return f3}]}function fI(){this.$get=["$rootScope","$browser","$location",function(f1,f0,f3){var f2={};f2.findBindings=function(f4,f7,f6){var f8=f4.getElementsByClassName("ng-binding");var f5=[];bj(f8,function(ga){var f9=cY.element(ga).data("$binding");if(f9){bj(f9,function(gb){if(f6){var gc=new RegExp("(^|\\s)"+ex(f7)+"(\\s|\\||$)");if(gc.test(gb)){f5.push(ga)}}else{if(gb.indexOf(f7)!=-1){f5.push(ga)}}})}});return f5};f2.findModels=function(f6,gb,f9){var f8=["ng-","data-ng-","ng\\:"];for(var ga=0;ga<f8.length;++ga){var f5=f9?"=":"*=";var f4="["+f8[ga]+"model"+f5+'"'+gb+'"]';var f7=f6.querySelectorAll(f4);if(f7.length){return f7}}};f2.getLocation=function(){return f3.url()};f2.setLocation=function(f4){if(f4!==f3.url()){f3.url(f4);f1.$digest()}};f2.whenStable=function(f4){f0.notifyWhenNoOutstandingRequests(f4)};return f2}]}function fW(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(f1,f0,f3,f2,f4){var f5={};function f6(gb,ga,f7){if(!bn(gb)){f7=ga;ga=gb;gb=eD}var f9=eV(arguments,3),ge=(eX(f7)&&!f7),f8=(ge?f2:f3).defer(),gd=f8.promise,gc;gc=f0.defer(function(){try{f8.resolve(gb.apply(null,f9))}catch(gf){f8.reject(gf);f4(gf)}finally{delete f5[gd.$$timeoutId]}if(!ge){f1.$apply()}},ga);gd.$$timeoutId=gc;f5[gc]=f8;return gd}f6.cancel=function(f7){if(f7&&f7.$$timeoutId in f5){f5[f7.$$timeoutId].reject("canceled");delete f5[f7.$$timeoutId];return f0.defer.cancel(f7.$$timeoutId)}return false};return f6}]}var bS=el.createElement("a");var fA=r(dV.location.href);function r(f1){var f0=f1;if(e8){bS.setAttribute("href",f0);f0=bS.href}bS.setAttribute("href",f0);return{href:bS.href,protocol:bS.protocol?bS.protocol.replace(/:$/,""):"",host:bS.host,search:bS.search?bS.search.replace(/^\?/,""):"",hash:bS.hash?bS.hash.replace(/^#/,""):"",hostname:bS.hostname,port:bS.port,pathname:(bS.pathname.charAt(0)==="/")?bS.pathname:"/"+bS.pathname}}function dD(f1){var f0=(w(f1))?r(f1):f1;return(f0.protocol===fA.protocol&&f0.host===fA.host)}function N(){this.$get=V(dV)}function e6(f4){var f2=f4[0]||{};var f1={};var f3="";function f0(f6){try{return decodeURIComponent(f6)}catch(f5){return f6}}return function(){var f5,f9,f8,f7,f6;var ga=f2.cookie||"";if(ga!==f3){f3=ga;f5=f3.split("; ");f1={};for(f8=0;f8<f5.length;f8++){f9=f5[f8];f7=f9.indexOf("=");if(f7>0){f6=f0(f9.substring(0,f7));if(f1[f6]===fE){f1[f6]=f0(f9.substring(f7+1))}}}}return f1}}e6.$inject=["$document"];function dH(){this.$get=e6}bo.$inject=["$provide"];function bo(f1){var f2="Filter";function f0(f4,f3){if(s(f4)){var f5={};bj(f4,function(f7,f6){f5[f6]=f0(f6,f7)});return f5}else{return f1.factory(f4+f2,f3)}}this.register=f0;this.$get=["$injector",function(f3){return function(f4){return f3.get(f4+f2)}}];f0("currency",cg);f0("date",aJ);f0("filter",ck);f0("json",e3);f0("limitTo",fT);f0("lowercase",bm);f0("number",eA);f0("orderBy",cG);f0("uppercase",ap)}function ck(){return function(f5,f3,f0){if(!b2(f5)){if(f5==null){return f5}else{throw eT("filter")("notarray","Expected array but received: {0}",f5)}}var f1=dT(f3);var f4;var f2;switch(f1){case"function":f4=f3;break;case"boolean":case"null":case"number":case"string":f2=true;case"object":f4=eg(f3,f0,f2);break;default:return f5}return Array.prototype.filter.call(f5,f4)}}function eg(f3,f0,f2){var f1=s(f3)&&("$" in f3);var f4;if(f0===true){f0=dY}else{if(!bn(f0)){f0=function(f6,f5){if(x(f6)){return false}if((f6===null)||(f5===null)){return f6===f5}if(s(f5)||(s(f6)&&!dx(f6))){return false}f6=db(""+f6);f5=db(""+f5);return f6.indexOf(f5)!==-1}}}f4=function(f5){if(f1&&!s(f5)){return aX(f5,f3.$,f0,false)}return aX(f5,f3,f0,f2)};return f4}function aX(ga,f3,f0,f1,f4){var f6=dT(ga);var f2=dT(f3);if((f2==="string")&&(f3.charAt(0)==="!")){return !aX(ga,f3.substring(1),f0,f1)}else{if(U(ga)){return ga.some(function(gb){return aX(gb,f3,f0,f1)})}}switch(f6){case"object":var f9;if(f1){for(f9 in ga){if((f9.charAt(0)!=="$")&&aX(ga[f9],f3,f0,true)){return true}}return f4?false:aX(ga,f3,f0,false)}else{if(f2==="object"){for(f9 in f3){var f8=f3[f9];if(bn(f8)||x(f8)){continue}var f5=f9==="$";var f7=f5?ga:ga[f9];if(!aX(f7,f8,f0,f5,f5)){return false}}return true}else{return f0(ga,f3)}}break;case"function":return false;default:return f0(ga,f3)}}function dT(f0){return(f0===null)?"null":typeof f0}cg.$inject=["$locale"];function cg(f1){var f0=f1.NUMBER_FORMATS;return function(f3,f2,f4){if(x(f2)){f2=f0.CURRENCY_SYM}if(x(f4)){f4=f0.PATTERNS[1].maxFrac}return(f3==null)?f3:d7(f3,f0.PATTERNS[1],f0.GROUP_SEP,f0.DECIMAL_SEP,f4).replace(/\u00A4/g,f2)}}eA.$inject=["$locale"];function eA(f1){var f0=f1.NUMBER_FORMATS;return function(f2,f3){return(f2==null)?f2:d7(f2,f0.PATTERNS[0],f0.GROUP_SEP,f0.DECIMAL_SEP,f3)}}var cm=".";function d7(f0,gg,f9,f6,f1){if(s(f0)){return""}var ga=f0<0;f0=Math.abs(f0);var f3=f0===Infinity;if(!f3&&!isFinite(f0)){return""}var gh=f0+"",gc="",ge=false,gd=[];if(f3){gc="\u221e"}if(!f3&&gh.indexOf("e")!==-1){var f7=gh.match(/([\d\.]+)e(-?)(\d+)/);if(f7&&f7[2]=="-"&&f7[3]>f1+1){f0=0}else{gc=gh;ge=true}}if(!f3&&!ge){var f2=(gh.split(cm)[1]||"").length;if(x(f1)){f1=Math.min(Math.max(gg.minFrac,f2),gg.maxFrac)}f0=+(Math.round(+(f0.toString()+"e"+f1)).toString()+"e"+-f1);var f4=(""+f0).split(cm);var gi=f4[0];f4=f4[1]||"";var gf,f5=0,gb=gg.lgSize,f8=gg.gSize;if(gi.length>=(gb+f8)){f5=gi.length-gb;for(gf=0;gf<f5;gf++){if((f5-gf)%f8===0&&gf!==0){gc+=f9}gc+=gi.charAt(gf)}}for(gf=f5;gf<gi.length;gf++){if((gi.length-gf)%gb===0&&gf!==0){gc+=f9}gc+=gi.charAt(gf)}while(f4.length<f1){f4+="0"}if(f1&&f1!=="0"){gc+=f6+f4.substr(0,f1)}}else{if(f1>0&&f0<1){gc=f0.toFixed(f1);f0=parseFloat(gc)}}if(f0===0){ga=false}gd.push(ga?gg.negPre:gg.posPre,gc,ga?gg.negSuf:gg.posSuf);return gd.join("")}function bt(f1,f2,f0){var f3="";if(f1<0){f3="-";f1=-f1}f1=""+f1;while(f1.length<f2){f1="0"+f1}if(f0){f1=f1.substr(f1.length-f2)}return f3+f1}function dC(f1,f2,f3,f0){f3=f3||0;return function(f4){var f5=f4["get"+f1]();if(f3>0||f5>-f3){f5+=f3}if(f5===0&&f3==-12){f5=12}return bt(f5,f2,f0)}}function dn(f1,f0){return function(f4,f2){var f5=f4["get"+f1]();var f3=a4(f0?("SHORT"+f1):f1);return f2[f3][f5]}}function P(f2,f0,f4){var f1=-1*f4;var f3=(f1>=0)?"+":"";f3+=bt(Math[f1>0?"floor":"ceil"](f1/60),2)+bt(Math.abs(f1%60),2);return f3}function fu(f1){var f0=(new Date(f1,0,1)).getDay();return new Date(f1,0,((f0<=4)?5:12)-f0)}function dI(f0){return new Date(f0.getFullYear(),f0.getMonth(),f0.getDate()+(4-f0.getDay()))}function ch(f0){return function(f3){var f4=fu(f3.getFullYear()),f2=dI(f3);var f5=+f2-+f4,f1=1+Math.round(f5/604800000);return bt(f1,f0)}}function J(f1,f0){return f1.getHours()<12?f0.AMPMS[0]:f0.AMPMS[1]}function fn(f1,f0){return f1.getFullYear()<=0?f0.ERAS[0]:f0.ERAS[1]}function bV(f1,f0){return f1.getFullYear()<=0?f0.ERANAMES[0]:f0.ERANAMES[1]}var eF={yyyy:dC("FullYear",4),yy:dC("FullYear",2,0,true),y:dC("FullYear",1),MMMM:dn("Month"),MMM:dn("Month",true),MM:dC("Month",2,1),M:dC("Month",1,1),dd:dC("Date",2),d:dC("Date",1),HH:dC("Hours",2),H:dC("Hours",1),hh:dC("Hours",2,-12),h:dC("Hours",1,-12),mm:dC("Minutes",2),m:dC("Minutes",1),ss:dC("Seconds",2),s:dC("Seconds",1),sss:dC("Milliseconds",3),EEEE:dn("Day"),EEE:dn("Day",true),a:J,Z:P,ww:ch(2),w:ch(1),G:fn,GG:fn,GGG:fn,GGGG:bV};var em=/((?:[^yMdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,eP=/^\-?\d+$/;aJ.$inject=["$locale"];function aJ(f1){var f0=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;function f2(f8){var f7;if(f7=f8.match(f0)){var f5=new Date(0),gb=0,f9=0,ga=f7[8]?f5.setUTCFullYear:f5.setFullYear,gc=f7[8]?f5.setUTCHours:f5.setHours;if(f7[9]){gb=de(f7[9]+f7[10]);f9=de(f7[9]+f7[11])}ga.call(f5,de(f7[1]),de(f7[2])-1,de(f7[3]));var f6=de(f7[4]||0)-gb;var f4=de(f7[5]||0)-f9;var gd=de(f7[6]||0);var f3=Math.round(parseFloat("0."+(f7[7]||0))*1000);gc.call(f5,f6,f4,gd,f3);return f5}return f8}return function(f4,f8,f6){var ga="",f7=[],f5,f3;f8=f8||"mediumDate";f8=f1.DATETIME_FORMATS[f8]||f8;if(w(f4)){f4=eP.test(f4)?de(f4):f2(f4)}if(p(f4)){f4=new Date(f4)}if(!fe(f4)||!isFinite(f4.getTime())){return f4}while(f8){f3=em.exec(f8);if(f3){f7=fB(f7,f3,1);f8=f7.pop()}else{f7.push(f8);f8=null}}var f9=f4.getTimezoneOffset();if(f6){f9=fF(f6,f4.getTimezoneOffset());f4=a0(f4,f6,true)}bj(f7,function(gb){f5=eF[gb];ga+=f5?f5(f4,f1.DATETIME_FORMATS,f9):gb.replace(/(^'|'$)/g,"").replace(/''/g,"'")});return ga}}function e3(){return function(f0,f1){if(x(f1)){f1=2}return aA(f0,f1)}}var bm=V(db);var ap=V(a4);function fT(){return function(f1,f0,f2){if(Math.abs(Number(f0))===Infinity){f0=Number(f0)}else{f0=de(f0)}if(isNaN(f0)){return f1}if(p(f1)){f1=f1.toString()}if(!U(f1)&&!w(f1)){return f1}f2=(!f2||isNaN(f2))?0:de(f2);f2=(f2<0&&f2>=-f1.length)?f1.length+f2:f2;if(f0>=0){return f1.slice(f2,f2+f0)}else{if(f2===0){return f1.slice(f0,f1.length)}else{return f1.slice(Math.max(0,f2+f0),f2)}}}}cG.$inject=["$parse"];function cG(f3){return function(gc,f6,gb){if(!(b2(gc))){return gc}if(!U(f6)){f6=[f6]}if(f6.length===0){f6=["+"]}var f9=f0(f6,gb);var ga=Array.prototype.map.call(gc,f7);ga.sort(f8);gc=ga.map(function(gd){return gd.value});return gc;function f7(ge,gd){return{value:ge,predicateValues:f9.map(function(gf){return f5(gf.get(ge),gd)})}}function f8(gh,gg){var gd=0;for(var ge=0,gf=f9.length;ge<gf;++ge){gd=f4(gh.predicateValues[ge],gg.predicateValues[ge])*f9[ge].descending;if(gd){break}}return gd}};function f0(f6,f7){f7=f7?-1:1;return f6.map(function(f8){var gb=1,f9=aU;if(bn(f8)){f9=f8}else{if(w(f8)){if((f8.charAt(0)=="+"||f8.charAt(0)=="-")){gb=f8.charAt(0)=="-"?-1:1;f8=f8.substring(1)}if(f8!==""){f9=f3(f8);if(f9.constant){var ga=f9();f9=function(gc){return gc[ga]}}}}}return{get:f9,descending:gb*f7}})}function f2(f6){switch(typeof f6){case"number":case"boolean":case"string":return true;default:return false}}function f1(f7,f6){if(typeof f7.valueOf==="function"){f7=f7.valueOf();if(f2(f7)){return f7}}if(dx(f7)){f7=f7.toString();if(f2(f7)){return f7}}return f6}function f5(f8,f6){var f7=typeof f8;if(f8===null){f7="string";f8="null"}else{if(f7==="string"){f8=f8.toLowerCase()}else{if(f7==="object"){f8=f1(f8,f6)}}}return{value:f8,type:f7}}function f4(f8,f7){var f6=0;if(f8.type===f7.type){if(f8.value!==f7.value){f6=f8.value<f7.value?-1:1}}else{f6=f8.type<f7.type?-1:1}return f6}}function bE(f0){if(bn(f0)){f0={link:f0}}f0.restrict=f0.restrict||"AC";return V(f0)}var bf=V({restrict:"E",compile:function(f1,f0){if(!f0.href&&!f0.xlinkHref){return function(f4,f3){if(f3[0].nodeName.toLowerCase()!=="a"){return}var f2=eC.call(f3.prop("href"))==="[object SVGAnimatedString]"?"xlink:href":"href";f3.on("click",function(f5){if(!f3.attr(f2)){f5.preventDefault()}})}}}});var ed={};bj(cE,function(f3,f2){if(f3=="multiple"){return}function f0(f8,f7,f5){f8.$watch(f5[f4],function f6(f9){f5.$set(f2,!!f9)})}var f4=bl("ng-"+f2);var f1=f0;if(f3==="checked"){f1=function(f7,f6,f5){if(f5.ngModel!==f5[f4]){f0(f7,f6,f5)}}}ed[f4]=function(){return{restrict:"A",priority:100,link:f1}}});bj(fQ,function(f1,f0){ed[f0]=function(){return{priority:100,link:function(f5,f4,f2){if(f0==="ngPattern"&&f2.ngPattern.charAt(0)=="/"){var f3=f2.ngPattern.match(cq);if(f3){f2.$set("ngPattern",new RegExp(f3[1],f3[2]));return}}f5.$watch(f2[f0],function f6(f7){f2.$set(f0,f7)})}}}});bj(["src","srcset","href"],function(f0){var f1=bl("ng-"+f0);ed[f1]=function(){return{priority:99,link:function(f5,f4,f2){var f6=f0,f3=f0;if(f0==="href"&&eC.call(f4.prop("href"))==="[object SVGAnimatedString]"){f3="xlinkHref";f2.$attr[f3]="xlink:href";f6=null}f2.$observe(f1,function(f7){if(!f7){if(f0==="href"){f2.$set(f3,null)}return}f2.$set(f3,f7);if(e8&&f6){f4.prop(f6,f2[f3])}})}}}});var fD={$addControl:eD,$$renameControl:eU,$removeControl:eD,$setValidity:eD,$setDirty:eD,$setPristine:eD,$setSubmitted:eD},c2="ng-submitted";function eU(f1,f0){f1.$name=f0}cN.$inject=["$element","$attrs","$scope","$animate","$interpolate"];function cN(f4,f3,f2,f7,f6){var f5=this,f1=[];var f0=f5.$$parentForm=f4.parent().controller("form")||fD;f5.$error={};f5.$$success={};f5.$pending=fE;f5.$name=f6(f3.name||f3.ngForm||"")(f2);f5.$dirty=false;f5.$pristine=true;f5.$valid=true;f5.$invalid=false;f5.$submitted=false;f0.$addControl(f5);f5.$rollbackViewValue=function(){bj(f1,function(f8){f8.$rollbackViewValue()})};f5.$commitViewValue=function(){bj(f1,function(f8){f8.$commitViewValue()})};f5.$addControl=function(f8){fa(f8.$name,"input");f1.push(f8);if(f8.$name){f5[f8.$name]=f8}};f5.$$renameControl=function(ga,f8){var f9=ga.$name;if(f5[f9]===ga){delete f5[f9]}f5[f8]=ga;ga.$name=f8};f5.$removeControl=function(f8){if(f8.$name&&f5[f8.$name]===f8){delete f5[f8.$name]}bj(f5.$pending,function(ga,f9){f5.$setValidity(f9,null,f8)});bj(f5.$error,function(ga,f9){f5.$setValidity(f9,null,f8)});bj(f5.$$success,function(ga,f9){f5.$setValidity(f9,null,f8)});eI(f1,f8)};T({ctrl:this,$element:f4,set:function(ga,gc,f8){var gb=ga[gc];if(!gb){ga[gc]=[f8]}else{var f9=gb.indexOf(f8);if(f9===-1){gb.push(f8)}}},unset:function(f9,gb,f8){var ga=f9[gb];if(!ga){return}eI(ga,f8);if(ga.length===0){delete f9[gb]}},parentForm:f0,$animate:f7});f5.$setDirty=function(){f7.removeClass(f4,aq);f7.addClass(f4,fR);f5.$dirty=true;f5.$pristine=false;f0.$setDirty()};f5.$setPristine=function(){f7.setClass(f4,aq,fR+" "+c2);f5.$dirty=false;f5.$pristine=true;f5.$submitted=false;bj(f1,function(f8){f8.$setPristine()})};f5.$setUntouched=function(){bj(f1,function(f8){f8.$setUntouched()})};f5.$setSubmitted=function(){f7.addClass(f4,c2);f5.$submitted=true;f0.$setSubmitted()}}var ab=function(f0){return["$timeout",function(f2){var f1={name:"form",restrict:f0?"EAC":"E",controller:cN,compile:function f3(f7,f4){f7.addClass(aq).addClass(bP);var f6=f4.name?"name":(f0&&f4.ngForm?"ngForm":false);return{pre:function f5(gb,ga,f8,f9){if(!("action" in f8)){var gd=function(ge){gb.$apply(function(){f9.$commitViewValue();f9.$setSubmitted()});ge.preventDefault()};cp(ga[0],"submit",gd);ga.on("$destroy",function(){f2(function(){e2(ga[0],"submit",gd)},0,false)})}var gc=f9.$$parentForm;if(f6){e0(gb,f9.$name,f9,f9.$name);f8.$observe(f6,function(ge){if(f9.$name===ge){return}e0(gb,f9.$name,fE,f9.$name);gc.$$renameControl(f9,ge);e0(gb,f9.$name,f9,f9.$name)})}ga.on("$destroy",function(){gc.$removeControl(f9);if(f6){e0(gb,f8[f6],fE,f9.$name)}fU(f9,fD)})}}}};return f1}]};var bX=ab();var bL=ab(true);var co=/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/;var fg=/^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/;var fL=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;var eZ=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;var fx=/^(\d{4})-(\d{2})-(\d{2})$/;var fw=/^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;var e4=/^(\d{4})-W(\d\d)$/;var eh=/^(\d{4})-(\d\d)$/;var du=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/;var Z={text:bT,date:bW("date",fx,ek(fx,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":bW("datetimelocal",fw,ek(fw,["yyyy","MM","dd","HH","mm","ss","sss"]),"yyyy-MM-ddTHH:mm:ss.sss"),time:bW("time",du,ek(du,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:bW("week",e4,bN,"yyyy-Www"),month:bW("month",eh,ek(eh,["yyyy","MM"]),"yyyy-MM"),number:cO,url:eN,email:fC,radio:cw,checkbox:f,hidden:eD,button:eD,submit:eD,reset:eD,file:eD};function bD(f0){f0.$formatters.push(function(f1){return f0.$isEmpty(f1)?f1:f1.toString()})}function bT(f3,f2,f1,f4,f5,f0){ao(f3,f2,f1,f4,f5,f0);bD(f4)}function ao(f9,f3,f4,f0,f1,ga){var f5=db(f3[0].type);if(!f1.android){var f8=false;f3.on("compositionstart",function(gb){f8=true});f3.on("compositionend",function(){f8=false;f2()})}var f2=function(gc){if(f6){ga.defer.cancel(f6);f6=null}if(f8){return}var gd=f3.val(),gb=gc&&gc.type;if(f5!=="password"&&(!f4.ngTrim||f4.ngTrim!=="false")){gd=aL(gd)}if(f0.$viewValue!==gd||(gd===""&&f0.$$hasNativeValidators)){f0.$setViewValue(gd,gb)}};if(f1.hasEvent("input")){f3.on("input",f2)}else{var f6;var f7=function(gd,gc,gb){if(!f6){f6=ga.defer(function(){f6=null;if(!gc||gc.value!==gb){f2(gd)}})}};f3.on("keydown",function(gc){var gb=gc.keyCode;if(gb===91||(15<gb&&gb<19)||(37<=gb&&gb<=40)){return}f7(gc,this,this.value)});if(f1.hasEvent("paste")){f3.on("paste cut",f7)}}f3.on("change",f2);f0.$render=function(){f3.val(f0.$isEmpty(f0.$viewValue)?"":f0.$viewValue)}}function bN(ga,f5){if(fe(ga)){return ga}if(w(ga)){e4.lastIndex=0;var f4=e4.exec(ga);if(f4){var f6=+f4[1],f1=+f4[2],f7=0,f3=0,f8=0,f2=0,f0=fu(f6),f9=(f1-1)*7;if(f5){f7=f5.getHours();f3=f5.getMinutes();f8=f5.getSeconds();f2=f5.getMilliseconds()}return new Date(f6,0,f0.getDate()+f9,f7,f3,f8,f2)}}return NaN}function ek(f1,f0){return function(f3,f2){var f5,f4;if(fe(f3)){return f3}if(w(f3)){if(f3.charAt(0)=='"'&&f3.charAt(f3.length-1)=='"'){f3=f3.substring(1,f3.length-1)}if(co.test(f3)){return new Date(f3)}f1.lastIndex=0;f5=f1.exec(f3);if(f5){f5.shift();if(f2){f4={yyyy:f2.getFullYear(),MM:f2.getMonth()+1,dd:f2.getDate(),HH:f2.getHours(),mm:f2.getMinutes(),ss:f2.getSeconds(),sss:f2.getMilliseconds()/1000}}else{f4={yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0}}bj(f5,function(f7,f6){if(f6<f0.length){f4[f0[f6]]=+f7}});return new Date(f4.yyyy,f4.MM-1,f4.dd,f4.HH,f4.mm,f4.ss||0,f4.sss*1000||0)}}return NaN}}function bW(f0,f2,f4,f3){return function f1(gg,f9,gb,f5,f6,gh,gc){dd(gg,f9,gb,f5);ao(gg,f9,gb,f5,f6,gh);var ga=f5&&f5.$options&&f5.$options.timezone;var gd;f5.$$parserName=f0;f5.$parsers.push(function(gj){if(f5.$isEmpty(gj)){return null}if(f2.test(gj)){var gi=f4(gj,gd);if(ga){gi=a0(gi,ga)}return gi}return fE});f5.$formatters.push(function(gi){if(gi&&!fe(gi)){throw eJ("datefmt","Expected `{0}` to be a date",gi)}if(f8(gi)){gd=gi;if(gd&&ga){gd=a0(gd,ga,true)}return gc("date")(gi,f3,ga)}else{gd=null;return""}});if(eX(gb.min)||gb.ngMin){var ge;f5.$validators.min=function(gi){return !f8(gi)||x(ge)||f4(gi)>=ge};gb.$observe("min",function(gi){ge=f7(gi);f5.$validate()})}if(eX(gb.max)||gb.ngMax){var gf;f5.$validators.max=function(gi){return !f8(gi)||x(gf)||f4(gi)<=gf};gb.$observe("max",function(gi){gf=f7(gi);f5.$validate()})}function f8(gi){return gi&&!(gi.getTime&&gi.getTime()!==gi.getTime())}function f7(gi){return eX(gi)?(fe(gi)?gi:f4(gi)):fE}}}function dd(f3,f2,f0,f5){var f4=f2[0];var f1=f5.$$hasNativeValidators=s(f4.validity);if(f1){f5.$parsers.push(function(f7){var f6=f2.prop(fv)||{};return f6.badInput&&!f6.typeMismatch?fE:f7})}}function cO(f4,f3,f2,f5,f6,f1){dd(f4,f3,f2,f5);ao(f4,f3,f2,f5,f6,f1);f5.$$parserName="number";f5.$parsers.push(function(f8){if(f5.$isEmpty(f8)){return null}if(eZ.test(f8)){return parseFloat(f8)}return fE});f5.$formatters.push(function(f8){if(!f5.$isEmpty(f8)){if(!p(f8)){throw eJ("numfmt","Expected `{0}` to be a number",f8)}f8=f8.toString()}return f8});if(eX(f2.min)||f2.ngMin){var f0;f5.$validators.min=function(f8){return f5.$isEmpty(f8)||x(f0)||f8>=f0};f2.$observe("min",function(f8){if(eX(f8)&&!p(f8)){f8=parseFloat(f8,10)}f0=p(f8)&&!isNaN(f8)?f8:fE;f5.$validate()})}if(eX(f2.max)||f2.ngMax){var f7;f5.$validators.max=function(f8){return f5.$isEmpty(f8)||x(f7)||f8<=f7};f2.$observe("max",function(f8){if(eX(f8)&&!p(f8)){f8=parseFloat(f8,10)}f7=p(f8)&&!isNaN(f8)?f8:fE;f5.$validate()})}}function eN(f3,f2,f1,f4,f5,f0){ao(f3,f2,f1,f4,f5,f0);bD(f4);f4.$$parserName="url";f4.$validators.url=function(f6,f8){var f7=f6||f8;return f4.$isEmpty(f7)||fg.test(f7)}}function fC(f3,f2,f1,f4,f5,f0){ao(f3,f2,f1,f4,f5,f0);bD(f4);f4.$$parserName="email";f4.$validators.email=function(f6,f8){var f7=f6||f8;return f4.$isEmpty(f7)||fL.test(f7)}}function cw(f2,f1,f0,f4){if(x(f0.name)){f1.attr("name",aP())}var f3=function(f5){if(f1[0].checked){f4.$setViewValue(f0.value,f5&&f5.type)}};f1.on("click",f3);f4.$render=function(){var f5=f0.value;f1[0].checked=(f5==f4.$viewValue)};f0.$observe("value",f4.$render)}function bq(f2,f1,f0,f4,f5){var f3;if(eX(f4)){f3=f2(f4);if(!f3.constant){throw eT("ngModel")("constexpr","Expected constant expression for `{0}`, but saw `{1}`.",f0,f4)}return f3(f1)}return f5}function f(f9,f5,f6,f0,f1,ga,f7,f3){var f8=bq(f3,f9,"ngTrueValue",f6.ngTrueValue,true);var f4=bq(f3,f9,"ngFalseValue",f6.ngFalseValue,false);var f2=function(gb){f0.$setViewValue(f5[0].checked,gb&&gb.type)};f5.on("click",f2);f0.$render=function(){f5[0].checked=f0.$viewValue};f0.$isEmpty=function(gb){return gb===false};f0.$formatters.push(function(gb){return dY(gb,f8)});f0.$parsers.push(function(gb){return gb?f8:f4})}var d5=["$browser","$sniffer","$filter","$parse",function(f0,f3,f2,f1){return{restrict:"E",require:["?ngModel"],link:{pre:function(f7,f6,f5,f4){if(f4[0]){(Z[db(f5.type)]||Z.text)(f7,f6,f5,f4[0],f3,f0,f2,f1)}}}}}];var dl=/^(true|false|\d+)$/;var b5=function(){return{restrict:"A",priority:100,compile:function(f1,f3){if(dl.test(f3.ngValue)){return function f2(f5,f6,f4){f4.$set("value",f5.$eval(f4.ngValue))}}else{return function f0(f6,f7,f4){f6.$watch(f4.ngValue,function f5(f8){f4.$set("value",f8)})}}}}};var y=["$compile",function(f0){return{restrict:"AC",compile:function f1(f3){f0.$$addBindingClass(f3);return function f2(f6,f5,f4){f0.$$addBindingInfo(f5,f4.ngBind);f5=f5[0];f6.$watch(f4.ngBind,function f7(f8){f5.textContent=f8===fE?"":f8})}}}}];var dE=["$interpolate","$compile",function(f2,f1){return{compile:function f0(f4){f1.$$addBindingClass(f4);return function f3(f8,f7,f5){var f6=f2(f7.attr(f5.$attr.ngBindTemplate));f1.$$addBindingInfo(f7,f6.expressions);f7=f7[0];f5.$observe("ngBindTemplate",function(f9){f7.textContent=f9===fE?"":f9})}}}}];var l=["$sce","$parse","$compile",function(f0,f2,f1){return{restrict:"A",compile:function f3(f5,f9){var f8=f2(f9.ngBindHtml);var f6=f2(f9.ngBindHtml,function f4(ga){return(ga||"").toString()});f1.$$addBindingClass(f5);return function f7(gd,gc,ga){f1.$$addBindingInfo(gc,ga.ngBindHtml);gd.$watch(f6,function gb(){gc.html(f0.getTrustedHtml(f8(gd))||"")})}}}}];var b7=V({restrict:"A",require:"ngModel",link:function(f2,f1,f0,f3){f3.$viewChangeListeners.push(function(){f2.$eval(f0.ngChange)})}});function ay(f1,f0){f1="ngClass"+f1;return["$animate",function(f4){return{restrict:"AC",link:function(gd,f8,ga){var gc;gd.$watch(ga[f1],f6,true);ga.$observe("class",function(ge){f6(gd.$eval(ga[f1]))});if(f1!=="ngClass"){gd.$watch("$index",function(ge,gf){var gh=ge&1;if(gh!==(gf&1)){var gg=f2(gd.$eval(ga[f1]));gh===f0?f7(gg):gb(gg)}})}function f7(ge){var gf=f5(ge,1);ga.$addClass(gf)}function gb(ge){var gf=f5(ge,-1);ga.$removeClass(gf)}function f5(ge,gf){var gg=f8.data("$classCounts")||fM();var gh=[];bj(ge,function(gi){if(gf>0||gg[gi]){gg[gi]=(gg[gi]||0)+gf;if(gg[gi]===+(gf>0)){gh.push(gi)}}});f8.data("$classCounts",gg);return gh.join(" ")}function f9(ge,gh){var gf=f3(gh,ge);var gg=f3(ge,gh);gf=f5(gf,1);gg=f5(gg,-1);if(gf&&gf.length){f4.addClass(f8,gf)}if(gg&&gg.length){f4.removeClass(f8,gg)}}function f6(gf){if(f0===true||gd.$index%2===f0){var gg=f2(gf||[]);if(!gc){f7(gg)}else{if(!dY(gf,gc)){var ge=f2(gc);f9(ge,gg)}}}gc=d8(gf)}}};function f3(f6,f5){var f7=[];outer:for(var ga=0;ga<f6.length;ga++){var f9=f6[ga];for(var f8=0;f8<f5.length;f8++){if(f9==f5[f8]){continue outer}}f7.push(f9)}return f7}function f2(f6){var f5=[];if(U(f6)){bj(f6,function(f7){f5=f5.concat(f2(f7))});return f5}else{if(w(f6)){return f6.split(" ")}else{if(s(f6)){bj(f6,function(f8,f7){if(f8){f5=f5.concat(f7.split(" "))}});return f5}}}return f6}}]}var H=ay("",true);var j=ay("Odd",0);var eG=ay("Even",1);var cT=bE({compile:function(f1,f0){f0.$set("ngCloak",fE);f1.removeClass("ng-cloak")}});var ey=[function(){return{restrict:"A",scope:true,controller:"@",priority:500}}];var aB={};var a8={blur:true,focus:true};bj("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),function(f0){var f1=bl("ng-"+f0);aB[f1]=["$parse","$rootScope",function(f3,f2){return{restrict:"A",compile:function(f5,f4){var f6=f3(f4[f1],null,true);return function f7(f9,f8){f8.on(f0,function(ga){var gb=function(){f6(f9,{$event:ga})};if(a8[f0]&&f2.$$phase){f9.$evalAsync(gb)}else{f9.$apply(gb)}})}}}}]});var cr=["$animate",function(f0){return{multiElement:true,transclude:"element",priority:600,terminal:true,restrict:"A",$$tlb:true,link:function(f8,f9,f4,f1,f6){var f3,f7,f2;f8.$watch(f4.ngIf,function f5(ga){if(ga){if(!f7){f6(function(gc,gb){f7=gb;gc[gc.length++]=el.createComment(" end ngIf: "+f4.ngIf+" ");f3={clone:gc};f0.enter(gc,f9.parent(),f9)})}}else{if(f2){f2.remove();f2=null}if(f7){f7.$destroy();f7=null}if(f3){f2=a9(f3.clone);f0.leave(f2).then(function(){f2=null});f3=null}}})}}}];var dp=["$templateRequest","$anchorScroll","$animate",function(f0,f1,f2){return{restrict:"ECA",priority:400,terminal:true,transclude:"element",controller:cY.noop,compile:function(f7,f3){var f6=f3.ngInclude||f3.src,f5=f3.onload||"",f4=f3.autoscroll;return function(gh,gg,gb,f8,gf){var ge=0,gi,ga,gc;var f9=function(){if(ga){ga.remove();ga=null}if(gi){gi.$destroy();gi=null}if(gc){f2.leave(gc).then(function(){ga=null});ga=gc;gc=null}};gh.$watch(f6,function gd(gl){var gj=function(){if(eX(f4)&&(!f4||gh.$eval(f4))){f1()}};var gk=++ge;if(gl){f0(gl,true).then(function(gm){if(gk!==ge){return}var gn=gh.$new();f8.template=gm;var go=gf(gn,function(gp){f9();f2.enter(gp,null,gg).then(gj)});gi=gn;gc=go;gi.$emit("$includeContentLoaded",gl);gh.$eval(f5)},function(){if(gk===ge){f9();gh.$emit("$includeContentError",gl)}});gh.$emit("$includeContentRequested",gl)}else{f9();f8.template=null}})}}}}];var dN=["$compile",function(f0){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(f3,f1,f5,f4){if(/SVG/.test(f1[0].toString())){f1.empty();f0(ev(f4.template,el).childNodes)(f3,function f2(f6){f1.append(f6)},{futureParentElement:f1});return}f1.html(f4.template);f0(f1.contents())(f3)}}}];var d1=bE({priority:450,compile:function(){return{pre:function(f2,f1,f0){f2.$eval(f0.ngInit)}}}});var cF=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(f2,f1,f0,f3){var f5=f1.attr(f0.$attr.ngList)||", ";var f7=f0.ngTrim!=="false";var f4=f7?aL(f5):f5;var f6=function(f9){if(x(f9)){return}var f8=[];if(f9){bj(f9.split(f4),function(ga){if(ga){f8.push(f7?aL(ga):ga)}})}return f8};f3.$parsers.push(f6);f3.$formatters.push(function(f8){if(U(f8)){return f8.join(f5)}return fE});f3.$isEmpty=function(f8){return !f8||!f8.length}}}};var bP="ng-valid",bA="ng-invalid",aq="ng-pristine",fR="ng-dirty",dj="ng-untouched",be="ng-touched",at="ng-pending";var eJ=new eT("ngModel");var Y=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(ga,f3,gg,f9,f2,gc,gi,f5,gf,f4){this.$viewValue=Number.NaN;this.$modelValue=Number.NaN;this.$$rawModelValue=fE;this.$validators={};this.$asyncValidators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=true;this.$touched=false;this.$pristine=true;this.$dirty=false;this.$valid=true;this.$invalid=false;this.$error={};this.$$success={};this.$pending=fE;this.$name=f4(gg.name||"",false)(ga);var f8=f2(gg.ngModel),f6=f8.assign,f1=f8,ge=f6,gh=null,gb,f7=this;this.$$setOptions=function(gm){f7.$options=gm;if(gm&&gm.getterSetter){var gl=f2(gg.ngModel+"()"),gk=f2(gg.ngModel+"($$$p)");f1=function(go){var gn=f8(go);if(bn(gn)){gn=gl(go)}return gn};ge=function(gn,go){if(bn(f8(gn))){gk(gn,{$$$p:f7.$modelValue})}else{f6(gn,f7.$modelValue)}}}else{if(!f8.assign){throw eJ("nonassign","Expression '{0}' is non-assignable. Element: {1}",gg.ngModel,ce(f9))}}};this.$render=eD;this.$isEmpty=function(gk){return x(gk)||gk===""||gk===null||gk!==gk};var gd=f9.inheritedData("$formController")||fD,gj=0;T({ctrl:this,$element:f9,set:function(gk,gl){gk[gl]=true},unset:function(gk,gl){delete gk[gl]},parentForm:gd,$animate:gc});this.$setPristine=function(){f7.$dirty=false;f7.$pristine=true;gc.removeClass(f9,fR);gc.addClass(f9,aq)};this.$setDirty=function(){f7.$dirty=true;f7.$pristine=false;gc.removeClass(f9,aq);gc.addClass(f9,fR);gd.$setDirty()};this.$setUntouched=function(){f7.$touched=false;f7.$untouched=true;gc.setClass(f9,dj,be)};this.$setTouched=function(){f7.$touched=true;f7.$untouched=false;gc.setClass(f9,be,dj)};this.$rollbackViewValue=function(){gi.cancel(gh);f7.$viewValue=f7.$$lastCommittedViewValue;f7.$render()};this.$validate=function(){if(p(f7.$modelValue)&&isNaN(f7.$modelValue)){return}var go=f7.$$lastCommittedViewValue;var gk=f7.$$rawModelValue;var gn=f7.$valid;var gl=f7.$modelValue;var gm=f7.$options&&f7.$options.allowInvalid;f7.$$runValidators(gk,go,function(gp){if(!gm&&gn!==gp){f7.$modelValue=gp?gk:fE;if(f7.$modelValue!==gl){f7.$$writeModelToScope()}}})};this.$$runValidators=function(gm,gk,gn){gj++;var gr=gj;if(!gp()){gq(false);return}if(!gl()){gq(false);return}go();function gp(){var gt=f7.$$parserName||"parse";if(gb===fE){gs(gt,null)}else{if(!gb){bj(f7.$validators,function(gu,gv){gs(gv,null)});bj(f7.$asyncValidators,function(gu,gv){gs(gv,null)})}gs(gt,gb);return gb}return true}function gl(){var gt=true;bj(f7.$validators,function(gw,gv){var gu=gw(gm,gk);gt=gt&&gu;gs(gv,gu)});if(!gt){bj(f7.$asyncValidators,function(gu,gv){gs(gv,null)});return false}return true}function go(){var gt=[];var gu=true;bj(f7.$asyncValidators,function(gw,gv){var gx=gw(gm,gk);if(!fH(gx)){throw eJ("$asyncValidators","Expected asynchronous validator to return a promise but got '{0}' instead.",gx)}gs(gv,fE);gt.push(gx.then(function(){gs(gv,true)},function(gy){gu=false;gs(gv,false)}))});if(!gt.length){gq(true)}else{gf.all(gt).then(function(){gq(gu)},eD)}}function gs(gt,gu){if(gr===gj){f7.$setValidity(gt,gu)}}function gq(gt){if(gr===gj){gn(gt)}}};this.$commitViewValue=function(){var gk=f7.$viewValue;gi.cancel(gh);if(f7.$$lastCommittedViewValue===gk&&(gk!==""||!f7.$$hasNativeValidators)){return}f7.$$lastCommittedViewValue=gk;if(f7.$pristine){this.$setDirty()}this.$$parseAndValidate()};this.$$parseAndValidate=function(){var go=f7.$$lastCommittedViewValue;var gk=go;gb=x(gk)?fE:true;if(gb){for(var gm=0;gm<f7.$parsers.length;gm++){gk=f7.$parsers[gm](gk);if(x(gk)){gb=false;break}}}if(p(f7.$modelValue)&&isNaN(f7.$modelValue)){f7.$modelValue=f1(ga)}var gl=f7.$modelValue;var gn=f7.$options&&f7.$options.allowInvalid;f7.$$rawModelValue=gk;if(gn){f7.$modelValue=gk;gp()}f7.$$runValidators(gk,f7.$$lastCommittedViewValue,function(gq){if(!gn){f7.$modelValue=gq?gk:fE;gp()}});function gp(){if(f7.$modelValue!==gl){f7.$$writeModelToScope()}}};this.$$writeModelToScope=function(){ge(ga,f7.$modelValue);bj(f7.$viewChangeListeners,function(gk){try{gk()}catch(gl){f3(gl)}})};this.$setViewValue=function(gl,gk){f7.$viewValue=gl;if(!f7.$options||f7.$options.updateOnDefault){f7.$$debounceViewValueCommit(gk)}};this.$$debounceViewValueCommit=function(gn){var gk=0,gm=f7.$options,gl;if(gm&&eX(gm.debounce)){gl=gm.debounce;if(p(gl)){gk=gl}else{if(p(gl[gn])){gk=gl[gn]}else{if(p(gl["default"])){gk=gl["default"]}}}}gi.cancel(gh);if(gk){gh=gi(function(){f7.$commitViewValue()},gk)}else{if(f5.$$phase){f7.$commitViewValue()}else{ga.$apply(function(){f7.$commitViewValue()})}}};ga.$watch(function f0(){var gl=f1(ga);if(gl!==f7.$modelValue&&(f7.$modelValue===f7.$modelValue||gl===gl)){f7.$modelValue=f7.$$rawModelValue=gl;gb=fE;var gm=f7.$formatters,gk=gm.length;var gn=gl;while(gk--){gn=gm[gk](gn)}if(f7.$viewValue!==gn){f7.$viewValue=f7.$$lastCommittedViewValue=gn;f7.$render();f7.$$runValidators(gl,gn,eD)}}return gl})}];var bh=["$rootScope",function(f0){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Y,priority:1,compile:function f1(f3){f3.addClass(aq).addClass(dj).addClass(bP);return{pre:function f4(f9,f7,f6,f5){var f8=f5[0],ga=f5[1]||fD;f8.$$setOptions(f5[2]&&f5[2].$options);ga.$addControl(f8);f6.$observe("name",function(gb){if(f8.$name!==gb){ga.$$renameControl(f8,gb)}});f9.$on("$destroy",function(){ga.$removeControl(f8)})},post:function f2(f9,f7,f6,f5){var f8=f5[0];if(f8.$options&&f8.$options.updateOn){f7.on(f8.$options.updateOn,function(ga){f8.$$debounceViewValueCommit(ga&&ga.type)})}f7.on("blur",function(ga){if(f8.$touched){return}if(f0.$$phase){f9.$evalAsync(f8.$setTouched)}else{f9.$apply(f8.$setTouched)}})}}}}}];var et=/(\s+|^)default(\s+|$)/;var d0=function(){return{restrict:"A",controller:["$scope","$attrs",function(f1,f0){var f2=this;this.$options=fV(f1.$eval(f0.ngModelOptions));if(this.$options.updateOn!==fE){this.$options.updateOnDefault=false;this.$options.updateOn=aL(this.$options.updateOn.replace(et,function(){f2.$options.updateOnDefault=true;return" "}))}else{this.$options.updateOnDefault=true}}]}};function T(f1){var f0=f1.ctrl,ga=f1.$element,f5={},f9=f1.set,gc=f1.unset,f4=f1.parentForm,f7=f1.$animate;f5[bA]=!(f5[bP]=ga.hasClass(bP));f0.$setValidity=gb;function gb(gf,gg,gd){if(gg===fE){f3("$pending",gf,gd)}else{f2("$pending",gf,gd)}if(!aH(gg)){gc(f0.$error,gf,gd);gc(f0.$$success,gf,gd)}else{if(gg){gc(f0.$error,gf,gd);f9(f0.$$success,gf,gd)}else{f9(f0.$error,gf,gd);gc(f0.$$success,gf,gd)}}if(f0.$pending){f8(at,true);f0.$valid=f0.$invalid=fE;f6("",null)}else{f8(at,false);f0.$valid=cL(f0.$error);f0.$invalid=!f0.$valid;f6("",f0.$valid)}var ge;if(f0.$pending&&f0.$pending[gf]){ge=fE}else{if(f0.$error[gf]){ge=false}else{if(f0.$$success[gf]){ge=true}else{ge=null}}}f6(gf,ge);f4.$setValidity(gf,ge,f0)}function f3(ge,gf,gd){if(!f0[ge]){f0[ge]={}}f9(f0[ge],gf,gd)}function f2(ge,gf,gd){if(f0[ge]){gc(f0[ge],gf,gd)}if(cL(f0[ge])){f0[ge]=fE}}function f8(ge,gd){if(gd&&!f5[ge]){f7.addClass(ga,ge);f5[ge]=true}else{if(!gd&&f5[ge]){f7.removeClass(ga,ge);f5[ge]=false}}}function f6(gd,ge){gd=gd?"-"+Q(gd,"-"):"";f8(bP+gd,ge===true);f8(bA+gd,ge===false)}}function cL(f0){if(f0){for(var f1 in f0){if(f0.hasOwnProperty(f1)){return false}}}return true}var eH=bE({terminal:true,priority:1000});var cy=eT("ngOptions");var cM=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/;var dX=["$compile","$parse",function(f1,f3){function f0(ga,gl,f6){var gg=ga.match(cM);if(!(gg)){throw cy("iexp","Expected expression in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_' but got '{0}'. Element: {1}",ga,ce(gl))}var gm=gg[5]||gg[7];var gd=gg[6];var f5=/ as /.test(gg[0])&&gg[1];var f9=gg[9];var f7=f3(gg[2]?gg[1]:gm);var gq=f5&&f3(f5);var gn=gq||f7;var gc=f9&&f3(f9);var gp=f9?function(gs,gt){return gc(f6,gt)}:function go(gs){return ef(gs)};var gr=function(gt,gs){return gp(gt,gf(gt,gs))};var ge=f3(gg[2]||gg[1]);var gk=f3(gg[3]||"");var f8=f3(gg[4]||"");var gb=f3(gg[8]);var gj={};var gf=gd?function(gt,gs){gj[gd]=gs;gj[gm]=gt;return gj}:function(gs){gj[gm]=gs;return gj};function gi(gu,gv,gs,gw,gt){this.selectValue=gu;this.viewValue=gv;this.label=gs;this.group=gw;this.disabled=gt}function gh(gs){var gt;if(!gd&&b2(gs)){gt=gs}else{gt=[];for(var gu in gs){if(gs.hasOwnProperty(gu)&&gu.charAt(0)!=="$"){gt.push(gu)}}}return gt}return{trackBy:f9,getTrackByValue:gr,getWatchables:f3(gb,function(gy){var gv=[];gy=gy||[];var gB=gh(gy);var gt=gB.length;for(var gu=0;gu<gt;gu++){var gA=(gy===gB)?gu:gB[gu];var gz=gy[gA];var gs=gf(gy[gA],gA);var gC=gp(gy[gA],gs);gv.push(gC);if(gg[2]||gg[1]){var gx=ge(f6,gs);gv.push(gx)}if(gg[4]){var gw=f8(f6,gs);gv.push(gw)}}return gv}),getOptions:function(){var gy=[];var gw={};var gA=gb(f6)||[];var gF=gh(gA);var gu=gF.length;for(var gx=0;gx<gu;gx++){var gD=(gA===gF)?gx:gF[gx];var gB=gA[gD];var gt=gf(gB,gD);var gs=gn(f6,gt);var gG=gp(gs,gt);var gz=ge(f6,gt);var gC=gk(f6,gt);var gv=f8(f6,gt);var gE=new gi(gG,gs,gz,gC,gv);gy.push(gE);gw[gG]=gE}return{items:gy,selectValueMap:gw,getOptionFromViewValue:function(gH){return gw[gr(gH)]},getViewValueFromOption:function(gH){return f9?cY.copy(gH.viewValue):gH.viewValue}}}}}var f4=el.createElement("option"),f2=el.createElement("optgroup");return{restrict:"A",terminal:true,require:["select","?ngModel"],link:function(f5,gn,gp,gq){var gg=gq[1];if(!gg){return}var gs=gq[0];var gu=gp.multiple;var gm;for(var gr=0,gb=gn.children(),gl=gb.length;gr<gl;gr++){if(gb[gr].value===""){gm=gb.eq(gr);break}}var f9=!!gm;var gv=ac(f4.cloneNode(false));gv.val("?");var ga;var f6=f0(gp.ngOptions,gn,f5);var gk=function(){if(!f9){gn.prepend(gm)}gn.val("");gm.prop("selected",true);gm.attr("selected",true)};var gc=function(){if(!f9){gm.remove()}};var f7=function(){gn.prepend(gv);gn.val("?");gv.prop("selected",true);gv.attr("selected",true)};var gf=function(){gv.remove()};if(!gu){gs.writeValue=function gj(gy){var gx=ga.getOptionFromViewValue(gy);if(gx&&!gx.disabled){if(gn[0].value!==gx.selectValue){gf();gc();gn[0].value=gx.selectValue;gx.element.selected=true;gx.element.setAttribute("selected","selected")}}else{if(gy===null||f9){gf();gk()}else{gc();f7()}}};gs.readValue=function go(){var gx=ga.selectValueMap[gn.val()];if(gx&&!gx.disabled){gc();gf();return ga.getViewValueFromOption(gx)}return null};if(f6.trackBy){f5.$watch(function(){return f6.getTrackByValue(gg.$viewValue)},function(){gg.$render()})}}else{gg.$isEmpty=function(gx){return !gx||gx.length===0};gs.writeValue=function ge(gx){ga.items.forEach(function(gy){gy.element.selected=false});if(gx){gx.forEach(function(gz){var gy=ga.getOptionFromViewValue(gz);if(gy&&!gy.disabled){gy.element.selected=true}})}};gs.readValue=function gi(){var gx=gn.val()||[],gy=[];bj(gx,function(gA){var gz=ga.selectValueMap[gA];if(!gz.disabled){gy.push(ga.getViewValueFromOption(gz))}});return gy};if(f6.trackBy){f5.$watchCollection(function(){if(U(gg.$viewValue)){return gg.$viewValue.map(function(gx){return f6.getTrackByValue(gx)})}},function(){gg.$render()})}}if(f9){gm.remove();f1(gm)(f5);gm.removeClass("ng-scope")}else{gm=ac(f4.cloneNode(false))}gw();f5.$watchCollection(f6.getWatchables,gw);function gt(gy,gx){gy.element=gx;gx.disabled=gy.disabled;if(gy.value!==gx.value){gx.value=gy.selectValue}if(gy.label!==gx.label){gx.label=gy.label;gx.textContent=gy.label}}function gh(gz,gB,gy,gA){var gx;if(gB&&db(gB.nodeName)===gy){gx=gB}else{gx=gA.cloneNode(false);if(!gB){gz.appendChild(gx)}else{gz.insertBefore(gx,gB)}}return gx}function f8(gy){var gx;while(gy){gx=gy.nextSibling;aD(gy);gy=gx}}function gd(gz){var gy=gm&&gm[0];var gx=gv&&gv[0];if(gy||gx){while(gz&&(gz===gy||gz===gx)){gz=gz.nextSibling}}return gz}function gw(){var gx=ga&&gs.readValue();ga=f6.getOptions();var gB={};var gy=gn[0].firstChild;if(f9){gn.prepend(gm)}gy=gd(gy);ga.items.forEach(function gA(gE){var gF;var gD;var gC;if(gE.group){gF=gB[gE.group];if(!gF){gD=gh(gn[0],gy,"optgroup",f2);gy=gD.nextSibling;gD.label=gE.group;gF=gB[gE.group]={groupElement:gD,currentOptionElement:gD.firstChild}}gC=gh(gF.groupElement,gF.currentOptionElement,"option",f4);gt(gE,gC);gF.currentOptionElement=gC.nextSibling}else{gC=gh(gn[0],gy,"option",f4);gt(gE,gC);gy=gC.nextSibling}});Object.keys(gB).forEach(function(gC){f8(gB[gC].currentOptionElement)});f8(gy);gg.$render();if(!gg.$isEmpty(gx)){var gz=gs.readValue();if(f6.trackBy?!dY(gx,gz):gx!==gz){gg.$setViewValue(gz);gg.$render()}}}}}}];var c8=["$locale","$interpolate","$log",function(f0,f3,f2){var f4=/{}/g,f1=/^when(Minus)?(.+)$/;return{link:function(gj,gd,gi){var gg=gi.count,gb=gi.$attr.when&&gd.attr(gi.$attr.when),gc=gi.offset||0,f7=gj.$eval(gb)||{},ga={},gf=f3.startSymbol(),gh=f3.endSymbol(),f6=gf+gg+"-"+gc+gh,f9=cY.noop,ge;bj(gi,function(gn,gk){var gm=f1.exec(gk);if(gm){var gl=(gm[1]?"-":"")+db(gm[2]);f7[gl]=gd.attr(gi.$attr[gk])}});bj(f7,function(gl,gk){ga[gk]=f3(gl.replace(f4,f6))});gj.$watch(gg,function f5(gl){var gm=parseFloat(gl);var gn=isNaN(gm);if(!gn&&!(gm in f7)){gm=f0.pluralCat(gm-gc)}if((gm!==ge)&&!(gn&&p(ge)&&isNaN(ge))){f9();var gk=ga[gm];if(x(gk)){if(gl!=null){f2.debug("ngPluralize: no rule defined for '"+gm+"' in "+gb)}f9=eD;f8()}else{f9=gj.$watch(gk,f8)}ge=gm}});function f8(gk){gd.text(gk||"")}}}}];var eb=["$parse","$animate",function(f4,f7){var f3="$$NG_REMOVED";var f2=eT("ngRepeat");var f6=function(gb,f8,ga,gc,gd,f9,ge){gb[ga]=gc;if(gd){gb[gd]=f9}gb.$index=f8;gb.$first=(f8===0);gb.$last=(f8===(ge-1));gb.$middle=!(gb.$first||gb.$last);gb.$odd=!(gb.$even=(f8&1)===0)};var f5=function(f8){return f8.clone[0]};var f1=function(f8){return f8.clone[f8.clone.length-1]};return{restrict:"A",multiElement:true,transclude:"element",priority:1000,terminal:true,$$tlb:true,compile:function f0(go,gg){var gm=gg.ngRepeat;var gl=el.createComment(" end ngRepeat: "+gm+" ");var gh=gm.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!gh){throw f2("iexp","Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.",gm)}var gc=gh[1];var gk=gh[2];var gn=gh[3];var ga=gh[4];gh=gc.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!gh){throw f2("iidexp","'_item_' in '_item_ in _collection_' should be an identifier or '(_key_, _value_)' expression, but got '{0}'.",gc)}var gb=gh[3]||gh[1];var gi=gh[2];if(gn&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(gn)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(gn))){throw f2("badident","alias '{0}' is invalid --- must be a valid JS identifier which is not a reserved name.",gn)}var ge,f8,gf,gj;var gd={$id:ef};if(ga){ge=f4(ga)}else{gf=function(gp,gq){return ef(gq)};gj=function(gp){return gp}}return function f9(gr,gq,gu,gt,gp){if(ge){f8=function(gx,gy,gw){if(gi){gd[gi]=gx}gd[gb]=gy;gd.$index=gw;return ge(gr,gd)}}var gv=fM();gr.$watchCollection(gk,function gs(gE){var gA,gz,gF=gq[0],gx,gw=fM(),gL,gM,gG,gD,gI,gC,gB,gN,gy;if(gn){gr[gn]=gE}if(b2(gE)){gC=gE;gI=f8||gf}else{gI=f8||gj;gC=[];for(var gJ in gE){if(gE.hasOwnProperty(gJ)&&gJ.charAt(0)!=="$"){gC.push(gJ)}}}gL=gC.length;gN=new Array(gL);for(gA=0;gA<gL;gA++){gM=(gE===gC)?gA:gC[gA];gG=gE[gM];gD=gI(gM,gG,gA);if(gv[gD]){gB=gv[gD];delete gv[gD];gw[gD]=gB;gN[gA]=gB}else{if(gw[gD]){bj(gN,function(gO){if(gO&&gO.scope){gv[gO.id]=gO}});throw f2("dupes","Duplicates in a repeater are not allowed. Use 'track by' expression to specify unique keys. Repeater: {0}, Duplicate key: {1}, Duplicate value: {2}",gm,gD,gG)}else{gN[gA]={id:gD,scope:fE,clone:fE};gw[gD]=true}}}for(var gK in gv){gB=gv[gK];gy=a9(gB.clone);f7.leave(gy);if(gy[0].parentNode){for(gA=0,gz=gy.length;gA<gz;gA++){gy[gA][f3]=true}}gB.scope.$destroy()}for(gA=0;gA<gL;gA++){gM=(gE===gC)?gA:gC[gA];gG=gE[gM];gB=gN[gA];if(gB.scope){gx=gF;do{gx=gx.nextSibling}while(gx&&gx[f3]);if(f5(gB)!=gx){f7.move(a9(gB.clone),null,ac(gF))}gF=f1(gB);f6(gB.scope,gA,gb,gG,gi,gM,gL)}else{gp(function gH(gQ,gP){gB.scope=gP;var gO=gl.cloneNode(false);gQ[gQ.length++]=gO;f7.enter(gQ,null,ac(gF));gF=gO;gB.clone=gQ;gw[gB.id]=gB;f6(gB.scope,gA,gb,gG,gi,gM,gL)})}}gv=gw})}}}}];var dv="ng-hide";var G="ng-hide-animate";var aZ=["$animate",function(f0){return{restrict:"A",multiElement:true,link:function(f3,f2,f1){f3.$watch(f1.ngShow,function f4(f5){f0[f5?"removeClass":"addClass"](f2,dv,{tempClasses:G})})}}}];var eR=["$animate",function(f0){return{restrict:"A",multiElement:true,link:function(f3,f2,f1){f3.$watch(f1.ngHide,function f4(f5){f0[f5?"addClass":"removeClass"](f2,dv,{tempClasses:G})})}}}];var cx=bE(function(f3,f2,f0){f3.$watch(f0.ngStyle,function f1(f5,f4){if(f4&&(f5!==f4)){bj(f4,function(f7,f6){f2.css(f6,"")})}if(f5){f2.css(f5)}},true)});var ew=["$animate",function(f1){return{require:"ngSwitch",controller:["$scope",function f0(){this.cases={}}],link:function(gc,f4,f8,gb){var f3=f8.ngSwitch||f8.on,f7=[],f2=[],f5=[],ga=[];var f6=function(ge,gd){return function(){ge.splice(gd,1)}};gc.$watch(f3,function f9(gg){var gd,gf;for(gd=0,gf=f5.length;gd<gf;++gd){f1.cancel(f5[gd])}f5.length=0;for(gd=0,gf=ga.length;gd<gf;++gd){var ge=a9(f2[gd].clone);ga[gd].$destroy();var gh=f5[gd]=f1.leave(ge);gh.then(f6(f5,gd))}f2.length=0;ga.length=0;if((f7=gb.cases["!"+gg]||gb.cases["?"])){bj(f7,function(gi){gi.transclude(function(gl,gj){ga.push(gj);var gk=gi.element;gl[gl.length++]=el.createComment(" end ngSwitchWhen: ");var gm={clone:gl};f2.push(gm);f1.enter(gl,gk.parent(),gk)})})}})}}}];var ca=bE({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:true,link:function(f3,f2,f1,f4,f0){f4.cases["!"+f1.ngSwitchWhen]=(f4.cases["!"+f1.ngSwitchWhen]||[]);f4.cases["!"+f1.ngSwitchWhen].push({transclude:f0,element:f2})}});var fj=bE({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:true,link:function(f3,f2,f0,f4,f1){f4.cases["?"]=(f4.cases["?"]||[]);f4.cases["?"].push({transclude:f1,element:f2})}});var bC=bE({restrict:"EAC",link:function(f4,f3,f0,f2,f1){if(!f1){throw eT("ngTransclude")("orphan","Illegal use of ngTransclude directive in the template! No parent directive that requires a transclusion found. Element: {0}",ce(f3))}f1(function(f5){f3.empty();f3.append(f5)})}});var aW=["$templateCache",function(f0){return{restrict:"E",terminal:true,compile:function(f2,f1){if(f1.type=="text/ng-template"){var f3=f1.id,f4=f2[0].text;f0.put(f3,f4)}}}}];var K={$setViewValue:eD,$render:eD};var ft=["$element","$scope","$attrs",function(f1,f3,f0){var f2=this,f4=new cu();f2.ngModelCtrl=K;f2.unknownOption=ac(el.createElement("option"));f2.renderUnknownOption=function(f7){var f8="? "+ef(f7)+" ?";f2.unknownOption.val(f8);f1.prepend(f2.unknownOption);f1.val(f8)};f3.$on("$destroy",function(){f2.renderUnknownOption=eD});f2.removeUnknownOption=function(){if(f2.unknownOption.parent()){f2.unknownOption.remove()}};f2.readValue=function f6(){f2.removeUnknownOption();return f1.val()};f2.writeValue=function f5(f7){if(f2.hasOption(f7)){f2.removeUnknownOption();f1.val(f7);if(f7===""){f2.emptyOption.prop("selected",true)}}else{if(f7==null&&f2.emptyOption){f2.removeUnknownOption();f1.val("")}else{f2.renderUnknownOption(f7)}}};f2.addOption=function(f9,f7){fa(f9,'"option value"');if(f9===""){f2.emptyOption=f7}var f8=f4.get(f9)||0;f4.put(f9,f8+1)};f2.removeOption=function(f8){var f7=f4.get(f8);if(f7){if(f7===1){f4.remove(f8);if(f8===""){f2.emptyOption=fE}}else{f4.put(f8,f7-1)}}};f2.hasOption=function(f7){return !!f4.get(f7)}}];var ae=function(){return{restrict:"E",require:["select","?ngModel"],controller:ft,link:function(f9,f4,f6,f3){var f1=f3[1];if(!f1){return}var f0=f3[0];f0.ngModelCtrl=f1;f1.$render=function(){f0.writeValue(f1.$viewValue)};f4.on("change",function(){f9.$apply(function(){f1.$setViewValue(f0.readValue())})});if(f6.multiple){f0.readValue=function ga(){var gb=[];bj(f4.find("option"),function(gc){if(gc.selected){gb.push(gc.value)}});return gb};f0.writeValue=function f7(gc){var gb=new cu(gc);bj(f4.find("option"),function(gd){gd.selected=eX(gb.get(gd.value))})};var f5,f8=NaN;f9.$watch(function f2(){if(f8===f1.$viewValue&&!dY(f5,f1.$viewValue)){f5=d8(f1.$viewValue);f1.$render()}f8=f1.$viewValue});f1.$isEmpty=function(gb){return !gb||gb.length===0}}}}};var cU=["$interpolate",function(f1){function f0(f2){if(f2[0].hasAttribute("selected")){f2[0].selected=true}}return{restrict:"E",priority:100,compile:function(f4,f2){if(x(f2.value)){var f3=f1(f4.text(),true);if(!f3){f2.$set("value",f4.text())}}return function(gb,f9,f5){var f7="$selectController",ga=f9.parent(),f8=ga.data(f7)||ga.parent().data(f7);if(f8&&f8.ngModelCtrl){if(f3){gb.$watch(f3,function f6(gd,gc){f5.$set("value",gd);if(gc!==gd){f8.removeOption(gc)}f8.addOption(gd,f9);f8.ngModelCtrl.$render();f0(f9)})}else{f8.addOption(f5.value,f9);f8.ngModelCtrl.$render();f0(f9)}f9.on("$destroy",function(){f8.removeOption(f5.value);f8.ngModelCtrl.$render()})}}}}}];var e1=V({restrict:"E",terminal:false});var cj=function(){return{restrict:"A",require:"?ngModel",link:function(f1,f3,f0,f2){if(!f2){return}f0.required=true;f2.$validators.required=function(f4,f5){return !f0.required||!f2.$isEmpty(f5)};f0.$observe("required",function(){f2.$validate()})}}};var dq=function(){return{restrict:"A",require:"?ngModel",link:function(f1,f5,f0,f3){if(!f3){return}var f2,f4=f0.ngPattern||f0.pattern;f0.$observe("pattern",function(f6){if(w(f6)&&f6.length>0){f6=new RegExp("^"+f6+"$")}if(f6&&!f6.test){throw eT("ngPattern")("noregexp","Expected {0} to be a RegExp but was {1}. Element: {2}",f4,f6,ce(f5))}f2=f6||fE;f3.$validate()});f3.$validators.pattern=function(f6){return f3.$isEmpty(f6)||x(f2)||f2.test(f6)}}}};var fm=function(){return{restrict:"A",require:"?ngModel",link:function(f2,f4,f0,f3){if(!f3){return}var f1=-1;f0.$observe("maxlength",function(f6){var f5=de(f6);f1=isNaN(f5)?-1:f5;f3.$validate()});f3.$validators.maxlength=function(f5,f6){return(f1<0)||f3.$isEmpty(f6)||(f6.length<=f1)}}}};var aM=function(){return{restrict:"A",require:"?ngModel",link:function(f2,f4,f0,f3){if(!f3){return}var f1=0;f0.$observe("minlength",function(f5){f1=de(f5)||0;f3.$validate()});f3.$validators.minlength=function(f5,f6){return f3.$isEmpty(f6)||f6.length>=f1}}}};if(dV.angular.bootstrap){console.log("WARNING: Tried to load angular more than once.");return}v();aG(cY);ac(el).ready(function(){b4(el,bp)})})(window,document);!window.angular.$$csp()&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');(function(d,g,e){function b(j,c,i){return{restrict:"ECA",terminal:!0,priority:400,transclude:"element",link:function(v,p,u,q,s){function r(){o&&(i.cancel(o),o=null);n&&(n.$destroy(),n=null);h&&(o=i.leave(h),o.then(function(){o=null}),h=null)}function A(){var k=j.current&&j.current.locals;if(g.isDefined(k&&k.$template)){var k=v.$new(),l=j.current;h=s(k,function(m){i.enter(m,null,h||p).then(function(){!g.isDefined(C)||C&&!v.$eval(C)||c()});r()});n=l.scope=k;n.$emit("$viewContentLoaded");n.$eval(B)}else{r()}}var n,h,o,C=u.autoscroll,B=u.onload||"";v.$on("$routeChangeSuccess",A);A()}}}function a(k,i,j){return{restrict:"ECA",priority:-400,link:function(h,l){var c=j.current,m=c.locals;l.html(m.$template);var n=k(l.contents());c.controller&&(m.$scope=h,m=i(c.controller,m),c.controllerAs&&(h[c.controllerAs]=m),l.data("$ngControllerController",m),l.children().data("$ngControllerController",m));n(h)}}}d=g.module("ngRoute",["ng"]).provider("$route",function(){function j(h,k){return g.extend(Object.create(h),k)}function c(k,n){var h=n.caseInsensitiveMatch,m={originalPath:k,regexp:k},l=m.keys=[];k=k.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)([\?\*])?/g,function(p,r,o,q){p="?"===q?q:null;q="*"===q?q:null;l.push({name:o,optional:!!p});r=r||"";return""+(p?"":r)+"(?:"+(p?r:"")+(q&&"(.+?)"||"([^/]+)")+(p||"")+")"+(p||"")}).replace(/([\/$\*])/g,"\\$1");m.regexp=new RegExp("^"+k+"$",h?"i":"");return m}var i={};this.when=function(k,l){var h=g.copy(l);g.isUndefined(h.reloadOnSearch)&&(h.reloadOnSearch=!0);g.isUndefined(h.caseInsensitiveMatch)&&(h.caseInsensitiveMatch=this.caseInsensitiveMatch);i[k]=g.extend(h,k&&c(k,h));if(k){var m="/"==k[k.length-1]?k.substr(0,k.length-1):k+"/";i[m]=g.extend({redirectTo:k},c(m,h))}return this};this.caseInsensitiveMatch=!1;this.otherwise=function(h){"string"===typeof h&&(h={redirectTo:h});this.when(null,h);return this};this.$get=["$rootScope","$location","$routeParams","$q","$injector","$templateRequest","$sce",function(D,A,C,B,z,o,E){function u(h){var k=I.current;(G=(q=y())&&k&&q.$$route===k.$$route&&g.equals(q.pathParams,k.pathParams)&&!q.reloadOnSearch&&!F)||!k&&!q||D.$broadcast("$routeChangeStart",q,k).defaultPrevented&&h&&h.preventDefault()}function r(){var h=I.current,k=q;if(G){h.params=k.params,g.copy(h.params,C),D.$broadcast("$routeUpdate",h)}else{if(k||h){F=!1,(I.current=k)&&k.redirectTo&&(g.isString(k.redirectTo)?A.path(H(k.redirectTo,k.params)).search(k.params).replace():A.url(k.redirectTo(k.pathParams,A.path(),A.search())).replace()),B.when(k).then(function(){if(k){var m=g.extend({},k.resolve),l,n;g.forEach(m,function(p,s){m[s]=g.isString(p)?z.get(p):z.invoke(p,null,null,s)});g.isDefined(l=k.template)?g.isFunction(l)&&(l=l(k.params)):g.isDefined(n=k.templateUrl)&&(g.isFunction(n)&&(n=n(k.params)),g.isDefined(n)&&(k.loadedTemplateUrl=E.valueOf(n),l=o(n)));g.isDefined(l)&&(m.$template=l);return B.all(m)}}).then(function(l){k==I.current&&(k&&(k.locals=l,g.copy(k.params,C)),D.$broadcast("$routeChangeSuccess",k,h))},function(l){k==I.current&&D.$broadcast("$routeChangeError",k,h,l)})}}}function y(){var k,h;g.forEach(i,function(M,L){var s;if(s=!h){var K=A.path();s=M.keys;var x={};if(M.regexp){if(K=M.regexp.exec(K)){for(var J=1,w=K.length;J<w;++J){var v=s[J-1],t=K[J];v&&t&&(x[v.name]=t)}s=x}else{s=null}}else{s=null}s=k=s}s&&(h=j(M,{params:g.extend({},A.search(),k),pathParams:k}),h.$$route=M)});return h||i[null]&&j(i[null],{params:{},pathParams:{}})}function H(k,h){var l=[];g.forEach((k||"").split(":"),function(m,s){if(0===s){l.push(m)}else{var p=m.match(/(\w+)(?:[?*])?(.*)/),n=p[1];l.push(h[n]);l.push(p[2]||"");delete h[n]}});return l.join("")}var F=!1,q,G,I={routes:i,reload:function(){F=!0;D.$evalAsync(function(){u();r()})},updateParams:function(h){if(this.current&&this.current.$$route){h=g.extend({},this.current.params,h),A.path(H(this.current.$$route.originalPath,h)),A.search(h)}else{throw f("norout")}}};D.$on("$locationChangeStart",u);D.$on("$locationChangeSuccess",r);return I}]});var f=g.$$minErr("ngRoute");d.provider("$routeParams",function(){this.$get=function(){return{}}});d.directive("ngView",b);d.directive("ngView",a);b.$inject=["$route","$anchorScroll","$animate"];a.$inject=["$compile","$controller","$route"]})(window,window.angular);(function(ad,ae,ac){function U(g){var h=[];Y(h,ae.noop).chars(g);return h.join("")}function af(h,n){var p={},q=h.split(","),g;for(g=0;g<q.length;g++){p[n?ae.lowercase(q[g]):q[g]]=!0}return p}function S(u,p){function r(y,w,z,x){w=ae.lowercase(w);if(W[w]){for(;q.last()&&T[q.last()];){s("",q.last())}}R[w]&&q.last()==w&&s("",w);(x=P[w]||!!x)||q.push(w);var v={};z.replace(Q,function(A,B,C,E,D){v[B]=aa(C||E||D||"")});p.start&&p.start(w,v,x)}function s(v,w){var y=0,x;if(w=ae.lowercase(w)){for(y=q.length-1;0<=y&&q[y]!=w;y--){}}if(0<=y){for(x=q.length-1;x>=y;x--){p.end&&p.end(q[x])}q.length=y}}"string"!==typeof u&&(u=null===u||"undefined"===typeof u?"":""+u);var t,n,q=[],g=u,h;for(q.last=function(){return q[q.length-1]};u;){h="";n=!0;if(q.last()&&m[q.last()]){u=u.replace(new RegExp("([\\W\\w]*)<\\s*\\/\\s*"+q.last()+"[^>]*>","i"),function(w,v){v=v.replace(o,"$1").replace(k,"$1");p.chars&&p.chars(aa(v));return""}),s("",q.last())}else{if(0===u.indexOf("\x3c!--")){t=u.indexOf("--",4),0<=t&&u.lastIndexOf("--\x3e",t)===t&&(p.comment&&p.comment(u.substring(4,t)),u=u.substring(t+3),n=!1)}else{if(l.test(u)){if(t=u.match(l)){u=u.replace(t[0],""),n=!1}}else{if(i.test(u)){if(t=u.match(j)){u=u.substring(t[0].length),t[0].replace(j,s),n=!1}}else{e.test(u)&&((t=u.match(f))?(t[4]&&(u=u.substring(t[0].length),t[0].replace(f,r)),n=!1):(h+="<",u=u.substring(1)))}}}n&&(t=u.indexOf("<"),h+=0>t?u:u.substring(0,t),u=0>t?"":u.substring(t),p.chars&&p.chars(aa(h)))}if(u==g){throw d("badparse",u)}g=u}s()}function aa(g){if(!g){return""}ab.innerHTML=g.replace(/</g,"&lt;");return ab.textContent}function Z(g){return g.replace(/&/g,"&amp;").replace(c,function(h){var n=h.charCodeAt(0);h=h.charCodeAt(1);return"&#"+(1024*(n-55296)+(h-56320)+65536)+";"}).replace(b,function(h){return"&#"+h.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}function Y(g,h){var n=!1,p=ae.bind(g,g.push);return{start:function(q,r,s){q=ae.lowercase(q);!n&&m[q]&&(n=q);n||!0!==X[q]||(p("<"),p(q),ae.forEach(r,function(w,v){var t=ae.lowercase(v),u="img"===q&&"src"===t||"background"===t;!0!==a[t]||!0===V[t]&&!h(w,u)||(p(" "),p(v),p('="'),p(Z(w)),p('"'))}),p(s?"/>":">"))},end:function(q){q=ae.lowercase(q);n||!0!==X[q]||(p("</"),p(q),p(">"));q==n&&(n=!1)},chars:function(q){n||p(Z(q))}}}var d=ae.$$minErr("$sanitize"),f=/^<((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*(>?)/,j=/^<\/\s*([\w:-]+)[^>]*>/,Q=/([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g,e=/^</,i=/^<\//,o=/\x3c!--(.*?)--\x3e/g,l=/<!DOCTYPE([^>]*?)>/i,k=/<!\[CDATA\[(.*?)]]\x3e/g,c=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,b=/([^\#-~| |!])/g,P=af("area,br,col,hr,img,wbr");ad=af("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr");ac=af("rp,rt");var R=ae.extend({},ac,ad),W=ae.extend({},ad,af("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")),T=ae.extend({},ac,af("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var"));ad=af("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan,use");var m=af("script,style"),X=ae.extend({},P,W,T,R,ad),V=af("background,cite,href,longdesc,src,usemap,xlink:href");ad=af("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width");ac=af("accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan",!0);var a=ae.extend({},V,ac,ad),ab=document.createElement("pre");ae.module("ngSanitize",[]).provider("$sanitize",function(){this.$get=["$$sanitizeUri",function(g){return function(h){var n=[];S(h,Y(n,function(q,p){return !/^unsafe/.test(g(q,p))}));return n.join("")}}]});ae.module("ngSanitize").filter("linky",["$sanitize",function(g){var h=/((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,n=/^mailto:/i;return function(x,y){function u(p){p&&v.push(U(p))}function w(p,z){v.push("<a ");ae.isDefined(y)&&v.push('target="',y,'" ');v.push('href="',p.replace(/"/g,"&quot;"),'">');u(z);v.push("</a>")}if(!x){return x}for(var s,t=x,v=[],r,q;s=t.match(h);){r=s[0],s[2]||s[4]||(r=(s[3]?"http://":"mailto:")+r),q=s.index,u(t.substr(0,q)),w(r,s[0].replace(n,"")),t=t.substring(q+s[0].length)}u(t);return g(v.join(""))}}])})(window,window.angular);(function(d,c,b){function a(e,g,i){var j=i.baseHref(),h=e[0];return function(k,o,n){var m,l;n=n||{};l=n.expires;m=c.isDefined(n.path)?n.path:j;o===b&&(l="Thu, 01 Jan 1970 00:00:00 GMT",o="");c.isString(l)&&(l=new Date(l));o=encodeURIComponent(k)+"="+encodeURIComponent(o);o=o+(m?";path="+m:"")+(n.domain?";domain="+n.domain:"");o+=l?";expires="+l.toUTCString():"";o+=n.secure?";secure":"";n=o.length+1;4096<n&&g.warn("Cookie '"+k+"' possibly not set or overflowed because it was too large ("+n+" > 4096 bytes)!");h.cookie=o}}c.module("ngCookies",["ng"]).provider("$cookies",[function(){var e=this.defaults={};this.$get=["$$cookieReader","$$cookieWriter",function(g,h){return{get:function(f){return g()[f]},getObject:function(f){return(f=this.get(f))?c.fromJson(f):f},getAll:function(){return g()},put:function(j,f,i){h(j,f,i?c.extend({},e,i):e)},putObject:function(j,f,i){this.put(j,c.toJson(f),i)},remove:function(f,i){h(f,b,i?c.extend({},e,i):e)}}}]}]);c.module("ngCookies").factory("$cookieStore",["$cookies",function(e){return{get:function(f){return e.getObject(f)},put:function(g,h){e.putObject(g,h)},remove:function(f){e.remove(f)}}}]);a.$inject=["$document","$log","$browser"];c.module("ngCookies").provider("$$cookieWriter",function(){this.$get=a})})(window,window.angular);(function(a){angular.module("tmh.dynamicLocale",[]).config(["$provide",function(c){function b(d){d.$stateful=true;return d}c.decorator("dateFilter",["$delegate",b]);c.decorator("numberFilter",["$delegate",b]);c.decorator("currencyFilter",["$delegate",b])}]).constant("tmhDynamicLocale.STORAGE_KEY","tmhDynamicLocale.locale").provider("tmhDynamicLocale",["tmhDynamicLocale.STORAGE_KEY",function(j){var k,h="/lang/{{locale}}/angular-locale.js",d="tmhDynamicLocaleStorageCache",f,i=j,e={},g;function b(o,r,n,p){var m=document.createElement("script"),l=document.getElementsByTagName("body")[0],q=false;m.type="text/javascript";if(m.readyState){m.onreadystatechange=function(){if(m.readyState==="complete"||m.readyState==="loaded"){m.onreadystatechange=null;p(function(){if(q){return}q=true;l.removeChild(m);r()},30,false)}}}else{m.onload=function(){if(q){return}q=true;l.removeChild(m);r()};m.onerror=function(){if(q){return}q=true;l.removeChild(m);n()}}m.src=o;m.async=false;l.appendChild(m)}function c(p,n,q,r,o,l,m){function u(v,w){if(g!==q){return}angular.forEach(v,function(y,x){if(!w[x]){delete v[x]}else{if(angular.isArray(w[x])){v[x].length=w[x].length}}});angular.forEach(w,function(y,x){if(angular.isArray(w[x])||angular.isObject(w[x])){if(!v[x]){v[x]=angular.isArray(w[x])?[]:{}}u(v[x],w[x])}else{v[x]=w[x]}})}if(e[q]){return e[q]}var t,s=o.defer();if(q===g){s.resolve(n)}else{if((t=l.get(q))){g=q;r.$evalAsync(function(){u(n,t);r.$broadcast("$localeChangeSuccess",q,n);f.put(i,q);s.resolve(n)})}else{g=q;e[q]=s.promise;b(p,function(){var v=angular.injector(["ngLocale"]),w=v.get("$locale");u(n,w);l.put(q,w);delete e[q];r.$apply(function(){r.$broadcast("$localeChangeSuccess",q,n);f.put(i,q);s.resolve(n)})},function(){delete e[q];r.$apply(function(){if(g===q){g=n.id}r.$broadcast("$localeChangeError",q);s.reject(q)})},m)}}return s.promise}this.localeLocationPattern=function(l){if(l){h=l;return this}else{return h}};this.useStorage=function(l){d=l};this.useCookieStorage=function(){this.useStorage("$cookieStore")};this.defaultLocale=function(l){k=l};this.storageKey=function(l){if(l){i=l;return this}else{return i}};this.$get=["$rootScope","$injector","$interpolate","$locale","$q","tmhDynamicLocaleCache","$timeout",function(m,r,p,l,n,o,q){var s=p(h);f=r.get(d);m.$evalAsync(function(){var t;if((t=(f.get(i)||k))){c(s({locale:t}),l,t,m,n,o,q)}});return{set:function(t){return c(s({locale:t}),l,t,m,n,o,q)},get:function(){return g}}}]}]).provider("tmhDynamicLocaleCache",function(){this.$get=["$cacheFactory",function(b){return b("tmh.dynamicLocales")}]}).provider("tmhDynamicLocaleStorageCache",function(){this.$get=["$cacheFactory",function(b){return b("tmh.dynamicLocales.store")}]}).run(["tmhDynamicLocale",angular.noop])}(window));
/*! jQuery v2.1.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
;!function(d,c){"object"==typeof module&&"object"==typeof module.exports?module.exports=d.document?c(d,!0):function(b){if(!b.document){throw new Error("jQuery requires a window with a document")}return c(b)}:c(d)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=a.document,m="2.1.1",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return n.each(this,a,b)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++){if(null!=(a=arguments[h])){for(b in a){c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d))}}}return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){return !n.isArray(a)&&a-parseFloat(a)>=0},isPlainObject:function(a){return"object"!==n.type(a)||a.nodeType||n.isWindow(a)?!1:a.constructor&&!j.call(a.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(a){var b;for(b in a){return !1}return !0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf("use strict")?(b=l.createElement("script"),b.text=a,l.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=s(a);if(c){if(g){for(;f>e;e++){if(d=b.apply(a[e],c),d===!1){break}}}else{for(e in a){if(d=b.apply(a[e],c),d===!1){break}}}}else{if(g){for(;f>e;e++){if(d=b.call(a[e],e,a[e]),d===!1){break}}}else{for(e in a){if(d=b.call(a[e],e,a[e]),d===!1){break}}}}return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:g.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++){a[e++]=b[d]}return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++){d=!b(a[f],f),d!==h&&e.push(a[f])}return e},map:function(a,b,c){var d,f=0,g=a.length,h=s(a),i=[];if(h){for(;g>f;f++){d=b(a[f],f,c),null!=d&&i.push(d)}}else{for(f in a){d=b(a[f],f,c),null!=d&&i.push(d)}}return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(e=d.call(arguments,2),f=function(){return a.apply(b||this,e.concat(d.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:k}),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function s(a){var b=a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C="undefined",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++){if(this[b]===a){return b}}return -1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",N="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=N.replace("w","w#"),P="\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=":("+N+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=new RegExp("^"+M+"*,"+M+"*"),T=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp("="+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=new RegExp(Q),W=new RegExp("^"+O+"$"),X={ID:new RegExp("^#("+N+")"),CLASS:new RegExp("^\\.("+N+")"),TAG:new RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+Q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=/[+~]/,bb=/'|\\/g,cb=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]){}a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||"string"!=typeof a){return d}if(1!==(k=b.nodeType)&&9!==k){return[]}if(p&&!e){if(f=_.exec(a)){if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode){return d}if(h.id===j){return d.push(h),d}}else{if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j){return d.push(h),d}}}else{if(f[2]){return I.apply(d,b.getElementsByTagName(a)),d}if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName){return I.apply(d,b.getElementsByClassName(j)),d}}}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(bb,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--){o[l]=s+qb(o[l])}w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(",")}if(x){try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement("div");try{return !!a(b)}catch(c){return !1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split("|"),e=a.length;while(e--){d.attrHandle[c[e]]=b}}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d){return d}if(c){while(c=c.nextSibling){if(c===b){return -1}}}return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--){c[e=f[g]]&&(c[e]=!(d[e]=c[e]))}})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener("unload",function(){m()},!1):g.attachEvent&&g.attachEvent("onunload",function(){m()})),c.attributes=ib(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML="<div class='a'></div><div class='a i'></div>",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++]){1===c.nodeType&&d.push(c)}return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML="<select msallowclip=''><option selected=''></option></select>",a.querySelectorAll("[msallowclip^='']").length&&q.push("[*^$]="+M+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":checked").length||q.push(":checked")}),ib(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+M+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",Q)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b){while(b=b.parentNode){if(b===a){return !0}}}return !1},B=b?function(a,b){if(a===b){return l=!0,0}var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b){return l=!0,0}var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g){return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0}if(f===g){return kb(a,b)}c=a;while(c=c.parentNode){h.unshift(c)}c=b;while(c=c.parentNode){i.unshift(c)}while(h[d]===i[d]){d++}return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b))){try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType){return d}}catch(e){}}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++]){b===a[f]&&(e=d.push(f))}while(e--){a.splice(d[e],1)}}return k=null,a},e=fb.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent){return a.textContent}for(a=a.firstChild;a;a=a.nextSibling){c+=e(a)}}else{if(3===f||4===f){return a.nodeValue}}}else{while(b=a[d++]){c+=e(b)}}return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||"").replace(cb,db),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return"*"===a?function(){return !0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+M+")"+a+"("+M+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return !!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p]){if(h?l.nodeName.toLowerCase()===r:1===l.nodeType){return !1}}o=p="only"===a&&!o&&"nextSibling"}return !0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop()){if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}}else{if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w){m=j[1]}else{while(l=++n&&l&&l[p]||(m=n=0)||o.pop()){if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b)){break}}}}return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--){d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--){(f=g[h])&&(a[h]=!(b[h]=f))}}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: "+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do{if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang")){return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-")}}while((b=b.parentNode)&&1===b.nodeType);return !1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling){if(a.nodeType<6){return !1}}return !0},parent:function(a){return !d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2){a.push(c)}return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2){a.push(c)}return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;){a.push(d)}return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;){a.push(d)}return a})}},d.pseudos.nth=d.pseudos.eq;for(b in {radio:!0,checkbox:!0,file:!0,password:!0,image:!0}){d.pseudos[b]=lb(b)}for(b in {submit:!0,reset:!0}){d.pseudos[b]=mb(b)}function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k){return b?0:k.slice(0)}h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter){!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length))}if(!c){break}}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d="";c>b;b++){d+=a[b].value}return d}function rb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d]){if(1===b.nodeType||e){return a(b,c,f)}}}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d]){if((1===b.nodeType||e)&&a(b,c,g)){return !0}}}else{while(b=b[d]){if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f){return j[2]=h[2]}if(i[d]=j,j[2]=a(b,c,g)){return !0}}}}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--){if(!a[e](b,c,d)){return !1}}return !0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++){fb(a,b[d],c)}return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++){(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h))}return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--){(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}}if(f){if(e||a){if(e){j=[],k=r.length;while(k--){(l=r[k])&&j.push(q[k]=l)}e(null,r=[],j,i)}k=r.length;while(k--){(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}}else{r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)}})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return !g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++){if(c=d.relative[a[i].type]){m=[rb(sb(m),c)]}else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++){if(d.relative[a[e].type]){break}}return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||0.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++]){if(o(l,g,h)){i.push(l);break}}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++]){o(r,s,g,h)}if(f){if(p>0){while(q--){r[q]||s[q]||(s[q]=G.call(i))}}s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--){f=wb(b[c]),f[u]?d.push(f):e.push(f)}f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b){return e}n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type]){break}if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a){return I.apply(e,f),e}break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||jb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute("disabled")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=n.expr.match.needsContext,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^.[^:#\[\.,]*$/;function x(a,b,c){if(n.isFunction(b)){return n.grep(a,function(a,d){return !!b.call(a,d,a)!==c})}if(b.nodeType){return n.grep(a,function(a){return a===b!==c})}if("string"==typeof b){if(w.test(b)){return n.filter(b,a,c)}b=n.filter(b,a)}return n.grep(a,function(a){return g.call(b,a)>=0!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a){return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++){if(n.contains(e[b],this)){return !0}}}))}for(b=0;c>b;b++){n.find(a,e[b],d)}return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(x(this,a||[],!1))},not:function(a){return this.pushStack(x(this,a||[],!0))},is:function(a){return !!x(this,"string"==typeof a&&u.test(a)?n(a):a||[],!1).length}});var y,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=n.fn.init=function(a,b){var c,d;if(!a){return this}if("string"==typeof a){if(c="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b){return !b||b.jquery?(b||y).find(a):this.constructor(b).find(a)}if(c[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:l,!0)),v.test(c[1])&&n.isPlainObject(b)){for(c in b){n.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c])}}return this}return d=l.getElementById(c[2]),d&&d.parentNode&&(this.length=1,this[0]=d),this.context=l,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof y.ready?y.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};A.prototype=n.fn,y=n(l);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};n.extend({dir:function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType){if(1===a.nodeType){if(e&&n(a).is(c)){break}d.push(a)}}return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling){1===a.nodeType&&a!==b&&c.push(a)}return c}}),n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++){if(n.contains(this,b[a])){return !0}}})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=u.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++){for(c=this[d];c&&c!==b;c=c.parentNode){if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}}}return this.pushStack(f.length>1?n.unique(f):f)},index:function(a){return a?"string"==typeof a?g.call(n(a),this[0]):g.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.unique(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){while((a=a[b])&&1!==a.nodeType){}return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return n.dir(a,"parentNode")},parentsUntil:function(a,b,c){return n.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return n.dir(a,"nextSibling")},prevAll:function(a){return n.dir(a,"previousSibling")},nextUntil:function(a,b,c){return n.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return n.dir(a,"previousSibling",c)},siblings:function(a){return n.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return n.sibling(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(C[a]||n.unique(e),B.test(a)&&e.reverse()),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return n.each(a.match(E)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):n.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(b=a.memory&&l,c=!0,g=e||0,e=0,f=h.length,d=!0;h&&f>g;g++){if(h[g].apply(l[0],l[1])===!1&&a.stopOnFalse){b=!1;break}}d=!1,h&&(i?i.length&&j(i.shift()):b?h=[]:k.disable())},k={add:function(){if(h){var c=h.length;!function g(b){n.each(b,function(b,c){var d=n.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&g(c)})}(arguments),d?f=h.length:b&&(e=c,j(b))}return this},remove:function(){return h&&n.each(arguments,function(a,b){var c;while((c=n.inArray(b,h,c))>-1){h.splice(c,1),d&&(f>=c&&f--,g>=c&&g--)}}),this},has:function(a){return a?n.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],f=0,this},disable:function(){return h=i=b=void 0,this},disabled:function(){return !h},lock:function(){return i=void 0,b||k.disable(),this},locked:function(){return !i},fireWith:function(a,b){return !h||c&&!i||(b=b||[],b=[a,b.slice?b.slice():b],d?i.push(b):j(b)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return !!c}};return k},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&n.isFunction(a.promise)?e:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1){for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++){c[b]&&n.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f}}return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(H.resolveWith(l,[n]),n.fn.triggerHandler&&(n(l).triggerHandler("ready"),n(l).off("ready"))))}});function I(){l.removeEventListener("DOMContentLoaded",I,!1),a.removeEventListener("load",I,!1),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===l.readyState?setTimeout(n.ready):(l.addEventListener("DOMContentLoaded",I,!1),a.addEventListener("load",I,!1))),H.promise(b)},n.ready.promise();var J=n.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c){n.access(a,b,h,c[h],!0,f,g)}}else{if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b)){for(;i>h;h++){b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)))}}}return e?a:j?b.call(a):i?b(a[0],c):f};n.acceptData=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function K(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=n.expando+Math.random()}K.uid=1,K.accepts=n.acceptData,K.prototype={key:function(a){if(!K.accepts(a)){return 0}var b={},c=a[this.expando];if(!c){c=K.uid++;try{b[this.expando]={value:c},Object.defineProperties(a,b)}catch(d){b[this.expando]=c,n.extend(a,b)}}return this.cache[c]||(this.cache[c]={}),c},set:function(a,b,c){var d,e=this.key(a),f=this.cache[e];if("string"==typeof b){f[b]=c}else{if(n.isEmptyObject(f)){n.extend(this.cache[e],b)}else{for(d in b){f[d]=b[d]}}}return f},get:function(a,b){var c=this.cache[this.key(a)];return void 0===b?c:c[b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=this.key(a),g=this.cache[f];if(void 0===b){this.cache[f]={}}else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in g?d=[b,e]:(d=e,d=d in g?[d]:d.match(E)||[])),c=d.length;while(c--){delete g[d[c]]}}},hasData:function(a){return !n.isEmptyObject(this.cache[a[this.expando]]||{})},discard:function(a){a[this.expando]&&delete this.cache[a[this.expando]]}};var L=new K,M=new K,N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){var d;if(void 0===c&&1===a.nodeType){if(d="data-"+b.replace(O,"-$1").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}M.set(a,b,c)}else{c=void 0}}return c}n.extend({hasData:function(a){return M.hasData(a)||L.hasData(a)},data:function(a,b,c){return M.access(a,b,c)},removeData:function(a,b){M.remove(a,b)},_data:function(a,b,c){return L.access(a,b,c)},_removeData:function(a,b){L.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=M.get(f),1===f.nodeType&&!L.get(f,"hasDataAttrs"))){c=g.length;while(c--){g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])))}L.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){M.set(this,a)}):J(this,function(b){var c,d=n.camelCase(a);if(f&&void 0===b){if(c=M.get(f,a),void 0!==c){return c}if(c=M.get(f,d),void 0!==c){return c}if(c=P(f,d,void 0),void 0!==c){return c}}else{this.each(function(){var c=M.get(this,d);M.set(this,d,b),-1!==a.indexOf("-")&&void 0!==c&&M.set(this,a,b)})}},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){M.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=L.get(a,b),c&&(!d||n.isArray(c)?d=L.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return L.get(a,c)||L.access(a,c,{empty:n.Callbacks("once memory").add(function(){L.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--){c=L.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h))}return h(),e.promise(b)}});var Q=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=["Top","Right","Bottom","Left"],S=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)},T=/^(?:checkbox|radio)$/i;!function(){var a=l.createDocumentFragment(),b=a.appendChild(l.createElement("div")),c=l.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var U="undefined";k.focusinBubbles="onfocusin" in a;var V=/^key/,W=/^(?:mouse|pointer|contextmenu)|click/,X=/^(?:focusinfocus|focusoutblur)$/,Y=/^([^.]*)(?:\.(.+)|)$/;function Z(){return !0}function $(){return !1}function _(){try{return l.activeElement}catch(a){}}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return typeof n!==U&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(E)||[""],j=b.length;while(j--){h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g,!1)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=L.hasData(a)&&L.get(a);if(r&&(i=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--){if(h=Y.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--){k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k))}g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else{for(o in i){n.event.remove(a,o+b[j],c,d,!0)}}}n.isEmptyObject(i)&&(delete r.handle,L.remove(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,m,o,p=[d||l],q=j.call(b,"type")?b.type:b,r=j.call(b,"namespace")?b.namespace.split("."):[];if(g=h=d=d||l,3!==d.nodeType&&8!==d.nodeType&&!X.test(q+n.event.triggered)&&(q.indexOf(".")>=0&&(r=q.split("."),q=r.shift(),r.sort()),k=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=r.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},e||!o.trigger||o.trigger.apply(d,c)!==!1)){if(!e&&!o.noBubble&&!n.isWindow(d)){for(i=o.delegateType||q,X.test(i+q)||(g=g.parentNode);g;g=g.parentNode){p.push(g),h=g}h===(d.ownerDocument||l)&&p.push(h.defaultView||h.parentWindow||a)}f=0;while((g=p[f++])&&!b.isPropagationStopped()){b.type=f>1?i:o.bindType||q,m=(L.get(g,"events")||{})[b.type]&&L.get(g,"handle"),m&&m.apply(g,c),m=k&&g[k],m&&m.apply&&n.acceptData(g)&&(b.result=m.apply(g,c),b.result===!1&&b.preventDefault())}return b.type=q,e||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!n.acceptData(d)||k&&n.isFunction(d[q])&&!n.isWindow(d)&&(h=d[k],h&&(d[k]=null),n.event.triggered=q,d[q](),n.event.triggered=void 0,h&&(d[k]=h)),b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(L.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped()){(!a.namespace_re||a.namespace_re.test(g.namespace))&&(a.handleObj=g,a.data=g.data,e=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(a.result=e)===!1&&(a.preventDefault(),a.stopPropagation()))}}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type)){for(;i!==this;i=i.parentNode||this){if(i.disabled!==!0||"click"!==a.type){for(d=[],c=0;h>c;c++){f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>=0:n.find(e,this,null,[i]).length),d[e]&&d.push(f)}d.length&&g.push({elem:i,handlers:d})}}}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||l,d=c.documentElement,e=c.body,a.pageX=b.clientX+(d&&d.scrollLeft||e&&e.scrollLeft||0)-(d&&d.clientLeft||e&&e.clientLeft||0),a.pageY=b.clientY+(d&&d.scrollTop||e&&e.scrollTop||0)-(d&&d.clientTop||e&&e.clientTop||0)),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},fix:function(a){if(a[n.expando]){return a}var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=W.test(e)?this.mouseHooks:V.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new n.Event(f),b=d.length;while(b--){c=d[b],a[c]=f[c]}return a.target||(a.target=l),3===a.target.nodeType&&(a.target=a.target.parentNode),g.filter?g.filter(a,f):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==_()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===_()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&n.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=n.extend(new n.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?n.event.trigger(e,null,b):n.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?Z:$):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void (this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={isDefaultPrevented:$,isPropagationStopped:$,isImmediatePropagationStopped:$,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=Z,a&&a.preventDefault&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=Z,a&&a.stopPropagation&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=Z,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!n.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.focusinBubbles||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a),!0)};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=L.access(d,b);e||d.addEventListener(a,c,!0),L.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=L.access(d,b)-1;e?L.access(d,b,e):(d.removeEventListener(a,c,!0),L.remove(d,b))}}}),n.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(g in a){this.on(g,b,c,a[g],e)}return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1){d=$}else{if(!d){return this}}return 1===e&&(f=d,d=function(a){return n().off(a),f.apply(this,arguments)},d.guid=f.guid||(f.guid=n.guid++)),this.each(function(){n.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj){return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this}if("object"==typeof a){for(e in a){this.off(e,b,a[e])}return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=$),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ab=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bb=/<([\w:]+)/,cb=/<|&#?\w+;/,db=/<(?:script|style|link)/i,eb=/checked\s*(?:[^=]|=\s*.checked.)/i,fb=/^$|\/(?:java|ecma)script/i,gb=/^true\/(.*)/,hb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,ib={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ib.optgroup=ib.option,ib.tbody=ib.tfoot=ib.colgroup=ib.caption=ib.thead,ib.th=ib.td;function jb(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function kb(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function lb(a){var b=gb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function mb(a,b){for(var c=0,d=a.length;d>c;c++){L.set(a[c],"globalEval",!b||L.get(b[c],"globalEval"))}}function nb(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(L.hasData(a)&&(f=L.access(a),g=L.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j){for(c=0,d=j[e].length;d>c;c++){n.event.add(b,e,j[e][c])}}}M.hasData(a)&&(h=M.access(a),i=n.extend({},h),M.set(b,i))}}function ob(a,b){var c=a.getElementsByTagName?a.getElementsByTagName(b||"*"):a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function pb(a,b){var c=b.nodeName.toLowerCase();"input"===c&&T.test(a.type)?b.checked=a.checked:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}n.extend({clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a))){for(g=ob(h),f=ob(a),d=0,e=f.length;e>d;d++){pb(f[d],g[d])}}if(b){if(c){for(f=f||ob(a),g=g||ob(h),d=0,e=f.length;e>d;d++){nb(f[d],g[d])}}else{nb(a,h)}}return g=ob(h,"script"),g.length>0&&mb(g,!i&&ob(a,"script")),h},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,k=b.createDocumentFragment(),l=[],m=0,o=a.length;o>m;m++){if(e=a[m],e||0===e){if("object"===n.type(e)){n.merge(l,e.nodeType?[e]:e)}else{if(cb.test(e)){f=f||k.appendChild(b.createElement("div")),g=(bb.exec(e)||["",""])[1].toLowerCase(),h=ib[g]||ib._default,f.innerHTML=h[1]+e.replace(ab,"<$1></$2>")+h[2],j=h[0];while(j--){f=f.lastChild}n.merge(l,f.childNodes),f=k.firstChild,f.textContent=""}else{l.push(b.createTextNode(e))}}}}k.textContent="",m=0;while(e=l[m++]){if((!d||-1===n.inArray(e,d))&&(i=n.contains(e.ownerDocument,e),f=ob(k.appendChild(e),"script"),i&&mb(f),c)){j=0;while(e=f[j++]){fb.test(e.type||"")&&c.push(e)}}}return k},cleanData:function(a){for(var b,c,d,e,f=n.event.special,g=0;void 0!==(c=a[g]);g++){if(n.acceptData(c)&&(e=c[L.expando],e&&(b=L.cache[e]))){if(b.events){for(d in b.events){f[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle)}}L.cache[e]&&delete L.cache[e]}delete M.cache[c[M.expando]]}}}),n.fn.extend({text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=a)})},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=jb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?n.filter(a,this):this,e=0;null!=(c=d[e]);e++){b||1!==c.nodeType||n.cleanData(ob(c)),c.parentNode&&(b&&n.contains(c.ownerDocument,c)&&mb(ob(c,"script")),c.parentNode.removeChild(c))}return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&(n.cleanData(ob(a,!1)),a.textContent="")}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType){return b.innerHTML}if("string"==typeof a&&!db.test(a)&&!ib[(bb.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(ab,"<$1></$2>");try{for(;d>c;c++){b=this[c]||{},1===b.nodeType&&(n.cleanData(ob(b,!1)),b.innerHTML=a)}b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,n.cleanData(ob(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,m=this,o=l-1,p=a[0],q=n.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&eb.test(p)){return this.each(function(c){var d=m.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)})}if(l&&(c=n.buildFragment(a,this[0].ownerDocument,!1,this),d=c.firstChild,1===c.childNodes.length&&(c=d),d)){for(f=n.map(ob(c,"script"),kb),g=f.length;l>j;j++){h=c,j!==o&&(h=n.clone(h,!0,!0),g&&n.merge(f,ob(h,"script"))),b.call(this[j],h,j)}if(g){for(i=f[f.length-1].ownerDocument,n.map(f,lb),j=0;g>j;j++){h=f[j],fb.test(h.type||"")&&!L.access(h,"globalEval")&&n.contains(i,h)&&(h.src?n._evalUrl&&n._evalUrl(h.src):n.globalEval(h.textContent.replace(hb,"")))}}}return this}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),g=e.length-1,h=0;g>=h;h++){c=h===g?this:this.clone(!0),n(e[h])[b](c),f.apply(d,c.get())}return this.pushStack(d)}});var qb,rb={};function sb(b,c){var d,e=n(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:n.css(e[0],"display");return e.detach(),f}function tb(a){var b=l,c=rb[a];return c||(c=sb(a,b),"none"!==c&&c||(qb=(qb||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=qb[0].contentDocument,b.write(),b.close(),c=sb(a,b),qb.detach()),rb[a]=c),c}var ub=/^margin/,vb=new RegExp("^("+Q+")(?!px)[a-z%]+$","i"),wb=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)};function xb(a,b,c){var d,e,f,g,h=a.style;return c=c||wb(a),c&&(g=c.getPropertyValue(b)||c[b]),c&&(""!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),vb.test(g)&&ub.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function yb(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d=l.documentElement,e=l.createElement("div"),f=l.createElement("div");if(f.style){f.style.backgroundClip="content-box",f.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===f.style.backgroundClip,e.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",e.appendChild(f);function g(){f.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",f.innerHTML="",d.appendChild(e);var g=a.getComputedStyle(f,null);b="1%"!==g.top,c="4px"===g.width,d.removeChild(e)}a.getComputedStyle&&n.extend(k,{pixelPosition:function(){return g(),b},boxSizingReliable:function(){return null==c&&g(),c},reliableMarginRight:function(){var b,c=f.appendChild(l.createElement("div"));return c.style.cssText=f.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",f.style.width="1px",d.appendChild(e),b=!parseFloat(a.getComputedStyle(c,null).marginRight),d.removeChild(e),b}})}}(),n.swap=function(a,b,c,d){var e,f,g={};for(f in b){g[f]=a.style[f],a.style[f]=b[f]}e=c.apply(a,d||[]);for(f in b){a.style[f]=g[f]}return e};var zb=/^(none|table(?!-c[ea]).+)/,Ab=new RegExp("^("+Q+")(.*)$","i"),Bb=new RegExp("^([+-])=("+Q+")","i"),Cb={position:"absolute",visibility:"hidden",display:"block"},Db={letterSpacing:"0",fontWeight:"400"},Eb=["Webkit","O","Moz","ms"];function Fb(a,b){if(b in a){return b}var c=b[0].toUpperCase()+b.slice(1),d=b,e=Eb.length;while(e--){if(b=Eb[e]+c,b in a){return b}}return d}function Gb(a,b,c){var d=Ab.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Hb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2){"margin"===c&&(g+=n.css(a,c+R[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+R[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+R[f]+"Width",!0,e))):(g+=n.css(a,"padding"+R[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+R[f]+"Width",!0,e)))}return g}function Ib(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=wb(a),g="border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=xb(a,b,f),(0>e||null==e)&&(e=a.style[b]),vb.test(e)){return e}d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Hb(a,b,c||(g?"border":"content"),d,f)+"px"}function Jb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++){d=a[g],d.style&&(f[g]=L.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&S(d)&&(f[g]=L.access(d,"olddisplay",tb(d.nodeName)))):(e=S(d),"none"===c&&e||L.set(d,"olddisplay",e?c:n.css(d,"display"))))}for(g=0;h>g;g++){d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"))}return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=xb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Fb(i,h)),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&"get" in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=Bb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(n.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||n.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set" in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Fb(a.style,h)),g=n.cssHooks[b]||n.cssHooks[h],g&&"get" in g&&(e=g.get(a,!0,c)),void 0===e&&(e=xb(a,b,d)),"normal"===e&&b in Db&&(e=Db[b]),""===c||c?(f=parseFloat(e),c===!0||n.isNumeric(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?zb.test(n.css(a,"display"))&&0===a.offsetWidth?n.swap(a,Cb,function(){return Ib(a,b,d)}):Ib(a,b,d):void 0},set:function(a,c,d){var e=d&&wb(a);return Gb(a,c,d?Hb(a,b,d,"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),n.cssHooks.marginRight=yb(k.reliableMarginRight,function(a,b){return b?n.swap(a,{display:"inline-block"},xb,[a,"marginRight"]):void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++){e[a+R[d]+b]=f[d]||f[d-2]||f[0]}return e}},ub.test(a)||(n.cssHooks[a+b].set=Gb)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=wb(a),e=b.length;e>g;g++){f[b[g]]=n.css(a,b[g],!1,d)}return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Jb(this,!0)},hide:function(){return Jb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){S(this)?n(this).show():n(this).hide()})}});function Kb(a,b,c,d,e){return new Kb.prototype.init(a,b,c,d,e)}n.Tween=Kb,Kb.prototype={constructor:Kb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Kb.propHooks[this.prop];return a&&a.get?a.get(this):Kb.propHooks._default.get(this)},run:function(a){var b,c=Kb.propHooks[this.prop];return this.pos=b=this.options.duration?n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Kb.propHooks._default.set(this),this}},Kb.prototype.init.prototype=Kb.prototype,Kb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[n.cssProps[a.prop]]||n.cssHooks[a.prop])?n.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Kb.propHooks.scrollTop=Kb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return 0.5-Math.cos(a*Math.PI)/2}},n.fx=Kb.prototype.init,n.fx.step={};var Lb,Mb,Nb=/^(?:toggle|show|hide)$/,Ob=new RegExp("^(?:([+-])=|)("+Q+")([a-z%]*)$","i"),Pb=/queueHooks$/,Qb=[Vb],Rb={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=Ob.exec(b),f=e&&e[3]||(n.cssNumber[a]?"":"px"),g=(n.cssNumber[a]||"px"!==f&&+d)&&Ob.exec(n.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do{h=h||".5",g/=h,n.style(c.elem,a,g+f)}while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function Sb(){return setTimeout(function(){Lb=void 0}),Lb=n.now()}function Tb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b){c=R[d],e["margin"+c]=e["padding"+c]=a}return b&&(e.opacity=e.width=a),e}function Ub(a,b,c){for(var d,e=(Rb[b]||[]).concat(Rb["*"]),f=0,g=e.length;g>f;f++){if(d=e[f].call(c,b,a)){return d}}}function Vb(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&S(a),q=L.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height" in b||"width" in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),k="none"===j?L.get(a,"olddisplay")||tb(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b){if(e=b[d],Nb.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d]){continue}p=!0}m[d]=q&&q[d]||n.style(a,d)}else{j=void 0}}if(n.isEmptyObject(m)){"inline"===("none"===j?tb(a.nodeName):j)&&(o.display=j)}else{q?"hidden" in q&&(p=q.hidden):q=L.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;L.remove(a,"fxshow");for(b in m){n.style(a,b,m[b])}});for(d in m){g=Ub(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}}function Wb(a,b){var c,d,e,f,g;for(c in a){if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand" in g){f=g.expand(f),delete a[d];for(c in f){c in a||(a[c]=f[c],b[c]=e)}}else{b[d]=e}}}function Xb(a,b,c){var d,e,f=0,g=Qb.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e){return !1}for(var b=Lb||Sb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++){j.tweens[g].run(f)}return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:Lb||Sb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e){return this}for(e=!0;d>c;c++){j.tweens[c].run(1)}return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Wb(k,j.opts.specialEasing);g>f;f++){if(d=Qb[f].call(j,a,k,j.opts)){return d}}return n.map(k,Ub,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Xb,{tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++){c=a[d],Rb[c]=Rb[c]||[],Rb[c].unshift(b)}},prefilter:function(a,b){b?Qb.unshift(a):Qb.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(S).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Xb(this,n.extend({},a),f);(e||L.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=L.get(this);if(e){g[e]&&g[e].stop&&d(g[e])}else{for(e in g){g[e]&&g[e].stop&&Pb.test(e)&&d(g[e])}}for(e=f.length;e--;){f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1))}(b||!c)&&n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=L.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;){f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1))}for(b=0;g>b;b++){d[b]&&d[b].finish&&d[b].finish.call(this)}delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Tb(b,!0),a,d,e)}}),n.each({slideDown:Tb("show"),slideUp:Tb("hide"),slideToggle:Tb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Lb=n.now();b<c.length;b++){a=c[b],a()||c[b]!==a||c.splice(b--,1)}c.length||n.fx.stop(),Lb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Mb||(Mb=setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){clearInterval(Mb),Mb=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(a,b){return a=n.fx?n.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a=l.createElement("input"),b=l.createElement("select"),c=b.appendChild(l.createElement("option"));a.type="checkbox",k.checkOn=""!==a.value,k.optSelected=c.selected,b.disabled=!0,k.optDisabled=!c.disabled,a=l.createElement("input"),a.value="t",a.type="radio",k.radioValue="t"===a.value}();var Yb,Zb,$b=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f){return typeof a.getAttribute===U?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),d=n.attrHooks[b]||(n.expr.match.bool.test(b)?Zb:Yb)),void 0===c?d&&"get" in d&&null!==(e=d.get(a,b))?e:(e=n.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set" in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void n.removeAttr(a,b))}},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType){while(c=f[e++]){d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)}}},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),Zb={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=$b[b]||n.find.attr;$b[b]=function(a,b,d){var e,f;return d||(f=$b[b],$b[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,$b[b]=f),e}});var _b=/^(?:input|select|textarea|button)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g){return f=1!==g||!n.isXMLDoc(a),f&&(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set" in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get" in e&&null!==(d=e.get(a,b))?d:a[b]}},propHooks:{tabIndex:{get:function(a){return a.hasAttribute("tabindex")||_b.test(a.nodeName)||a.href?a.tabIndex:-1}}}}),k.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var ac=/[\t\r\n\f]/g;n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h="string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a)){return this.each(function(b){n(this).addClass(a.call(this,b,this.className))})}if(h){for(b=(a||"").match(E)||[];j>i;i++){if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):" ")){f=0;while(e=b[f++]){d.indexOf(" "+e+" ")<0&&(d+=e+" ")}g=n.trim(d),c.className!==g&&(c.className=g)}}}return this},removeClass:function(a){var b,c,d,e,f,g,h=0===arguments.length||"string"==typeof a&&a,i=0,j=this.length;if(n.isFunction(a)){return this.each(function(b){n(this).removeClass(a.call(this,b,this.className))})}if(h){for(b=(a||"").match(E)||[];j>i;i++){if(c=this[i],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(ac," "):"")){f=0;while(e=b[f++]){while(d.indexOf(" "+e+" ")>=0){d=d.replace(" "+e+" "," ")}}g=a?n.trim(d):"",c.className!==g&&(c.className=g)}}}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(n.isFunction(a)?function(c){n(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=n(this),f=a.match(E)||[];while(b=f[d++]){e.hasClass(b)?e.removeClass(b):e.addClass(b)}}else{(c===U||"boolean"===c)&&(this.className&&L.set(this,"__className__",this.className),this.className=this.className||a===!1?"":L.get(this,"__className__")||"")}})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++){if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(ac," ").indexOf(b)>=0){return !0}}return !1}});var bc=/\r/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];if(arguments.length){return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set" in b&&void 0!==b.set(this,e,"value")||(this.value=e))})}if(e){return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get" in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(bc,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++){if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f){return b}g.push(b)}}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--){d=e[g],(d.selected=n.inArray(d.value,f)>=0)&&(c=!0)}return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>=0:void 0}},k.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var cc=n.now(),dc=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(a){var b,c;if(!a||"string"!=typeof a){return null}try{c=new DOMParser,b=c.parseFromString(a,"text/xml")}catch(d){b=void 0}return(!b||b.getElementsByTagName("parsererror").length)&&n.error("Invalid XML: "+a),b};var ec,fc,gc=/#.*$/,hc=/([?&])_=[^&]*/,ic=/^(.*?):[ \t]*([^\r\n]*)$/gm,jc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kc=/^(?:GET|HEAD)$/,lc=/^\/\//,mc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,nc={},oc={},pc="*/".concat("*");try{fc=location.href}catch(qc){fc=l.createElement("a"),fc.href="",fc=fc.href}ec=mc.exec(fc.toLowerCase())||[];function rc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(n.isFunction(c)){while(d=f[e++]){"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}}}function sc(a,b,c,d){var e={},f=a===oc;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function tc(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b){void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c])}return d&&n.extend(!0,a,d),a}function uc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0]){i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"))}if(d){for(e in h){if(h[e]&&h[e].test(d)){i.unshift(e);break}}}if(i[0] in c){f=i[0]}else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function vc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1]){for(g in a.converters){j[g.toLowerCase()]=a.converters[g]}}f=k.shift();while(f){if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift()){if("*"===f){f=i}else{if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g){for(e in j){if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}}}if(g!==!0){if(g&&a["throws"]){b=g(b)}else{try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}}}}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fc,type:"GET",isLocal:jc.test(ec[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":pc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?tc(tc(a,n.ajaxSettings),b):tc(n.ajaxSettings,a)},ajaxPrefilter:rc(nc),ajaxTransport:rc(oc),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=n.ajaxSetup({},b),l=k.context||k,m=k.context&&(l.nodeType||l.jquery)?n(l):n.event,o=n.Deferred(),p=n.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!f){f={};while(b=ic.exec(e)){f[b[1].toLowerCase()]=b[2]}}b=f[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?e:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a){if(2>t){for(b in a){q[b]=[q[b],a[b]]}}else{v.always(a[v.status])}}return this},abort:function(a){var b=a||u;return c&&c.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||fc)+"").replace(gc,"").replace(lc,ec[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=n.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(h=mc.exec(k.url.toLowerCase()),k.crossDomain=!(!h||h[1]===ec[1]&&h[2]===ec[2]&&(h[3]||("http:"===h[1]?"80":"443"))===(ec[3]||("http:"===ec[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=n.param(k.data,k.traditional)),sc(nc,k,b,v),2===t){return v}i=k.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!kc.test(k.type),d=k.url,k.hasContent||(k.data&&(d=k.url+=(dc.test(d)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=hc.test(d)?d.replace(hc,"$1_="+cc++):d+(dc.test(d)?"&":"?")+"_="+cc++)),k.ifModified&&(n.lastModified[d]&&v.setRequestHeader("If-Modified-Since",n.lastModified[d]),n.etag[d]&&v.setRequestHeader("If-None-Match",n.etag[d])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+pc+"; q=0.01":""):k.accepts["*"]);for(j in k.headers){v.setRequestHeader(j,k.headers[j])}if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t)){return v.abort()}u="abort";for(j in {success:1,error:1,complete:1}){v[j](k[j])}if(c=sc(oc,k,b,v)){v.readyState=1,i&&m.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,c.send(r,x)}catch(w){if(!(2>t)){throw w}x(-1,w)}}else{x(-1,"No Transport")}function x(a,b,f,h){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),c=void 0,e=h||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,f&&(u=uc(k,v,f)),u=vc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(n.lastModified[d]=w),w=v.getResponseHeader("etag"),w&&(n.etag[d]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,i&&m.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),i&&(m.trigger("ajaxComplete",[v,k]),--n.active||n.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild){a=a.firstElementChild}return a}).append(this)),this)},wrapInner:function(a){return this.each(n.isFunction(a)?function(b){n(this).wrapInner(a.call(this,b))}:function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0},n.expr.filters.visible=function(a){return !n.expr.filters.hidden(a)};var wc=/%20/g,xc=/\[\]$/,yc=/\r?\n/g,zc=/^(?:submit|button|image|reset|file)$/i,Ac=/^(?:input|select|textarea|keygen)/i;function Bc(a,b,c,d){var e;if(n.isArray(b)){n.each(b,function(b,e){c||xc.test(a)?d(a,e):Bc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)})}else{if(c||"object"!==n.type(b)){d(a,b)}else{for(e in b){Bc(a+"["+e+"]",b[e],c,d)}}}}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a)){n.each(a,function(){e(this.name,this.value)})}else{for(c in a){Bc(c,a[c],b,e)}}return d.join("&").replace(wc,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&Ac.test(this.nodeName)&&!zc.test(a)&&(this.checked||!T.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(yc,"\r\n")}}):{name:b.name,value:c.replace(yc,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(a){}};var Cc=0,Dc={},Ec={0:200,1223:204},Fc=n.ajaxSettings.xhr();a.ActiveXObject&&n(a).on("unload",function(){for(var a in Dc){Dc[a]()}}),k.cors=!!Fc&&"withCredentials" in Fc,k.ajax=Fc=!!Fc,n.ajaxTransport(function(a){var b;return k.cors||Fc&&!a.crossDomain?{send:function(c,d){var e,f=a.xhr(),g=++Cc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields){for(e in a.xhrFields){f[e]=a.xhrFields[e]}}a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c){f.setRequestHeader(e,c[e])}b=function(a){return function(){b&&(delete Dc[g],b=f.onload=f.onerror=null,"abort"===a?f.abort():"error"===a?d(f.status,f.statusText):d(Ec[f.status]||f.status,f.statusText,"string"==typeof f.responseText?{text:f.responseText}:void 0,f.getAllResponseHeaders()))}},f.onload=b(),f.onerror=b("error"),b=Dc[g]=b("abort");try{f.send(a.hasContent&&a.data||null)}catch(h){if(b){throw h}}},abort:function(){b&&b()}}:void 0}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(d,e){b=n("<script>").prop({async:!0,charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&e("error"===a.type?404:200,a.type)}),l.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Gc=[],Hc=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Gc.pop()||n.expando+"_"+cc++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Hc.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Hc.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Hc,"$1"+e):b.jsonp!==!1&&(b.url+=(dc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Gc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a){return null}"boolean"==typeof b&&(c=b,b=!1),b=b||l;var d=v.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=n.buildFragment([a],b,e),e&&e.length&&n(e).remove(),n.merge([],d.childNodes))};var Ic=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Ic){return Ic.apply(this,arguments)}var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e,dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,f||[a.responseText,b,a])}),this},n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};var Jc=a.document.documentElement;function Kc(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using" in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length){return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)})}var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f){return b=f.documentElement,n.contains(b,d)?(typeof d.getBoundingClientRect!==U&&(e=d.getBoundingClientRect()),c=Kc(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||Jc;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position")){a=a.offsetParent}return a||Jc})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(b,c){var d="pageYOffset"===c;n.fn[b]=function(e){return J(this,function(b,e,f){var g=Kc(b);return void 0===f?g?g[c]:b[e]:void (g?g.scrollTo(d?a.pageXOffset:f,d?f:a.pageYOffset):b[e]=f)},b,e,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=yb(k.pixelPosition,function(a,c){return c?(c=xb(a,b),vb.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var Lc=a.jQuery,Mc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mc),b&&a.jQuery===n&&(a.jQuery=Lc),n},typeof b===U&&(a.jQuery=a.$=n),n});
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function(a){if(typeof define==="function"&&define.amd){define(["jquery"],a)}else{if(typeof exports==="object"){a(require("jquery"))}else{a(jQuery)}}}(function(f){var a=/\+/g;function d(i){return b.raw?i:encodeURIComponent(i)}function g(i){return b.raw?i:decodeURIComponent(i)}function h(i){return d(b.json?JSON.stringify(i):String(i))}function c(i){if(i.indexOf('"')===0){i=i.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,"\\")}try{i=decodeURIComponent(i.replace(a," "));return b.json?JSON.parse(i):i}catch(j){}}function e(j,i){var k=b.raw?j:c(j);return f.isFunction(i)?i(k):k}var b=f.cookie=function(q,p,v){if(p!==undefined&&!f.isFunction(p)){v=f.extend({},b.defaults,v);if(typeof v.expires==="number"){var r=v.expires,u=v.expires=new Date();u.setTime(+u+r*86400000)}return(document.cookie=[d(q),"=",h(p),v.expires?"; expires="+v.expires.toUTCString():"",v.path?"; path="+v.path:"",v.domain?"; domain="+v.domain:"",v.secure?"; secure":""].join(""))}var w=q?undefined:{};var s=document.cookie?document.cookie.split("; "):[];for(var o=0,m=s.length;o<m;o++){var n=s[o].split("=");var j=g(n.shift());var k=n.join("=");if(q&&q===j){w=e(k,p);break}if(!q&&(k=e(k))!==undefined){w[j]=k}}return w};b.defaults={};f.removeCookie=function(j,i){if(f.cookie(j)===undefined){return false}f.cookie(j,"",f.extend({},i,{expires:-1}));return !f.cookie(j)}}));(function(b){var a=function(e,d){var c=!/[^\w\-\.:]/.test(e)?a.cache[e]=a.cache[e]||a(a.load(e)):new Function(a.arg+",tmpl","var _e=tmpl.encode"+a.helper+",_s='"+e.replace(a.regexp,a.func)+"';return _s;");return d?c(d,a):function(f){return c(f,a)}};a.cache={};a.load=function(c){return document.getElementById(c).innerHTML};a.regexp=/([\s'\\])(?!(?:[^{]|\{(?!%))*%\})|(?:\{%(=|#)([\s\S]+?)%\})|(\{%)|(%\})/g;a.func=function(d,h,g,f,e,c){if(h){return{"\n":"\\n","\r":"\\r","\t":"\\t"," ":" "}[h]||"\\"+h}if(g){if(g==="="){return"'+_e("+f+")+'"}return"'+"+f+"+'"}if(e){return"';"}if(c){return"_s+='"}};a.encReg=/[<>&"'\x00]/g;a.encMap={"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;","'":"&#39;"};a.encode=function(c){return String(c).replace(a.encReg,function(d){return a.encMap[d]||""})};a.arg="o";a.helper=",print=function(s,e){_s+=e&&(s||'')||_e(s);},include=function(s,d){_s+=tmpl(s,d);}";if(typeof define==="function"&&define.amd){define(function(){return a})}else{b.tmpl=a}}(this));
/*! jQuery UI - v1.10.3 - 2013-05-24
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.resizable.js, jquery.ui.autocomplete.js, jquery.ui.menu.js
* Copyright 2013 jQuery Foundation and other contributors Licensed MIT */
(function(g,d){function c(k,j){var e,p,l,m=k.nodeName.toLowerCase();return"area"===m?(e=k.parentNode,p=e.name,k.href&&p&&"map"===e.nodeName.toLowerCase()?(l=g("img[usemap=#"+p+"]")[0],!!l&&f(l)):!1):(/input|select|textarea|button|object/.test(m)?!k.disabled:"a"===m?k.href||j:j)&&f(k)}function f(a){return g.expr.filters.visible(a)&&!g(a).parents().addBack().filter(function(){return"hidden"===g.css(this,"visibility")}).length}var b=0,h=/^ui-id-\d+$/;g.ui=g.ui||{},g.extend(g.ui,{version:"1.10.3",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),g.fn.extend({focus:function(a){return function(e,j){return"number"==typeof e?this.each(function(){var i=this;setTimeout(function(){g(i).focus(),j&&j.call(i)},e)}):a.apply(this,arguments)}}(g.fn.focus),scrollParent:function(){var a;return a=g.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(g.css(this,"position"))&&/(auto|scroll)/.test(g.css(this,"overflow")+g.css(this,"overflow-y")+g.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(g.css(this,"overflow")+g.css(this,"overflow-y")+g.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!a.length?g(document):a},zIndex:function(j){if(j!==d){return this.css("zIndex",j)}if(this.length){for(var k,e,l=g(this[0]);l.length&&l[0]!==document;){if(k=l.css("position"),("absolute"===k||"relative"===k||"fixed"===k)&&(e=parseInt(l.css("zIndex"),10),!isNaN(e)&&0!==e)){return e}l=l.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++b)})},removeUniqueId:function(){return this.each(function(){h.test(this.id)&&g(this).removeAttr("id")})}}),g.extend(g.expr[":"],{data:g.expr.createPseudo?g.expr.createPseudo(function(a){return function(e){return !!g.data(e,a)}}):function(e,a,j){return !!g.data(e,j[3])},focusable:function(a){return c(a,!isNaN(g.attr(a,"tabindex")))},tabbable:function(i){var j=g.attr(i,"tabindex"),e=isNaN(j);return(e||j>=0)&&c(i,!e)}}),g("<a>").outerWidth(1).jquery||g.each(["Width","Height"],function(j,k){function e(q,o,r,n){return g.each(p,function(){o-=parseFloat(g.css(q,"padding"+this))||0,r&&(o-=parseFloat(g.css(q,"border"+this+"Width"))||0),n&&(o-=parseFloat(g.css(q,"margin"+this))||0)}),o}var p="Width"===k?["Left","Right"]:["Top","Bottom"],l=k.toLowerCase(),m={innerWidth:g.fn.innerWidth,innerHeight:g.fn.innerHeight,outerWidth:g.fn.outerWidth,outerHeight:g.fn.outerHeight};g.fn["inner"+k]=function(a){return a===d?m["inner"+k].call(this):this.each(function(){g(this).css(l,e(this,a)+"px")})},g.fn["outer"+k]=function(n,a){return"number"!=typeof n?m["outer"+k].call(this,n):this.each(function(){g(this).css(l,e(this,n,!0,a)+"px")})}}),g.fn.addBack||(g.fn.addBack=function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}),g("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(g.fn.removeData=function(a){return function(e){return arguments.length?a.call(this,g.camelCase(e)):a.call(this)}}(g.fn.removeData)),g.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),g.support.selectstart="onselectstart" in document.createElement("div"),g.fn.extend({disableSelection:function(){return this.bind((g.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),g.extend(g.ui,{plugin:{add:function(k,j,l){var e,m=g.ui[k].prototype;for(e in l){m.plugins[e]=m.plugins[e]||[],m.plugins[e].push([j,l[e]])}},call:function(n,l,k){var m,j=n.plugins[l];if(j&&n.element[0].parentNode&&11!==n.element[0].parentNode.nodeType){for(m=0;j.length>m;m++){n.options[j[m][0]]&&j[m][1].apply(n.element,k)}}}},hasScroll:function(k,j){if("hidden"===g(k).css("overflow")){return !1}var l=j&&"left"===j?"scrollLeft":"scrollTop",e=!1;return k[l]>0?!0:(k[l]=1,e=k[l]>0,k[l]=0,e)}})})(jQuery);(function(d,b){var a=0,c=Array.prototype.slice,f=d.cleanData;d.cleanData=function(h){for(var g,j=0;null!=(g=h[j]);j++){try{d(g).triggerHandler("remove")}catch(e){}}f(h)},d.widget=function(m,v,j){var q,e,g,p,k={},t=m.split(".")[0];m=m.split(".")[1],q=t+"-"+m,j||(j=v,v=d.Widget),d.expr[":"][q.toLowerCase()]=function(h){return !!d.data(h,q)},d[t]=d[t]||{},e=d[t][m],g=d[t][m]=function(l,h){return this._createWidget?(arguments.length&&this._createWidget(l,h),b):new g(l,h)},d.extend(g,e,{version:j.version,_proto:d.extend({},j),_childConstructors:[]}),p=new v,p.options=d.widget.extend({},p.options),d.each(j,function(h,l){return d.isFunction(l)?(k[h]=function(){var n=function(){return v.prototype[h].apply(this,arguments)},i=function(o){return v.prototype[h].apply(this,o)};return function(){var r,u=this._super,o=this._superApply;return this._super=n,this._superApply=i,r=l.apply(this,arguments),this._super=u,this._superApply=o,r}}(),b):(k[h]=l,b)}),g.prototype=d.widget.extend(p,{widgetEventPrefix:e?p.widgetEventPrefix:m},k,{constructor:g,namespace:t,widgetName:m,widgetFullName:q}),e?(d.each(e._childConstructors,function(l,h){var n=h.prototype;d.widget(n.namespace+"."+n.widgetName,g,h._proto)}),delete e._childConstructors):v._childConstructors.push(g),d.widget.bridge(m,g)},d.widget.extend=function(g){for(var m,e,k=c.call(arguments,1),l=0,j=k.length;j>l;l++){for(m in k[l]){e=k[l][m],k[l].hasOwnProperty(m)&&e!==b&&(g[m]=d.isPlainObject(e)?d.isPlainObject(g[m])?d.widget.extend({},g[m],e):d.widget.extend({},e):e)}}return g},d.widget.bridge=function(g,h){var e=h.prototype.widgetFullName||g;d.fn[g]=function(k){var m="string"==typeof k,j=c.call(arguments,1),i=this;return k=!m&&j.length?d.widget.extend.apply(null,[k].concat(j)):k,m?this.each(function(){var l,o=d.data(this,e);return o?d.isFunction(o[k])&&"_"!==k.charAt(0)?(l=o[k].apply(o,j),l!==o&&l!==b?(i=l&&l.jquery?i.pushStack(l.get()):l,!1):b):d.error("no such method '"+k+"' for "+g+" widget instance"):d.error("cannot call methods on "+g+" prior to initialization; attempted to call method '"+k+"'")}):this.each(function(){var l=d.data(this,e);l?l.option(k||{})._init():d.data(this,e,new h(k,this))}),i}},d.Widget=function(){},d.Widget._childConstructors=[],d.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(e,g){g=d(g||this.defaultElement||this)[0],this.element=d(g),this.uuid=a++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=d.widget.extend({},this.options,this._getCreateOptions(),e),this.bindings=d(),this.hoverable=d(),this.focusable=d(),g!==this&&(d.data(g,this.widgetFullName,this),this._on(!0,this.element,{remove:function(h){h.target===g&&this.destroy()}}),this.document=d(g.style?g.ownerDocument:g.document||g),this.window=d(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:d.noop,_getCreateEventData:d.noop,_create:d.noop,_init:d.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(d.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:d.noop,widget:function(){return this.element},option:function(g,h){var l,e,j,k=g;if(0===arguments.length){return d.widget.extend({},this.options)}if("string"==typeof g){if(k={},l=g.split("."),g=l.shift(),l.length){for(e=k[g]=d.widget.extend({},this.options[g]),j=0;l.length-1>j;j++){e[l[j]]=e[l[j]]||{},e=e[l[j]]}if(g=l.pop(),h===b){return e[g]===b?null:e[g]}e[g]=h}else{if(h===b){return this.options[g]===b?null:this.options[g]}k[g]=h}}return this._setOptions(k),this},_setOptions:function(h){var g;for(g in h){this._setOption(g,h[g])}return this},_setOption:function(h,g){return this.options[h]=g,"disabled"===h&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!g).attr("aria-disabled",g),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(g,h,k){var e,j=this;"boolean"!=typeof g&&(k=h,h=g,g=!1),k?(h=e=d(h),this.bindings=this.bindings.add(h)):(k=h,h=this.element,e=this.widget()),d.each(k,function(s,q){function p(){return g||j.options.disabled!==!0&&!d(this).hasClass("ui-state-disabled")?("string"==typeof q?j[q]:q).apply(j,arguments):b}"string"!=typeof q&&(p.guid=q.guid=q.guid||p.guid||d.guid++);var i=s.match(/^(\w+)\s*(.*)$/),m=i[1]+j.eventNamespace,r=i[2];r?e.delegate(r,m,p):h.bind(m,p)})},_off:function(h,g){g=(g||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,h.unbind(g).undelegate(g)},_delay:function(k,h){function g(){return("string"==typeof k?j[k]:k).apply(j,arguments)}var j=this;return setTimeout(g,h||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(g){d(g.currentTarget).addClass("ui-state-hover")},mouseleave:function(g){d(g.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(g){d(g.currentTarget).addClass("ui-state-focus")},focusout:function(g){d(g.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(h,g,j){var l,e,k=this.options[h];if(j=j||{},g=d.Event(g),g.type=(h===this.widgetEventPrefix?h:this.widgetEventPrefix+h).toLowerCase(),g.target=this.element[0],e=g.originalEvent){for(l in e){l in g||(g[l]=e[l])}}return this.element.trigger(g,j),!(d.isFunction(k)&&k.apply(this.element[0],[g].concat(j))===!1||g.isDefaultPrevented())}},d.each({show:"fadeIn",hide:"fadeOut"},function(g,e){d.Widget.prototype["_"+g]=function(i,l,h){"string"==typeof l&&(l={effect:l});var j,k=l?l===!0||"number"==typeof l?e:l.effect||e:g;l=l||{},"number"==typeof l&&(l={duration:l}),j=!d.isEmptyObject(l),l.complete=h,l.delay&&i.delay(l.delay),j&&d.effects&&d.effects.effect[k]?i[g](l):k!==g&&i[k]?i[k](l.duration,l.easing,h):i.queue(function(m){d(this)[g](),h&&h.call(i[0]),m()})}})})(jQuery);(function(b){var a=!1;b(document).mouseup(function(){a=!1}),b.widget("ui.mouse",{version:"1.10.3",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var c=this;this.element.bind("mousedown."+this.widgetName,function(d){return c._mouseDown(d)}).bind("click."+this.widgetName,function(d){return !0===b.data(d.target,c.widgetName+".preventClickEvent")?(b.removeData(d.target,c.widgetName+".preventClickEvent"),d.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(d){if(!a){this._mouseStarted&&this._mouseUp(d),this._mouseDownEvent=d;var e=this,f=1===d.which,c="string"==typeof this.options.cancel&&d.target.nodeName?b(d.target).closest(this.options.cancel).length:!1;return f&&!c&&this._mouseCapture(d)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){e.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(d)&&this._mouseDelayMet(d)&&(this._mouseStarted=this._mouseStart(d)!==!1,!this._mouseStarted)?(d.preventDefault(),!0):(!0===b.data(d.target,this.widgetName+".preventClickEvent")&&b.removeData(d.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(g){return e._mouseMove(g)},this._mouseUpDelegate=function(g){return e._mouseUp(g)},b(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),d.preventDefault(),a=!0,!0)):!0}},_mouseMove:function(c){return b.ui.ie&&(!document.documentMode||9>document.documentMode)&&!c.button?this._mouseUp(c):this._mouseStarted?(this._mouseDrag(c),c.preventDefault()):(this._mouseDistanceMet(c)&&this._mouseDelayMet(c)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,c)!==!1,this._mouseStarted?this._mouseDrag(c):this._mouseUp(c)),!this._mouseStarted)},_mouseUp:function(c){return b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,c.target===this._mouseDownEvent.target&&b.data(c.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(c)),!1},_mouseDistanceMet:function(c){return Math.max(Math.abs(this._mouseDownEvent.pageX-c.pageX),Math.abs(this._mouseDownEvent.pageY-c.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return !0}})})(jQuery);(function(C,x){function q(c,d,a){return[parseFloat(c[0])*(g.test(c[0])?d/100:1),parseFloat(c[1])*(g.test(c[1])?a/100:1)]}function D(c,a){return parseInt(C.css(c,a),10)||0}function k(c){var a=c[0];return 9===a.nodeType?{width:c.width(),height:c.height(),offset:{top:0,left:0}}:C.isWindow(a)?{width:c.width(),height:c.height(),offset:{top:c.scrollTop(),left:c.scrollLeft()}}:a.preventDefault?{width:0,height:0,offset:{top:a.pageY,left:a.pageX}}:{width:c.outerWidth(),height:c.outerHeight(),offset:c.offset()}}C.ui=C.ui||{};var A,j=Math.max,b=Math.abs,v=Math.round,m=/left|center|right/,z=/top|center|bottom/,B=/[\+\-]\d+(\.[\d]+)?%?/,y=/^\w+/,g=/%$/,w=C.fn.position;C.position={scrollbarWidth:function(){if(A!==x){return A}var a,c,e=C("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),d=e.children()[0];return C("body").append(e),a=d.offsetWidth,e.css("overflow","scroll"),c=d.offsetWidth,a===c&&(c=e[0].clientWidth),e.remove(),A=a-c},getScrollInfo:function(h){var d=h.isWindow?"":h.element.css("overflow-x"),f=h.isWindow?"":h.element.css("overflow-y"),l="scroll"===d||"auto"===d&&h.width<h.element[0].scrollWidth,c="scroll"===f||"auto"===f&&h.height<h.element[0].scrollHeight;return{width:c?C.position.scrollbarWidth():0,height:l?C.position.scrollbarWidth():0}},getWithinInfo:function(d){var a=C(d||window),c=C.isWindow(a[0]);return{element:a,isWindow:c,offset:a.offset()||{left:0,top:0},scrollLeft:a.scrollLeft(),scrollTop:a.scrollTop(),width:c?a.width():a.outerWidth(),height:c?a.height():a.outerHeight()}}},C.fn.position=function(i){if(!i||!i.of){return w.apply(this,arguments)}i=C.extend({},i);var r,c,d,h,u,n,t=C(i.of),l=C.position.getWithinInfo(i.within),s=C.position.getScrollInfo(l),o=(i.collision||"flip").split(" "),f={};return n=k(t),t[0].preventDefault&&(i.at="left top"),c=n.width,d=n.height,h=n.offset,u=C.extend({},h),C.each(["my","at"],function(){var e,a,p=(i[this]||"").split(" ");1===p.length&&(p=m.test(p[0])?p.concat(["center"]):z.test(p[0])?["center"].concat(p):["center","center"]),p[0]=m.test(p[0])?p[0]:"center",p[1]=z.test(p[1])?p[1]:"center",e=B.exec(p[0]),a=B.exec(p[1]),f[this]=[e?e[0]:0,a?a[0]:0],i[this]=[y.exec(p[0])[0],y.exec(p[1])[0]]}),1===o.length&&(o[1]=o[0]),"right"===i.at[0]?u.left+=c:"center"===i.at[0]&&(u.left+=c/2),"bottom"===i.at[1]?u.top+=d:"center"===i.at[1]&&(u.top+=d/2),r=q(f.at,c,d),u.left+=r[0],u.top+=r[1],this.each(function(){var p,E,J=C(this),L=J.outerWidth(),I=J.outerHeight(),G=D(this,"marginLeft"),K=D(this,"marginTop"),a=L+G+D(this,"marginRight")+s.width,F=I+K+D(this,"marginBottom")+s.height,e=C.extend({},u),H=q(f.my,J.outerWidth(),J.outerHeight());"right"===i.my[0]?e.left-=L:"center"===i.my[0]&&(e.left-=L/2),"bottom"===i.my[1]?e.top-=I:"center"===i.my[1]&&(e.top-=I/2),e.left+=H[0],e.top+=H[1],C.support.offsetFractions||(e.left=v(e.left),e.top=v(e.top)),p={marginLeft:G,marginTop:K},C.each(["left","top"],function(M,N){C.ui.position[o[M]]&&C.ui.position[o[M]][N](e,{targetWidth:c,targetHeight:d,elemWidth:L,elemHeight:I,collisionPosition:p,collisionWidth:a,collisionHeight:F,offset:[r[0]+H[0],r[1]+H[1]],my:i.my,at:i.at,within:l,elem:J})}),i.using&&(E=function(O){var N=h.left-e.left,Q=N+c-L,R=h.top-e.top,M=R+d-I,P={target:{element:t,left:h.left,top:h.top,width:c,height:d},element:{element:J,left:e.left,top:e.top,width:L,height:I},horizontal:0>Q?"left":N>0?"right":"center",vertical:0>M?"top":R>0?"bottom":"middle"};L>c&&c>b(N+Q)&&(P.horizontal="center"),I>d&&d>b(R+M)&&(P.vertical="middle"),P.important=j(b(N),b(Q))>j(b(R),b(M))?"horizontal":"vertical",i.using.call(this,O,P)}),J.offset(C.extend(e,{using:E}))})},C.ui.position={fit:{left:function(F,u){var o,G=u.within,d=G.isWindow?G.scrollLeft:G.offset.left,E=G.width,c=F.left-u.collisionPosition.marginLeft,p=d-c,f=c+u.collisionWidth-E-d;u.collisionWidth>E?p>0&&0>=f?(o=F.left+p+u.collisionWidth-E-d,F.left+=p-o):F.left=f>0&&0>=p?d:p>f?d+E-u.collisionWidth:d:p>0?F.left+=p:f>0?F.left-=f:F.left=j(F.left-c,F.left)},top:function(F,u){var o,G=u.within,d=G.isWindow?G.scrollTop:G.offset.top,E=u.within.height,c=F.top-u.collisionPosition.marginTop,p=d-c,f=c+u.collisionHeight-E-d;u.collisionHeight>E?p>0&&0>=f?(o=F.top+p+u.collisionHeight-E-d,F.top+=p-o):F.top=f>0&&0>=p?d:p>f?d+E-u.collisionHeight:d:p>0?F.top+=p:f>0?F.top-=f:F.top=j(F.top-c,F.top)}},flip:{left:function(P,K){var H,Q,F=K.within,N=F.offset.left+F.scrollLeft,E=F.width,I=F.isWindow?F.scrollLeft:F.offset.left,G=P.left-K.collisionPosition.marginLeft,M=G-I,O=G+K.collisionWidth-E-I,L="left"===K.my[0]?-K.elemWidth:"right"===K.my[0]?K.elemWidth:0,r="left"===K.at[0]?K.targetWidth:"right"===K.at[0]?-K.targetWidth:0,J=-2*K.offset[0];0>M?(H=P.left+L+r+J+K.collisionWidth-E-N,(0>H||b(M)>H)&&(P.left+=L+r+J)):O>0&&(Q=P.left-K.collisionPosition.marginLeft+L+r+J-I,(Q>0||O>b(Q))&&(P.left+=L+r+J))},top:function(Q,L){var I,R,F=L.within,O=F.offset.top+F.scrollTop,E=F.height,J=F.isWindow?F.scrollTop:F.offset.top,H=Q.top-L.collisionPosition.marginTop,N=H-J,P=H+L.collisionHeight-E-J,M="top"===L.my[1],r=M?-L.elemHeight:"bottom"===L.my[1]?L.elemHeight:0,K="top"===L.at[1]?L.targetHeight:"bottom"===L.at[1]?-L.targetHeight:0,G=-2*L.offset[1];0>N?(R=Q.top+r+K+G+L.collisionHeight-E-O,Q.top+r+K+G>N&&(0>R||b(N)>R)&&(Q.top+=r+K+G)):P>0&&(I=Q.top-L.collisionPosition.marginTop+r+K+G-J,Q.top+r+K+G>P&&(I>0||P>b(I))&&(Q.top+=r+K+G))}},flipfit:{left:function(){C.ui.position.flip.left.apply(this,arguments),C.ui.position.fit.left.apply(this,arguments)},top:function(){C.ui.position.flip.top.apply(this,arguments),C.ui.position.fit.top.apply(this,arguments)}}},function(){var l,d,f,t,c,p=document.getElementsByTagName("body")[0],h=document.createElement("div");l=document.createElement(p?"div":"body"),f={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},p&&C.extend(f,{position:"absolute",left:"-1000px",top:"-1000px"});for(c in f){l.style[c]=f[c]}l.appendChild(h),d=p||document.documentElement,d.insertBefore(l,d.firstChild),h.style.cssText="position: absolute; left: 10.7432222px;",t=C(h).offset().left,C.support.offsetFractions=t>10&&11>t,l.innerHTML="",d.removeChild(l)}()})(jQuery);(function(a){a.widget("ui.draggable",a.ui.mouse,{version:"1.10.3",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"!==this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(c){var b=this.options;return this.helper||b.disabled||a(c.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(c),this.handle?(a(b.iframeFix===!0?"iframe":b.iframeFix).each(function(){a("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1000}).css(a(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(c){var b=this.options;return this.helper=this._createHelper(c),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),a.ui.ddmanager&&(a.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offsetParent=this.helper.offsetParent(),this.offsetParentCssPosition=this.offsetParent.css("position"),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.offset.scroll=!1,a.extend(this.offset,{click:{left:c.pageX-this.offset.left,top:c.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(c),this.originalPageX=c.pageX,this.originalPageY=c.pageY,b.cursorAt&&this._adjustOffsetFromHelper(b.cursorAt),this._setContainment(),this._trigger("start",c)===!1?(this._clear(),!1):(this._cacheHelperProportions(),a.ui.ddmanager&&!b.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,c),this._mouseDrag(c,!0),a.ui.ddmanager&&a.ui.ddmanager.dragStart(this,c),!0)},_mouseDrag:function(c,b){if("fixed"===this.offsetParentCssPosition&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(c),this.positionAbs=this._convertPositionTo("absolute"),!b){var d=this._uiHash();if(this._trigger("drag",c,d)===!1){return this._mouseUp({}),!1}this.position=d.position}return this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),a.ui.ddmanager&&a.ui.ddmanager.drag(this,c),!1},_mouseStop:function(c){var b=this,d=!1;return a.ui.ddmanager&&!this.options.dropBehaviour&&(d=a.ui.ddmanager.drop(this,c)),this.dropped&&(d=this.dropped,this.dropped=!1),"original"!==this.options.helper||a.contains(this.element[0].ownerDocument,this.element[0])?("invalid"===this.options.revert&&!d||"valid"===this.options.revert&&d||this.options.revert===!0||a.isFunction(this.options.revert)&&this.options.revert.call(this.element,d)?a(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){b._trigger("stop",c)!==!1&&b._clear()}):this._trigger("stop",c)!==!1&&this._clear(),!1):!1},_mouseUp:function(b){return a("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),a.ui.ddmanager&&a.ui.ddmanager.dragStop(this,b),a.ui.mouse.prototype._mouseUp.call(this,b)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(b){return this.options.handle?!!a(b.target).closest(this.element.find(this.options.handle)).length:!0},_createHelper:function(c){var b=this.options,d=a.isFunction(b.helper)?a(b.helper.apply(this.element[0],[c])):"clone"===b.helper?this.element.clone().removeAttr("id"):this.element;return d.parents("body").length||d.appendTo("parent"===b.appendTo?this.element[0].parentNode:b.appendTo),d[0]===this.element[0]||/(fixed|absolute)/.test(d.css("position"))||d.css("position","absolute"),d},_adjustOffsetFromHelper:function(b){"string"==typeof b&&(b=b.split(" ")),a.isArray(b)&&(b={left:+b[0],top:+b[1]||0}),"left" in b&&(this.offset.click.left=b.left+this.margins.left),"right" in b&&(this.offset.click.left=this.helperProportions.width-b.right+this.margins.left),"top" in b&&(this.offset.click.top=b.top+this.margins.top),"bottom" in b&&(this.offset.click.top=this.helperProportions.height-b.bottom+this.margins.top)},_getParentOffset:function(){var b=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0])&&(b.left+=this.scrollParent.scrollLeft(),b.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&a.ui.ie)&&(b={top:0,left:0}),{top:b.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:b.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var b=this.element.position();return{top:b.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:b.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var c,b,d,e=this.options;return e.containment?"window"===e.containment?(this.containment=[a(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,a(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,a(window).scrollLeft()+a(window).width()-this.helperProportions.width-this.margins.left,a(window).scrollTop()+(a(window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):"document"===e.containment?(this.containment=[0,0,a(document).width()-this.helperProportions.width-this.margins.left,(a(document).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],undefined):e.containment.constructor===Array?(this.containment=e.containment,undefined):("parent"===e.containment&&(e.containment=this.helper[0].parentNode),b=a(e.containment),d=b[0],d&&(c="hidden"!==b.css("overflow"),this.containment=[(parseInt(b.css("borderLeftWidth"),10)||0)+(parseInt(b.css("paddingLeft"),10)||0),(parseInt(b.css("borderTopWidth"),10)||0)+(parseInt(b.css("paddingTop"),10)||0),(c?Math.max(d.scrollWidth,d.offsetWidth):d.offsetWidth)-(parseInt(b.css("borderRightWidth"),10)||0)-(parseInt(b.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(c?Math.max(d.scrollHeight,d.offsetHeight):d.offsetHeight)-(parseInt(b.css("borderBottomWidth"),10)||0)-(parseInt(b.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=b),undefined):(this.containment=null,undefined)},_convertPositionTo:function(c,b){b||(b=this.position);var d="absolute"===c?1:-1,e="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent;return this.offset.scroll||(this.offset.scroll={top:e.scrollTop(),left:e.scrollLeft()}),{top:b.top+this.offset.relative.top*d+this.offset.parent.top*d-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top)*d,left:b.left+this.offset.relative.left*d+this.offset.parent.left*d-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)*d}},_generatePosition:function(k){var f,m,d,j,c=this.options,b="absolute"!==this.cssPosition||this.scrollParent[0]!==document&&a.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,g=k.pageX,e=k.pageY;return this.offset.scroll||(this.offset.scroll={top:b.scrollTop(),left:b.scrollLeft()}),this.originalPosition&&(this.containment&&(this.relative_container?(m=this.relative_container.offset(),f=[this.containment[0]+m.left,this.containment[1]+m.top,this.containment[2]+m.left,this.containment[3]+m.top]):f=this.containment,k.pageX-this.offset.click.left<f[0]&&(g=f[0]+this.offset.click.left),k.pageY-this.offset.click.top<f[1]&&(e=f[1]+this.offset.click.top),k.pageX-this.offset.click.left>f[2]&&(g=f[2]+this.offset.click.left),k.pageY-this.offset.click.top>f[3]&&(e=f[3]+this.offset.click.top)),c.grid&&(d=c.grid[1]?this.originalPageY+Math.round((e-this.originalPageY)/c.grid[1])*c.grid[1]:this.originalPageY,e=f?d-this.offset.click.top>=f[1]||d-this.offset.click.top>f[3]?d:d-this.offset.click.top>=f[1]?d-c.grid[1]:d+c.grid[1]:d,j=c.grid[0]?this.originalPageX+Math.round((g-this.originalPageX)/c.grid[0])*c.grid[0]:this.originalPageX,g=f?j-this.offset.click.left>=f[0]||j-this.offset.click.left>f[2]?j:j-this.offset.click.left>=f[0]?j-c.grid[0]:j+c.grid[0]:j)),{top:e-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top),left:g-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(c,b,d){return d=d||this._uiHash(),a.ui.plugin.call(this,c,[b,d]),"drag"===c&&(this.positionAbs=this._convertPositionTo("absolute")),a.Widget.prototype._trigger.call(this,c,b,d)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),a.ui.plugin.add("draggable","connectToSortable",{start:function(d,c){var e=a(this).data("ui-draggable"),f=e.options,b=a.extend({},c,{item:e.element});e.sortables=[],a(f.connectToSortable).each(function(){var g=a.data(this,"ui-sortable");g&&!g.options.disabled&&(e.sortables.push({instance:g,shouldRevert:g.options.revert}),g.refreshPositions(),g._trigger("activate",d,b))})},stop:function(c,b){var d=a(this).data("ui-draggable"),e=a.extend({},b,{item:d.element});a.each(d.sortables,function(){this.instance.isOver?(this.instance.isOver=0,d.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(c),this.instance.options.helper=this.instance.options._helper,"original"===d.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",c,e))})},drag:function(c,b){var d=a(this).data("ui-draggable"),e=this;a.each(d.sortables,function(){var f=!1,g=this;this.instance.positionAbs=d.positionAbs,this.instance.helperProportions=d.helperProportions,this.instance.offset.click=d.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(f=!0,a.each(d.sortables,function(){return this.instance.positionAbs=d.positionAbs,this.instance.helperProportions=d.helperProportions,this.instance.offset.click=d.offset.click,this!==g&&this.instance._intersectsWith(this.instance.containerCache)&&a.contains(g.instance.element[0],this.instance.element[0])&&(f=!1),f})),f?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=a(e).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return b.helper[0]},c.target=this.instance.currentItem[0],this.instance._mouseCapture(c,!0),this.instance._mouseStart(c,!0,!0),this.instance.offset.click.top=d.offset.click.top,this.instance.offset.click.left=d.offset.click.left,this.instance.offset.parent.left-=d.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=d.offset.parent.top-this.instance.offset.parent.top,d._trigger("toSortable",c),d.dropped=this.instance.element,d.currentItem=d.element,this.instance.fromOutside=d),this.instance.currentItem&&this.instance._mouseDrag(c)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",c,this.instance._uiHash(this.instance)),this.instance._mouseStop(c,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),d._trigger("fromSortable",c),d.dropped=!1)})}}),a.ui.plugin.add("draggable","cursor",{start:function(){var c=a("body"),b=a(this).data("ui-draggable").options;c.css("cursor")&&(b._cursor=c.css("cursor")),c.css("cursor",b.cursor)},stop:function(){var b=a(this).data("ui-draggable").options;b._cursor&&a("body").css("cursor",b._cursor)}}),a.ui.plugin.add("draggable","opacity",{start:function(c,b){var d=a(b.helper),e=a(this).data("ui-draggable").options;d.css("opacity")&&(e._opacity=d.css("opacity")),d.css("opacity",e.opacity)},stop:function(c,b){var d=a(this).data("ui-draggable").options;d._opacity&&a(b.helper).css("opacity",d._opacity)}}),a.ui.plugin.add("draggable","scroll",{start:function(){var b=a(this).data("ui-draggable");b.scrollParent[0]!==document&&"HTML"!==b.scrollParent[0].tagName&&(b.overflowOffset=b.scrollParent.offset())},drag:function(c){var b=a(this).data("ui-draggable"),d=b.options,e=!1;b.scrollParent[0]!==document&&"HTML"!==b.scrollParent[0].tagName?(d.axis&&"x"===d.axis||(b.overflowOffset.top+b.scrollParent[0].offsetHeight-c.pageY<d.scrollSensitivity?b.scrollParent[0].scrollTop=e=b.scrollParent[0].scrollTop+d.scrollSpeed:c.pageY-b.overflowOffset.top<d.scrollSensitivity&&(b.scrollParent[0].scrollTop=e=b.scrollParent[0].scrollTop-d.scrollSpeed)),d.axis&&"y"===d.axis||(b.overflowOffset.left+b.scrollParent[0].offsetWidth-c.pageX<d.scrollSensitivity?b.scrollParent[0].scrollLeft=e=b.scrollParent[0].scrollLeft+d.scrollSpeed:c.pageX-b.overflowOffset.left<d.scrollSensitivity&&(b.scrollParent[0].scrollLeft=e=b.scrollParent[0].scrollLeft-d.scrollSpeed))):(d.axis&&"x"===d.axis||(c.pageY-a(document).scrollTop()<d.scrollSensitivity?e=a(document).scrollTop(a(document).scrollTop()-d.scrollSpeed):a(window).height()-(c.pageY-a(document).scrollTop())<d.scrollSensitivity&&(e=a(document).scrollTop(a(document).scrollTop()+d.scrollSpeed))),d.axis&&"y"===d.axis||(c.pageX-a(document).scrollLeft()<d.scrollSensitivity?e=a(document).scrollLeft(a(document).scrollLeft()-d.scrollSpeed):a(window).width()-(c.pageX-a(document).scrollLeft())<d.scrollSensitivity&&(e=a(document).scrollLeft(a(document).scrollLeft()+d.scrollSpeed)))),e!==!1&&a.ui.ddmanager&&!d.dropBehaviour&&a.ui.ddmanager.prepareOffsets(b,c)}}),a.ui.plugin.add("draggable","snap",{start:function(){var c=a(this).data("ui-draggable"),b=c.options;c.snapElements=[],a(b.snap.constructor!==String?b.snap.items||":data(ui-draggable)":b.snap).each(function(){var d=a(this),e=d.offset();this!==c.element[0]&&c.snapElements.push({item:this,width:d.outerWidth(),height:d.outerHeight(),top:e.top,left:e.left})})},drag:function(q,E){var w,B,L,A,x,F,D,k,J,I,z=a(this).data("ui-draggable"),H=z.options,C=H.snapTolerance,G=E.offset.left,j=G+z.helperProportions.width,K=E.offset.top,e=K+z.helperProportions.height;for(J=z.snapElements.length-1;J>=0;J--){x=z.snapElements[J].left,F=x+z.snapElements[J].width,D=z.snapElements[J].top,k=D+z.snapElements[J].height,x-C>j||G>F+C||D-C>e||K>k+C||!a.contains(z.snapElements[J].item.ownerDocument,z.snapElements[J].item)?(z.snapElements[J].snapping&&z.options.snap.release&&z.options.snap.release.call(z.element,q,a.extend(z._uiHash(),{snapItem:z.snapElements[J].item})),z.snapElements[J].snapping=!1):("inner"!==H.snapMode&&(w=C>=Math.abs(D-e),B=C>=Math.abs(k-K),L=C>=Math.abs(x-j),A=C>=Math.abs(F-G),w&&(E.position.top=z._convertPositionTo("relative",{top:D-z.helperProportions.height,left:0}).top-z.margins.top),B&&(E.position.top=z._convertPositionTo("relative",{top:k,left:0}).top-z.margins.top),L&&(E.position.left=z._convertPositionTo("relative",{top:0,left:x-z.helperProportions.width}).left-z.margins.left),A&&(E.position.left=z._convertPositionTo("relative",{top:0,left:F}).left-z.margins.left)),I=w||B||L||A,"outer"!==H.snapMode&&(w=C>=Math.abs(D-K),B=C>=Math.abs(k-e),L=C>=Math.abs(x-G),A=C>=Math.abs(F-j),w&&(E.position.top=z._convertPositionTo("relative",{top:D,left:0}).top-z.margins.top),B&&(E.position.top=z._convertPositionTo("relative",{top:k-z.helperProportions.height,left:0}).top-z.margins.top),L&&(E.position.left=z._convertPositionTo("relative",{top:0,left:x}).left-z.margins.left),A&&(E.position.left=z._convertPositionTo("relative",{top:0,left:F-z.helperProportions.width}).left-z.margins.left)),!z.snapElements[J].snapping&&(w||B||L||A||I)&&z.options.snap.snap&&z.options.snap.snap.call(z.element,q,a.extend(z._uiHash(),{snapItem:z.snapElements[J].item})),z.snapElements[J].snapping=w||B||L||A||I)}}}),a.ui.plugin.add("draggable","stack",{start:function(){var c,b=this.data("ui-draggable").options,d=a.makeArray(a(b.stack)).sort(function(f,e){return(parseInt(a(f).css("zIndex"),10)||0)-(parseInt(a(e).css("zIndex"),10)||0)});d.length&&(c=parseInt(a(d[0]).css("zIndex"),10)||0,a(d).each(function(e){a(this).css("zIndex",c+e)}),this.css("zIndex",c+d.length))}}),a.ui.plugin.add("draggable","zIndex",{start:function(c,b){var d=a(b.helper),e=a(this).data("ui-draggable").options;d.css("zIndex")&&(e._zIndex=d.css("zIndex")),d.css("zIndex",e.zIndex)},stop:function(c,b){var d=a(this).data("ui-draggable").options;d._zIndex&&a(b.helper).css("zIndex",d._zIndex)}})})(jQuery);(function(c){function b(d){return parseInt(d,10)||0}function a(d){return !isNaN(parseInt(d,10))}c.widget("ui.resizable",c.ui.mouse,{version:"1.10.3",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var f,e,g,k,d,j=this,h=this.options;if(this.element.addClass("ui-resizable"),c.extend(this,{_aspectRatio:!!h.aspectRatio,aspectRatio:h.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:h.helper||h.ghost||h.animate?h.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(c("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.data("ui-resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=h.handles||(c(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this.handles.constructor===String){for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),f=this.handles.split(","),this.handles={},e=0;f.length>e;e++){g=c.trim(f[e]),d="ui-resizable-"+g,k=c("<div class='ui-resizable-handle "+d+"'></div>"),k.css({zIndex:h.zIndex}),"se"===g&&k.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[g]=".ui-resizable-"+g,this.element.append(k)}}this._renderAxis=function(o){var m,p,q,l;o=o||this.element;for(m in this.handles){this.handles[m].constructor===String&&(this.handles[m]=c(this.handles[m],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&&(p=c(this.handles[m],this.element),l=/sw|ne|nw|se|n|s/.test(m)?p.outerHeight():p.outerWidth(),q=["padding",/ne|nw|n/.test(m)?"Top":/se|sw|s/.test(m)?"Bottom":/^e$/.test(m)?"Right":"Left"].join(""),o.css(q,l),this._proportionallyResize()),c(this.handles[m]).length}},this._renderAxis(this.element),this._handles=c(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){j.resizing||(this.className&&(k=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),j.axis=k&&k[1]?k[1]:"se")}),h.autoHide&&(this._handles.hide(),c(this.element).addClass("ui-resizable-autohide").mouseenter(function(){h.disabled||(c(this).removeClass("ui-resizable-autohide"),j._handles.show())}).mouseleave(function(){h.disabled||j.resizing||(c(this).addClass("ui-resizable-autohide"),j._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,d=function(f){c(f).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(d(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),d(this.originalElement),this},_mouseCapture:function(e){var d,f,g=!1;for(d in this.handles){f=c(this.handles[d])[0],(f===e.target||c.contains(f,e.target))&&(g=!0)}return !this.options.disabled&&g},_mouseStart:function(e){var g,l,d,k=this.options,j=this.element.position(),f=this.element;return this.resizing=!0,/absolute/.test(f.css("position"))?f.css({position:"absolute",top:f.css("top"),left:f.css("left")}):f.is(".ui-draggable")&&f.css({position:"absolute",top:j.top,left:j.left}),this._renderProxy(),g=b(this.helper.css("left")),l=b(this.helper.css("top")),k.containment&&(g+=c(k.containment).scrollLeft()||0,l+=c(k.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:g,top:l},this.size=this._helper?{width:f.outerWidth(),height:f.outerHeight()}:{width:f.width(),height:f.height()},this.originalSize=this._helper?{width:f.outerWidth(),height:f.outerHeight()}:{width:f.width(),height:f.height()},this.originalPosition={left:g,top:l},this.sizeDiff={width:f.outerWidth()-f.width(),height:f.outerHeight()-f.height()},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof k.aspectRatio?k.aspectRatio:this.originalSize.width/this.originalSize.height||1,d=c(".ui-resizable-"+this.axis).css("cursor"),c("body").css("cursor","auto"===d?this.axis+"-resize":d),f.addClass("ui-resizable-resizing"),this._propagate("start",e),!0},_mouseDrag:function(z){var m,A=this.helper,j={},x=this.originalMousePosition,g=this.axis,e=this.position.top,q=this.position.left,k=this.size.width,y=this.size.height,w=z.pageX-x.left||0,v=z.pageY-x.top||0,f=this._change[g];return f?(m=f.apply(this,[z,w,v]),this._updateVirtualBoundaries(z.shiftKey),(this._aspectRatio||z.shiftKey)&&(m=this._updateRatio(m,z)),m=this._respectSize(m,z),this._updateCache(m),this._propagate("resize",z),this.position.top!==e&&(j.top=this.position.top+"px"),this.position.left!==q&&(j.left=this.position.left+"px"),this.size.width!==k&&(j.width=this.size.width+"px"),this.size.height!==y&&(j.height=this.size.height+"px"),A.css(j),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),c.isEmptyObject(j)||this._trigger("resize",z,this.ui()),!1):!1},_mouseStop:function(q){this.resizing=!1;var j,v,f,m,e,d,k,g=this.options,p=this;return this._helper&&(j=this._proportionallyResizeElements,v=j.length&&/textarea/i.test(j[0].nodeName),f=v&&c.ui.hasScroll(j[0],"left")?0:p.sizeDiff.height,m=v?0:p.sizeDiff.width,e={width:p.helper.width()-m,height:p.helper.height()-f},d=parseInt(p.element.css("left"),10)+(p.position.left-p.originalPosition.left)||null,k=parseInt(p.element.css("top"),10)+(p.position.top-p.originalPosition.top)||null,g.animate||this.element.css(c.extend(e,{top:k,left:d})),p.helper.height(p.size.height),p.helper.width(p.size.width),this._helper&&!g.animate&&this._proportionallyResize()),c("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",q),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(i){var f,g,k,d,j,h=this.options;j={minWidth:a(h.minWidth)?h.minWidth:0,maxWidth:a(h.maxWidth)?h.maxWidth:1/0,minHeight:a(h.minHeight)?h.minHeight:0,maxHeight:a(h.maxHeight)?h.maxHeight:1/0},(this._aspectRatio||i)&&(f=j.minHeight*this.aspectRatio,k=j.minWidth/this.aspectRatio,g=j.maxHeight*this.aspectRatio,d=j.maxWidth/this.aspectRatio,f>j.minWidth&&(j.minWidth=f),k>j.minHeight&&(j.minHeight=k),j.maxWidth>g&&(j.maxWidth=g),j.maxHeight>d&&(j.maxHeight=d)),this._vBoundaries=j},_updateCache:function(d){this.offset=this.helper.offset(),a(d.left)&&(this.position.left=d.left),a(d.top)&&(this.position.top=d.top),a(d.height)&&(this.size.height=d.height),a(d.width)&&(this.size.width=d.width)},_updateRatio:function(g){var d=this.position,f=this.size,h=this.axis;return a(g.height)?g.width=g.height*this.aspectRatio:a(g.width)&&(g.height=g.width/this.aspectRatio),"sw"===h&&(g.left=d.left+(f.width-g.width),g.top=null),"nw"===h&&(g.top=d.top+(f.height-g.height),g.left=d.left+(f.width-g.width)),g},_respectSize:function(k){var v=this._vBoundaries,w=this.axis,g=a(k.width)&&v.maxWidth&&v.maxWidth<k.width,p=a(k.height)&&v.maxHeight&&v.maxHeight<k.height,f=a(k.width)&&v.minWidth&&v.minWidth>k.width,d=a(k.height)&&v.minHeight&&v.minHeight>k.height,j=this.originalPosition.left+this.originalSize.width,i=this.position.top+this.size.height,q=/sw|nw|w/.test(w),m=/nw|ne|n/.test(w);return f&&(k.width=v.minWidth),d&&(k.height=v.minHeight),g&&(k.width=v.maxWidth),p&&(k.height=v.maxHeight),f&&q&&(k.left=j-v.minWidth),g&&q&&(k.left=j-v.maxWidth),d&&m&&(k.top=i-v.minHeight),p&&m&&(k.top=i-v.maxHeight),k.width||k.height||k.left||!k.top?k.width||k.height||k.top||!k.left||(k.left=null):k.top=null,k},_proportionallyResize:function(){if(this._proportionallyResizeElements.length){var j,g,f,h,k,d=this.helper||this.element;for(j=0;this._proportionallyResizeElements.length>j;j++){if(k=this._proportionallyResizeElements[j],!this.borderDif){for(this.borderDif=[],f=[k.css("borderTopWidth"),k.css("borderRightWidth"),k.css("borderBottomWidth"),k.css("borderLeftWidth")],h=[k.css("paddingTop"),k.css("paddingRight"),k.css("paddingBottom"),k.css("paddingLeft")],g=0;f.length>g;g++){this.borderDif[g]=(parseInt(f[g],10)||0)+(parseInt(h[g],10)||0)}}k.css({height:d.height()-this.borderDif[0]-this.borderDif[2]||0,width:d.width()-this.borderDif[1]-this.borderDif[3]||0})}}},_renderProxy:function(){var e=this.element,d=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||c("<div style='overflow:hidden;'></div>"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++d.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(f,d){return{width:this.originalSize.width+d}},w:function(h,f){var d=this.originalSize,g=this.originalPosition;return{left:g.left+f,width:d.width-f}},n:function(h,f,d){var g=this.originalSize,j=this.originalPosition;return{top:j.top+d,height:g.height-d}},s:function(g,f,d){return{height:this.originalSize.height+d}},se:function(e,d,f){return c.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,d,f]))},sw:function(e,d,f){return c.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,d,f]))},ne:function(e,d,f){return c.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,d,f]))},nw:function(e,d,f){return c.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,d,f]))}},_propagate:function(e,d){c.ui.plugin.call(this,e,[d,this.ui()]),"resize"!==e&&this._trigger(e,d,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),c.ui.plugin.add("resizable","animate",{stop:function(q){var j=c(this).data("ui-resizable"),v=j.options,f=j._proportionallyResizeElements,m=f.length&&/textarea/i.test(f[0].nodeName),e=m&&c.ui.hasScroll(f[0],"left")?0:j.sizeDiff.height,d=m?0:j.sizeDiff.width,k={width:j.size.width-d,height:j.size.height-e},g=parseInt(j.element.css("left"),10)+(j.position.left-j.originalPosition.left)||null,p=parseInt(j.element.css("top"),10)+(j.position.top-j.originalPosition.top)||null;j.element.animate(c.extend(k,p&&g?{top:p,left:g}:{}),{duration:v.animateDuration,easing:v.animateEasing,step:function(){var h={width:parseInt(j.element.css("width"),10),height:parseInt(j.element.css("height"),10),top:parseInt(j.element.css("top"),10),left:parseInt(j.element.css("left"),10)};f&&f.length&&c(f[0]).css({width:h.width,height:h.height}),j._updateCache(h),j._propagate("resize",q)}})}}),c.ui.plugin.add("resizable","containment",{start:function(){var m,y,j,w,g,e,q,k=c(this).data("ui-resizable"),x=k.options,v=k.element,t=x.containment,f=t instanceof c?t.get(0):/parent/.test(t)?v.parent().get(0):t;f&&(k.containerElement=c(f),/document/.test(t)||t===document?(k.containerOffset={left:0,top:0},k.containerPosition={left:0,top:0},k.parentData={element:c(document),left:0,top:0,width:c(document).width(),height:c(document).height()||document.body.parentNode.scrollHeight}):(m=c(f),y=[],c(["Top","Right","Left","Bottom"]).each(function(d,h){y[d]=b(m.css("padding"+h))}),k.containerOffset=m.offset(),k.containerPosition=m.position(),k.containerSize={height:m.innerHeight()-y[3],width:m.innerWidth()-y[1]},j=k.containerOffset,w=k.containerSize.height,g=k.containerSize.width,e=c.ui.hasScroll(f,"left")?f.scrollWidth:g,q=c.ui.hasScroll(f)?f.scrollHeight:w,k.parentData={element:f,left:j.left,top:j.top,width:e,height:q}))},resize:function(x){var k,y,g,v,f=c(this).data("ui-resizable"),e=f.options,m=f.containerOffset,j=f.position,w=f._aspectRatio||x.shiftKey,q={top:0,left:0},p=f.containerElement;p[0]!==document&&/static/.test(p.css("position"))&&(q=m),j.left<(f._helper?m.left:0)&&(f.size.width=f.size.width+(f._helper?f.position.left-m.left:f.position.left-q.left),w&&(f.size.height=f.size.width/f.aspectRatio),f.position.left=e.helper?m.left:0),j.top<(f._helper?m.top:0)&&(f.size.height=f.size.height+(f._helper?f.position.top-m.top:f.position.top),w&&(f.size.width=f.size.height*f.aspectRatio),f.position.top=f._helper?m.top:0),f.offset.left=f.parentData.left+f.position.left,f.offset.top=f.parentData.top+f.position.top,k=Math.abs((f._helper?f.offset.left-q.left:f.offset.left-q.left)+f.sizeDiff.width),y=Math.abs((f._helper?f.offset.top-q.top:f.offset.top-m.top)+f.sizeDiff.height),g=f.containerElement.get(0)===f.element.parent().get(0),v=/relative|absolute/.test(f.containerElement.css("position")),g&&v&&(k-=f.parentData.left),k+f.size.width>=f.parentData.width&&(f.size.width=f.parentData.width-k,w&&(f.size.height=f.size.width/f.aspectRatio)),y+f.size.height>=f.parentData.height&&(f.size.height=f.parentData.height-y,w&&(f.size.width=f.size.height*f.aspectRatio))},stop:function(){var p=c(this).data("ui-resizable"),j=p.options,q=p.containerOffset,f=p.containerPosition,m=p.containerElement,e=c(p.helper),d=e.offset(),k=e.outerWidth()-p.sizeDiff.width,g=e.outerHeight()-p.sizeDiff.height;p._helper&&!j.animate&&/relative/.test(m.css("position"))&&c(this).css({left:d.left-f.left-q.left,width:k,height:g}),p._helper&&!j.animate&&/static/.test(m.css("position"))&&c(this).css({left:d.left-f.left-q.left,width:k,height:g})}}),c.ui.plugin.add("resizable","alsoResize",{start:function(){var e=c(this).data("ui-resizable"),d=e.options,f=function(g){c(g).each(function(){var h=c(this);h.data("ui-resizable-alsoresize",{width:parseInt(h.width(),10),height:parseInt(h.height(),10),left:parseInt(h.css("left"),10),top:parseInt(h.css("top"),10)})})};"object"!=typeof d.alsoResize||d.alsoResize.parentNode?f(d.alsoResize):d.alsoResize.length?(d.alsoResize=d.alsoResize[0],f(d.alsoResize)):c.each(d.alsoResize,function(g){f(g)})},resize:function(f,e){var j=c(this).data("ui-resizable"),m=j.options,d=j.originalSize,l=j.originalPosition,k={height:j.size.height-d.height||0,width:j.size.width-d.width||0,top:j.position.top-l.top||0,left:j.position.left-l.left||0},g=function(h,i){c(h).each(function(){var q=c(this),s=c(this).data("ui-resizable-alsoresize"),p={},r=i&&i.length?i:q.parents(e.originalElement[0]).length?["width","height"]:["width","height","top","left"];c.each(r,function(u,o){var n=(s[o]||0)+(k[o]||0);n&&n>=0&&(p[o]=n||null)}),q.css(p)})};"object"!=typeof m.alsoResize||m.alsoResize.nodeType?g(m.alsoResize):c.each(m.alsoResize,function(i,h){g(i,h)})},stop:function(){c(this).removeData("resizable-alsoresize")}}),c.ui.plugin.add("resizable","ghost",{start:function(){var e=c(this).data("ui-resizable"),d=e.options,f=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:0.25,display:"block",position:"relative",height:f.height,width:f.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof d.ghost?d.ghost:""),e.ghost.appendTo(e.helper)},resize:function(){var d=c(this).data("ui-resizable");d.ghost&&d.ghost.css({position:"relative",height:d.size.height,width:d.size.width})},stop:function(){var d=c(this).data("ui-resizable");d.ghost&&d.helper&&d.helper.get(0).removeChild(d.ghost.get(0))}}),c.ui.plugin.add("resizable","grid",{resize:function(){var H=c(this).data("ui-resizable"),y=H.options,I=H.size,q=H.originalSize,E=H.originalPosition,k=H.axis,e="number"==typeof y.grid?[y.grid,y.grid]:y.grid,z=e[0]||1,x=e[1]||1,G=Math.round((I.width-q.width)/z)*z,D=Math.round((I.height-q.height)/x)*x,C=q.width+G,j=q.height+D,B=y.maxWidth&&C>y.maxWidth,w=y.maxHeight&&j>y.maxHeight,A=y.minWidth&&y.minWidth>C,F=y.minHeight&&y.minHeight>j;y.grid=e,A&&(C+=z),F&&(j+=x),B&&(C-=z),w&&(j-=x),/^(se|s|e)$/.test(k)?(H.size.width=C,H.size.height=j):/^(ne)$/.test(k)?(H.size.width=C,H.size.height=j,H.position.top=E.top-D):/^(sw)$/.test(k)?(H.size.width=C,H.size.height=j,H.position.left=E.left-G):(H.size.width=C,H.size.height=j,H.position.top=E.top-D,H.position.left=E.left-G)}})})(jQuery);(function(a){var b=0;a.widget("ui.autocomplete",{version:"1.10.3",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var g,d,f,j=this.element[0].nodeName.toLowerCase(),c="textarea"===j,h="input"===j;this.isMultiLine=c?!0:h?!1:this.element.prop("isContentEditable"),this.valueMethod=this.element[c||h?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(i){if(this.element.prop("readOnly")){return g=!0,f=!0,d=!0,undefined}g=!1,f=!1,d=!1;var e=a.ui.keyCode;switch(i.keyCode){case e.PAGE_UP:g=!0,this._move("previousPage",i);break;case e.PAGE_DOWN:g=!0,this._move("nextPage",i);break;case e.UP:g=!0,this._keyEvent("previous",i);break;case e.DOWN:g=!0,this._keyEvent("next",i);break;case e.ENTER:case e.NUMPAD_ENTER:this.menu.active&&(g=!0,i.preventDefault(),this.menu.select(i));break;case e.TAB:this.menu.active&&this.menu.select(i);break;case e.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(i),i.preventDefault());break;default:d=!0,this._searchTimeout(i)}},keypress:function(e){if(g){return g=!1,(!this.isMultiLine||this.menu.element.is(":visible"))&&e.preventDefault(),undefined}if(!d){var i=a.ui.keyCode;switch(e.keyCode){case i.PAGE_UP:this._move("previousPage",e);break;case i.PAGE_DOWN:this._move("nextPage",e);break;case i.UP:this._keyEvent("previous",e);break;case i.DOWN:this._keyEvent("next",e)}}},input:function(e){return f?(f=!1,e.preventDefault(),undefined):(this._searchTimeout(e),undefined)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?(delete this.cancelBlur,undefined):(clearTimeout(this.searching),this.close(e),this._change(e),undefined)}}),this._initSource(),this.menu=a("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role:null}).hide().data("ui-menu"),this._on(this.menu.element,{mousedown:function(l){l.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var k=this.menu.element[0];a(l.target).closest(".ui-menu-item").length||this._delay(function(){var i=this;this.document.one("mousedown",function(e){e.target===i.element[0]||e.target===k||a.contains(k,e.target)||i.close()})})},menufocus:function(m,k){if(this.isNewMenu&&(this.isNewMenu=!1,m.originalEvent&&/^mouse/.test(m.originalEvent.type))){return this.menu.blur(),this.document.one("mousemove",function(){a(m.target).trigger(m.originalEvent)}),undefined}var l=k.item.data("ui-autocomplete-item");!1!==this._trigger("focus",m,{item:l})?m.originalEvent&&/^key/.test(m.originalEvent.type)&&this._value(l.value):this.liveRegion.text(l.value)},menuselect:function(l,n){var k=n.item.data("ui-autocomplete-item"),m=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=m,this._delay(function(){this.previous=m,this.selectedItem=k})),!1!==this._trigger("select",l,{item:k})&&this._value(k.value),this.term=this._value(),this.close(l),this.selectedItem=k}}),this.liveRegion=a("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertBefore(this.element),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(c,d){this._super(c,d),"source"===c&&this._initSource(),"appendTo"===c&&this.menu.element.appendTo(this._appendTo()),"disabled"===c&&d&&this.xhr&&this.xhr.abort()},_appendTo:function(){var c=this.options.appendTo;return c&&(c=c.jquery||c.nodeType?a(c):this.document.find(c).eq(0)),c||(c=this.element.closest(".ui-front")),c.length||(c=this.document[0].body),c},_initSource:function(){var f,c,d=this;a.isArray(this.options.source)?(f=this.options.source,this.source=function(e,g){g(a.ui.autocomplete.filter(f,e.term))}):"string"==typeof this.options.source?(c=this.options.source,this.source=function(g,h){d.xhr&&d.xhr.abort(),d.xhr=a.ajax({url:c,data:g,dataType:"json",success:function(e){h(e)},error:function(){h([])}})}):this.source=this.options.source},_searchTimeout:function(c){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,c))},this.options.delay)},search:function(c,d){return c=null!=c?c:this._value(),this.term=this._value(),c.length<this.options.minLength?this.close(d):this._trigger("search",d)!==!1?this._search(c):undefined},_search:function(c){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:c},this._response())},_response:function(){var d=this,c=++b;return function(e){c===b&&d.__response(e),d.pending--,d.pending||d.element.removeClass("ui-autocomplete-loading")}},__response:function(c){c&&(c=this._normalize(c)),this._trigger("response",null,{content:c}),!this.options.disabled&&c&&c.length&&!this.cancelSearch?(this._suggest(c),this._trigger("open")):this._close()},close:function(c){this.cancelSearch=!0,this._close(c)},_close:function(c){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",c))},_change:function(c){this.previous!==this._value()&&this._trigger("change",c,{item:this.selectedItem})},_normalize:function(c){return c.length&&c[0].label&&c[0].value?c:a.map(c,function(d){return"string"==typeof d?{label:d,value:d}:a.extend({label:d.label||d.value,value:d.value||d.label},d)})},_suggest:function(d){var c=this.menu.element.empty();this._renderMenu(c,d),this.isNewMenu=!0,this.menu.refresh(),c.show(),this._resizeMenu(),c.position(a.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var c=this.menu.element;c.outerWidth(Math.max(c.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(f,c){var d=this;a.each(c,function(g,e){d._renderItemData(f,e)})},_renderItemData:function(c,d){return this._renderItem(c,d).data("ui-autocomplete-item",d)},_renderItem:function(d,c){return a("<li>").append(a("<a>").text(c.label)).appendTo(d)},_move:function(c,d){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(c)||this.menu.isLastItem()&&/^next/.test(c)?(this._value(this.term),this.menu.blur(),undefined):(this.menu[c](d),undefined):(this.search(null,d),undefined)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(c,d){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(c,d),d.preventDefault())}}),a.extend(a.ui.autocomplete,{escapeRegex:function(c){return c.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(f,c){var d=RegExp(a.ui.autocomplete.escapeRegex(c),"i");return a.grep(f,function(e){return d.test(e.label||e.value||e)})}}),a.widget("ui.autocomplete",a.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(c){return c+(c>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(c){var d;this._superApply(arguments),this.options.disabled||this.cancelSearch||(d=c&&c.length?this.options.messages.results(c.length):this.options.messages.noResults,this.liveRegion.text(d))}})})(jQuery);(function(a){a.widget("ui.menu",{version:"1.10.3",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,a.proxy(function(b){this.options.disabled&&b.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(b){b.preventDefault()},"click .ui-state-disabled > a":function(b){b.preventDefault()},"click .ui-menu-item:has(a)":function(c){var b=a(c.target).closest(".ui-menu-item");!this.mouseHandled&&b.not(".ui-state-disabled").length&&(this.mouseHandled=!0,this.select(c),b.has(".ui-menu").length?this.expand(c):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(c){var b=a(c.currentTarget);b.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(c,b)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(c,d){var b=this.active||this.element.children(".ui-menu-item").eq(0);d||this.focus(c,b)},blur:function(b){this._delay(function(){a.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(b)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(b){a(b.target).closest(".ui-menu").length||this.collapseAll(b),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var b=a(this);b.data("ui-menu-submenu-carat")&&b.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(j){function c(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var f,l,b,k,g,d=!0;switch(j.keyCode){case a.ui.keyCode.PAGE_UP:this.previousPage(j);break;case a.ui.keyCode.PAGE_DOWN:this.nextPage(j);break;case a.ui.keyCode.HOME:this._move("first","first",j);break;case a.ui.keyCode.END:this._move("last","last",j);break;case a.ui.keyCode.UP:this.previous(j);break;case a.ui.keyCode.DOWN:this.next(j);break;case a.ui.keyCode.LEFT:this.collapse(j);break;case a.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(j);break;case a.ui.keyCode.ENTER:case a.ui.keyCode.SPACE:this._activate(j);break;case a.ui.keyCode.ESCAPE:this.collapse(j);break;default:d=!1,l=this.previousFilter||"",b=String.fromCharCode(j.keyCode),k=!1,clearTimeout(this.filterTimer),b===l?k=!0:b=l+b,g=RegExp("^"+c(b),"i"),f=this.activeMenu.children(".ui-menu-item").filter(function(){return g.test(a(this).children("a").text())}),f=k&&-1!==f.index(this.active.next())?this.active.nextAll(".ui-menu-item"):f,f.length||(b=String.fromCharCode(j.keyCode),g=RegExp("^"+c(b),"i"),f=this.activeMenu.children(".ui-menu-item").filter(function(){return g.test(a(this).children("a").text())})),f.length?(this.focus(j,f),f.length>1?(this.previousFilter=b,this.filterTimer=this._delay(function(){delete this.previousFilter},1000)):delete this.previousFilter):delete this.previousFilter}d&&j.preventDefault()},_activate:function(b){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(b):this.select(b))},refresh:function(){var d,b=this.options.icons.submenu,c=this.element.find(this.options.menus);c.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var g=a(this),f=g.prev("a"),h=a("<span>").addClass("ui-menu-icon ui-icon "+b).data("ui-menu-submenu-carat",!0);f.attr("aria-haspopup","true").prepend(h),g.attr("aria-labelledby",f.attr("id"))}),d=c.add(this.element),d.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),d.children(":not(.ui-menu-item)").each(function(){var f=a(this);/[^\-\u2014\u2013\s]/.test(f.text())||f.addClass("ui-widget-content ui-menu-divider")}),d.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!a.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(b,c){"icons"===b&&this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(c.submenu),this._super(b,c)},focus:function(c,f){var b,d;this.blur(c,c&&"focus"===c.type),this._scrollIntoView(f),this.active=f.first(),d=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",d.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),c&&"keydown"===c.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),b=f.children(".ui-menu"),b.length&&/^mouse/.test(c.type)&&this._startOpening(b),this.activeMenu=f.parent(),this._trigger("focus",c,{item:f})},_scrollIntoView:function(g){var c,d,j,b,h,f;this._hasScroll()&&(c=parseFloat(a.css(this.activeMenu[0],"borderTopWidth"))||0,d=parseFloat(a.css(this.activeMenu[0],"paddingTop"))||0,j=g.offset().top-this.activeMenu.offset().top-c-d,b=this.activeMenu.scrollTop(),h=this.activeMenu.height(),f=g.height(),0>j?this.activeMenu.scrollTop(b+j):j+f>h&&this.activeMenu.scrollTop(b+j-h+f))},blur:function(b,c){c||clearTimeout(this.timer),this.active&&(this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",b,{item:this.active}))},_startOpening:function(b){clearTimeout(this.timer),"true"===b.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(b)},this.delay))},_open:function(c){var b=a.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(c.parents(".ui-menu")).hide().attr("aria-hidden","true"),c.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(b)},collapseAll:function(c,b){clearTimeout(this.timer),this.timer=this._delay(function(){var d=b?this.element:a(c&&c.target).closest(this.element.find(".ui-menu"));d.length||(d=this.element),this._close(d),this.blur(c),this.activeMenu=d},this.delay)},_close:function(b){b||(b=this.active?this.active.parent():this.element),b.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(b){var c=this.active&&this.active.parent().closest(".ui-menu-item",this.element);c&&c.length&&(this._close(),this.focus(b,c))},expand:function(b){var c=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();c&&c.length&&(this._open(c.parent()),this._delay(function(){this.focus(b,c)}))},next:function(b){this._move("next","first",b)},previous:function(b){this._move("prev","last",b)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(c,f,b){var d;this.active&&(d="first"===c||"last"===c?this.active["first"===c?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[c+"All"](".ui-menu-item").eq(0)),d&&d.length&&this.active||(d=this.activeMenu.children(".ui-menu-item")[f]()),this.focus(b,d)},nextPage:function(d){var b,c,f;return this.active?(this.isLastItem()||(this._hasScroll()?(c=this.active.offset().top,f=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return b=a(this),0>b.offset().top-c-f}),this.focus(d,b)):this.focus(d,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())),undefined):(this.next(d),undefined)},previousPage:function(d){var b,c,f;return this.active?(this.isFirstItem()||(this._hasScroll()?(c=this.active.offset().top,f=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return b=a(this),b.offset().top-c+f>0}),this.focus(d,b)):this.focus(d,this.activeMenu.children(".ui-menu-item").first())),undefined):(this.next(d),undefined)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(c){this.active=this.active||a(c.target).closest(".ui-menu-item");var b={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(c,!0),this._trigger("select",c,b)}})})(jQuery);function Mellon(b){var c=this;c.url=b;c.getRegisterIframe=function(g){if(typeof(g)=="undefined"){g={}}var f="";for(var e in g){if(g[e]==null||g[e]=="undefined"){continue}f+="/"+e+"/"+g[e]}var d=c.url+"/iframe/register"+f;return c.getIframe(d,"starting_mellon_register")};c.getInstantUrl=function(){return c.getIframe(c.url+"/auth/login-instant")};c.getUpgradeIframe=function(){return c.getIframe(c.url+"/user/upgrade")};c.getLoginIframe=function(){return c.getIframe(c.url+"/iframe/login","starting_mellon_login")};c.getLogoutIframe=function(){return c.getIframe(c.url+"/iframe/logout","starting_mellon_logout")};c.getActivationIframe=function(e){if(typeof(e)=="undefined"){e=""}var d=c.url+"/iframe/activate/token/"+e;if(e==""){d=c.url+"/iframe/activate"}return c.getIframe(d,"starting_mellon_activate")};c.getEditUserDataIframe=function(){return c.getIframe(c.url+"/user/edit/","starting_mellon_settings")};c.getEditUserEmailIframe=function(){return c.getIframe(c.url+"/iframe/change-email","starting_mellon_email_change")};c.getEditUserPasswordIframe=function(){return c.getIframe(c.url+"/iframe/change-password","starting_mellon_password_change")};c.getEditSubscriptionIframe=function(){return c.getIframe(c.url+"/user/edit-subscriptions","starting_mellon_subscription_change")};c.getLostPasswordIframe=function(){return c.getIframe(c.url+"/iframe/forgotten","starting_lostPassword")};c.getResetPasswordIframe=function(d){return c.getIframe(c.url+"/iframe/reset-password/token/"+d,"starting_mellon_resetPassword")};c.getWorldSelectionIframe=function(){var e={};var d=c.url+"/iframe/external-avatar-list";return c.getIframe(d,"starting_mellon_worldSelection")};c.getBetaSignupIframe=function(){return c.getIframe(c.url+"/iframe/beta-signup","starting_mellon_betaSignup")};c.getReferralInviteIframe=function(){return c.getIframe(c.url+"/iframe/referral","starting_mellon_playerInvitesPlayerInvite")};c.getReferralPendingIframe=function(){return c.getIframe(c.url+"/invite/show-pending","starting_mellon_playerInvitesPlayerPending")};c.getReferralActiveIframe=function(){return c.getIframe(c.url+"/invite/show-active","starting_mellon_playerInvitesPlayerActive")};c.getForumUrl=function(f){var d=config.mellon["applicationId"]+"--"+config.mellon["applicationCountryId"]+"-"+config.mellon["applicationInstanceId"];var e=config.forum+"/mellon/redirectMe.php?toGroup="+f+"&instance="+config.mellon["applicationInstanceId"];return e};var a=function(d){var e="; "+document.cookie;var f=e.split("; "+d+"=");if(f.length==2){return f.pop().split(";").shift()}};c.getIframe=function(g,d,j){var h="";if(typeof(totalAppWidth)!="undefined"){h="#width/"+totalAppWidth}var k="";if(typeof(config.mellon["applicationLanguageId"])!="undefined"&&config.mellon["applicationLanguageId"]!=""){k="/applicationLanguageId/"+config.mellon["applicationLanguageId"]+""}var i="/applicationId/"+config.mellon["applicationId"]+"/applicationCountryId/"+config.mellon["applicationCountryId"]+"/applicationInstanceId/"+config.mellon["applicationInstanceId"];var f=getUrlVar("context");if(f==null){f=a("mellon_context")}var e=g+i+k+h;if(typeof(j)!="undefined"&&!j){e=g+h}if(f!=null){e=e+"?context="+f}return e}}var mellon=null;if(typeof(config.mellon)!="undefined"&&config.mellon["useMellon"]){mellon=new Mellon(config.mellon["url"])}else{config.mellon={useMellon:false}}(function(B){var O,ay="2.5.1",x=this,T=Math.round,Z,t=0,e=1,aN=2,s=3,ar=4,q=5,Q=6,au={},aH={_isAMomentObject:null,_i:null,_f:null,_l:null,_strict:null,_isUTC:null,_offset:null,_pf:null,_lang:null},ai=(typeof module!=="undefined"&&module.exports&&typeof require!=="undefined"),b=/^\/?Date\((\-?\d+)/i,aW=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,aA=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,al=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,Y=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,f=/\d\d?/,aa=/\d{1,3}/,C=/\d{1,4}/,a3=/[+\-]?\d{1,6}/,aS=/\d+/,G=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,n=/Z|[\+\-]\d\d:?\d\d/gi,j=/T/i,aK=/[\+\-]?\d+(\.\d{1,3})?/,X=/\d/,o=/\d\d/,aV=/\d{3}/,aJ=/\d{4}/,ae=/[+-]?\d{6}/,V=/[+-]?\d+/,aG=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,R="YYYY-MM-DDTHH:mm:ssZ",aU=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],E=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d{1,3}/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],W=/([\+\-]|\d\d)/gi,aB="Date|Hours|Minutes|Seconds|Milliseconds".split("|"),A={Milliseconds:1,Seconds:1000,Minutes:60000,Hours:3600000,Days:86400000,Months:2592000000,Years:31536000000},c={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},aR={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},ah={},aM="DDD w W M D d".split(" "),aj="M D H h m s w W".split(" "),aO={M:function(){return this.month()+1},MMM:function(i){return this.lang().monthsShort(this,i)},MMMM:function(i){return this.lang().months(this,i)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(i){return this.lang().weekdaysMin(this,i)},ddd:function(i){return this.lang().weekdaysShort(this,i)},dddd:function(i){return this.lang().weekdays(this,i)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return H(this.year()%100,2)},YYYY:function(){return H(this.year(),4)},YYYYY:function(){return H(this.year(),5)},YYYYYY:function(){var a5=this.year(),i=a5>=0?"+":"-";return i+H(Math.abs(a5),6)},gg:function(){return H(this.weekYear()%100,2)},gggg:function(){return H(this.weekYear(),4)},ggggg:function(){return H(this.weekYear(),5)},GG:function(){return H(this.isoWeekYear()%100,2)},GGGG:function(){return H(this.isoWeekYear(),4)},GGGGG:function(){return H(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),true)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),false)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return J(this.milliseconds()/100)},SS:function(){return H(J(this.milliseconds()/10),2)},SSS:function(){return H(this.milliseconds(),3)},SSSS:function(){return H(this.milliseconds(),3)},Z:function(){var a5=-this.zone(),i="+";if(a5<0){a5=-a5;i="-"}return i+H(J(a5/60),2)+":"+H(J(a5)%60,2)},ZZ:function(){var a5=-this.zone(),i="+";if(a5<0){a5=-a5;i="-"}return i+H(J(a5/60),2)+H(J(a5)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()},Q:function(){return this.quarter()}},S=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];function ac(){return{empty:false,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:false,invalidMonth:null,invalidFormat:false,userInvalidated:false,iso:false}}function L(a5,i){return function(a6){return H(a5.call(this,a6),i)}}function g(i,a5){return function(a6){return this.lang().ordinal(i.call(this,a6),a5)}}while(aM.length){Z=aM.pop();aO[Z+"o"]=g(aO[Z],Z)}while(aj.length){Z=aj.pop();aO[Z+Z]=L(aO[Z],2)}aO.DDDD=L(aO.DDD,3);function aD(){}function I(i){a0(i);aw(this,i)}function ab(a7){var ba=l(a7),a9=ba.year||0,a5=ba.month||0,i=ba.week||0,bd=ba.day||0,bb=ba.hour||0,a8=ba.minute||0,bc=ba.second||0,a6=ba.millisecond||0;this._milliseconds=+a6+bc*1000+a8*60000+bb*3600000;this._days=+bd+i*7;this._months=+a5+a9*12;this._data={};this._bubble()}function aw(a6,a5){for(var a7 in a5){if(a5.hasOwnProperty(a7)){a6[a7]=a5[a7]}}if(a5.hasOwnProperty("toString")){a6.toString=a5.toString}if(a5.hasOwnProperty("valueOf")){a6.valueOf=a5.valueOf}return a6}function a2(a6){var a5={},a7;for(a7 in a6){if(a6.hasOwnProperty(a7)&&aH.hasOwnProperty(a7)){a5[a7]=a6[a7]}}return a5}function k(i){if(i<0){return Math.ceil(i)}else{return Math.floor(i)}}function H(a8,a7,a6){var a5=""+Math.abs(a8),i=a8>=0;while(a5.length<a7){a5="0"+a5}return(i?(a6?"+":""):"-")+a5}function D(a7,a6,ba,a9){var a5=a6._milliseconds,bc=a6._days,i=a6._months,a8,bb;if(a5){a7._d.setTime(+a7._d+a5*ba)}if(bc||i){a8=a7.minute();bb=a7.hour()}if(bc){a7.date(a7.date()+bc*ba)}if(i){a7.month(a7.month()+i*ba)}if(a5&&!a9){O.updateOffset(a7,bc||i)}if(bc||i){a7.minute(a8);a7.hour(bb)}}function a(i){return Object.prototype.toString.call(i)==="[object Array]"}function d(i){return Object.prototype.toString.call(i)==="[object Date]"||i instanceof Date}function aL(ba,a9,a6){var a5=Math.min(ba.length,a9.length),a7=Math.abs(ba.length-a9.length),bb=0,a8;for(a8=0;a8<a5;a8++){if((a6&&ba[a8]!==a9[a8])||(!a6&&J(ba[a8])!==J(a9[a8]))){bb++}}return bb+a7}function aQ(a5){if(a5){var i=a5.toLowerCase().replace(/(.)s$/,"$1");a5=c[a5]||aR[i]||i}return a5}function l(a6){var a5={},i,a7;for(a7 in a6){if(a6.hasOwnProperty(a7)){i=aQ(a7);if(i){a5[i]=a6[a7]}}}return a5}function ao(a5){var i,a6;if(a5.indexOf("week")===0){i=7;a6="day"}else{if(a5.indexOf("month")===0){i=12;a6="month"}else{return}}O[a5]=function(bb,a8){var ba,a7,bc=O.fn._lang[a5],a9=[];if(typeof bb==="number"){a8=bb;bb=B}a7=function(be){var bd=O().utc().set(a6,be);return bc.call(O.fn._lang,bd,bb||"")};if(a8!=null){return a7(a8)}else{for(ba=0;ba<i;ba++){a9.push(a7(ba))}return a9}}}function J(i){var a6=+i,a5=0;if(a6!==0&&isFinite(a6)){if(a6>=0){a5=Math.floor(a6)}else{a5=Math.ceil(a6)}}return a5}function aY(i,a5){return new Date(Date.UTC(i,a5+1,0)).getUTCDate()}function aC(i,a6,a5){return y(O([i,11,31+a6-a5]),a6,a5).week}function aT(i){return aF(i)?366:365}function aF(i){return(i%4===0&&i%100!==0)||i%400===0}function a0(i){var a5;if(i._a&&i._pf.overflow===-2){a5=i._a[e]<0||i._a[e]>11?e:i._a[aN]<1||i._a[aN]>aY(i._a[t],i._a[e])?aN:i._a[s]<0||i._a[s]>23?s:i._a[ar]<0||i._a[ar]>59?ar:i._a[q]<0||i._a[q]>59?q:i._a[Q]<0||i._a[Q]>999?Q:-1;if(i._pf._overflowDayOfYear&&(a5<t||a5>aN)){a5=aN}i._pf.overflow=a5}}function ax(i){if(i._isValid==null){i._isValid=!isNaN(i._d.getTime())&&i._pf.overflow<0&&!i._pf.empty&&!i._pf.invalidMonth&&!i._pf.nullInput&&!i._pf.invalidFormat&&!i._pf.userInvalidated;if(i._strict){i._isValid=i._isValid&&i._pf.charsLeftOver===0&&i._pf.unusedTokens.length===0}}return i._isValid}function z(i){return i?i.toLowerCase().replace("_","-"):i}function u(i,a5){return a5._isUTC?O(i).zone(a5._offset||0):O(i).local()}aw(aD.prototype,{set:function(a5){var a7,a6;for(a6 in a5){a7=a5[a6];if(typeof a7==="function"){this[a6]=a7}else{this["_"+a6]=a7}}},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(i){return this._months[i.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(i){return this._monthsShort[i.month()]},monthsParse:function(a5){var a6,a8,a7;if(!this._monthsParse){this._monthsParse=[]}for(a6=0;a6<12;a6++){if(!this._monthsParse[a6]){a8=O.utc([2000,a6]);a7="^"+this.months(a8,"")+"|^"+this.monthsShort(a8,"");this._monthsParse[a6]=new RegExp(a7.replace(".",""),"i")}if(this._monthsParse[a6].test(a5)){return a6}}},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(i){return this._weekdays[i.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(i){return this._weekdaysShort[i.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(i){return this._weekdaysMin[i.day()]},weekdaysParse:function(a8){var a5,a7,a6;if(!this._weekdaysParse){this._weekdaysParse=[]}for(a5=0;a5<7;a5++){if(!this._weekdaysParse[a5]){a7=O([2000,1]).day(a5);a6="^"+this.weekdays(a7,"")+"|^"+this.weekdaysShort(a7,"")+"|^"+this.weekdaysMin(a7,"");this._weekdaysParse[a5]=new RegExp(a6.replace(".",""),"i")}if(this._weekdaysParse[a5].test(a8)){return a5}}},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(a5){var i=this._longDateFormat[a5];if(!i&&this._longDateFormat[a5.toUpperCase()]){i=this._longDateFormat[a5.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a6){return a6.slice(1)});this._longDateFormat[a5]=i}return i},isPM:function(i){return((i+"").toLowerCase().charAt(0)==="p")},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(i,a5,a6){if(i>11){return a6?"pm":"PM"}else{return a6?"am":"AM"}},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a5,a6){var i=this._calendar[a5];return typeof i==="function"?i.apply(a6):i},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a7,a6,a5,a8){var i=this._relativeTime[a5];return(typeof i==="function")?i(a7,a6,a5,a8):i.replace(/%d/i,a7)},pastFuture:function(a6,i){var a5=this._relativeTime[a6>0?"future":"past"];return typeof a5==="function"?a5(i):a5.replace(/%s/i,i)},ordinal:function(i){return this._ordinal.replace("%d",i)},_ordinal:"%d",preparse:function(i){return i},postformat:function(i){return i},week:function(i){return y(i,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}});function ag(a5,i){i.abbr=a5;if(!au[a5]){au[a5]=new aD()}au[a5].set(i);return au[a5]}function aX(i){delete au[i]}function av(a9){var a8=0,a6,bb,ba,a7,a5=function(i){if(!au[i]&&ai){try{require("./lang/"+i)}catch(bc){}}return au[i]};if(!a9){return O.fn._lang}if(!a(a9)){bb=a5(a9);if(bb){return bb}a9=[a9]}while(a8<a9.length){a7=z(a9[a8]).split("-");a6=a7.length;ba=z(a9[a8+1]);ba=ba?ba.split("-"):null;while(a6>0){bb=a5(a7.slice(0,a6).join("-"));if(bb){return bb}if(ba&&ba.length>=a6&&aL(a7,ba,true)>=a6-1){break}a6--}a8++}return O.fn._lang}function af(i){if(i.match(/\[[\s\S]/)){return i.replace(/^\[|\]$/g,"")}return i.replace(/\\/g,"")}function p(a7){var a8=a7.match(al),a5,a6;for(a5=0,a6=a8.length;a5<a6;a5++){if(aO[a8[a5]]){a8[a5]=aO[a8[a5]]}else{a8[a5]=af(a8[a5])}}return function(a9){var i="";for(a5=0;a5<a6;a5++){i+=a8[a5] instanceof Function?a8[a5].call(a9,a7):a8[a5]}return i}}function ak(i,a5){if(!i.isValid()){return i.lang().invalidDate()}a5=a4(a5,i.lang());if(!ah[a5]){ah[a5]=p(a5)}return ah[a5](i)}function a4(a7,a8){var a5=5;function a6(i){return a8.longDateFormat(i)||i}Y.lastIndex=0;while(a5>=0&&Y.test(a7)){a7=a7.replace(Y,a6);Y.lastIndex=0;a5-=1}return a7}function an(a7,a6){var a5,i=a6._strict;switch(a7){case"DDDD":return aV;case"YYYY":case"GGGG":case"gggg":return i?aJ:C;case"Y":case"G":case"g":return V;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return i?ae:a3;case"S":if(i){return X}case"SS":if(i){return o}case"SSS":if(i){return aV}case"DDD":return aa;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return G;case"a":case"A":return av(a6._l)._meridiemParse;case"X":return aK;case"Z":case"ZZ":return n;case"T":return j;case"SSSS":return aS;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return i?o:f;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return f;default:a5=new RegExp(a1(aq(a7.replace("\\","")),"i"));return a5}}function v(a5){a5=a5||"";var i=(a5.match(n)||[]),a8=i[i.length-1]||[],a7=(a8+"").match(W)||["-",0,0],a6=+(a7[1]*60)+J(a7[2]);return a7[0]==="+"?-a6:a6}function ap(a8,a6,a7){var a5,i=a7._a;switch(a8){case"M":case"MM":if(a6!=null){i[e]=J(a6)-1}break;case"MMM":case"MMMM":a5=av(a7._l).monthsParse(a6);if(a5!=null){i[e]=a5}else{a7._pf.invalidMonth=a6}break;case"D":case"DD":if(a6!=null){i[aN]=J(a6)}break;case"DDD":case"DDDD":if(a6!=null){a7._dayOfYear=J(a6)}break;case"YY":i[t]=J(a6)+(J(a6)>68?1900:2000);break;case"YYYY":case"YYYYY":case"YYYYYY":i[t]=J(a6);break;case"a":case"A":a7._isPm=av(a7._l).isPM(a6);break;case"H":case"HH":case"h":case"hh":i[s]=J(a6);break;case"m":case"mm":i[ar]=J(a6);break;case"s":case"ss":i[q]=J(a6);break;case"S":case"SS":case"SSS":case"SSSS":i[Q]=J(("0."+a6)*1000);break;case"X":a7._d=new Date(parseFloat(a6)*1000);break;case"Z":case"ZZ":a7._useUTC=true;a7._tzm=v(a6);break;case"w":case"ww":case"W":case"WW":case"d":case"dd":case"ddd":case"dddd":case"e":case"E":a8=a8.substr(0,1);case"gg":case"gggg":case"GG":case"GGGG":case"GGGGG":a8=a8.substr(0,2);if(a6){a7._w=a7._w||{};a7._w[a8]=a6}break}}function ad(a9){var bb,ba,be=[],a7,bd,a6,bf,bg,a8,bc,a5;if(a9._d){return}a7=m(a9);if(a9._w&&a9._a[aN]==null&&a9._a[e]==null){a6=function(bh){var i=parseInt(bh,10);return bh?(bh.length<3?(i>68?1900+i:2000+i):i):(a9._a[t]==null?O().weekYear():a9._a[t])};bf=a9._w;if(bf.GG!=null||bf.W!=null||bf.E!=null){bg=r(a6(bf.GG),bf.W||1,bf.E,4,1)}else{a8=av(a9._l);bc=bf.d!=null?aZ(bf.d,a8):(bf.e!=null?parseInt(bf.e,10)+a8._week.dow:0);a5=parseInt(bf.w,10)||1;if(bf.d!=null&&bc<a8._week.dow){a5++}bg=r(a6(bf.gg),a5,bc,a8._week.doy,a8._week.dow)}a9._a[t]=bg.year;a9._dayOfYear=bg.dayOfYear}if(a9._dayOfYear){bd=a9._a[t]==null?a7[t]:a9._a[t];if(a9._dayOfYear>aT(bd)){a9._pf._overflowDayOfYear=true}ba=F(bd,0,a9._dayOfYear);a9._a[e]=ba.getUTCMonth();a9._a[aN]=ba.getUTCDate()}for(bb=0;bb<3&&a9._a[bb]==null;++bb){a9._a[bb]=be[bb]=a7[bb]}for(;bb<7;bb++){a9._a[bb]=be[bb]=(a9._a[bb]==null)?(bb===2?1:0):a9._a[bb]}be[s]+=J((a9._tzm||0)/60);be[ar]+=J((a9._tzm||0)%60);a9._d=(a9._useUTC?F:am).apply(null,be)}function az(a5){var i;if(a5._d){return}i=l(a5._i);a5._a=[i.year,i.month,i.day,i.hour,i.minute,i.second,i.millisecond];ad(a5)}function m(a5){var i=new Date();if(a5._useUTC){return[i.getUTCFullYear(),i.getUTCMonth(),i.getUTCDate()]}else{return[i.getFullYear(),i.getMonth(),i.getDate()]}}function N(a8){a8._a=[];a8._pf.empty=true;var a7=av(a8._l),bb=""+a8._i,ba,a6,be,a9,bd,a5=bb.length,bc=0;be=a4(a8._f,a7).match(al)||[];for(ba=0;ba<be.length;ba++){a9=be[ba];a6=(bb.match(an(a9,a8))||[])[0];if(a6){bd=bb.substr(0,bb.indexOf(a6));if(bd.length>0){a8._pf.unusedInput.push(bd)}bb=bb.slice(bb.indexOf(a6)+a6.length);bc+=a6.length}if(aO[a9]){if(a6){a8._pf.empty=false}else{a8._pf.unusedTokens.push(a9)}ap(a9,a6,a8)}else{if(a8._strict&&!a6){a8._pf.unusedTokens.push(a9)}}}a8._pf.charsLeftOver=a5-bc;if(bb.length>0){a8._pf.unusedInput.push(bb)}if(a8._isPm&&a8._a[s]<12){a8._a[s]+=12}if(a8._isPm===false&&a8._a[s]===12){a8._a[s]=0}ad(a8);a0(a8)}function aq(i){return i.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a5,a9,a8,a7,a6){return a9||a8||a7||a6})}function a1(i){return i.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function aP(a5){var a9,a7,a8,a6,ba;if(a5._f.length===0){a5._pf.invalidFormat=true;a5._d=new Date(NaN);return}for(a6=0;a6<a5._f.length;a6++){ba=0;a9=aw({},a5);a9._pf=ac();a9._f=a5._f[a6];N(a9);if(!ax(a9)){continue}ba+=a9._pf.charsLeftOver;ba+=a9._pf.unusedTokens.length*10;a9._pf.score=ba;if(a8==null||ba<a8){a8=ba;a7=a9}}aw(a5,a7||a9)}function h(a8){var a9,a5,a7=a8._i,a6=aG.exec(a7);if(a6){a8._pf.iso=true;for(a9=0,a5=aU.length;a9<a5;a9++){if(aU[a9][1].exec(a7)){a8._f=aU[a9][0]+(a6[6]||" ");break}}for(a9=0,a5=E.length;a9<a5;a9++){if(E[a9][1].exec(a7)){a8._f+=E[a9][0];break}}if(a7.match(n)){a8._f+="Z"}N(a8)}else{a8._d=new Date(a7)}}function M(a6){var a5=a6._i,i=b.exec(a5);if(a5===B){a6._d=new Date()}else{if(i){a6._d=new Date(+i[1])}else{if(typeof a5==="string"){h(a6)}else{if(a(a5)){a6._a=a5.slice(0);ad(a6)}else{if(d(a5)){a6._d=new Date(+a5)}else{if(typeof(a5)==="object"){az(a6)}else{a6._d=new Date(a5)}}}}}}}function am(bb,i,a9,a8,ba,a7,a6){var a5=new Date(bb,i,a9,a8,ba,a7,a6);if(bb<1970){a5.setFullYear(bb)}return a5}function F(a5){var i=new Date(Date.UTC.apply(null,arguments));if(a5<1970){i.setUTCFullYear(a5)}return i}function aZ(i,a5){if(typeof i==="string"){if(!isNaN(i)){i=parseInt(i,10)}else{i=a5.weekdaysParse(i);if(typeof i!=="number"){return null}}}return i}function aE(i,a6,a5,a7,a8){return a8.relativeTime(a6||1,!!a5,i,a7)}function w(a6,i,a5){var bb=T(Math.abs(a6)/1000),a7=T(bb/60),ba=T(a7/60),bc=T(ba/24),a8=T(bc/365),a9=bb<45&&["s",bb]||a7===1&&["m"]||a7<45&&["mm",a7]||ba===1&&["h"]||ba<22&&["hh",ba]||bc===1&&["d"]||bc<=25&&["dd",bc]||bc<=45&&["M"]||bc<345&&["MM",T(bc/30)]||a8===1&&["y"]||["yy",a8];a9[2]=i;a9[3]=a6>0;a9[4]=a5;return aE.apply({},a9)}function y(a8,a6,a9){var a5=a9-a6,i=a9-a8.day(),a7;if(i>a5){i-=7}if(i<a5-7){i+=7}a7=O(a8).add("d",i);return{week:Math.ceil(a7.dayOfYear()/7),year:a7.year()}}function r(a8,a7,a9,bb,i){var ba=F(a8,0,1).getUTCDay(),a6,a5;a9=a9!=null?a9:i;a6=i-ba+(ba>bb?7:0)-(ba<i?7:0);a5=7*(a7-1)+(a9-i)+a6+1;return{year:a5>0?a8:a8-1,dayOfYear:a5>0?a5:aT(a8-1)+a5}}function K(a5){var i=a5._i,a6=a5._f;if(i===null){return O.invalid({nullInput:true})}if(typeof i==="string"){a5._i=i=av().preparse(i)}if(O.isMoment(i)){a5=a2(i);a5._d=new Date(+i._d)}else{if(a6){if(a(a6)){aP(a5)}else{N(a5)}}else{M(a5)}}return new I(a5)}O=function(a5,a6,a7,i){var a8;if(typeof(a7)==="boolean"){i=a7;a7=B}a8={};a8._isAMomentObject=true;a8._i=a5;a8._f=a6;a8._l=a7;a8._strict=i;a8._isUTC=false;a8._pf=ac();return K(a8)};O.utc=function(a5,a6,a7,i){var a8;if(typeof(a7)==="boolean"){i=a7;a7=B}a8={};a8._isAMomentObject=true;a8._useUTC=true;a8._isUTC=true;a8._l=a7;a8._i=a5;a8._f=a6;a8._strict=i;a8._pf=ac();return K(a8).utc()};O.unix=function(i){return O(i*1000)};O.duration=function(a5,a9){var ba=a5,a8=null,i,a7,a6;if(O.isDuration(a5)){ba={ms:a5._milliseconds,d:a5._days,M:a5._months}}else{if(typeof a5==="number"){ba={};if(a9){ba[a9]=a5}else{ba.milliseconds=a5}}else{if(!!(a8=aW.exec(a5))){i=(a8[1]==="-")?-1:1;ba={y:0,d:J(a8[aN])*i,h:J(a8[s])*i,m:J(a8[ar])*i,s:J(a8[q])*i,ms:J(a8[Q])*i}}else{if(!!(a8=aA.exec(a5))){i=(a8[1]==="-")?-1:1;a6=function(bc){var bb=bc&&parseFloat(bc.replace(",","."));return(isNaN(bb)?0:bb)*i};ba={y:a6(a8[2]),M:a6(a8[3]),d:a6(a8[4]),h:a6(a8[5]),m:a6(a8[6]),s:a6(a8[7]),w:a6(a8[8])}}}}}a7=new ab(ba);if(O.isDuration(a5)&&a5.hasOwnProperty("_lang")){a7._lang=a5._lang}return a7};O.version=ay;O.defaultFormat=R;O.updateOffset=function(){};O.lang=function(a5,i){var a6;if(!a5){return O.fn._lang._abbr}if(i){ag(z(a5),i)}else{if(i===null){aX(a5);a5="en"}else{if(!au[a5]){av(a5)}}}a6=O.duration.fn._lang=O.fn._lang=av(a5);return a6._abbr};O.langData=function(i){if(i&&i._lang&&i._lang._abbr){i=i._lang._abbr}return av(i)};O.isMoment=function(i){return i instanceof I||(i!=null&&i.hasOwnProperty("_isAMomentObject"))};O.isDuration=function(i){return i instanceof ab};for(Z=S.length-1;Z>=0;--Z){ao(S[Z])}O.normalizeUnits=function(i){return aQ(i)};O.invalid=function(a5){var i=O.utc(NaN);if(a5!=null){aw(i._pf,a5)}else{i._pf.userInvalidated=true}return i};O.parseZone=function(){return O.apply(null,arguments).parseZone()};aw(O.fn=I.prototype,{clone:function(){return O(this)},valueOf:function(){return +this._d+((this._offset||0)*60000)},unix:function(){return Math.floor(+this/1000)},toString:function(){return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var i=O(this).utc();if(0<i.year()&&i.year()<=9999){return ak(i,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}else{return ak(i,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}},toArray:function(){var i=this;return[i.year(),i.month(),i.date(),i.hours(),i.minutes(),i.seconds(),i.milliseconds()]},isValid:function(){return ax(this)},isDSTShifted:function(){if(this._a){return this.isValid()&&aL(this._a,(this._isUTC?O.utc(this._a):O(this._a)).toArray())>0}return false},parsingFlags:function(){return aw({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(){return this.zone(0)},local:function(){this.zone(0);this._isUTC=false;return this},format:function(a5){var i=ak(this,a5||O.defaultFormat);return this.lang().postformat(i)},add:function(i,a6){var a5;if(typeof i==="string"){a5=O.duration(+a6,i)}else{a5=O.duration(i,a6)}D(this,a5,1);return this},subtract:function(i,a6){var a5;if(typeof i==="string"){a5=O.duration(+a6,i)}else{a5=O.duration(i,a6)}D(this,a5,-1);return this},diff:function(a8,a7,i){var a9=u(a8,this),a5=(this.zone()-a9.zone())*60000,ba,a6;a7=aQ(a7);if(a7==="year"||a7==="month"){ba=(this.daysInMonth()+a9.daysInMonth())*43200000;a6=((this.year()-a9.year())*12)+(this.month()-a9.month());a6+=((this-O(this).startOf("month"))-(a9-O(a9).startOf("month")))/ba;a6-=((this.zone()-O(this).startOf("month").zone())-(a9.zone()-O(a9).startOf("month").zone()))*60000/ba;if(a7==="year"){a6=a6/12}}else{ba=(this-a9);a6=a7==="second"?ba/1000:a7==="minute"?ba/60000:a7==="hour"?ba/3600000:a7==="day"?(ba-a5)/86400000:a7==="week"?(ba-a5)/604800000:ba}return i?a6:k(a6)},from:function(a5,i){return O.duration(this.diff(a5)).lang(this.lang()._abbr).humanize(!i)},fromNow:function(i){return this.from(O(),i)},calendar:function(){var i=u(O(),this).startOf("day"),a6=this.diff(i,"days",true),a5=a6<-6?"sameElse":a6<-1?"lastWeek":a6<0?"lastDay":a6<1?"sameDay":a6<2?"nextDay":a6<7?"nextWeek":"sameElse";return this.format(this.lang().calendar(a5,this))},isLeapYear:function(){return aF(this.year())},isDST:function(){return(this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone())},day:function(a5){var i=this._isUTC?this._d.getUTCDay():this._d.getDay();if(a5!=null){a5=aZ(a5,this.lang());return this.add({d:a5-i})}else{return i}},month:function(i){var a5=this._isUTC?"UTC":"",a6;if(i!=null){if(typeof i==="string"){i=this.lang().monthsParse(i);if(typeof i!=="number"){return this}}a6=Math.min(this.date(),aY(this.year(),i));this._d["set"+a5+"Month"](i,a6);O.updateOffset(this,true);return this}else{return this._d["get"+a5+"Month"]()}},startOf:function(i){i=aQ(i);switch(i){case"year":this.month(0);case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}if(i==="week"){this.weekday(0)}else{if(i==="isoWeek"){this.isoWeekday(1)}}return this},endOf:function(i){i=aQ(i);return this.startOf(i).add((i==="isoWeek"?"week":i),1).subtract("ms",1)},isAfter:function(a5,i){i=typeof i!=="undefined"?i:"millisecond";return +this.clone().startOf(i)>+O(a5).startOf(i)},isBefore:function(a5,i){i=typeof i!=="undefined"?i:"millisecond";return +this.clone().startOf(i)<+O(a5).startOf(i)},isSame:function(a5,i){i=i||"ms";return +this.clone().startOf(i)===+u(a5,this).startOf(i)},min:function(i){i=O.apply(null,arguments);return i<this?this:i},max:function(i){i=O.apply(null,arguments);return i>this?this:i},zone:function(i,a5){a5=(a5==null?true:false);var a6=this._offset||0;if(i!=null){if(typeof i==="string"){i=v(i)}if(Math.abs(i)<16){i=i*60}this._offset=i;this._isUTC=true;if(a6!==i&&a5){D(this,O.duration(a6-i,"m"),1,true)}}else{return this._isUTC?a6:this._d.getTimezoneOffset()}return this},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){if(this._tzm){this.zone(this._tzm)}else{if(typeof this._i==="string"){this.zone(this._i)}}return this},hasAlignedHourOffset:function(i){if(!i){i=0}else{i=O(i).zone()}return(this.zone()-i)%60===0},daysInMonth:function(){return aY(this.year(),this.month())},dayOfYear:function(i){var a5=T((O(this).startOf("day")-O(this).startOf("year"))/86400000)+1;return i==null?a5:this.add("d",(i-a5))},quarter:function(){return Math.ceil((this.month()+1)/3)},weekYear:function(i){var a5=y(this,this.lang()._week.dow,this.lang()._week.doy).year;return i==null?a5:this.add("y",(i-a5))},isoWeekYear:function(i){var a5=y(this,1,4).year;return i==null?a5:this.add("y",(i-a5))},week:function(i){var a5=this.lang().week(this);return i==null?a5:this.add("d",(i-a5)*7)},isoWeek:function(i){var a5=y(this,1,4).week;return i==null?a5:this.add("d",(i-a5)*7)},weekday:function(i){var a5=(this.day()+7-this.lang()._week.dow)%7;return i==null?a5:this.add("d",i-a5)},isoWeekday:function(i){return i==null?this.day()||7:this.day(this.day()%7?i:i-7)},isoWeeksInYear:function(){return aC(this.year(),1,4)},weeksInYear:function(){var i=this._lang._week;return aC(this.year(),i.dow,i.doy)},get:function(i){i=aQ(i);return this[i]()},set:function(i,a5){i=aQ(i);if(typeof this[i]==="function"){this[i](a5)}return this},lang:function(i){if(i===B){return this._lang}else{this._lang=av(i);return this}}});function aI(a5,a6){var i=a6==="date"||a6==="month"||a6==="year";O.fn[a5]=O.fn[a5+"s"]=function(a7,a9){var a8=this._isUTC?"UTC":"";if(a9==null){a9=i}if(a7!=null){this._d["set"+a8+a6](a7);O.updateOffset(this,a9);return this}else{return this._d["get"+a8+a6]()}}}for(Z=0;Z<aB.length;Z++){aI(aB[Z].toLowerCase().replace(/s$/,""),aB[Z])}aI("year","FullYear");O.fn.days=O.fn.day;O.fn.months=O.fn.month;O.fn.weeks=O.fn.week;O.fn.isoWeeks=O.fn.isoWeek;O.fn.toJSON=O.fn.toISOString;aw(O.duration.fn=ab.prototype,{_bubble:function(){var a6=this._milliseconds,bb=this._days,i=this._months,a9=this._data,ba,a8,a5,a7;a9.milliseconds=a6%1000;ba=k(a6/1000);a9.seconds=ba%60;a8=k(ba/60);a9.minutes=a8%60;a5=k(a8/60);a9.hours=a5%24;bb+=k(a5/24);a9.days=bb%30;i+=k(bb/30);a9.months=i%12;a7=k(i/12);a9.years=a7},weeks:function(){return k(this.days()/7)},valueOf:function(){return this._milliseconds+this._days*86400000+(this._months%12)*2592000000+J(this._months/12)*31536000000},humanize:function(a5){var a6=+this,i=w(a6,!a5,this.lang());if(a5){i=this.lang().pastFuture(a6,i)}return this.lang().postformat(i)},add:function(i,a6){var a5=O.duration(i,a6);this._milliseconds+=a5._milliseconds;this._days+=a5._days;this._months+=a5._months;this._bubble();return this},subtract:function(i,a6){var a5=O.duration(i,a6);this._milliseconds-=a5._milliseconds;this._days-=a5._days;this._months-=a5._months;this._bubble();return this},get:function(i){i=aQ(i);return this[i.toLowerCase()+"s"]()},as:function(i){i=aQ(i);return this["as"+i.charAt(0).toUpperCase()+i.slice(1)+"s"]()},lang:O.fn.lang,toIsoString:function(){var a7=Math.abs(this.years()),i=Math.abs(this.months()),a9=Math.abs(this.days()),a5=Math.abs(this.hours()),a6=Math.abs(this.minutes()),a8=Math.abs(this.seconds()+this.milliseconds()/1000);if(!this.asSeconds()){return"P0D"}return(this.asSeconds()<0?"-":"")+"P"+(a7?a7+"Y":"")+(i?i+"M":"")+(a9?a9+"D":"")+((a5||a6||a8)?"T":"")+(a5?a5+"H":"")+(a6?a6+"M":"")+(a8?a8+"S":"")}});function U(i){O.duration.fn[i]=function(){return this._data[i]}}function at(i,a5){O.duration.fn["as"+i]=function(){return +this/a5}}for(Z in A){if(A.hasOwnProperty(Z)){at(Z,A[Z]);U(Z.toLowerCase())}}at("Weeks",604800000);O.duration.fn.asMonths=function(){return(+this-this.years()*31536000000)/2592000000+this.years()*12};O.lang("en",{ordinal:function(a6){var i=a6%10,a5=(J(a6%100/10)===1)?"th":(i===1)?"st":(i===2)?"nd":(i===3)?"rd":"th";return a6+a5}});function P(a5){var i=false,a6=O;if(typeof ender!=="undefined"){return}if(a5){x.moment=function(){if(!i&&console&&console.warn){i=true;console.warn("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.")}return a6.apply(null,arguments)};aw(x.moment,a6)}else{x.moment=O}}if(ai){module.exports=O;P(true)}else{if(typeof define==="function"&&define.amd){define("moment",function(a5,i,a6){if(a6.config&&a6.config()&&a6.config().noGlobal!==true){P(a6.config().noGlobal===B)}return O})}else{P()}}}).call(this);(function(b){b.color={};b.color.make=function(d,e,g,f){var c={};c.r=d||0;c.g=e||0;c.b=g||0;c.a=f!=null?f:1;c.add=function(h,i){for(var j=0;j<h.length;++j){c[h.charAt(j)]+=i}return c.normalize()};c.scale=function(h,i){for(var j=0;j<h.length;++j){c[h.charAt(j)]*=i}return c.normalize()};c.toString=function(){if(c.a>=1){return"rgb("+[c.r,c.g,c.b].join(",")+")"}else{return"rgba("+[c.r,c.g,c.b,c.a].join(",")+")"}};c.normalize=function(){function h(j,i,k){return i<j?j:(i>k?k:i)}c.r=h(0,parseInt(c.r),255);c.g=h(0,parseInt(c.g),255);c.b=h(0,parseInt(c.b),255);c.a=h(0,c.a,1);return c};c.clone=function(){return b.color.make(c.r,c.b,c.g,c.a)};return c.normalize()};b.color.extract=function(d,e){var c;do{c=d.css(e).toLowerCase();if(c!=""&&c!="transparent"){break}d=d.parent()}while(!b.nodeName(d.get(0),"body"));if(c=="rgba(0, 0, 0, 0)"){c="transparent"}return b.color.parse(c)};b.color.parse=function(c){var d,f=b.color.make;if(d=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(c)){return f(parseInt(d[1],10),parseInt(d[2],10),parseInt(d[3],10))}if(d=/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(c)){return f(parseInt(d[1],10),parseInt(d[2],10),parseInt(d[3],10),parseFloat(d[4]))}if(d=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(c)){return f(parseFloat(d[1])*2.55,parseFloat(d[2])*2.55,parseFloat(d[3])*2.55)}if(d=/rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(c)){return f(parseFloat(d[1])*2.55,parseFloat(d[2])*2.55,parseFloat(d[3])*2.55,parseFloat(d[4]))}if(d=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(c)){return f(parseInt(d[1],16),parseInt(d[2],16),parseInt(d[3],16))}if(d=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(c)){return f(parseInt(d[1]+d[1],16),parseInt(d[2]+d[2],16),parseInt(d[3]+d[3],16))}var e=b.trim(c).toLowerCase();if(e=="transparent"){return f(255,255,255,0)}else{d=a[e]||[0,0,0];return f(d[0],d[1],d[2])}};var a={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);(function(e){var d=Object.prototype.hasOwnProperty;function a(h,g){var j=g.children("."+h)[0];if(j==null){j=document.createElement("canvas");j.className=h;e(j).css({direction:"ltr",position:"absolute",left:0,top:0}).appendTo(g);if(!j.getContext){if(window.G_vmlCanvasManager){j=window.G_vmlCanvasManager.initElement(j)}else{throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.")}}}this.element=j;var i=this.context=j.getContext("2d");var f=window.devicePixelRatio||1,k=i.webkitBackingStorePixelRatio||i.mozBackingStorePixelRatio||i.msBackingStorePixelRatio||i.oBackingStorePixelRatio||i.backingStorePixelRatio||1;this.pixelRatio=f/k;this.resize(g.width(),g.height());this.textContainer=null;this.text={};this._textCache={}}a.prototype.resize=function(i,f){if(i<=0||f<=0){throw new Error("Invalid dimensions for plot, width = "+i+", height = "+f)}var h=this.element,g=this.context,j=this.pixelRatio;if(this.width!=i){h.width=i*j;h.style.width=i+"px";this.width=i}if(this.height!=f){h.height=f*j;h.style.height=f+"px";this.height=f}g.restore();g.save();g.scale(j,j)};a.prototype.clear=function(){this.context.clearRect(0,0,this.width,this.height)};a.prototype.render=function(){var f=this._textCache;for(var k in f){if(d.call(f,k)){var j=this.getTextLayer(k),g=f[k];j.hide();for(var i in g){if(d.call(g,i)){var m=g[i];for(var h in m){if(d.call(m,h)){var l=m[h];if(l.active){if(!l.rendered){j.append(l.element);l.rendered=true}}else{delete m[h];if(l.rendered){l.element.detach()}}}}}}j.show()}}};a.prototype.getTextLayer=function(g){var f=this.text[g];if(f==null){if(this.textContainer==null){this.textContainer=e("<div class='flot-text'></div>").css({position:"absolute",top:0,left:0,bottom:0,right:0,"font-size":"smaller",color:"#545454"}).insertAfter(this.element)}f=this.text[g]=e("<div></div>").addClass(g).css({position:"absolute",top:0,left:0,bottom:0,right:0}).appendTo(this.textContainer)}return f};a.prototype.getTextInfo=function(l,n,i,j){var m,f,g,h;n=""+n;if(typeof i==="object"){m=i.style+" "+i.variant+" "+i.weight+" "+i.size+"px/"+i.lineHeight+"px "+i.family}else{m=i}f=this._textCache[l];if(f==null){f=this._textCache[l]={}}g=f[m];if(g==null){g=f[m]={}}h=g[n];if(h==null){var k=e("<div></div>").html(n).css({position:"absolute",top:-9999}).appendTo(this.getTextLayer(l));if(typeof i==="object"){k.css({font:m,color:i.color})}else{if(typeof i==="string"){k.addClass(i)}}h=g[n]={active:false,rendered:false,element:k,width:k.outerWidth(true),height:k.outerHeight(true)};k.detach()}return h};a.prototype.addText=function(j,m,k,n,g,h,i,l){var f=this.getTextInfo(j,n,g,h);f.active=true;if(i=="center"){m-=f.width/2}else{if(i=="right"){m-=f.width}}if(l=="middle"){k-=f.height/2}else{if(l=="bottom"){k-=f.height}}f.element.css({top:Math.round(k),left:Math.round(m)})};a.prototype.removeText=function(j,m,f,l){if(m==null){var g=this._textCache[j];if(g!=null){for(var i in g){if(d.call(g,i)){var k=g[i];for(var h in k){if(d.call(k,h)){k[h].active=false}}}}}}else{this.getTextInfo(j,m,f,l).active=false}};function c(Q,A,C,g){var t=[],L={colors:["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"],legend:{show:true,noColumns:1,labelFormatter:null,labelBoxBorderColor:"#ccc",container:null,position:"ne",margin:5,backgroundColor:null,backgroundOpacity:0.85,sorted:null},xaxis:{show:null,position:"bottom",mode:null,font:null,color:null,tickColor:null,transform:null,inverseTransform:null,min:null,max:null,autoscaleMargin:null,ticks:null,tickFormatter:null,labelWidth:null,labelHeight:null,reserveSpace:null,tickLength:null,alignTicksWithAxis:null,tickDecimals:null,tickSize:null,minTickSize:null},yaxis:{autoscaleMargin:0.02,position:"left"},xaxes:[],yaxes:[],series:{points:{show:false,radius:3,lineWidth:2,fill:true,fillColor:"#ffffff",symbol:"circle"},lines:{lineWidth:2,fill:false,fillColor:null,steps:false},bars:{show:false,lineWidth:2,barWidth:1,fill:true,fillColor:null,align:"left",horizontal:false,zero:true},shadowSize:3,highlightColor:null},grid:{show:true,aboveData:false,color:"#545454",backgroundColor:null,borderColor:null,tickColor:null,margin:0,labelMargin:5,axisMargin:8,borderWidth:2,minBorderMargin:null,markings:null,markingsColor:"#f4f4f4",markingsLineWidth:2,clickable:false,hoverable:false,autoHighlight:true,mouseActiveRadius:10},interaction:{redrawOverlayInterval:1000/60},hooks:{}},ac=null,al=null,am=null,D=null,aw=null,ao=[],W=[],J={left:0,right:0,top:0,bottom:0},k=0,ad=0,p={processOptions:[],processRawData:[],processDatapoints:[],processOffset:[],drawBackground:[],drawSeries:[],draw:[],bindEvents:[],drawOverlay:[],shutdown:[]},h=this;h.setData=K;h.setupGrid=O;h.draw=au;h.getPlaceholder=function(){return Q};h.getCanvas=function(){return ac.element};h.getPlotOffset=function(){return J};h.width=function(){return k};h.height=function(){return ad};h.offset=function(){var ay=am.offset();ay.left+=J.left;ay.top+=J.top;return ay};h.getData=function(){return t};h.getAxes=function(){var az={},ay;e.each(ao.concat(W),function(aA,aB){if(aB){az[aB.direction+(aB.n!=1?aB.n:"")+"axis"]=aB}});return az};h.getXAxes=function(){return ao};h.getYAxes=function(){return W};h.c2p=Y;h.p2c=R;h.getOptions=function(){return L};h.highlight=an;h.unhighlight=ah;h.triggerRedrawOverlay=X;h.pointOffset=function(ay){return{left:parseInt(ao[x(ay,"x")-1].p2c(+ay.x)+J.left,10),top:parseInt(W[x(ay,"y")-1].p2c(+ay.y)+J.top,10)}};h.shutdown=o;h.resize=function(){var az=Q.width(),ay=Q.height();ac.resize(az,ay);al.resize(az,ay)};h.hooks=p;H(h);aa(C);ax();K(A);O();au();ar();function F(aA,ay){ay=[h].concat(ay);for(var az=0;az<aA.length;++az){aA[az].apply(this,ay)}}function H(){var az={Canvas:a};for(var ay=0;ay<g.length;++ay){var aA=g[ay];aA.init(h,az);if(aA.options){e.extend(true,L,aA.options)}}}function aa(aA){e.extend(true,L,aA);if(L.xaxis.color==null){L.xaxis.color=e.color.parse(L.grid.color).scale("a",0.22).toString()}if(L.yaxis.color==null){L.yaxis.color=e.color.parse(L.grid.color).scale("a",0.22).toString()}if(L.xaxis.tickColor==null){L.xaxis.tickColor=L.grid.tickColor||L.xaxis.color}if(L.yaxis.tickColor==null){L.yaxis.tickColor=L.grid.tickColor||L.yaxis.color}if(L.grid.borderColor==null){L.grid.borderColor=L.grid.color}if(L.grid.tickColor==null){L.grid.tickColor=e.color.parse(L.grid.color).scale("a",0.22).toString()}var ay,aD,aB,az={style:Q.css("font-style"),size:Math.round(0.8*(+Q.css("font-size").replace("px","")||13)),variant:Q.css("font-variant"),weight:Q.css("font-weight"),family:Q.css("font-family")};az.lineHeight=az.size*1.15;aB=L.xaxes.length||1;for(ay=0;ay<aB;++ay){aD=L.xaxes[ay];if(aD&&!aD.tickColor){aD.tickColor=aD.color}aD=e.extend(true,{},L.xaxis,aD);L.xaxes[ay]=aD;if(aD.font){aD.font=e.extend({},az,aD.font);if(!aD.font.color){aD.font.color=aD.color}}}aB=L.yaxes.length||1;for(ay=0;ay<aB;++ay){aD=L.yaxes[ay];if(aD&&!aD.tickColor){aD.tickColor=aD.color}aD=e.extend(true,{},L.yaxis,aD);L.yaxes[ay]=aD;if(aD.font){aD.font=e.extend({},az,aD.font);if(!aD.font.color){aD.font.color=aD.color}}}if(L.xaxis.noTicks&&L.xaxis.ticks==null){L.xaxis.ticks=L.xaxis.noTicks}if(L.yaxis.noTicks&&L.yaxis.ticks==null){L.yaxis.ticks=L.yaxis.noTicks}if(L.x2axis){L.xaxes[1]=e.extend(true,{},L.xaxis,L.x2axis);L.xaxes[1].position="top"}if(L.y2axis){L.yaxes[1]=e.extend(true,{},L.yaxis,L.y2axis);L.yaxes[1].position="right"}if(L.grid.coloredAreas){L.grid.markings=L.grid.coloredAreas}if(L.grid.coloredAreasColor){L.grid.markingsColor=L.grid.coloredAreasColor}if(L.lines){e.extend(true,L.series.lines,L.lines)}if(L.points){e.extend(true,L.series.points,L.points)}if(L.bars){e.extend(true,L.series.bars,L.bars)}if(L.shadowSize!=null){L.series.shadowSize=L.shadowSize}if(L.highlightColor!=null){L.series.highlightColor=L.highlightColor}for(ay=0;ay<L.xaxes.length;++ay){M(ao,ay+1).options=L.xaxes[ay]}for(ay=0;ay<L.yaxes.length;++ay){M(W,ay+1).options=L.yaxes[ay]}for(var aC in p){if(L.hooks[aC]&&L.hooks[aC].length){p[aC]=p[aC].concat(L.hooks[aC])}}F(p.processOptions,[L])}function K(ay){t=q(ay);y();S()}function q(aB){var az=[];for(var ay=0;ay<aB.length;++ay){var aA=e.extend(true,{},L.series);if(aB[ay].data!=null){aA.data=aB[ay].data;delete aB[ay].data;e.extend(true,aA,aB[ay]);aB[ay].data=aA.data}else{aA.data=aB[ay]}az.push(aA)}return az}function x(az,aA){var ay=az[aA+"axis"];if(typeof ay=="object"){ay=ay.n}if(typeof ay!="number"){ay=1}return ay}function j(){return e.grep(ao.concat(W),function(ay){return ay})}function Y(aB){var az={},ay,aA;for(ay=0;ay<ao.length;++ay){aA=ao[ay];if(aA&&aA.used){az["x"+aA.n]=aA.c2p(aB.left)}}for(ay=0;ay<W.length;++ay){aA=W[ay];if(aA&&aA.used){az["y"+aA.n]=aA.c2p(aB.top)}}if(az.x1!==undefined){az.x=az.x1}if(az.y1!==undefined){az.y=az.y1}return az}function R(aC){var aA={},az,aB,ay;for(az=0;az<ao.length;++az){aB=ao[az];if(aB&&aB.used){ay="x"+aB.n;if(aC[ay]==null&&aB.n==1){ay="x"}if(aC[ay]!=null){aA.left=aB.p2c(aC[ay]);break}}}for(az=0;az<W.length;++az){aB=W[az];if(aB&&aB.used){ay="y"+aB.n;if(aC[ay]==null&&aB.n==1){ay="y"}if(aC[ay]!=null){aA.top=aB.p2c(aC[ay]);break}}}return aA}function M(az,ay){if(!az[ay-1]){az[ay-1]={n:ay,direction:az==ao?"x":"y",options:e.extend(true,{},az==ao?L.xaxis:L.yaxis)}}return az[ay-1]}function y(){var aJ=t.length,aA=-1,aB;for(aB=0;aB<t.length;++aB){var aG=t[aB].color;if(aG!=null){aJ--;if(typeof aG=="number"&&aG>aA){aA=aG}}}if(aJ<=aA){aJ=aA+1}var aF,ay=[],aE=L.colors,aD=aE.length,az=0;for(aB=0;aB<aJ;aB++){aF=e.color.parse(aE[aB%aD]||"#666");if(aB%aD==0&&aB){if(az>=0){if(az<0.5){az=-az-0.2}else{az=0}}else{az=-az}}ay[aB]=aF.scale("rgb",1+az)}var aC=0,aK;for(aB=0;aB<t.length;++aB){aK=t[aB];if(aK.color==null){aK.color=ay[aC].toString();++aC}else{if(typeof aK.color=="number"){aK.color=ay[aK.color].toString()}}if(aK.lines.show==null){var aI,aH=true;for(aI in aK){if(aK[aI]&&aK[aI].show){aH=false;break}}if(aH){aK.lines.show=true}}if(aK.lines.zero==null){aK.lines.zero=!!aK.lines.fill}aK.xaxis=M(ao,x(aK,"x"));aK.yaxis=M(W,x(aK,"y"))}}function S(){var aM=Number.POSITIVE_INFINITY,aG=Number.NEGATIVE_INFINITY,ay=Number.MAX_VALUE,aT,aR,aQ,aL,aA,aH,aS,aN,aF,aE,az,aZ,aW,aJ,aY,aV;function aC(a2,a1,a0){if(a1<a2.datamin&&a1!=-ay){a2.datamin=a1}if(a0>a2.datamax&&a0!=ay){a2.datamax=a0}}e.each(j(),function(a0,a1){a1.datamin=aM;a1.datamax=aG;a1.used=false});for(aT=0;aT<t.length;++aT){aH=t[aT];aH.datapoints={points:[]};F(p.processRawData,[aH,aH.data,aH.datapoints])}for(aT=0;aT<t.length;++aT){aH=t[aT];aY=aH.data;aV=aH.datapoints.format;if(!aV){aV=[];aV.push({x:true,number:true,required:true});aV.push({y:true,number:true,required:true});if(aH.bars.show||(aH.lines.show&&aH.lines.fill)){var aO=!!((aH.bars.show&&aH.bars.zero)||(aH.lines.show&&aH.lines.zero));aV.push({y:true,number:true,required:false,defaultValue:0,autoscale:aO});if(aH.bars.horizontal){delete aV[aV.length-1].y;aV[aV.length-1].x=true}}aH.datapoints.format=aV}if(aH.datapoints.pointsize!=null){continue}aH.datapoints.pointsize=aV.length;aN=aH.datapoints.pointsize;aS=aH.datapoints.points;var aD=aH.lines.show&&aH.lines.steps;aH.xaxis.used=aH.yaxis.used=true;for(aR=aQ=0;aR<aY.length;++aR,aQ+=aN){aJ=aY[aR];var aB=aJ==null;if(!aB){for(aL=0;aL<aN;++aL){aZ=aJ[aL];aW=aV[aL];if(aW){if(aW.number&&aZ!=null){aZ=+aZ;if(isNaN(aZ)){aZ=null}else{if(aZ==Infinity){aZ=ay}else{if(aZ==-Infinity){aZ=-ay}}}}if(aZ==null){if(aW.required){aB=true}if(aW.defaultValue!=null){aZ=aW.defaultValue}}}aS[aQ+aL]=aZ}}if(aB){for(aL=0;aL<aN;++aL){aZ=aS[aQ+aL];if(aZ!=null){aW=aV[aL];if(aW.x){aC(aH.xaxis,aZ,aZ)}if(aW.y){aC(aH.yaxis,aZ,aZ)}}aS[aQ+aL]=null}}else{if(aD&&aQ>0&&aS[aQ-aN]!=null&&aS[aQ-aN]!=aS[aQ]&&aS[aQ-aN+1]!=aS[aQ+1]){for(aL=0;aL<aN;++aL){aS[aQ+aN+aL]=aS[aQ+aL]}aS[aQ+1]=aS[aQ-aN+1];aQ+=aN}}}}for(aT=0;aT<t.length;++aT){aH=t[aT];F(p.processDatapoints,[aH,aH.datapoints])}for(aT=0;aT<t.length;++aT){aH=t[aT];aS=aH.datapoints.points,aN=aH.datapoints.pointsize;aV=aH.datapoints.format;var aI=aM,aP=aM,aK=aG,aU=aG;for(aR=0;aR<aS.length;aR+=aN){if(aS[aR]==null){continue}for(aL=0;aL<aN;++aL){aZ=aS[aR+aL];aW=aV[aL];if(!aW||aW.autoscale===false||aZ==ay||aZ==-ay){continue}if(aW.x){if(aZ<aI){aI=aZ}if(aZ>aK){aK=aZ}}if(aW.y){if(aZ<aP){aP=aZ}if(aZ>aU){aU=aZ}}}}if(aH.bars.show){var aX;switch(aH.bars.align){case"left":aX=0;break;case"right":aX=-aH.bars.barWidth;break;case"center":aX=-aH.bars.barWidth/2;break;default:throw new Error("Invalid bar alignment: "+aH.bars.align)}if(aH.bars.horizontal){aP+=aX;aU+=aX+aH.bars.barWidth}else{aI+=aX;aK+=aX+aH.bars.barWidth}}aC(aH.xaxis,aI,aK);aC(aH.yaxis,aP,aU)}e.each(j(),function(a0,a1){if(a1.datamin==aM){a1.datamin=null}if(a1.datamax==aG){a1.datamax=null}})}function ax(){Q.css("padding",0).children(":not(.flot-base,.flot-overlay)").remove();if(Q.css("position")=="static"){Q.css("position","relative")}ac=new a("flot-base",Q);al=new a("flot-overlay",Q);D=ac.context;aw=al.context;am=e(al.element).unbind();var ay=Q.data("plot");if(ay){ay.shutdown();al.clear()}Q.data("plot",h)}function ar(){if(L.grid.hoverable){am.mousemove(f);am.bind("mouseleave",P)}if(L.grid.clickable){am.click(I)}F(p.bindEvents,[am])}function o(){if(l){clearTimeout(l)}am.unbind("mousemove",f);am.unbind("mouseleave",P);am.unbind("click",I);F(p.shutdown,[am])}function n(aD){function az(aE){return aE}var aC,ay,aA=aD.options.transform||az,aB=aD.options.inverseTransform;if(aD.direction=="x"){aC=aD.scale=k/Math.abs(aA(aD.max)-aA(aD.min));ay=Math.min(aA(aD.max),aA(aD.min))}else{aC=aD.scale=ad/Math.abs(aA(aD.max)-aA(aD.min));aC=-aC;ay=Math.max(aA(aD.max),aA(aD.min))}if(aA==az){aD.p2c=function(aE){return(aE-ay)*aC}}else{aD.p2c=function(aE){return(aA(aE)-ay)*aC}}if(!aB){aD.c2p=function(aE){return ay+aE/aC}}else{aD.c2p=function(aE){return aB(ay+aE/aC)}}}function Z(aB){var ay=aB.options,aG=aB.ticks||[],aH=ay.labelWidth||0,aF=ay.labelHeight||0,aD=aB.direction+"Axis "+aB.direction+aB.n+"Axis",aE="flot-"+aB.direction+"-axis flot-"+aB.direction+aB.n+"-axis "+aD,aA=ay.font||"flot-tick-label tickLabel";for(var aC=0;aC<aG.length;++aC){var aI=aG[aC];if(!aI.label){continue}var az=ac.getTextInfo(aE,aI.label,aA);if(ay.labelWidth==null){aH=Math.max(aH,az.width)}if(ay.labelHeight==null){aF=Math.max(aF,az.height)}}aB.labelWidth=Math.ceil(aH);aB.labelHeight=Math.ceil(aF)}function E(aA){var az=aA.labelWidth,aI=aA.labelHeight,aE=aA.options.position,aC=aA.options.tickLength,aD=L.grid.axisMargin,aG=L.grid.labelMargin,aH=aA.direction=="x"?ao:W,aB,aJ;var ay=e.grep(aH,function(aK){return aK&&aK.options.position==aE&&aK.reserveSpace});if(e.inArray(aA,ay)==ay.length-1){aD=0}if(aC==null){var aF=e.grep(aH,function(aK){return aK&&aK.reserveSpace});aJ=e.inArray(aA,aF)==0;if(aJ){aC="full"}else{aC=5}}if(!isNaN(+aC)){aG+=+aC}if(aA.direction=="x"){aI+=aG;if(aE=="bottom"){J.bottom+=aI+aD;aA.box={top:ac.height-J.bottom,height:aI}}else{aA.box={top:J.top+aD,height:aI};J.top+=aI+aD}}else{az+=aG;if(aE=="left"){aA.box={left:J.left+aD,width:az};J.left+=az+aD}else{J.right+=az+aD;aA.box={left:ac.width-J.right,width:az}}}aA.position=aE;aA.tickLength=aC;aA.box.padding=aG;aA.innermost=aJ}function ab(ay){if(ay.direction=="x"){ay.box.left=J.left-ay.labelWidth/2;ay.box.width=ac.width-J.left-J.right+ay.labelWidth}else{ay.box.top=J.top-ay.labelHeight/2;ay.box.height=ac.height-J.bottom-J.top+ay.labelHeight}}function B(){var aA=L.grid.minBorderMargin,aB={x:0,y:0},ay,az;if(aA==null){aA=0;for(ay=0;ay<t.length;++ay){aA=Math.max(aA,2*(t[ay].points.radius+t[ay].points.lineWidth/2))}}aB.x=aB.y=Math.ceil(aA);e.each(j(),function(aD,aE){var aC=aE.direction;if(aE.reserveSpace){aB[aC]=Math.ceil(Math.max(aB[aC],(aC=="x"?aE.labelWidth:aE.labelHeight)/2))}});J.left=Math.max(aB.x,J.left);J.right=Math.max(aB.x,J.right);J.top=Math.max(aB.y,J.top);J.bottom=Math.max(aB.y,J.bottom)}function O(){var aA,aC=j(),aD=L.grid.show;for(var az in J){var aB=L.grid.margin||0;J[az]=typeof aB=="number"?aB:aB[az]||0}F(p.processOffset,[J]);for(var az in J){if(typeof(L.grid.borderWidth)=="object"){J[az]+=aD?L.grid.borderWidth[az]:0}else{J[az]+=aD?L.grid.borderWidth:0}}e.each(aC,function(aE,aF){aF.show=aF.options.show;if(aF.show==null){aF.show=aF.used}aF.reserveSpace=aF.show||aF.options.reserveSpace;m(aF)});if(aD){var ay=e.grep(aC,function(aE){return aE.reserveSpace});e.each(ay,function(aE,aF){aq(aF);V(aF);u(aF,aF.ticks);Z(aF)});for(aA=ay.length-1;aA>=0;--aA){E(ay[aA])}B();e.each(ay,function(aE,aF){ab(aF)})}k=ac.width-J.left-J.right;ad=ac.height-J.bottom-J.top;e.each(aC,function(aE,aF){n(aF)});if(aD){at()}av()}function m(aB){var aC=aB.options,aA=+(aC.min!=null?aC.min:aB.datamin),ay=+(aC.max!=null?aC.max:aB.datamax),aE=ay-aA;if(aE==0){var az=ay==0?1:0.01;if(aC.min==null){aA-=az}if(aC.max==null||aC.min!=null){ay+=az}}else{var aD=aC.autoscaleMargin;if(aD!=null){if(aC.min==null){aA-=aE*aD;if(aA<0&&aB.datamin!=null&&aB.datamin>=0){aA=0}}if(aC.max==null){ay+=aE*aD;if(ay>0&&aB.datamax!=null&&aB.datamax<=0){ay=0}}}}aB.min=aA;aB.max=ay}function aq(aC){var aE=aC.options;var aB;if(typeof aE.ticks=="number"&&aE.ticks>0){aB=aE.ticks}else{aB=0.3*Math.sqrt(aC.direction=="x"?ac.width:ac.height)}aC.delta=(aC.max-aC.min)/aB;if(aE.mode=="time"&&!aC.tickGenerator){throw new Error("Time mode requires the flot.time plugin.")}if(!aC.tickGenerator){aC.tickGenerator=function(aJ){var aH=aE.tickDecimals,aL=-Math.floor(Math.log(aJ.delta)/Math.LN10);if(aH!=null&&aL>aH){aL=aH}var aF=Math.pow(10,-aL),aG=aJ.delta/aF,aP,aN=[],aI,aM=0,aO=Number.NaN,aK;if(aG<1.5){aP=1}else{if(aG<3){aP=2;if(aG>2.25&&(aH==null||aL+1<=aH)){aP=2.5;++aL}}else{if(aG<7.5){aP=5}else{aP=10}}}aP*=aF;if(aE.minTickSize!=null&&aP<aE.minTickSize){aP=aE.minTickSize}aJ.tickDecimals=Math.max(0,aH!=null?aH:aL);aJ.tickSize=aE.tickSize||aP;aI=b(aJ.min,aJ.tickSize);do{aK=aO;aO=aI+aM*aJ.tickSize;aN.push(aO);++aM}while(aO<aJ.max&&aO!=aK);return aN};aC.tickFormatter=function(aK,aI){var aH=aI.tickDecimals?Math.pow(10,aI.tickDecimals):1;var aJ=""+Math.round(aK*aH)/aH;if(aI.tickDecimals!=null){var aG=aJ.indexOf(".");var aF=aG==-1?0:aJ.length-aG-1;if(aF<aI.tickDecimals){return(aF?aJ:aJ+".")+(""+aH).substr(1,aI.tickDecimals-aF)}}return aJ}}if(e.isFunction(aE.tickFormatter)){aC.tickFormatter=function(aF,aG){return""+aE.tickFormatter(aF,aG)}}if(aE.alignTicksWithAxis!=null){var az=(aC.direction=="x"?ao:W)[aE.alignTicksWithAxis-1];if(az&&az.used&&az!=aC){var ay=aC.tickGenerator(aC);if(ay.length>0){if(aE.min==null){aC.min=Math.min(aC.min,ay[0])}if(aE.max==null&&ay.length>1){aC.max=Math.max(aC.max,ay[ay.length-1])}}aC.tickGenerator=function(aH){var aI=[],aF,aG;for(aG=0;aG<az.ticks.length;++aG){aF=(az.ticks[aG].v-az.min)/(az.max-az.min);aF=aH.min+aF*(aH.max-aH.min);aI.push(aF)}return aI};if(!aC.mode&&aE.tickDecimals==null){var aA=Math.max(0,-Math.floor(Math.log(aC.delta)/Math.LN10)+1),aD=aC.tickGenerator(aC);if(!(aD.length>1&&/\..*0$/.test((aD[1]-aD[0]).toFixed(aA)))){aC.tickDecimals=aA}}}}}function V(aC){var aE=aC.options.ticks,aD=[];if(aE==null||(typeof aE=="number"&&aE>0)){aD=aC.tickGenerator(aC)}else{if(aE){if(e.isFunction(aE)){aD=aE(aC)}else{aD=aE}}}var aB,ay;aC.ticks=[];for(aB=0;aB<aD.length;++aB){var az=null;var aA=aD[aB];if(typeof aA=="object"){ay=+aA[0];if(aA.length>1){az=aA[1]}}else{ay=+aA}if(az==null){az=aC.tickFormatter(ay,aC)}if(!isNaN(ay)){aC.ticks.push({v:ay,label:az})}}}function u(ay,az){if(ay.options.autoscaleMargin&&az.length>0){if(ay.options.min==null){ay.min=Math.min(ay.min,az[0].v)}if(ay.options.max==null&&az.length>1){ay.max=Math.max(ay.max,az[az.length-1].v)}}}function au(){ac.clear();F(p.drawBackground,[D]);var az=L.grid;if(az.show&&az.backgroundColor){r()}if(az.show&&!az.aboveData){w()}for(var ay=0;ay<t.length;++ay){F(p.drawSeries,[D,t[ay]]);aj(t[ay])}F(p.draw,[D]);if(az.show&&az.aboveData){w()}ac.render()}function s(ay,aC){var az,aE,aF,aG,aD=j();for(var aB=0;aB<aD.length;++aB){az=aD[aB];if(az.direction==aC){aG=aC+az.n+"axis";if(!ay[aG]&&az.n==1){aG=aC+"axis"}if(ay[aG]){aE=ay[aG].from;aF=ay[aG].to;break}}}if(!ay[aG]){az=aC=="x"?ao[0]:W[0];aE=ay[aC+"1"];aF=ay[aC+"2"]}if(aE!=null&&aF!=null&&aE>aF){var aA=aE;aE=aF;aF=aA}return{from:aE,to:aF,axis:az}}function r(){D.save();D.translate(J.left,J.top);D.fillStyle=v(L.grid.backgroundColor,ad,0,"rgba(255, 255, 255, 0)");D.fillRect(0,0,k,ad);D.restore()}function w(){var aC,aI,aK,aG;D.save();D.translate(J.left,J.top);var aE=L.grid.markings;if(aE){if(e.isFunction(aE)){aI=h.getAxes();aI.xmin=aI.xaxis.min;aI.xmax=aI.xaxis.max;aI.ymin=aI.yaxis.min;aI.ymax=aI.yaxis.max;aE=aE(aI)}for(aC=0;aC<aE.length;++aC){var aA=aE[aC],az=s(aA,"x"),aF=s(aA,"y");if(az.from==null){az.from=az.axis.min}if(az.to==null){az.to=az.axis.max}if(aF.from==null){aF.from=aF.axis.min}if(aF.to==null){aF.to=aF.axis.max}if(az.to<az.axis.min||az.from>az.axis.max||aF.to<aF.axis.min||aF.from>aF.axis.max){continue}az.from=Math.max(az.from,az.axis.min);az.to=Math.min(az.to,az.axis.max);aF.from=Math.max(aF.from,aF.axis.min);aF.to=Math.min(aF.to,aF.axis.max);if(az.from==az.to&&aF.from==aF.to){continue}az.from=az.axis.p2c(az.from);az.to=az.axis.p2c(az.to);aF.from=aF.axis.p2c(aF.from);aF.to=aF.axis.p2c(aF.to);if(az.from==az.to||aF.from==aF.to){D.beginPath();D.strokeStyle=aA.color||L.grid.markingsColor;D.lineWidth=aA.lineWidth||L.grid.markingsLineWidth;D.moveTo(az.from,aF.from);D.lineTo(az.to,aF.to);D.stroke()}else{D.fillStyle=aA.color||L.grid.markingsColor;D.fillRect(az.from,aF.to,az.to-az.from,aF.from-aF.to)}}}aI=j();aK=L.grid.borderWidth;for(var aB=0;aB<aI.length;++aB){var ay=aI[aB],aD=ay.box,aO=ay.tickLength,aL,aJ,aN,aH;if(!ay.show||ay.ticks.length==0){continue}D.lineWidth=1;if(ay.direction=="x"){aL=0;if(aO=="full"){aJ=(ay.position=="top"?0:ad)}else{aJ=aD.top-J.top+(ay.position=="top"?aD.height:0)}}else{aJ=0;if(aO=="full"){aL=(ay.position=="left"?0:k)}else{aL=aD.left-J.left+(ay.position=="left"?aD.width:0)}}if(!ay.innermost){D.strokeStyle=ay.options.color;D.beginPath();aN=aH=0;if(ay.direction=="x"){aN=k+1}else{aH=ad+1}if(D.lineWidth==1){if(ay.direction=="x"){aJ=Math.floor(aJ)+0.5}else{aL=Math.floor(aL)+0.5}}D.moveTo(aL,aJ);D.lineTo(aL+aN,aJ+aH);D.stroke()}D.strokeStyle=ay.options.tickColor;D.beginPath();for(aC=0;aC<ay.ticks.length;++aC){var aM=ay.ticks[aC].v;aN=aH=0;if(isNaN(aM)||aM<ay.min||aM>ay.max||(aO=="full"&&((typeof aK=="object"&&aK[ay.position]>0)||aK>0)&&(aM==ay.min||aM==ay.max))){continue}if(ay.direction=="x"){aL=ay.p2c(aM);aH=aO=="full"?-ad:aO;if(ay.position=="top"){aH=-aH}}else{aJ=ay.p2c(aM);aN=aO=="full"?-k:aO;if(ay.position=="left"){aN=-aN}}if(D.lineWidth==1){if(ay.direction=="x"){aL=Math.floor(aL)+0.5}else{aJ=Math.floor(aJ)+0.5}}D.moveTo(aL,aJ);D.lineTo(aL+aN,aJ+aH)}D.stroke()}if(aK){aG=L.grid.borderColor;if(typeof aK=="object"||typeof aG=="object"){if(typeof aK!=="object"){aK={top:aK,right:aK,bottom:aK,left:aK}}if(typeof aG!=="object"){aG={top:aG,right:aG,bottom:aG,left:aG}}if(aK.top>0){D.strokeStyle=aG.top;D.lineWidth=aK.top;D.beginPath();D.moveTo(0-aK.left,0-aK.top/2);D.lineTo(k,0-aK.top/2);D.stroke()}if(aK.right>0){D.strokeStyle=aG.right;D.lineWidth=aK.right;D.beginPath();D.moveTo(k+aK.right/2,0-aK.top);D.lineTo(k+aK.right/2,ad);D.stroke()}if(aK.bottom>0){D.strokeStyle=aG.bottom;D.lineWidth=aK.bottom;D.beginPath();D.moveTo(k+aK.right,ad+aK.bottom/2);D.lineTo(0,ad+aK.bottom/2);D.stroke()}if(aK.left>0){D.strokeStyle=aG.left;D.lineWidth=aK.left;D.beginPath();D.moveTo(0-aK.left/2,ad+aK.bottom);D.lineTo(0-aK.left/2,0);D.stroke()}}else{D.lineWidth=aK;D.strokeStyle=L.grid.borderColor;D.strokeRect(-aK/2,-aK/2,k+aK,ad+aK)}}D.restore()}function at(){e.each(j(),function(aJ,az){if(!az.show||az.ticks.length==0){return}var aC=az.box,aB=az.direction+"Axis "+az.direction+az.n+"Axis",aF="flot-"+az.direction+"-axis flot-"+az.direction+az.n+"-axis "+aB,ay=az.options.font||"flot-tick-label tickLabel",aD,aI,aG,aE,aH;ac.removeText(aF);for(var aA=0;aA<az.ticks.length;++aA){aD=az.ticks[aA];if(!aD.label||aD.v<az.min||aD.v>az.max){continue}if(az.direction=="x"){aE="center";aI=J.left+az.p2c(aD.v);if(az.position=="bottom"){aG=aC.top+aC.padding}else{aG=aC.top+aC.height-aC.padding;aH="bottom"}}else{aH="middle";aG=J.top+az.p2c(aD.v);if(az.position=="left"){aI=aC.left+aC.width-aC.padding;aE="right"}else{aI=aC.left+aC.padding}}ac.addText(aF,aI,aG,aD.label,ay,null,aE,aH)}})}function aj(ay){if(ay.lines.show){G(ay)}if(ay.bars.show){T(ay)}if(ay.points.show){U(ay)}}function G(aB){function aA(aM,aN,aF,aR,aQ){var aS=aM.points,aG=aM.pointsize,aK=null,aJ=null;D.beginPath();for(var aL=aG;aL<aS.length;aL+=aG){var aI=aS[aL-aG],aP=aS[aL-aG+1],aH=aS[aL],aO=aS[aL+1];if(aI==null||aH==null){continue}if(aP<=aO&&aP<aQ.min){if(aO<aQ.min){continue}aI=(aQ.min-aP)/(aO-aP)*(aH-aI)+aI;aP=aQ.min}else{if(aO<=aP&&aO<aQ.min){if(aP<aQ.min){continue}aH=(aQ.min-aP)/(aO-aP)*(aH-aI)+aI;aO=aQ.min}}if(aP>=aO&&aP>aQ.max){if(aO>aQ.max){continue}aI=(aQ.max-aP)/(aO-aP)*(aH-aI)+aI;aP=aQ.max}else{if(aO>=aP&&aO>aQ.max){if(aP>aQ.max){continue}aH=(aQ.max-aP)/(aO-aP)*(aH-aI)+aI;aO=aQ.max}}if(aI<=aH&&aI<aR.min){if(aH<aR.min){continue}aP=(aR.min-aI)/(aH-aI)*(aO-aP)+aP;aI=aR.min}else{if(aH<=aI&&aH<aR.min){if(aI<aR.min){continue}aO=(aR.min-aI)/(aH-aI)*(aO-aP)+aP;aH=aR.min}}if(aI>=aH&&aI>aR.max){if(aH>aR.max){continue}aP=(aR.max-aI)/(aH-aI)*(aO-aP)+aP;aI=aR.max}else{if(aH>=aI&&aH>aR.max){if(aI>aR.max){continue}aO=(aR.max-aI)/(aH-aI)*(aO-aP)+aP;aH=aR.max}}if(aI!=aK||aP!=aJ){D.moveTo(aR.p2c(aI)+aN,aQ.p2c(aP)+aF)}aK=aH;aJ=aO;D.lineTo(aR.p2c(aH)+aN,aQ.p2c(aO)+aF)}D.stroke()}function aC(aF,aN,aM){var aT=aF.points,aS=aF.pointsize,aK=Math.min(Math.max(0,aM.min),aM.max),aU=0,aR,aQ=false,aJ=1,aI=0,aO=0;while(true){if(aS>0&&aU>aT.length+aS){break}aU+=aS;var aW=aT[aU-aS],aH=aT[aU-aS+aJ],aV=aT[aU],aG=aT[aU+aJ];if(aQ){if(aS>0&&aW!=null&&aV==null){aO=aU;aS=-aS;aJ=2;continue}if(aS<0&&aU==aI+aS){D.fill();aQ=false;aS=-aS;aJ=1;aU=aI=aO+aS;continue}}if(aW==null||aV==null){continue}if(aW<=aV&&aW<aN.min){if(aV<aN.min){continue}aH=(aN.min-aW)/(aV-aW)*(aG-aH)+aH;aW=aN.min}else{if(aV<=aW&&aV<aN.min){if(aW<aN.min){continue}aG=(aN.min-aW)/(aV-aW)*(aG-aH)+aH;aV=aN.min}}if(aW>=aV&&aW>aN.max){if(aV>aN.max){continue}aH=(aN.max-aW)/(aV-aW)*(aG-aH)+aH;aW=aN.max}else{if(aV>=aW&&aV>aN.max){if(aW>aN.max){continue}aG=(aN.max-aW)/(aV-aW)*(aG-aH)+aH;aV=aN.max}}if(!aQ){D.beginPath();D.moveTo(aN.p2c(aW),aM.p2c(aK));aQ=true}if(aH>=aM.max&&aG>=aM.max){D.lineTo(aN.p2c(aW),aM.p2c(aM.max));D.lineTo(aN.p2c(aV),aM.p2c(aM.max));continue}else{if(aH<=aM.min&&aG<=aM.min){D.lineTo(aN.p2c(aW),aM.p2c(aM.min));D.lineTo(aN.p2c(aV),aM.p2c(aM.min));continue}}var aL=aW,aP=aV;if(aH<=aG&&aH<aM.min&&aG>=aM.min){aW=(aM.min-aH)/(aG-aH)*(aV-aW)+aW;aH=aM.min}else{if(aG<=aH&&aG<aM.min&&aH>=aM.min){aV=(aM.min-aH)/(aG-aH)*(aV-aW)+aW;aG=aM.min}}if(aH>=aG&&aH>aM.max&&aG<=aM.max){aW=(aM.max-aH)/(aG-aH)*(aV-aW)+aW;aH=aM.max}else{if(aG>=aH&&aG>aM.max&&aH<=aM.max){aV=(aM.max-aH)/(aG-aH)*(aV-aW)+aW;aG=aM.max}}if(aW!=aL){D.lineTo(aN.p2c(aL),aM.p2c(aH))}D.lineTo(aN.p2c(aW),aM.p2c(aH));D.lineTo(aN.p2c(aV),aM.p2c(aG));if(aV!=aP){D.lineTo(aN.p2c(aV),aM.p2c(aG));D.lineTo(aN.p2c(aP),aM.p2c(aG))}}}D.save();D.translate(J.left,J.top);D.lineJoin="round";var aD=aB.lines.lineWidth,ay=aB.shadowSize;if(aD>0&&ay>0){D.lineWidth=ay;D.strokeStyle="rgba(0,0,0,0.1)";var aE=Math.PI/18;aA(aB.datapoints,Math.sin(aE)*(aD/2+ay/2),Math.cos(aE)*(aD/2+ay/2),aB.xaxis,aB.yaxis);D.lineWidth=ay/2;aA(aB.datapoints,Math.sin(aE)*(aD/2+ay/4),Math.cos(aE)*(aD/2+ay/4),aB.xaxis,aB.yaxis)}D.lineWidth=aD;D.strokeStyle=aB.color;var az=z(aB.lines,aB.color,0,ad);if(az){D.fillStyle=az;aC(aB.datapoints,aB.xaxis,aB.yaxis)}if(aD>0){aA(aB.datapoints,0,0,aB.xaxis,aB.yaxis)}D.restore()}function U(aB){function aE(aK,aJ,aR,aH,aP,aQ,aN,aG){var aO=aK.points,aF=aK.pointsize;for(var aI=0;aI<aO.length;aI+=aF){var aM=aO[aI],aL=aO[aI+1];if(aM==null||aM<aQ.min||aM>aQ.max||aL<aN.min||aL>aN.max){continue}D.beginPath();aM=aQ.p2c(aM);aL=aN.p2c(aL)+aH;if(aG=="circle"){D.arc(aM,aL,aJ,0,aP?Math.PI:Math.PI*2,false)}else{aG(D,aM,aL,aJ,aP)}D.closePath();if(aR){D.fillStyle=aR;D.fill()}D.stroke()}}D.save();D.translate(J.left,J.top);var aD=aB.points.lineWidth,az=aB.shadowSize,ay=aB.points.radius,aC=aB.points.symbol;if(aD==0){aD=0.0001}if(aD>0&&az>0){var aA=az/2;D.lineWidth=aA;D.strokeStyle="rgba(0,0,0,0.1)";aE(aB.datapoints,ay,null,aA+aA/2,true,aB.xaxis,aB.yaxis,aC);D.strokeStyle="rgba(0,0,0,0.2)";aE(aB.datapoints,ay,null,aA/2,true,aB.xaxis,aB.yaxis,aC)}D.lineWidth=aD;D.strokeStyle=aB.color;aE(aB.datapoints,ay,z(aB.points,aB.color),0,false,aB.xaxis,aB.yaxis,aC);D.restore()}function ak(aK,aJ,aS,aF,aN,aC,aA,aI,aH,aR,aO,az){var aB,aQ,aG,aM,aD,ay,aL,aE,aP;if(aO){aE=ay=aL=true;aD=false;aB=aS;aQ=aK;aM=aJ+aF;aG=aJ+aN;if(aQ<aB){aP=aQ;aQ=aB;aB=aP;aD=true;ay=false}}else{aD=ay=aL=true;aE=false;aB=aK+aF;aQ=aK+aN;aG=aS;aM=aJ;if(aM<aG){aP=aM;aM=aG;aG=aP;aE=true;aL=false}}if(aQ<aI.min||aB>aI.max||aM<aH.min||aG>aH.max){return}if(aB<aI.min){aB=aI.min;aD=false}if(aQ>aI.max){aQ=aI.max;ay=false}if(aG<aH.min){aG=aH.min;aE=false}if(aM>aH.max){aM=aH.max;aL=false}aB=aI.p2c(aB);aG=aH.p2c(aG);aQ=aI.p2c(aQ);aM=aH.p2c(aM);if(aA){aR.beginPath();aR.moveTo(aB,aG);aR.lineTo(aB,aM);aR.lineTo(aQ,aM);aR.lineTo(aQ,aG);aR.fillStyle=aA(aG,aM);aR.fill()}if(az>0&&(aD||ay||aL||aE)){aR.beginPath();aR.moveTo(aB,aG+aC);if(aD){aR.lineTo(aB,aM+aC)}else{aR.moveTo(aB,aM+aC)}if(aL){aR.lineTo(aQ,aM+aC)}else{aR.moveTo(aQ,aM+aC)}if(ay){aR.lineTo(aQ,aG+aC)}else{aR.moveTo(aQ,aG+aC)}if(aE){aR.lineTo(aB,aG+aC)}else{aR.moveTo(aB,aG+aC)}aR.stroke()}}function T(aA){function az(aG,aF,aI,aD,aH,aK,aJ){var aL=aG.points,aC=aG.pointsize;for(var aE=0;aE<aL.length;aE+=aC){if(aL[aE]==null){continue}ak(aL[aE],aL[aE+1],aL[aE+2],aF,aI,aD,aH,aK,aJ,D,aA.bars.horizontal,aA.bars.lineWidth)}}D.save();D.translate(J.left,J.top);D.lineWidth=aA.bars.lineWidth;D.strokeStyle=aA.color;var ay;switch(aA.bars.align){case"left":ay=0;break;case"right":ay=-aA.bars.barWidth;break;case"center":ay=-aA.bars.barWidth/2;break;default:throw new Error("Invalid bar alignment: "+aA.bars.align)}var aB=aA.bars.fill?function(aC,aD){return z(aA.bars,aA.color,aC,aD)}:null;az(aA.datapoints,ay,ay+aA.bars.barWidth,0,aB,aA.xaxis,aA.yaxis);D.restore()}function z(aA,ay,az,aC){var aB=aA.fill;if(!aB){return null}if(aA.fillColor){return v(aA.fillColor,az,aC,ay)}var aD=e.color.parse(ay);aD.a=typeof aB=="number"?aB:0.4;aD.normalize();return aD.toString()}function av(){Q.find(".legend").remove();if(!L.legend.show){return}var aG=[],aD=[],aE=false,aN=L.legend.labelFormatter,aM,aI;for(var aC=0;aC<t.length;++aC){aM=t[aC];if(aM.label){aI=aN?aN(aM.label,aM):aM.label;if(aI){aD.push({label:aI,color:aM.color})}}}if(L.legend.sorted){if(e.isFunction(L.legend.sorted)){aD.sort(L.legend.sorted)}else{if(L.legend.sorted=="reverse"){aD.reverse()}else{var aB=L.legend.sorted!="descending";aD.sort(function(aP,aO){return aP.label==aO.label?0:((aP.label<aO.label)!=aB?1:-1)})}}}for(var aC=0;aC<aD.length;++aC){var aK=aD[aC];if(aC%L.legend.noColumns==0){if(aE){aG.push("</tr>")}aG.push("<tr>");aE=true}aG.push('<td class="legendColorBox"><div style="border:1px solid '+L.legend.labelBoxBorderColor+';padding:1px"><div style="width:4px;height:0;border:5px solid '+aK.color+';overflow:hidden"></div></div></td><td class="legendLabel">'+aK.label+"</td>")}if(aE){aG.push("</tr>")}if(aG.length==0){return}var aL='<table style="font-size:smaller;color:'+L.grid.color+'">'+aG.join("")+"</table>";if(L.legend.container!=null){e(L.legend.container).html(aL)}else{var aH="",az=L.legend.position,aA=L.legend.margin;if(aA[0]==null){aA=[aA,aA]}if(az.charAt(0)=="n"){aH+="top:"+(aA[1]+J.top)+"px;"}else{if(az.charAt(0)=="s"){aH+="bottom:"+(aA[1]+J.bottom)+"px;"}}if(az.charAt(1)=="e"){aH+="right:"+(aA[0]+J.right)+"px;"}else{if(az.charAt(1)=="w"){aH+="left:"+(aA[0]+J.left)+"px;"}}var aJ=e('<div class="legend">'+aL.replace('style="','style="position:absolute;'+aH+";")+"</div>").appendTo(Q);if(L.legend.backgroundOpacity!=0){var aF=L.legend.backgroundColor;if(aF==null){aF=L.grid.backgroundColor;if(aF&&typeof aF=="string"){aF=e.color.parse(aF)}else{aF=e.color.extract(aJ,"background-color")}aF.a=1;aF=aF.toString()}var ay=aJ.children();e('<div style="position:absolute;width:'+ay.width()+"px;height:"+ay.height()+"px;"+aH+"background-color:"+aF+';"> </div>').prependTo(aJ).css("opacity",L.legend.backgroundOpacity)}}}var ag=[],l=null;function ap(aF,aD,aA){var aL=L.grid.mouseActiveRadius,aX=aL*aL+1,aV=null,aO=false,aT,aR,aQ;for(aT=t.length-1;aT>=0;--aT){if(!aA(t[aT])){continue}var aM=t[aT],aE=aM.xaxis,aC=aM.yaxis,aS=aM.datapoints.points,aN=aE.c2p(aF),aK=aC.c2p(aD),az=aL/aE.scale,ay=aL/aC.scale;aQ=aM.datapoints.pointsize;if(aE.options.inverseTransform){az=Number.MAX_VALUE}if(aC.options.inverseTransform){ay=Number.MAX_VALUE}if(aM.lines.show||aM.points.show){for(aR=0;aR<aS.length;aR+=aQ){var aH=aS[aR],aG=aS[aR+1];if(aH==null){continue}if(aH-aN>az||aH-aN<-az||aG-aK>ay||aG-aK<-ay){continue}var aJ=Math.abs(aE.p2c(aH)-aF),aI=Math.abs(aC.p2c(aG)-aD),aP=aJ*aJ+aI*aI;if(aP<aX){aX=aP;aV=[aT,aR/aQ]}}}if(aM.bars.show&&!aV){var aB=aM.bars.align=="left"?0:-aM.bars.barWidth/2,aU=aB+aM.bars.barWidth;for(aR=0;aR<aS.length;aR+=aQ){var aH=aS[aR],aG=aS[aR+1],aW=aS[aR+2];if(aH==null){continue}if(t[aT].bars.horizontal?(aN<=Math.max(aW,aH)&&aN>=Math.min(aW,aH)&&aK>=aG+aB&&aK<=aG+aU):(aN>=aH+aB&&aN<=aH+aU&&aK>=Math.min(aW,aG)&&aK<=Math.max(aW,aG))){aV=[aT,aR/aQ]}}}}if(aV){aT=aV[0];aR=aV[1];aQ=t[aT].datapoints.pointsize;return{datapoint:t[aT].datapoints.points.slice(aR*aQ,(aR+1)*aQ),dataIndex:aR,series:t[aT],seriesIndex:aT}}return null}function f(ay){if(L.grid.hoverable){i("plothover",ay,function(az){return az.hoverable!=false})}}function P(ay){if(L.grid.hoverable){i("plothover",ay,function(az){return false})}}function I(ay){i("plotclick",ay,function(az){return az.clickable!=false})}function i(az,ay,aA){var aB=am.offset(),aE=ay.pageX-aB.left-J.left,aC=ay.pageY-aB.top-J.top,aG=Y({left:aE,top:aC});aG.pageX=ay.pageX;aG.pageY=ay.pageY;var aH=ap(aE,aC,aA);if(aH){aH.pageX=parseInt(aH.series.xaxis.p2c(aH.datapoint[0])+aB.left+J.left,10);aH.pageY=parseInt(aH.series.yaxis.p2c(aH.datapoint[1])+aB.top+J.top,10)}if(L.grid.autoHighlight){for(var aD=0;aD<ag.length;++aD){var aF=ag[aD];if(aF.auto==az&&!(aH&&aF.series==aH.series&&aF.point[0]==aH.datapoint[0]&&aF.point[1]==aH.datapoint[1])){ah(aF.series,aF.point)}}if(aH){an(aH.series,aH.datapoint,az)}}Q.trigger(az,[aG,aH])}function X(){var ay=L.interaction.redrawOverlayInterval;if(ay==-1){af();return}if(!l){l=setTimeout(af,ay)}}function af(){l=null;aw.save();al.clear();aw.translate(J.left,J.top);var az,ay;for(az=0;az<ag.length;++az){ay=ag[az];if(ay.series.bars.show){ai(ay.series,ay.point)}else{ae(ay.series,ay.point)}}aw.restore();F(p.drawOverlay,[aw])}function an(aA,ay,aC){if(typeof aA=="number"){aA=t[aA]}if(typeof ay=="number"){var aB=aA.datapoints.pointsize;ay=aA.datapoints.points.slice(aB*ay,aB*(ay+1))}var az=N(aA,ay);if(az==-1){ag.push({series:aA,point:ay,auto:aC});X()}else{if(!aC){ag[az].auto=false}}}function ah(aA,ay){if(aA==null&&ay==null){ag=[];X();return}if(typeof aA=="number"){aA=t[aA]}if(typeof ay=="number"){var aB=aA.datapoints.pointsize;ay=aA.datapoints.points.slice(aB*ay,aB*(ay+1))}var az=N(aA,ay);if(az!=-1){ag.splice(az,1);X()}}function N(aA,aB){for(var ay=0;ay<ag.length;++ay){var az=ag[ay];if(az.series==aA&&az.point[0]==aB[0]&&az.point[1]==aB[1]){return ay}}return -1}function ae(ay,aE){var aC=aE[0],aA=aE[1],aF=ay.xaxis,aD=ay.yaxis,aG=(typeof ay.highlightColor==="string")?ay.highlightColor:e.color.parse(ay.color).scale("a",0.5).toString();if(aC<aF.min||aC>aF.max||aA<aD.min||aA>aD.max){return}var aB=ay.points.radius+ay.points.lineWidth/2;aw.lineWidth=aB;aw.strokeStyle=aG;var az=1.5*aB;aC=aF.p2c(aC);aA=aD.p2c(aA);aw.beginPath();if(ay.points.symbol=="circle"){aw.arc(aC,aA,az,0,2*Math.PI,false)}else{ay.points.symbol(aw,aC,aA,az,false)}aw.closePath();aw.stroke()}function ai(aB,ay){var aC=(typeof aB.highlightColor==="string")?aB.highlightColor:e.color.parse(aB.color).scale("a",0.5).toString(),aA=aC,az=aB.bars.align=="left"?0:-aB.bars.barWidth/2;aw.lineWidth=aB.bars.lineWidth;aw.strokeStyle=aC;ak(ay[0],ay[1],ay[2]||0,az,az+aB.bars.barWidth,0,function(){return aA},aB.xaxis,aB.yaxis,aw,aB.bars.horizontal,aB.bars.lineWidth)}function v(aG,ay,aE,az){if(typeof aG=="string"){return aG}else{var aF=D.createLinearGradient(0,aE,0,ay);for(var aB=0,aA=aG.colors.length;aB<aA;++aB){var aC=aG.colors[aB];if(typeof aC!="string"){var aD=e.color.parse(az);if(aC.brightness!=null){aD=aD.scale("rgb",aC.brightness)}if(aC.opacity!=null){aD.a*=aC.opacity}aC=aD.toString()}aF.addColorStop(aB/(aA-1),aC)}return aF}}}e.plot=function(i,g,f){var h=new c(e(i),g,f,e.plot.plugins);return h};e.plot.version="0.8.0-beta";e.plot.plugins=[];e.fn.plot=function(g,f){return this.each(function(){e.plot(this,g,f)})};function b(g,f){return f*Math.floor(g/f)}})(jQuery);(function(c){var e=10;var a=0.95;function d(v){var h=null,A=null,m=null,s=null,n=null,f=false,u=null;var i=[];v.hooks.processOptions.push(function(C,B){if(B.series.pie.show){B.grid.show=false;if(B.series.pie.label.show=="auto"){if(B.legend.show){B.series.pie.label.show=false}else{B.series.pie.label.show=true}}if(B.series.pie.radius=="auto"){if(B.series.pie.label.show){B.series.pie.radius=3/4}else{B.series.pie.radius=1}}if(B.series.pie.tilt>1){B.series.pie.tilt=1}else{if(B.series.pie.tilt<0){B.series.pie.tilt=0}}}});v.hooks.bindEvents.push(function(D,B){var C=D.getOptions();if(C.series.pie.show){if(C.grid.hoverable){B.unbind("mousemove").mousemove(r)}if(C.grid.clickable){B.unbind("click").click(k)}}});v.hooks.processDatapoints.push(function(F,C,D,E){var B=F.getOptions();if(B.series.pie.show){w(F,C,D,E)}});v.hooks.drawOverlay.push(function(C,D){var B=C.getOptions();if(B.series.pie.show){x(C,D)}});v.hooks.draw.push(function(D,C){var B=D.getOptions();if(B.series.pie.show){o(D,C)}});function w(D,B,C){if(!f){f=true;h=D.getCanvas();A=c(h).parent();b=D.getOptions();D.setData(z(D.getData()))}}function z(G){var E=0,D=0,I=0,B=b.series.pie.combine.color,H=[];for(var C=0;C<G.length;++C){var F=G[C].data;if(c.isArray(F)){if(c.isNumeric(F[1])){F[1]=+F[1]}else{F[1]=0}}else{if(c.isNumeric(F)){F=[1,+F]}else{F=[1,0]}}G[C].data=[F]}for(var C=0;C<G.length;++C){E+=G[C].data[0][1]}for(var C=0;C<G.length;++C){var F=G[C].data[0][1];if(F/E<=b.series.pie.combine.threshold){D+=F;I++;if(!B){B=G[C].color}}}for(var C=0;C<G.length;++C){var F=G[C].data[0][1];if(I<2||F/E>b.series.pie.combine.threshold){H.push({data:[[1,F]],color:G[C].color,label:G[C].label,angle:F*Math.PI*2/E,percent:F/(E/100)})}}if(I>1){H.push({data:[[1,D]],color:B,label:b.series.pie.combine.label,angle:D*Math.PI*2/E,percent:D/(E/100)})}return H}function o(G,J){if(!A){return}var C=G.getPlaceholder().width(),E=G.getPlaceholder().height(),I=A.children().filter(".legend").children().width()||0;u=J;f=false;m=Math.min(C,E/b.series.pie.tilt)/2;n=E/2+b.series.pie.offset.top;s=C/2;if(b.series.pie.offset.left=="auto"){if(b.legend.position.match("w")){s+=I/2}else{s-=I/2}}else{s+=b.series.pie.offset.left}if(s<m){s=m}else{if(s>C-m){s=C-m}}var H=G.getData(),K=0;do{if(K>0){m*=a}K+=1;F();if(b.series.pie.tilt<=0.8){D()}}while(!B()&&K<e);if(K>=e){F();A.prepend("<div class='error'>Could not draw pie with labels contained inside canvas</div>")}if(G.setSeries&&G.insertLegend){G.setSeries(H);G.insertLegend()}function F(){u.clearRect(0,0,C,E);A.children().filter(".pieLabel, .pieLabelBackground").remove()}function D(){var Q=b.series.pie.shadow.left;var P=b.series.pie.shadow.top;var N=10;var O=b.series.pie.shadow.alpha;var L=b.series.pie.radius>1?b.series.pie.radius:m*b.series.pie.radius;if(L>=C/2-Q||L*b.series.pie.tilt>=E/2-P||L<=N){return}u.save();u.translate(Q,P);u.globalAlpha=O;u.fillStyle="#000";u.translate(s,n);u.scale(1,b.series.pie.tilt);for(var M=1;M<=N;M++){u.beginPath();u.arc(0,0,L,0,Math.PI*2,false);u.fill();L-=M}u.restore()}function B(){var O=Math.PI*b.series.pie.startAngle;var L=b.series.pie.radius>1?b.series.pie.radius:m*b.series.pie.radius;u.save();u.translate(s,n);u.scale(1,b.series.pie.tilt);u.save();var Q=O;for(var N=0;N<H.length;++N){H[N].startAngle=Q;P(H[N].angle,H[N].color,true)}u.restore();if(b.series.pie.stroke.width>0){u.save();u.lineWidth=b.series.pie.stroke.width;Q=O;for(var N=0;N<H.length;++N){P(H[N].angle,b.series.pie.stroke.color,false)}u.restore()}y(u);u.restore();if(b.series.pie.label.show){return M()}else{return true}function P(T,R,S){if(T<=0||isNaN(T)){return}if(S){u.fillStyle=R}else{u.strokeStyle=R;u.lineJoin="round"}u.beginPath();if(Math.abs(T-Math.PI*2)>1e-9){u.moveTo(0,0)}u.arc(0,0,L,Q,Q+T/2,false);u.arc(0,0,L,Q+T/2,Q+T,false);u.closePath();Q+=T;if(S){u.fill()}else{u.stroke()}}function M(){var U=O;var R=b.series.pie.label.radius>1?b.series.pie.label.radius:m*b.series.pie.label.radius;for(var T=0;T<H.length;++T){if(H[T].percent>=b.series.pie.label.threshold*100){if(!S(H[T],U,T)){return false}}U+=H[T].angle}return true;function S(ah,aa,Y){if(ah.data[0][1]==0){return true}var aj=b.legend.labelFormatter,ai,W=b.series.pie.label.formatter;if(aj){ai=aj(ah.label,ah)}else{ai=ah.label}if(W){ai=W(ai,ah)}var ab=((aa+ah.angle)+aa)/2;var ag=s+Math.round(Math.cos(ab)*R);var ae=n+Math.round(Math.sin(ab)*R)*b.series.pie.tilt;var X="<span class='pieLabel' id='pieLabel"+Y+"' style='position:absolute;top:"+ae+"px;left:"+ag+"px;'>"+ai+"</span>";A.append(X);var af=A.children("#pieLabel"+Y);var V=(ae-af.height()/2);var Z=(ag-af.width()/2);af.css("top",V);af.css("left",Z);if(0-V>0||0-Z>0||E-(V+af.height())<0||C-(Z+af.width())<0){return false}if(b.series.pie.label.background.opacity!=0){var ac=b.series.pie.label.background.color;if(ac==null){ac=ah.color}var ad="top:"+V+"px;left:"+Z+"px;";c("<div class='pieLabelBackground' style='position:absolute;width:"+af.width()+"px;height:"+af.height()+"px;"+ad+"background-color:"+ac+";'></div>").css("opacity",b.series.pie.label.background.opacity).insertBefore(af)}return true}}}}function y(B){if(b.series.pie.innerRadius>0){B.save();var C=b.series.pie.innerRadius>1?b.series.pie.innerRadius:m*b.series.pie.innerRadius;B.globalCompositeOperation="destination-out";B.beginPath();B.fillStyle=b.series.pie.stroke.color;B.arc(0,0,C,0,Math.PI*2,false);B.fill();B.closePath();B.restore();B.save();B.beginPath();B.strokeStyle=b.series.pie.stroke.color;B.arc(0,0,C,0,Math.PI*2,false);B.stroke();B.closePath();B.restore()}}function p(E,F){for(var G=false,D=-1,B=E.length,C=B-1;++D<B;C=D){((E[D][1]<=F[1]&&F[1]<E[C][1])||(E[C][1]<=F[1]&&F[1]<E[D][1]))&&(F[0]<(E[C][0]-E[D][0])*(F[1]-E[D][1])/(E[C][1]-E[D][1])+E[D][0])&&(G=!G)}return G}function q(J,I){var D=v.getData(),G=v.getOptions(),H=G.series.pie.radius>1?G.series.pie.radius:m*G.series.pie.radius,M,K;for(var T=0;T<D.length;++T){var P=D[T];if(P.pie.show){u.save();u.beginPath();u.moveTo(0,0);u.arc(0,0,H,P.startAngle,P.startAngle+P.angle/2,false);u.arc(0,0,H,P.startAngle+P.angle/2,P.startAngle+P.angle,false);u.closePath();M=J-s;K=I-n;if(u.isPointInPath){if(u.isPointInPath(J-s,I-n)){u.restore();return{datapoint:[P.percent,P.data],dataIndex:0,series:P,seriesIndex:T}}}else{var S=H*Math.cos(P.startAngle),R=H*Math.sin(P.startAngle),E=H*Math.cos(P.startAngle+P.angle/4),B=H*Math.sin(P.startAngle+P.angle/4),N=H*Math.cos(P.startAngle+P.angle/2),L=H*Math.sin(P.startAngle+P.angle/2),V=H*Math.cos(P.startAngle+P.angle/1.5),U=H*Math.sin(P.startAngle+P.angle/1.5),F=H*Math.cos(P.startAngle+P.angle),C=H*Math.sin(P.startAngle+P.angle),Q=[[0,0],[S,R],[E,B],[N,L],[V,U],[F,C]],O=[M,K];if(p(Q,O)){u.restore();return{datapoint:[P.percent,P.data],dataIndex:0,series:P,seriesIndex:T}}}u.restore()}}return null}function r(B){l("plothover",B)}function k(B){l("plotclick",B)}function l(B,H){var C=v.offset();var F=parseInt(H.pageX-C.left);var D=parseInt(H.pageY-C.top);var J=q(F,D);if(b.grid.autoHighlight){for(var E=0;E<i.length;++E){var G=i[E];if(G.auto==B&&!(J&&G.series==J.series)){g(G.series)}}}if(J){j(J.series,B)}var I={pageX:H.pageX,pageY:H.pageY};A.trigger(B,[I,J])}function j(C,D){var B=t(C);if(B==-1){i.push({series:C,auto:D});v.triggerRedrawOverlay()}else{if(!D){i[B].auto=false}}}function g(C){if(C==null){i=[];v.triggerRedrawOverlay()}var B=t(C);if(B!=-1){i.splice(B,1);v.triggerRedrawOverlay()}}function t(D){for(var B=0;B<i.length;++B){var C=i[B];if(C.series==D){return B}}return -1}function x(F,G){var D=F.getOptions();var B=D.series.pie.radius>1?D.series.pie.radius:m*D.series.pie.radius;G.save();G.translate(s,n);G.scale(1,D.series.pie.tilt);for(var E=0;E<i.length;++E){C(i[E].series)}y(G);G.restore();function C(H){if(H.angle<=0||isNaN(H.angle)){return}G.fillStyle="rgba(255, 255, 255, "+D.series.pie.highlight.opacity+")";G.beginPath();if(Math.abs(H.angle-Math.PI*2)>1e-9){G.moveTo(0,0)}G.arc(0,0,B,H.startAngle,H.startAngle+H.angle/2,false);G.arc(0,0,B,H.startAngle+H.angle/2,H.startAngle+H.angle,false);G.closePath();G.fill()}}}var b={series:{pie:{show:false,radius:"auto",innerRadius:0,startAngle:3/2,tilt:1,shadow:{left:5,top:15,alpha:0.02},offset:{top:0,left:"auto"},stroke:{color:"#fff",width:1},label:{show:"auto",formatter:function(f,g){return"<div style='font-size:x-small;text-align:center;padding:2px;color:"+g.color+";'>"+f+"<br/>"+Math.round(g.percent)+"%</div>"},radius:1,background:{color:null,opacity:0},threshold:0},combine:{threshold:-1,color:null,label:"Other"},highlight:{opacity:0.5}}}};c.plot.plugins.push({init:d,options:b,name:"pie",version:"1.1"})})(jQuery);(function(a){var k={xaxis:{timezone:null,timeformat:null,twelveHourClock:false,monthNames:null}};function g(m,l){return l*Math.floor(m/l)}function j(t,n,q,m){if(typeof t.strftime=="function"){return t.strftime(n)}var w=function(y,r){y=""+y;r=""+(r==null?"0":r);return y.length==1?r+y:y};var l=[];var x=false;var v=t.getHours();var s=v<12;if(q==null){q=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}if(m==null){m=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]}var o;if(v>12){o=v-12}else{if(v==0){o=12}else{o=v}}for(var p=0;p<n.length;++p){var u=n.charAt(p);if(x){switch(u){case"a":u=""+m[t.getDay()];break;case"b":u=""+q[t.getMonth()];break;case"d":u=w(t.getDate());break;case"e":u=w(t.getDate()," ");break;case"H":u=w(v);break;case"I":u=w(o);break;case"l":u=w(o," ");break;case"m":u=w(t.getMonth()+1);break;case"M":u=w(t.getMinutes());break;case"q":u=""+(Math.floor(t.getMonth()/3)+1);break;case"S":u=w(t.getSeconds());break;case"y":u=w(t.getFullYear()%100);break;case"Y":u=""+t.getFullYear();break;case"p":u=(s)?("am"):("pm");break;case"P":u=(s)?("AM"):("PM");break;case"w":u=""+t.getDay();break}l.push(u);x=false}else{if(u=="%"){x=true}else{l.push(u)}}}return l.join("")}function i(q){function l(s,r,p,t){s[r]=function(){return p[t].apply(p,arguments)}}var n={date:q};if(q.strftime!=undefined){l(n,"strftime",q,"strftime")}l(n,"getTime",q,"getTime");l(n,"setTime",q,"setTime");var m=["Date","Day","FullYear","Hours","Milliseconds","Minutes","Month","Seconds"];for(var o=0;o<m.length;o++){l(n,"get"+m[o],q,"getUTC"+m[o]);l(n,"set"+m[o],q,"setUTC"+m[o])}return n}function e(m,l){if(l.timezone=="browser"){return new Date(m)}else{if(!l.timezone||l.timezone=="utc"){return i(new Date(m))}else{if(typeof timezoneJS!="undefined"&&typeof timezoneJS.Date!="undefined"){var n=new timezoneJS.Date();n.setTimezone(l.timezone);n.setTime(m);return n}else{return i(new Date(m))}}}}var c={second:1000,minute:60*1000,hour:60*60*1000,day:24*60*60*1000,month:30*24*60*60*1000,quarter:3*30*24*60*60*1000,year:365.2425*24*60*60*1000};var f=[[1,"second"],[2,"second"],[5,"second"],[10,"second"],[30,"second"],[1,"minute"],[2,"minute"],[5,"minute"],[10,"minute"],[30,"minute"],[1,"hour"],[2,"hour"],[4,"hour"],[8,"hour"],[12,"hour"],[1,"day"],[2,"day"],[3,"day"],[0.25,"month"],[0.5,"month"],[1,"month"],[2,"month"]];var b=f.concat([[3,"month"],[6,"month"],[1,"year"]]);var d=f.concat([[1,"quarter"],[2,"quarter"],[1,"year"]]);function h(l){l.hooks.processDatapoints.push(function(o,m,n){a.each(o.getAxes(),function(r,p){var q=p.options;if(q.mode=="time"){p.tickGenerator=function(y){var E=[];var D=e(y.min,q);var w=0;var H=(q.tickSize&&q.tickSize[1]==="quarter")||(q.minTickSize&&q.minTickSize[1]==="quarter")?d:b;if(q.minTickSize!=null){if(typeof q.tickSize=="number"){w=q.tickSize}else{w=q.minTickSize[0]*c[q.minTickSize[1]]}}for(var C=0;C<H.length-1;++C){if(y.delta<(H[C][0]*c[H[C][1]]+H[C+1][0]*c[H[C+1][1]])/2&&H[C][0]*c[H[C][1]]>=w){break}}var J=H[C][0];var F=H[C][1];if(F=="year"){if(q.minTickSize!=null&&q.minTickSize[1]=="year"){J=Math.floor(q.minTickSize[0])}else{var t=Math.pow(10,Math.floor(Math.log(y.delta/c.year)/Math.LN10));var s=(y.delta/c.year)/t;if(s<1.5){J=1}else{if(s<3){J=2}else{if(s<7.5){J=5}else{J=10}}}J*=t}if(J<1){J=1}}y.tickSize=q.tickSize||[J,F];var B=y.tickSize[0];F=y.tickSize[1];var x=B*c[F];if(F=="second"){D.setSeconds(g(D.getSeconds(),B))}else{if(F=="minute"){D.setMinutes(g(D.getMinutes(),B))}else{if(F=="hour"){D.setHours(g(D.getHours(),B))}else{if(F=="month"){D.setMonth(g(D.getMonth(),B))}else{if(F=="quarter"){D.setMonth(3*g(D.getMonth()/3,B))}else{if(F=="year"){D.setFullYear(g(D.getFullYear(),B))}}}}}}D.setMilliseconds(0);if(x>=c.minute){D.setSeconds(0)}else{if(x>=c.hour){D.setMinutes(0)}else{if(x>=c.day){D.setHours(0)}else{if(x>=c.day*4){D.setDate(1)}else{if(x>=c.month*2){D.setMonth(g(D.getMonth(),3))}else{if(x>=c.quarter*2){D.setMonth(g(D.getMonth(),6))}else{if(x>=c.year){D.setMonth(0)}}}}}}}var I=0;var G=Number.NaN;var z;do{z=G;G=D.getTime();E.push(G);if(F=="month"||F=="quarter"){if(B<1){D.setDate(1);var u=D.getTime();D.setMonth(D.getMonth()+(F=="quarter"?3:1));var A=D.getTime();D.setTime(G+I*c.hour+(A-u)*B);I=D.getHours();D.setHours(0)}else{D.setMonth(D.getMonth()+B*(F=="quarter"?3:1))}}else{if(F=="year"){D.setFullYear(D.getFullYear()+B)}else{D.setTime(G+x)}}}while(G<y.max&&G!=z);return E};p.tickFormatter=function(z,u){var x=e(z,u.options);if(q.timeformat!=null){return j(x,q.timeformat,q.monthNames,q.dayNames)}var D=(u.options.tickSize&&u.options.tickSize[1]=="quarter")||(u.options.minTickSize&&u.options.minTickSize[1]=="quarter");var C=u.tickSize[0]*c[u.tickSize[1]];var y=u.max-u.min;var B=(q.twelveHourClock)?" %p":"";var A=(q.twelveHourClock)?"%I":"%H";var s;if(C<c.minute){s=A+":%M:%S"+B}else{if(C<c.day){if(y<2*c.day){s=A+":%M"+B}else{s="%b %d "+A+":%M"+B}}else{if(C<c.month){s="%b %d"}else{if((D&&C<c.quarter)||(!D&&C<c.year)){if(y<c.year){s="%b"}else{s="%b %Y"}}else{if(D&&C<c.year){if(y<c.year){s="Q%q"}else{s="Q%q %Y"}}else{s="%Y"}}}}}var w=j(x,s,q.monthNames,q.dayNames);return w}}})})}a.plot.plugins.push({init:h,options:k,name:"time",version:"1.0"});a.plot.formatDate=j})(jQuery);indexOfArray=function(b,c){if(typeof(b.indexOf)!="undefined"){return b.indexOf(c)}var a=b.length;var d=Number(arguments[2])||0;d=(d<0)?Math.ceil(d):Math.floor(d);if(d<0){d+=a}for(;d<a;d++){if(b[d]===c){return d}}return -1};
/*!
 * jQuery Browser Plugin 0.0.7
 * https://github.com/gabceb/jquery-browser-plugin
 *
 * Original jquery-browser code Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * http://jquery.org/license
 *
 * Modifications Copyright 2015 Gabriel Cebrian
 * https://github.com/gabceb
 *
 * Released under the MIT license
 *
 * Date: 20-01-2015
 */
;!function(b){"function"==typeof define&&define.amd?define(["jquery"],function(a){b(a)}):"object"==typeof module&&"object"==typeof module.exports?module.exports=b(require("jquery")):b(window.jQuery)}(function(d){function c(z){void 0===z&&(z=window.navigator.userAgent),z=z.toLowerCase();var y=/(edge)\/([\w.]+)/.exec(z)||/(opr)[\/]([\w.]+)/.exec(z)||/(chrome)[ \/]([\w.]+)/.exec(z)||/(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(z)||/(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(z)||/(webkit)[ \/]([\w.]+)/.exec(z)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(z)||/(msie) ([\w.]+)/.exec(z)||z.indexOf("trident")>=0&&/(rv)(?::| )([\w.]+)/.exec(z)||z.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(z)||[],x=/(ipad)/.exec(z)||/(ipod)/.exec(z)||/(iphone)/.exec(z)||/(kindle)/.exec(z)||/(silk)/.exec(z)||/(android)/.exec(z)||/(windows phone)/.exec(z)||/(win)/.exec(z)||/(mac)/.exec(z)||/(linux)/.exec(z)||/(cros)/.exec(z)||/(playbook)/.exec(z)||/(bb)/.exec(z)||/(blackberry)/.exec(z)||[],w={},v={browser:y[5]||y[3]||y[1]||"",version:y[2]||y[4]||"0",versionNumber:y[4]||y[2]||"0",platform:x[0]||""};if(v.browser&&(w[v.browser]=!0,w.version=v.version,w.versionNumber=parseInt(v.versionNumber,10)),v.platform&&(w[v.platform]=!0),(w.android||w.bb||w.blackberry||w.ipad||w.iphone||w.ipod||w.kindle||w.playbook||w.silk||w["windows phone"])&&(w.mobile=!0),(w.cros||w.mac||w.linux||w.win)&&(w.desktop=!0),(w.chrome||w.opr||w.safari)&&(w.webkit=!0),w.rv||w.edge){var u="msie";v.browser=u,w[u]=!0}if(w.safari&&w.blackberry){var t="blackberry";v.browser=t,w[t]=!0}if(w.safari&&w.playbook){var s="playbook";v.browser=s,w[s]=!0}if(w.bb){var r="blackberry";v.browser=r,w[r]=!0}if(w.opr){var q="opera";v.browser=q,w[q]=!0}if(w.safari&&w.android){var p="android";v.browser=p,w[p]=!0}if(w.safari&&w.kindle){var o="kindle";v.browser=o,w[o]=!0}if(w.safari&&w.silk){var n="silk";v.browser=n,w[n]=!0}return w.name=v.browser,w.platform=v.platform,w}return window.jQBrowser=c(window.navigator.userAgent),window.jQBrowser.uaMatch=c,d&&(d.browser=window.jQBrowser),window.jQBrowser});window.Modernizr=(function(l,q,g){var c="2.6.2",j={},y=q.documentElement,z="modernizr",w=q.createElement(z),m=w.style,d=q.createElement("input"),t={}.toString,h={},b={},r={},v=[],s=v.slice,a,o=({}).hasOwnProperty,x;if(!i(o,"undefined")&&!i(o.call,"undefined")){x=function(B,C){return o.call(B,C)}}else{x=function(B,C){return((C in B)&&i(B.constructor.prototype[C],"undefined"))}}if(!Function.prototype.bind){Function.prototype.bind=function A(D){var E=this;if(typeof E!="function"){throw new TypeError()}var B=s.call(arguments,1),C=function(){if(this instanceof C){var I=function(){};I.prototype=E.prototype;var H=new I();var G=E.apply(H,B.concat(s.call(arguments)));if(Object(G)===G){return G}return H}else{return E.apply(D,B.concat(s.call(arguments)))}};return C}}function n(B){m.cssText=B}function f(C,B){return n(prefixes.join(C+";")+(B||""))}function i(C,B){return typeof C===B}function k(C,B){return !!~(""+C).indexOf(B)}function u(C,F,E){for(var B in C){var D=F[C[B]];if(D!==g){if(E===false){return C[B]}if(i(D,"function")){return D.bind(E||F)}return D}}return false}function p(){j.input=(function(D){for(var C=0,B=D.length;C<B;C++){r[D[C]]=!!(D[C] in d)}if(r.list){r.list=!!(q.createElement("datalist")&&l.HTMLDataListElement)}return r})("autocomplete autofocus list placeholder max min multiple pattern required step".split(" "))}for(var e in h){if(x(h,e)){a=e.toLowerCase();j[a]=h[e]();v.push((j[a]?"":"no-")+a)}}j.input||p();j.addTest=function(C,D){if(typeof C=="object"){for(var B in C){if(x(C,B)){j.addTest(B,C[B])}}}else{C=C.toLowerCase();if(j[C]!==g){return j}D=typeof D=="function"?D():D;if(typeof enableClasses!=="undefined"&&enableClasses){y.className+=" "+(D?"":"no-")+C}j[C]=D}return j};n("");w=d=null;j._version=c;return j})(this,this.document);(function(ad,ac,ab){function aa(b){return"[object Function]"==P.call(b)}function Z(b){return"string"==typeof b}function Y(){}function X(b){return !b||"loaded"==b||"complete"==b||"uninitialized"==b}function W(){var b=O.shift();M=1,b?b.t?R(function(){("c"==b.t?L.injectCss:L.injectJs)(b.s,0,b.a,b.x,b.e,1)},0):(b(),W()):M=0}function V(w,v,t,s,q,p,n){function m(a){if(!g&&X(h.readyState)&&(x.r=g=1,!M&&W(),h.onload=h.onreadystatechange=null,a)){"img"!=w&&R(function(){I.removeChild(h)},50);for(var c in D[v]){D[v].hasOwnProperty(c)&&D[v][c].onload()}}}var n=n||L.errorTimeout,h=ac.createElement(w),g=0,b=0,x={t:t,s:v,e:q,a:p,x:n};1===D[v]&&(b=1,D[v]=[]),"object"==w?h.data=v:(h.src=v,h.type=w),h.width=h.height="0",h.onerror=h.onload=h.onreadystatechange=function(){m.call(this,b)},O.splice(s,0,x),"img"!=w&&(b||2===D[v]?(I.insertBefore(h,J?null:Q),R(m,n)):D[v].push(h))}function U(g,e,j,i,h){return M=0,e=e||"j",Z(g)?V("c"==e?G:H,g,e,this.i++,j,i,h):(O.splice(this.i++,0,g),1==O.length&&W()),this}function T(){var b=L;return b.loader={load:U,i:0},b}var S=ac.documentElement,R=ad.setTimeout,Q=ac.getElementsByTagName("script")[0],P={}.toString,O=[],M=0,K="MozAppearance" in S.style,J=K&&!!ac.createRange().compareNode,I=J?S:Q.parentNode,S=ad.opera&&"[object Opera]"==P.call(ad.opera),S=!!ac.attachEvent&&!S,H=K?"object":S?"script":"img",G=S?"script":H,F=Array.isArray||function(b){return"[object Array]"==P.call(b)},E=[],D={},C={timeout:function(d,c){return c.length&&(d.timeout=c[0]),d}},N,L;L=function(e){function c(i){var i=i.split("!"),h=E.length,q=i.pop(),p=i.length,q={url:q,origUrl:q,prefixes:i},o,l,j;for(l=0;l<p;l++){j=i[l].split("="),(o=C[j.shift()])&&(q=o(q,j))}for(l=0;l<h;l++){q=E[l](q)}return q}function n(b,s,r,q,p){var o=c(b),l=o.autoCallback;o.url.split(".").pop().split("?").shift(),o.bypass||(s&&(s=aa(s)?s:s[b]||s[q]||s[b.split("/").pop().split("?")[0]]),o.instead?o.instead(b,s,r,q,p):(D[o.url]?o.noexec=!0:D[o.url]=1,r.load(o.url,o.forceCSS||!o.forceJS&&"css"==o.url.split(".").pop().split("?").shift()?"c":ab,o.noexec,o.attrs,o.timeout),(aa(s)||aa(l))&&r.load(function(){T(),s&&s(o.origUrl,p,q),l&&l(o.origUrl,p,q),D[o.url]=2})))}function m(w,v){function u(b,h){if(b){if(Z(b)){h||(r=function(){var i=[].slice.call(arguments);q.apply(this,i),p()}),n(b,r,v,0,t)}else{if(Object(b)===b){for(g in o=function(){var a=0,i;for(i in b){b.hasOwnProperty(i)&&a++}return a}(),b){b.hasOwnProperty(g)&&(!h&&!--o&&(aa(r)?r=function(){var i=[].slice.call(arguments);q.apply(this,i),p()}:r[g]=function(i){return function(){var a=[].slice.call(arguments);i&&i.apply(this,a),p()}}(q[g])),n(b[g],r,v,g,t))}}}}else{!h&&p()}}var t=!!w.test,s=w.load||w.both,r=w.callback||Y,q=r,p=w.complete||Y,o,g;u(t?w.yep:w.nope,!!s),s&&u(s)}var k,f,d=this.yepnope.loader;if(Z(e)){n(e,0,d,0)}else{if(F(e)){for(k=0;k<e.length;k++){f=e[k],Z(f)?n(f,0,d,0):F(f)?L(f):Object(f)===f&&m(f,d)}}else{Object(e)===e&&m(e,d)}}},L.addPrefix=function(d,c){C[d]=c},L.addFilter=function(b){E.push(b)},L.errorTimeout=10000,null==ac.readyState&&ac.addEventListener&&(ac.readyState="loading",ac.addEventListener("DOMContentLoaded",N=function(){ac.removeEventListener("DOMContentLoaded",N,0),ac.readyState="complete"},0)),ad.yepnope=T(),ad.yepnope.executeStack=W,ad.yepnope.injectJs=function(r,q,p,n,m,h){var g=ac.createElement("script"),f,b,n=n||L.errorTimeout;g.src=r;for(b in p){g.setAttribute(b,p[b])}q=h?W:q||Y,g.onreadystatechange=g.onload=function(){!f&&X(g.readyState)&&(f=1,q(),g.onload=g.onreadystatechange=null)},R(function(){f||(f=1,q(1))},n),m?g.onload():Q.parentNode.insertBefore(g,Q)},ad.yepnope.injectCss=function(b,n,m,l,k,h){var l=ac.createElement("link"),f,n=h?W:n||Y;l.href=b,l.rel="stylesheet",l.type="text/css";for(f in m){l.setAttribute(f,m[f])}k||(Q.parentNode.insertBefore(l,Q),R(n,0))}})(this,document);Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};
/*!
 *  howler.js v2.0.0-beta
 *  howlerjs.com
 *
 *  (c) 2013-2015, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
(function(){var n=null;var c=true;var l=false;f();if(c){var g=(typeof n.createGain==="undefined")?n.createGainNode():n.createGain();g.gain.value=1;g.connect(n.destination)}var d=function(){this.init()};d.prototype={init:function(){var o=this||m;o._codecs={};o._howls=[];o._muted=false;o._volume=1;o.iOSAutoEnable=true;o.noAudio=l;o.usingWebAudio=c;o.ctx=n;if(!l){o._setupCodecs()}return o},volume:function(r){var o=this||m;r=parseFloat(r);if(typeof r!=="undefined"&&r>=0&&r<=1){o._volume=r;if(c){g.gain.value=r}for(var q=0;q<o._howls.length;q++){if(!o._howls[q]._webAudio){var s=o._howls[q]._getSoundIds();for(var p=0;p<s.length;p++){var t=o._howls[q]._soundById(s[p]);if(t&&t._node){t._node.volume=t._volume*r}}}}return o}return o._volume},mute:function(s){var o=this||m;o._muted=s;if(c){g.gain.value=s?0:o._volume}for(var q=0;q<o._howls.length;q++){if(!o._howls[q]._webAudio){var r=o._howls[q]._getSoundIds();for(var p=0;p<r.length;p++){var t=o._howls[q]._soundById(r[p]);if(t&&t._node){t._node.muted=(s)?true:t._muted}}}}return o},codecs:function(o){return(this||m)._codecs[o]},_setupCodecs:function(){var o=this||m;var p=new Audio();var q=p.canPlayType("audio/mpeg;").replace(/^no$/,"");o._codecs={mp3:!!(q||p.canPlayType("audio/mp3;").replace(/^no$/,"")),mpeg:!!q,opus:!!p.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/,""),ogg:!!p.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),wav:!!p.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),aac:!!p.canPlayType("audio/aac;").replace(/^no$/,""),m4a:!!(p.canPlayType("audio/x-m4a;")||p.canPlayType("audio/m4a;")||p.canPlayType("audio/aac;")).replace(/^no$/,""),mp4:!!(p.canPlayType("audio/x-mp4;")||p.canPlayType("audio/mp4;")||p.canPlayType("audio/aac;")).replace(/^no$/,""),weba:!!p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,""),webm:!!p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")};return o},_enableiOSAudio:function(){var o=this||m;if(n&&(o._iOSEnabled||!/iPhone|iPad|iPod/i.test(navigator.userAgent))){return}o._iOSEnabled=false;var p=function(){var q=n.createBuffer(1,1,22050);var r=n.createBufferSource();r.buffer=q;r.connect(n.destination);if(typeof r.start==="undefined"){r.noteOn(0)}else{r.start(0)}setTimeout(function(){if((r.playbackState===r.PLAYING_STATE||r.playbackState===r.FINISHED_STATE)){o._iOSEnabled=true;o.iOSAutoEnable=false;window.removeEventListener("touchstart",p,false)}},0)};window.addEventListener("touchstart",p,false);return o}};var m=new d();var e=function(q){var p=this;if(!q.src||q.src.length===0){console.error("An array of source files must be passed with any new Howl.");return}p.init(q)};e.prototype={init:function(q){var p=this;p._autoplay=q.autoplay||false;p._ext=q.ext||null;p._html5=q.html5||false;p._muted=q.mute||false;p._loop=q.loop||false;p._pool=q.pool||5;p._preload=(typeof q.preload==="boolean")?q.preload:true;p._rate=q.rate||1;p._sprite=q.sprite||{};p._src=(typeof q.src!=="string")?q.src:[q.src];p._volume=q.volume!==undefined?q.volume:1;p._duration=0;p._loaded=false;p._sounds=[];p._endTimers={};p._onend=q.onend?[{fn:q.onend}]:[];p._onfaded=q.onfaded?[{fn:q.onfaded}]:[];p._onload=q.onload?[{fn:q.onload}]:[];p._onloaderror=q.onloaderror?[{fn:q.onloaderror}]:[];p._onpause=q.onpause?[{fn:q.onpause}]:[];p._onplay=q.onplay?[{fn:q.onplay}]:[];p._webAudio=c&&!p._html5;if(typeof n!=="undefined"&&n&&m.iOSAutoEnable){m._enableiOSAudio()}m._howls.push(p);if(p._preload){p.load()}return p},load:function(){var o=this;var p=null;if(l){o._emit("loaderror");return}if(typeof o._src==="string"){o._src=[o._src]}for(var q=0;q<o._src.length;q++){var r,s;if(o._ext&&o._ext[q]){r=o._ext[q]}else{s=o._src[q];r=/^data:audio\/([^;,]+);/i.exec(s);if(!r){r=/\.([^.]+)$/.exec(s.split("?",1)[0])}if(r){r=r[1].toLowerCase()}}if(m.codecs(r)){p=o._src[q];break}}if(!p){o._emit("loaderror");return}o._src=p;new i(o);if(o._webAudio){k(o)}return o},play:function(A){var B=this;var x=arguments;var o=null;if(typeof A==="number"){o=A;A=null}else{if(typeof A==="undefined"){A="__default";var v=0;for(var u=0;u<B._sounds.length;u++){if(B._sounds[u]._paused&&!B._sounds[u]._ended){v++;o=B._sounds[u]._id}}if(v===1){A=null}else{o=null}}}var z=o?B._soundById(o):B._inactiveSound();if(!z){return null}if(o&&!A){A=z._sprite||"__default"}if(!B._loaded&&!B._sprite[A]){B.once("load",function(){B.play(B._soundById(z._id)?z._id:undefined)});return z._id}if(o&&!z._paused){return z._id}var p=z._seek>0?z._seek:B._sprite[A][0]/1000;var t=((B._sprite[A][0]+B._sprite[A][1])/1000)-p;var y=function(){var C=!!(z._loop||B._sprite[A][2]);B._emit("end",z._id);if(!B._webAudio&&C){B.stop(z._id).play(z._id)}if(B._webAudio&&C){B._emit("play",z._id);z._seek=z._start||0;z._playStart=n.currentTime;B._endTimers[z._id]=setTimeout(y,((z._stop-z._start)*1000)/Math.abs(B._rate))}if(B._webAudio&&!C){z._paused=true;z._ended=true;z._seek=z._start||0;B._clearTimer(z._id);z._node.bufferSource=null}if(!B._webAudio&&!C){B.stop(z._id)}};B._endTimers[z._id]=setTimeout(y,(t*1000)/Math.abs(B._rate));z._paused=false;z._ended=false;z._sprite=A;z._seek=p;z._start=B._sprite[A][0]/1000;z._stop=(B._sprite[A][0]+B._sprite[A][1])/1000;z._loop=!!(z._loop||B._sprite[A][2]);var s=z._node;if(B._webAudio){var w=function(){B._refreshBuffer(z);var C=(z._muted||B._muted)?0:z._volume*m.volume();s.gain.setValueAtTime(C,n.currentTime);z._playStart=n.currentTime;if(typeof s.bufferSource.start==="undefined"){s.bufferSource.noteGrainOn(0,p,t)}else{s.bufferSource.start(0,p,t)}if(!B._endTimers[z._id]){B._endTimers[z._id]=setTimeout(y,(t*1000)/Math.abs(B._rate))}if(!x[1]){setTimeout(function(){B._emit("play",z._id)},0)}};if(B._loaded){w()}else{B.once("load",w);B._clearTimer(z._id)}}else{var r=function(){s.currentTime=p;s.muted=z._muted||B._muted||m._muted||s.muted;s.volume=z._volume*m.volume();s.playbackRate=B._rate;setTimeout(function(){s.play();if(!x[1]){B._emit("play",z._id)}},0)};if(s.readyState===4||!s.readyState&&navigator.isCocoonJS){r()}else{var q=function(){B._endTimers[z._id]=setTimeout(y,(t*1000)/Math.abs(B._rate));r();s.removeEventListener("canplaythrough",q,false)};s.addEventListener("canplaythrough",q,false);B._clearTimer(z._id)}}return z._id},pause:function(s){var o=this;if(!o._loaded){o.once("play",function(){o.pause(s)});return o}var q=o._getSoundIds(s);for(var p=0;p<q.length;p++){o._clearTimer(q[p]);var r=o._soundById(q[p]);if(r&&!r._paused){r._seek=o.seek(q[p]);r._paused=true;if(o._webAudio){if(!r._node.bufferSource){return o}if(typeof r._node.bufferSource.stop==="undefined"){r._node.bufferSource.noteOff(0)}else{r._node.bufferSource.stop(0)}r._node.bufferSource=null}else{if(!isNaN(r._node.duration)){r._node.pause()}}if(!arguments[1]){o._emit("pause",r._id)}}}return o},stop:function(s){var o=this;if(!o._loaded){if(typeof o._sounds[0]._sprite!=="undefined"){o.once("play",function(){o.stop(s)})}return o}var q=o._getSoundIds(s);for(var p=0;p<q.length;p++){o._clearTimer(q[p]);var r=o._soundById(q[p]);if(r&&!r._paused){r._seek=r._start||0;r._paused=true;r._ended=true;if(o._webAudio&&r._node){if(!r._node.bufferSource){return o}if(typeof r._node.bufferSource.stop==="undefined"){r._node.bufferSource.noteOff(0)}else{r._node.bufferSource.stop(0)}r._node.bufferSource=null}else{if(r._node&&!isNaN(r._node.duration)){r._node.pause();r._node.currentTime=r._start||0}}}}return o},mute:function(r,t){var o=this;if(!o._loaded){o.once("play",function(){o.mute(r,t)});return o}if(typeof t==="undefined"){if(typeof r==="boolean"){o._muted=r}else{return o._muted}}var q=o._getSoundIds(t);for(var p=0;p<q.length;p++){var s=o._soundById(q[p]);if(s){s._muted=r;if(o._webAudio&&s._node){s._node.gain.setValueAtTime(r?0:s._volume*m.volume(),n.currentTime)}else{if(s._node){s._node.muted=m._muted?true:r}}}}return o},volume:function(){var o=this;var q=arguments;var s,v;if(q.length===0){return o._volume}else{if(q.length===1){var t=o._getSoundIds();var p=t.indexOf(q[0]);if(p>=0){v=parseInt(q[0],10)}else{s=parseFloat(q[0])}}else{if(q.length===2){s=parseFloat(q[0]);v=parseInt(q[1],10)}}}var u;if(typeof s!=="undefined"&&s>=0&&s<=1){if(!o._loaded){o.once("play",function(){o.volume.apply(o,q)});return o}if(typeof v==="undefined"){o._volume=s}v=o._getSoundIds(v);for(var r=0;r<v.length;r++){u=o._soundById(v[r]);if(u){u._volume=s;if(o._webAudio&&u._node){u._node.gain.setValueAtTime(s*m.volume(),n.currentTime)}else{if(u._node){u._node.volume=s*m.volume()}}}}}else{u=v?o._soundById(v):o._sounds[0];return u?u._volume:0}return o},fade:function(y,z,u,q){var B=this;if(!B._loaded){B.once("play",function(){B.fade(y,z,u,q)});return B}B.volume(y,q);var o=B._getSoundIds(q);for(var t=0;t<o.length;t++){var A=B._soundById(o[t]);if(A){if(B._webAudio){var p=n.currentTime;var s=p+(u/1000);A._volume=y;A._node.gain.setValueAtTime(y,p);A._node.gain.linearRampToValueAtTime(z,s);setTimeout(function(D,C){setTimeout(function(){C._volume=z;B._emit("faded",D)},s-n.currentTime>0?Math.ceil((s-n.currentTime)*1000):0)}.bind(B,o[t],A),u)}else{var x=Math.abs(y-z);var r=y>z?"out":"in";var w=x/0.01;var v=u/w;(function(){var D=y;var C=setInterval(function(E){D+=(r==="in"?0.01:-0.01);D=Math.max(0,D);D=Math.min(1,D);D=Math.round(D*100)/100;B.volume(D,E);if(D===z){clearInterval(C);B._emit("faded",E)}}.bind(B,o[t]),v)})()}}}return B},loop:function(){var p=this;var q=arguments;var o,u,t;if(q.length===0){return p._loop}else{if(q.length===1){if(typeof q[0]==="boolean"){o=q[0];p._loop=o}else{t=p._soundById(parseInt(q[0],10));return t?t._loop:false}}else{if(q.length===2){o=q[0];u=parseInt(q[1],10)}}}var s=p._getSoundIds(u);for(var r=0;r<s.length;r++){t=p._soundById(s[r]);if(t){t._loop=o;if(p._webAudio&&t._node){t._node.bufferSource.loop=o}}}return p},seek:function(){var o=this;var q=arguments;var t,v;if(q.length===0){v=o._sounds[0]._id}else{if(q.length===1){var s=o._getSoundIds();var p=s.indexOf(q[0]);if(p>=0){v=parseInt(q[0],10)}else{v=o._sounds[0]._id;t=parseFloat(q[0])}}else{if(q.length===2){t=parseFloat(q[0]);v=parseInt(q[1],10)}}}if(typeof v==="undefined"){return o}if(!o._loaded){o.once("load",function(){o.seek.apply(o,q)});return o}var u=o._soundById(v);if(u){if(t>=0){var r=o.playing(v);if(r){o.pause(v,true)}u._seek=t;o._clearTimer(v);if(r){o.play(v,true)}}else{if(o._webAudio){return(u._seek+o.playing(v)?n.currentTime-u._playStart:0)}else{return u._node.currentTime}}}return o},playing:function(q){var o=this;var p=o._soundById(q)||o._sounds[0];return p?!p._paused:false},duration:function(){return this._duration},unload:function(){var p=this;var o=p._sounds;for(var r=0;r<o.length;r++){if(!o[r]._paused){p.stop(o[r]._id);p._emit("end",o[r]._id)}if(!p._webAudio){o[r]._node.src="";o[r]._node.removeEventListener("error",o[r]._errorFn,false);o[r]._node.removeEventListener("canplaythrough",o[r]._loadFn,false)}delete o[r]._node;p._clearTimer(o[r]._id);var q=m._howls.indexOf(p);if(q>=0){m._howls.splice(q,1)}}if(a){delete a[p._src]}p=null;return null},on:function(r,q,s){var o=this;var p=o["_on"+r];if(typeof q==="function"){p.push({id:s,fn:q})}return o},off:function(s,r,t){var o=this;var q=o["_on"+s];if(r){for(var p=0;p<q.length;p++){if(r===q[p].fn&&t===q[p].id){q.splice(p,1);break}}}else{q=[]}return o},once:function(q,p,s){var o=this;var r=function(){p.apply(o,arguments);o.off(q,r,s)};o.on(q,r,s);return o},_emit:function(r,t,s){var o=this;var q=o["_on"+r];for(var p=0;p<q.length;p++){if(!q[p].id||q[p].id===t){setTimeout(function(u){u.call(this,t,s)}.bind(o,q[p].fn),0)}}return o},_clearTimer:function(p){var o=this;if(o._endTimers[p]){clearTimeout(o._endTimers[p]);delete o._endTimers[p]}return o},_soundById:function(q){var o=this;for(var p=0;p<o._sounds.length;p++){if(q===o._sounds[p]._id){return o._sounds[p]}}return null},_inactiveSound:function(){var o=this;o._drain();for(var p=0;p<o._sounds.length;p++){if(o._sounds[p]._ended){return o._sounds[p].reset()}}return new i(o)},_drain:function(){var p=this;var o=p._pool;var r=0;var q=0;if(p._sounds.length<o){return}for(q=0;q<p._sounds.length;q++){if(p._sounds[q]._ended){r++}}for(q=p._sounds.length-1;q>=0;q--){if(r<=o){return}if(p._sounds[q]._ended){if(p._webAudio&&p._sounds[q]._node){p._sounds[q]._node.disconnect(0)}p._sounds.splice(q,1);r--}}},_getSoundIds:function(r){var o=this;if(typeof r==="undefined"){var q=[];for(var p=0;p<o._sounds.length;p++){q.push(o._sounds[p]._id)}return q}else{return[r]}},_refreshBuffer:function(p){var o=this;p._node.bufferSource=n.createBufferSource();p._node.bufferSource.buffer=a[o._src];if(p._panner){p._node.bufferSource.connect(p._panner)}else{p._node.bufferSource.connect(p._node)}p._node.bufferSource.loop=p._loop;if(p._loop){p._node.bufferSource.loopStart=p._start||0;p._node.bufferSource.loopEnd=p._stop}p._node.bufferSource.playbackRate.value=o._rate;return o}};var i=function(o){this._parent=o;this.init()};i.prototype={init:function(){var o=this;var p=o._parent;o._muted=p._muted;o._loop=p._loop;o._volume=p._volume;o._muted=p._muted;o._seek=0;o._paused=true;o._ended=true;o._id=Math.round(Date.now()*Math.random());p._sounds.push(o);o.create();return o},create:function(){var o=this;var p=o._parent;var q=(m._muted||o._muted||o._parent._muted)?0:o._volume*m.volume();if(p._webAudio){o._node=(typeof n.createGain==="undefined")?n.createGainNode():n.createGain();o._node.gain.setValueAtTime(q,n.currentTime);o._node.paused=true;o._node.connect(g)}else{o._node=new Audio();o._errorFn=o._errorListener.bind(o);o._node.addEventListener("error",o._errorFn,false);o._loadFn=o._loadListener.bind(o);o._node.addEventListener("canplaythrough",o._loadFn,false);o._node.src=p._src;o._node.preload="auto";o._node.volume=q;o._node.load()}return o},reset:function(){var o=this;var p=o._parent;o._muted=p._muted;o._loop=p._loop;o._volume=p._volume;o._muted=p._muted;o._seek=0;o._paused=true;o._ended=true;o._sprite=null;o._id=Math.round(Date.now()*Math.random());return o},_errorListener:function(){var o=this;if(o._node.error&&o._node.error.code===4){m.noAudio=true}o._parent._emit("loaderror",o._id,o._node.error?o._node.error.code:0);o._node.removeEventListener("error",o._errorListener,false)},_loadListener:function(){var o=this;var p=o._parent;p._duration=Math.ceil(o._node.duration*10)/10;if(Object.keys(p._sprite).length===0){p._sprite={__default:[0,p._duration*1000]}}if(!p._loaded){p._loaded=true;p._emit("load")}if(p._autoplay){p.play()}o._node.removeEventListener("canplaythrough",o._loadFn,false)}};if(c){var a={};var k=function(o){var p=o._src;if(a[p]){o._duration=a[p].duration;j(o);return}if(/^data:[^;]+;base64,/.test(p)){window.atob=window.atob||function(x){var z="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var B=String(x).replace(/=+$/,"");for(var A=0,y,v,u=0,w="";v=B.charAt(u++);~v&&(y=A%4?y*64+v:v,A++%4)?w+=String.fromCharCode(255&y>>(-2*A&6)):0){v=z.indexOf(v)}return w};var r=atob(p.split(",")[1]);var t=new Uint8Array(r.length);for(var q=0;q<r.length;++q){t[q]=r.charCodeAt(q)}h(t.buffer,o)}else{var s=new XMLHttpRequest();s.open("GET",p,true);s.responseType="arraybuffer";s.onload=function(){h(s.response,o)};s.onerror=function(){if(o._webAudio){o._html5=true;o._webAudio=false;o._sounds=[];delete a[p];o.load()}};b(s)}};var b=function(p){try{p.send()}catch(o){p.onerror()}};var h=function(p,o){n.decodeAudioData(p,function(q){if(q){a[o._src]=q;j(o,q)}},function(){o._emit("loaderror")})};var j=function(p,o){if(o&&!p._duration){p._duration=o.duration}if(Object.keys(p._sprite).length===0){p._sprite={__default:[0,p._duration*1000]}}if(!p._loaded){p._loaded=true;p._emit("load")}if(p._autoplay){p.play()}}}function f(){try{if(typeof AudioContext!=="undefined"){n=new AudioContext()}else{if(typeof webkitAudioContext!=="undefined"){n=new webkitAudioContext()}else{c=false}}}catch(o){c=false}if(!c){if(typeof Audio!=="undefined"){try{new Audio()}catch(o){l=true}}else{l=true}}}if(typeof define==="function"&&define.amd){define("howler",function(){return{Howler:m,Howl:e}})}if(typeof exports!=="undefined"){exports.Howler=m;exports.Howl=e}if(typeof window!=="undefined"){window.HowlerGlobal=d;window.Howler=m;window.Howl=e;window.Sound=i}})();

config.buildings={"0":{buildingId:0,tribe:false,base:"g0.png"},"1":{buildingId:1,tribe:false,base:"g1.png"},"2":{buildingId:2,tribe:false,base:"g2.png"},"3":{buildingId:3,tribe:false,base:"g3.png"},"4":{buildingId:4,tribe:false,base:"g4.png"},"5":{buildingId:5,tribe:false,base:"g5.png"},"6":{buildingId:6,tribe:false,base:"g6.png"},"7":{buildingId:7,tribe:false,base:"g7.png"},"8":{buildingId:8,tribe:false,base:"g8.png"},"9":{buildingId:9,tribe:false,base:"g9.png"},"10":{buildingId:10,tribe:false,base:"g10.png",levels:[0,10,20],states:["e","f","hf"]},"11":{buildingId:11,tribe:false,base:"g11.png",levels:[0,10,20],states:["e","f","hf"]},"13":{buildingId:13,tribe:true,base:"g13.png",levels:[0,10,20]},"14":{buildingId:14,tribe:false,base:"g14.png",levels:[0,10]},"15":{buildingId:15,tribe:true,base:"g15.png",levels:[0,10,20]},"16":{buildingId:16,tribe:true,levels:[0,10,20],states:["ww"]},"17":{buildingId:17,tribe:false,base:"g17.png",levels:[0,10,20]},"18":{buildingId:18,tribe:true,base:"g18.png",levels:[0,10,20]},"19":{buildingId:19,tribe:true,base:"g19.png",levels:[0,10,20]},"20":{buildingId:20,tribe:true,base:"g20.png",levels:[0,10,20]},"21":{buildingId:21,tribe:false,base:"g21.png"},"22":{buildingId:22,tribe:true,base:"g22.png",levels:[0,10,20]},"23":{buildingId:23,tribe:false,base:"g23.png"},"24":{buildingId:24,tribe:true,base:"g24.png",levels:[0,10]},"25":{buildingId:25,tribe:true,base:"g25.png",levels:[0,10,20]},"26":{buildingId:26,tribe:true,base:"g26.png",levels:[0,10,15,20]},"27":{buildingId:27,tribe:false,base:"g27.png",levels:[0,10,20]},"28":{buildingId:28,tribe:false,base:"g28.png"},"29":{buildingId:29,tribe:true,base:"g29.png",levels:[0,10,20]},"30":{buildingId:30,tribe:true,base:"g30.png",levels:[0,10,20]},"31":{buildingId:31,tribe:false,levels:[0,1,5,10,15,20],states:["normal","water"],parts:["bottom","top"]},"32":{buildingId:32,tribe:false,levels:[0,1,5,10,15,20],states:["normal","water"],parts:["bottom","top"]},"33":{buildingId:33,tribe:false,levels:[0,1,5,10,15,20],states:["normal","water"],parts:["bottom","top"]},"34":{buildingId:34,tribe:false,base:"g34.png"},"35":{buildingId:35,tribe:false,base:"g35.png"},"36":{buildingId:36,tribe:false,base:"g36.png"},"38":{buildingId:38,tribe:false,base:"g38.png",levels:[0,10,20],states:["e","f","hf"]},"39":{buildingId:39,tribe:false,base:"g39.png",levels:[0,10,20],states:["e","f","hf"]},"40":{buildingId:40,tribe:false,levels:[0,1,10,20,30,40,50,60,70,80,90,100]},"41":{buildingId:41,tribe:false,base:"g41.png"},"42":{buildingId:42,tribe:false,base:"g42.png"},"43":{buildingId:43,tribe:false,levels:[0,1,5,10,15,20],states:["normal","water"],parts:["bottom","top"]},"45":{buildingId:45,tribe:false,base:"g45.png"}};config.village={};config.village["locationPos"]=[{x:null,y:null},{x:381,y:307,z:1},{x:518,y:238,z:1},{x:691,y:269,z:1},{x:272,y:370,z:1},{x:508,y:351,z:1},{x:602,y:336,z:1},{x:803,y:329,z:1},{x:199,y:485,z:1},{x:312,y:472,z:1},{x:739,y:394,z:1},{x:918,y:405,z:1},{x:253,y:564,z:1},{x:376,y:513,z:1},{x:548,y:568},{x:795,y:502,z:1},{x:433,y:605,z:1},{x:559,y:666,z:1},{x:680,y:604,z:1},{x:260,y:362,z:5},{x:383,y:510,z:7},{x:190,y:443,z:6},{x:181,y:557,z:7},{x:451,y:421,z:6},{x:402,y:311,z:3},{x:519,y:256,z:2},{x:658,y:278,z:3},{x:608,y:381,z:5},{x:789,y:292,z:4},{x:848,y:384,z:5},{x:951,y:432,z:6},{x:964,y:561,z:7},{x:726,y:526,z:6},{x:509,y:756,z:0,z2:43},{x:859,y:622,z:8},{x:542,y:572,z:8},{x:266,y:622,z:8},{x:392,y:689,z:9},{x:663,y:652,z:9},{x:772,y:710,z:10},{x:535,y:688,z:10},{x:60,y:471,z:1},{x:1083,y:821,z:44},{x:952,y:860,z:45}];config.village["worldWonderPos"]={x:533,y:598,z:6};config.village["buildingPoly"]={0:[66,12,75,13,82,14,84,15,86,16,87,17,89,18,90,19,91,20,94,21,95,22,95,23,95,24,96,25,96,26,97,27,98,28,98,29,99,30,100,31,101,32,101,33,101,34,101,35,101,36,101,37,101,38,101,39,101,40,101,41,101,42,101,43,101,44,101,45,100,46,100,47,100,48,100,49,100,50,100,51,100,52,100,53,99,54,99,55,99,56,99,57,98,58,98,59,98,60,97,61,96,62,96,63,94,64,93,65,92,66,90,67,89,68,88,69,87,70,85,71,82,72,80,73,76,74,67,75,63,75,43,74,39,73,37,72,34,71,32,70,30,69,29,68,27,67,26,66,25,65,24,64,23,63,22,62,21,61,21,60,20,59,19,58,19,57,18,56,18,55,18,54,17,53,17,52,16,51,16,50,15,49,15,48,15,47,15,46,15,45,15,44,15,43,15,42,15,41,16,40,16,39,16,38,16,37,17,36,17,35,17,34,18,33,19,32,19,31,19,30,19,29,19,28,20,27,21,26,23,25,23,24,24,23,26,22,27,21,28,20,30,19,33,18,35,17,37,16,40,15,46,14,50,13,56,12,66,12],1:[33,1,34,2,36,3,36,4,36,5,36,6,70,7,109,8,110,9,112,10,112,11,112,12,112,13,112,14,111,15,110,16,110,17,107,18,107,19,108,20,116,21,118,22,119,23,119,24,119,25,119,26,119,27,118,28,118,29,116,30,117,31,118,32,118,33,118,34,117,35,111,36,111,37,112,38,112,39,112,40,113,41,113,42,113,43,114,44,114,45,113,46,112,47,111,48,113,49,114,50,114,51,114,52,114,53,113,54,113,55,113,56,112,57,111,58,111,59,108,60,110,61,111,62,111,63,111,64,111,65,110,66,103,67,103,68,103,69,103,70,102,71,102,72,101,73,106,74,108,75,109,76,116,77,117,78,119,79,119,80,119,81,119,82,119,83,118,84,117,85,117,86,114,87,116,88,117,89,117,90,117,91,117,92,117,93,115,94,112,95,112,96,112,97,112,98,111,99,111,100,109,101,111,102,112,103,112,104,112,105,111,106,110,107,61,107,19,106,18,105,17,104,17,103,6,102,5,101,4,100,4,99,4,98,5,97,5,96,2,95,1,94,1,93,1,92,1,91,1,90,2,89,3,88,5,87,7,86,6,85,5,84,6,83,6,82,7,81,7,80,7,79,7,78,6,77,6,76,6,75,5,74,6,73,6,72,5,71,4,70,2,69,1,68,1,67,1,66,1,65,1,64,2,63,3,62,5,61,6,60,6,59,6,58,6,57,4,56,3,55,2,54,3,53,3,52,4,51,4,50,4,49,4,48,5,47,5,46,5,45,6,44,6,43,7,42,7,41,9,40,8,39,7,38,7,37,8,36,6,35,5,34,4,33,5,32,5,31,6,30,6,29,6,28,6,27,7,26,7,25,7,24,8,23,8,22,9,21,9,20,13,19,13,18,14,17,14,16,15,15,15,14,27,13,27,12,26,11,25,10,23,9,22,8,22,7,22,6,22,5,22,4,23,3,24,2,26,1,33,1],2:[70,3,72,4,72,5,74,6,79,7,80,8,83,9,86,10,87,11,87,12,86,13,86,14,87,15,89,16,89,17,89,18,89,19,91,20,94,21,95,22,94,23,94,24,95,25,95,26,98,27,100,28,101,29,103,30,104,31,105,32,105,33,105,34,106,35,107,36,109,37,111,38,113,39,115,40,118,41,117,42,117,43,117,44,119,45,119,46,117,47,115,48,113,49,112,50,110,51,109,52,109,53,108,54,108,55,105,56,105,57,105,58,105,59,105,60,107,61,106,62,106,63,106,64,104,65,102,66,100,67,101,68,101,69,89,70,81,71,66,72,43,73,44,74,42,74,40,73,38,72,32,71,29,70,26,69,21,68,20,67,19,66,19,65,18,64,17,63,16,62,16,61,14,60,13,59,12,58,11,57,11,56,10,55,9,54,8,53,8,52,8,51,9,50,12,49,13,48,17,47,18,46,20,45,21,44,21,43,21,42,20,41,20,40,23,39,26,38,17,37,16,36,16,35,16,34,18,33,18,32,20,31,28,30,28,29,15,28,12,27,7,26,3,25,2,24,1,23,1,22,1,21,2,20,2,19,3,18,5,17,7,16,8,15,10,14,41,13,42,12,43,11,44,10,45,9,47,8,50,7,53,6,61,5,64,4,66,3,70,3],3:[70,1,70,2,71,3,71,4,72,5,73,6,73,7,74,8,74,9,74,10,74,11,74,12,75,13,75,14,76,15,76,16,77,17,77,18,78,19,79,20,79,21,81,22,82,23,82,24,83,25,83,26,84,27,85,28,96,29,97,30,98,31,99,32,100,33,101,34,102,35,103,36,104,37,104,38,105,39,107,40,108,41,110,42,111,43,112,44,113,45,113,46,114,47,114,48,115,49,116,50,117,51,117,52,117,53,117,54,117,55,116,56,115,57,116,58,116,59,115,60,115,61,114,62,114,63,114,64,114,65,116,66,116,67,117,68,117,69,117,70,118,71,118,72,119,73,118,74,118,75,118,76,118,77,118,78,116,79,114,80,112,81,112,82,112,83,111,84,110,85,108,86,107,87,107,88,108,89,73,90,73,91,34,92,31,92,29,91,28,90,28,89,15,88,15,87,13,86,11,85,9,84,9,83,7,82,6,81,5,80,4,79,5,78,5,77,6,76,6,75,6,74,4,73,4,72,4,71,4,70,5,69,1,68,1,67,0,66,1,65,1,64,1,63,2,62,3,61,2,60,0,59,0,58,0,57,3,56,8,55,8,54,9,53,12,52,5,51,6,50,7,49,7,48,8,47,9,46,9,45,8,44,9,43,9,42,9,41,10,40,10,39,10,38,11,37,12,36,13,35,14,34,15,33,17,32,18,31,18,30,19,29,19,28,20,27,20,26,20,25,21,24,21,23,22,22,23,21,25,20,26,19,27,18,28,17,28,16,29,15,30,14,31,13,31,12,32,11,33,10,33,9,34,8,35,7,36,6,38,5,39,4,40,3,41,2,42,1,70,1],4:[83,3,83,4,84,5,87,6,88,7,90,8,91,9,92,10,94,11,95,12,96,13,97,14,98,15,98,16,99,17,99,18,100,19,100,20,101,21,101,22,102,23,102,24,103,25,103,26,103,27,104,28,104,29,108,30,108,31,108,32,109,33,109,34,110,35,110,36,111,37,111,38,112,39,113,40,113,41,114,42,114,43,115,44,116,45,117,46,117,47,119,48,119,49,119,50,119,51,119,52,118,53,118,54,118,55,118,56,118,57,118,58,118,59,118,60,117,61,116,62,115,63,115,64,117,65,118,66,118,67,117,68,117,69,114,70,114,71,114,72,114,73,115,74,116,75,116,76,116,77,116,78,116,79,117,80,118,81,117,82,117,83,115,84,115,85,110,86,111,87,111,88,111,89,64,90,58,90,55,89,53,88,31,87,27,86,26,85,25,84,24,83,24,82,24,81,23,80,21,79,20,78,19,77,19,76,18,75,17,74,16,73,15,72,14,71,13,70,12,69,12,68,12,67,11,66,11,65,11,64,11,63,11,62,11,61,11,60,11,59,11,58,11,57,12,56,12,55,12,54,13,53,14,52,15,51,17,50,17,49,5,48,4,47,0,46,0,45,0,44,0,43,0,42,1,41,2,40,3,39,4,38,1,37,2,36,3,35,2,34,3,33,2,32,2,31,4,30,5,29,5,28,6,27,8,26,8,25,8,24,9,23,11,22,11,21,29,20,29,19,30,18,30,17,30,16,31,15,32,14,32,13,32,12,33,11,34,10,35,9,36,8,37,7,41,6,44,5,50,4,52,3,83,3],5:[85,18,85,19,86,20,86,21,87,22,87,23,88,24,88,25,89,26,89,27,89,28,90,29,90,30,91,31,92,32,92,33,93,34,94,35,94,36,95,37,96,38,96,39,97,40,98,41,98,42,99,43,100,44,101,45,120,46,125,47,125,48,126,49,127,50,127,51,128,52,128,53,128,54,127,55,126,56,125,57,124,58,125,59,126,60,126,61,126,62,126,63,126,64,125,65,124,66,122,67,123,68,123,69,124,70,124,71,123,72,123,73,122,74,117,75,119,76,119,77,124,78,124,79,124,80,124,81,124,82,125,83,124,84,124,85,123,86,122,87,117,88,119,89,120,90,122,91,123,92,124,93,124,94,122,95,120,96,125,97,126,98,127,99,127,100,127,101,128,102,128,103,128,104,126,105,124,106,124,107,125,108,126,109,126,110,127,111,128,112,127,113,127,114,126,115,124,116,117,117,118,118,119,119,119,120,120,121,121,122,122,123,122,124,121,125,120,126,119,127,92,128,92,129,94,130,97,131,98,132,98,133,98,134,97,135,91,136,90,137,88,138,79,139,65,140,64,141,63,142,61,143,57,143,57,142,53,141,52,140,52,139,52,138,50,137,50,136,50,135,50,134,50,133,51,132,52,131,53,130,59,129,60,128,61,127,62,126,62,125,24,124,22,123,21,122,20,121,20,120,20,119,20,118,20,117,20,116,21,115,22,114,24,113,26,112,28,111,30,110,33,109,35,108,30,107,28,106,26,105,25,104,19,103,18,102,17,101,17,100,17,99,17,98,17,97,18,96,20,95,21,94,21,93,21,92,21,91,22,90,23,89,25,88,29,87,30,86,31,85,35,84,33,83,33,82,33,81,34,80,36,79,18,78,17,77,17,76,16,75,16,74,17,73,18,72,21,71,18,70,17,69,17,68,16,67,16,66,17,65,21,64,29,63,29,62,29,61,29,60,29,59,29,58,29,57,29,56,28,55,27,54,25,53,25,52,25,51,25,50,25,49,26,48,42,47,42,46,43,45,43,44,44,43,45,42,46,41,46,40,47,39,48,38,48,37,49,36,50,35,50,34,51,33,52,32,52,31,53,30,54,29,55,28,55,27,59,26,61,25,61,24,64,23,67,22,69,21,73,20,75,19,78,18,85,18],6:[64,23,65,24,66,25,68,26,70,27,71,28,73,29,76,30,79,31,81,32,83,33,87,34,91,35,95,36,95,37,95,38,95,39,95,40,95,41,96,42,97,43,97,44,97,45,98,46,99,47,99,48,100,49,101,50,102,51,102,52,103,53,104,54,104,55,104,56,105,57,106,58,107,59,107,60,109,61,110,62,109,63,110,64,111,65,113,66,112,67,110,68,109,69,108,70,103,71,122,72,123,73,123,74,123,75,124,76,124,77,124,78,124,79,124,80,124,81,124,82,124,83,124,84,125,85,125,86,125,87,125,88,125,89,125,90,126,91,126,92,126,93,126,94,127,95,127,96,128,97,128,98,129,99,129,100,130,101,131,102,131,103,131,104,131,105,132,106,132,107,132,108,132,109,132,110,133,111,134,112,135,113,135,114,136,115,136,116,134,117,133,118,132,119,131,120,130,121,128,122,127,123,126,124,86,125,86,126,86,127,85,128,76,129,75,130,75,131,73,132,57,133,57,134,55,135,54,136,43,137,41,137,40,136,39,135,37,134,35,133,34,132,32,131,31,130,31,129,32,128,29,127,26,126,24,125,24,124,21,123,21,122,21,121,22,120,20,119,19,118,20,117,20,116,21,115,21,114,22,113,24,112,24,111,24,110,24,109,24,108,24,107,23,106,23,105,23,104,22,103,20,102,19,101,19,100,18,99,18,98,19,97,21,96,22,95,23,94,25,93,27,92,27,91,29,90,31,89,32,88,34,87,36,86,36,85,38,84,40,83,41,82,41,81,41,80,41,79,41,78,41,77,41,76,41,75,41,74,41,73,41,72,41,71,41,70,41,69,41,68,41,67,40,66,38,65,36,64,36,63,35,62,35,61,35,60,36,59,37,58,38,57,39,56,39,55,40,54,41,53,42,52,43,51,43,50,43,49,44,48,45,47,46,46,46,45,47,44,48,43,49,42,50,41,50,40,51,39,51,38,52,37,53,36,53,35,53,34,54,33,55,32,56,31,56,30,57,29,58,28,58,27,58,26,58,25,59,24,59,23,64,23],7:[47,33,49,34,49,35,108,36,109,37,110,38,111,39,111,40,112,41,113,42,114,43,115,44,115,45,116,46,117,47,118,48,119,49,119,50,120,51,121,52,121,53,122,54,123,55,125,56,126,57,126,58,127,59,127,60,128,61,129,62,130,63,131,64,132,65,131,66,131,67,131,68,129,69,127,70,127,71,127,72,127,73,127,74,127,75,127,76,127,77,127,78,127,79,127,80,126,81,126,82,131,83,133,84,136,85,137,86,137,87,138,88,138,89,140,90,141,91,142,92,142,93,142,94,142,95,143,96,144,97,144,98,144,99,144,100,144,101,144,102,140,103,140,104,140,105,139,106,136,107,136,108,137,109,136,110,135,111,133,112,133,113,132,114,127,115,127,116,127,117,120,118,119,119,118,120,118,121,118,122,117,123,107,124,107,125,107,126,108,127,108,128,108,129,108,130,108,131,108,132,101,133,94,134,94,135,94,136,94,137,94,138,93,139,73,139,73,138,72,137,72,136,72,135,53,134,45,133,37,132,31,131,26,130,23,129,22,128,19,127,15,126,14,125,14,124,11,123,9,122,8,121,9,120,6,119,5,118,4,117,4,116,3,115,3,114,3,113,4,112,4,111,5,110,6,109,7,108,8,107,7,106,7,105,7,104,8,103,9,102,11,101,11,100,11,99,12,98,13,97,12,96,11,95,12,94,16,93,17,92,17,91,17,90,17,89,16,88,16,87,16,86,16,85,17,84,18,83,20,82,23,81,35,80,36,79,37,78,37,77,37,76,37,75,37,74,37,73,37,72,37,71,37,70,37,69,37,68,37,67,37,66,37,65,37,64,37,63,37,62,37,61,37,60,37,59,38,58,38,57,38,56,38,55,38,54,38,53,38,52,38,51,38,50,38,49,38,48,38,47,38,46,38,45,39,44,38,43,38,42,38,41,38,40,39,39,39,38,39,37,39,36,39,35,40,34,41,33,47,33],8:[73,2,75,3,76,4,83,5,85,6,86,7,86,8,86,9,85,10,85,11,85,12,86,13,87,14,87,15,88,16,89,17,89,18,89,19,88,20,87,21,86,22,85,23,84,24,83,25,81,26,87,27,88,28,100,29,100,30,100,31,100,32,100,33,100,34,100,35,100,36,100,37,100,38,100,39,98,40,95,41,87,42,91,43,93,44,94,45,94,46,95,47,94,48,95,49,95,50,95,51,95,52,95,53,97,54,98,55,98,56,98,57,97,58,97,59,98,60,98,61,99,62,99,63,99,64,100,65,101,66,102,67,102,68,103,69,103,70,103,71,104,72,104,73,104,74,105,75,105,76,105,77,105,78,104,79,104,80,103,81,101,82,96,83,96,84,97,85,97,86,97,87,97,88,98,89,99,90,100,91,101,92,102,93,102,94,103,95,103,96,104,97,104,98,104,99,104,100,104,101,104,102,104,103,104,104,104,105,104,106,104,107,104,108,103,109,103,110,102,111,101,112,100,113,99,114,98,115,96,116,96,117,96,118,96,119,96,120,96,121,98,122,99,123,98,124,98,125,97,126,97,127,97,128,93,129,93,130,97,131,98,132,99,133,99,134,99,135,99,136,98,137,96,138,87,139,60,140,56,140,54,139,54,138,54,137,50,136,48,135,48,134,49,133,50,132,49,131,48,130,46,129,43,128,42,127,35,126,34,125,34,124,35,123,42,122,41,121,42,120,42,119,43,118,44,117,44,116,44,115,45,114,45,113,46,112,46,111,46,110,46,109,45,108,45,107,45,106,45,105,45,104,45,103,45,102,45,101,45,100,45,99,45,98,45,97,45,96,45,95,45,94,46,93,47,92,48,91,28,90,26,89,25,88,26,87,26,86,26,85,25,84,24,83,23,82,22,81,21,80,20,79,20,78,20,77,20,76,21,75,22,74,24,73,25,72,26,71,27,70,28,69,29,68,30,67,32,66,33,65,34,64,35,63,36,62,38,61,39,60,40,59,41,58,42,57,43,56,45,55,46,54,47,53,48,52,49,51,50,50,50,49,50,48,47,47,42,46,37,45,33,44,28,43,24,42,19,41,18,40,17,39,16,38,17,37,17,36,17,35,18,34,18,33,19,32,19,31,20,30,20,29,21,28,21,27,22,26,21,25,20,24,19,23,20,22,20,21,21,20,22,19,28,18,28,17,29,16,30,15,31,14,32,13,34,12,35,11,67,10,68,9,68,8,68,7,69,6,69,5,69,4,70,3,70,2,73,2],9:[98,17,100,18,102,19,102,20,102,21,102,22,102,23,102,24,102,25,102,26,103,27,103,28,103,29,103,30,103,31,103,32,103,33,103,34,103,35,103,36,103,37,104,38,104,39,105,40,106,41,106,42,107,43,107,44,108,45,108,46,109,47,109,48,110,49,110,50,111,51,111,52,112,53,112,54,112,55,113,56,113,57,114,58,114,59,114,60,114,61,115,62,115,63,116,64,116,65,117,66,117,67,116,68,116,69,116,70,116,71,116,72,116,73,116,74,115,75,115,76,115,77,114,78,113,79,113,80,113,81,113,82,114,83,116,84,117,85,118,86,120,87,121,88,122,89,124,90,124,91,124,92,124,93,124,94,124,95,129,96,130,97,130,98,130,99,131,100,132,101,132,102,132,103,132,104,131,105,130,106,130,107,130,108,130,109,130,110,129,111,122,112,122,113,122,114,120,115,116,116,115,117,113,118,112,119,109,120,108,121,110,122,111,123,111,124,111,125,110,126,110,127,110,128,109,129,107,130,105,131,103,132,100,133,99,134,97,135,90,135,86,134,84,133,83,132,83,131,83,130,82,129,80,128,78,127,74,126,39,125,39,124,39,123,37,122,35,121,35,120,34,119,34,118,31,117,30,116,24,115,23,114,24,113,25,112,25,111,18,110,11,109,10,108,9,107,8,106,7,105,7,104,8,103,8,102,8,101,9,100,10,99,12,98,14,97,13,96,13,95,12,94,12,93,13,92,24,91,25,90,27,89,27,88,26,87,24,86,23,85,23,84,22,83,18,82,17,81,16,80,16,79,16,78,16,77,16,76,23,75,24,74,24,73,24,72,25,71,25,70,26,69,28,68,29,67,30,66,32,65,33,64,34,63,35,62,36,61,36,60,37,59,38,58,38,57,38,56,38,55,39,54,39,53,40,52,40,51,41,50,43,49,45,48,47,47,50,46,55,45,59,44,62,43,64,42,66,41,68,40,70,39,71,38,73,37,74,36,76,35,77,34,78,33,79,32,80,31,81,30,83,29,85,28,89,27,90,26,90,25,90,24,90,23,90,22,90,21,90,20,90,19,91,18,94,17,98,17],10:[106,32,106,33,107,34,107,35,108,36,108,37,108,38,109,39,109,40,110,41,110,42,111,43,111,44,112,45,112,46,113,47,113,48,114,49,114,50,115,51,115,52,116,53,119,54,119,55,119,56,120,57,120,58,120,59,120,60,120,61,120,62,121,63,121,64,122,65,122,66,123,67,124,68,123,69,123,70,123,71,121,72,120,73,119,74,118,75,118,76,118,77,118,78,119,79,119,80,119,81,119,82,119,83,119,84,119,85,119,86,119,87,119,88,119,89,120,90,120,91,120,92,120,93,120,94,119,95,119,96,119,97,120,98,120,99,121,100,121,101,121,102,121,103,121,104,121,105,121,106,121,107,121,108,123,109,123,110,123,111,123,112,123,113,123,114,123,115,123,116,121,117,121,118,121,119,121,120,121,121,121,122,121,123,121,124,121,125,121,126,121,127,120,128,98,129,98,130,98,131,98,132,98,133,98,134,98,135,97,136,96,137,95,138,90,139,87,139,69,138,68,137,67,136,66,135,65,134,65,133,47,132,45,131,44,130,44,129,43,128,41,127,39,126,38,125,33,124,32,123,31,122,31,121,31,120,31,119,31,118,31,117,31,116,31,115,31,114,31,113,31,112,31,111,31,110,31,109,31,108,30,107,28,106,27,105,25,104,24,103,23,102,23,101,23,100,23,99,22,98,22,97,22,96,22,95,22,94,22,93,21,92,21,91,21,90,23,89,24,88,26,87,27,86,28,85,30,84,31,83,33,82,34,81,32,80,32,79,32,78,32,77,33,76,34,75,35,74,36,73,37,72,38,71,39,70,40,69,42,68,43,67,44,66,45,65,46,64,47,63,48,62,49,61,50,60,52,59,53,58,55,57,59,56,61,55,62,54,63,53,64,52,65,51,67,50,68,49,72,48,73,47,76,46,77,45,82,44,84,43,86,42,86,41,86,40,87,39,89,38,90,37,92,36,93,35,95,34,97,33,102,32,106,32],11:[67,18,68,19,69,20,70,21,71,22,72,23,73,24,74,25,75,26,77,27,78,28,81,29,84,30,85,31,87,32,88,33,89,34,91,35,92,36,92,37,93,38,93,39,94,40,94,41,94,42,94,43,93,44,93,45,92,46,92,47,91,48,90,49,89,50,89,51,90,52,89,53,90,54,90,55,90,56,90,57,90,58,90,59,90,60,90,61,90,62,90,63,90,64,90,65,90,66,90,67,90,68,90,69,90,70,90,71,90,72,90,73,90,74,90,75,90,76,90,77,90,78,90,79,90,80,90,81,90,82,90,83,90,84,90,85,90,86,90,87,90,88,90,89,91,90,93,91,95,92,98,93,100,94,102,95,105,96,108,97,111,98,114,99,114,100,114,101,114,102,113,103,112,104,112,105,111,106,111,107,111,108,111,109,111,110,111,111,111,112,111,113,111,114,111,115,111,116,111,117,111,118,111,119,111,120,111,121,110,122,109,123,108,124,107,125,106,126,104,127,102,128,101,129,99,130,98,131,96,132,95,133,94,134,93,135,90,136,87,137,86,138,86,139,86,140,82,141,77,142,74,142,67,141,64,140,62,139,62,138,63,137,63,136,49,135,46,134,44,133,42,132,41,131,41,130,42,129,42,128,41,127,40,126,40,125,40,124,40,123,41,122,24,121,22,120,21,119,21,118,21,117,20,116,21,115,22,114,21,113,21,112,20,111,19,110,19,109,18,108,18,107,18,106,19,105,20,104,21,103,34,102,34,101,34,100,34,99,34,98,34,97,36,96,40,95,40,94,40,93,40,92,40,91,40,90,40,89,40,88,40,87,40,86,40,85,30,84,29,83,29,82,29,81,29,80,31,79,31,78,30,77,29,76,28,75,28,74,28,73,28,72,28,71,28,70,27,69,25,68,25,67,24,66,24,65,24,64,23,63,23,62,23,61,28,60,30,59,35,58,39,57,39,56,39,55,39,54,40,53,40,52,39,51,38,50,38,49,37,48,36,47,36,46,35,45,35,44,35,43,35,42,35,41,36,40,36,39,37,38,38,37,39,36,40,35,41,34,42,33,44,32,45,31,46,30,48,29,50,28,52,27,53,26,55,25,56,24,57,23,59,22,60,21,61,20,62,19,63,18,67,18],13:[47,34,101,35,102,36,103,37,103,38,103,39,103,40,103,41,103,42,103,43,103,44,103,45,103,46,104,47,104,48,104,49,103,50,104,51,106,52,104,53,104,54,106,55,106,56,107,57,106,58,107,59,108,60,108,61,109,62,110,63,110,64,110,65,111,66,111,67,110,68,111,69,111,70,111,71,111,72,111,73,113,74,115,75,117,76,119,77,120,78,122,79,124,80,126,81,128,82,130,83,132,84,134,85,134,86,134,87,133,88,132,89,131,90,131,91,131,92,131,93,131,94,131,95,131,96,131,97,136,98,137,99,137,100,137,101,138,102,138,103,139,104,140,105,140,106,139,107,138,108,138,109,138,110,138,111,138,112,136,113,136,114,133,115,135,116,135,117,134,118,130,119,127,120,127,121,127,122,126,123,125,124,127,125,127,126,126,127,125,128,126,129,127,130,126,131,128,132,128,133,127,134,125,135,119,136,118,137,111,138,106,139,79,139,73,138,72,137,65,136,63,135,62,134,61,133,61,132,59,131,56,130,51,129,49,128,48,127,47,126,29,125,27,124,26,123,25,122,25,121,25,120,25,119,25,118,26,117,28,116,31,115,30,114,29,113,26,112,19,111,18,110,15,109,14,108,13,107,14,106,12,105,12,104,12,103,12,102,13,101,12,100,12,99,8,98,7,97,7,96,8,95,6,94,5,93,5,92,6,91,6,90,8,89,11,88,11,87,13,86,13,85,13,84,13,83,13,82,13,81,13,80,13,79,13,78,13,77,13,76,13,75,13,74,13,73,13,72,12,71,11,70,9,69,9,68,9,67,10,66,11,65,12,64,14,63,14,62,15,61,15,60,16,59,17,58,18,57,19,56,20,55,21,54,21,53,22,52,32,51,32,50,32,49,33,48,33,47,33,46,33,45,33,44,34,43,34,42,35,41,35,40,35,39,36,38,37,37,39,36,42,35,43,34,47,34],14:[76,23,78,24,79,25,83,26,86,27,87,28,88,29,88,30,89,31,89,32,89,33,90,34,90,35,89,36,89,37,89,38,88,39,87,40,85,41,88,42,93,43,95,44,95,45,96,46,96,47,97,48,97,49,96,50,96,51,96,52,95,53,95,54,94,55,93,56,90,57,87,58,118,59,118,60,117,61,117,62,117,63,116,64,116,65,114,66,114,67,119,68,119,69,120,70,120,71,120,72,121,73,120,74,120,75,120,76,120,77,122,78,123,79,123,80,122,81,122,82,120,83,118,84,119,85,121,86,132,87,133,88,132,89,132,90,133,91,133,92,133,93,134,94,134,95,134,96,134,97,134,98,135,99,137,100,138,101,136,102,128,103,129,104,130,105,130,106,130,107,130,108,129,109,128,110,128,111,128,112,128,113,127,114,123,115,124,116,125,117,126,118,126,119,126,120,129,121,129,122,130,123,131,124,125,125,128,126,115,127,115,128,116,129,115,130,113,131,107,132,92,133,93,134,91,135,92,136,89,137,86,138,81,139,75,139,50,138,48,137,47,136,44,135,41,134,36,133,35,132,35,131,32,130,30,129,30,128,30,127,25,126,25,125,23,124,23,123,23,122,21,121,20,120,19,119,18,118,18,117,17,116,16,115,16,114,16,113,17,112,16,111,16,110,17,109,18,108,20,107,24,106,17,105,12,104,13,103,11,102,14,101,13,100,15,99,16,98,16,97,17,96,18,95,19,94,19,93,20,92,21,91,22,90,29,89,29,88,30,87,29,86,24,85,23,84,22,83,21,82,21,81,22,80,26,79,27,78,28,77,30,76,30,75,31,74,31,73,32,72,32,71,32,70,32,69,32,68,32,67,33,66,33,65,33,64,34,63,35,62,36,61,38,60,66,59,66,58,66,57,66,56,50,55,49,54,46,53,45,52,45,51,44,50,44,49,44,48,45,47,45,46,45,45,46,44,46,43,47,42,47,41,48,40,49,39,51,38,58,37,57,36,57,35,57,34,59,33,59,32,60,31,60,30,60,29,61,28,64,27,66,26,68,25,70,24,72,23,76,23],15:[83,14,85,15,86,16,87,17,88,18,88,19,88,20,88,21,88,22,88,23,88,24,88,25,88,26,88,27,88,28,88,29,88,30,88,31,88,32,88,33,89,34,91,35,94,36,99,37,103,38,106,39,107,40,109,41,110,42,110,43,111,44,112,45,112,46,112,47,113,48,113,49,114,50,114,51,114,52,115,53,115,54,115,55,116,56,117,57,117,58,119,59,120,60,120,61,121,62,122,63,123,64,124,65,124,66,125,67,125,68,126,69,126,70,125,71,125,72,125,73,124,74,123,75,122,76,122,77,122,78,122,79,122,80,122,81,122,82,122,83,124,84,125,85,127,86,132,87,133,88,133,89,134,90,135,91,136,92,135,93,135,94,133,95,133,96,133,97,133,98,133,99,133,100,133,101,133,102,133,103,131,104,130,105,128,106,124,107,123,108,122,109,122,110,120,111,121,112,123,113,125,114,127,115,128,116,130,117,131,118,132,119,132,120,131,121,130,122,128,123,126,124,126,125,124,126,123,127,121,128,120,129,118,130,115,131,113,132,112,133,110,134,109,135,107,136,105,137,104,138,102,139,100,140,99,141,97,142,95,143,91,143,89,142,88,141,86,140,85,139,83,138,81,137,75,136,73,135,72,134,59,133,57,132,57,131,57,130,57,129,56,128,54,127,52,126,51,125,49,124,47,123,31,122,30,121,29,120,29,119,28,118,26,117,26,116,25,115,24,114,23,113,24,112,24,111,25,110,26,109,25,108,24,107,23,106,19,105,18,104,17,103,15,102,14,101,14,100,14,99,14,98,14,97,12,96,12,95,12,94,12,93,12,92,12,91,12,90,12,89,12,88,12,87,12,86,12,85,12,84,10,83,9,82,9,81,9,80,9,79,10,78,10,77,10,76,11,75,13,74,14,73,15,72,16,71,17,70,17,69,18,68,19,67,20,66,21,65,22,64,22,63,23,62,24,61,25,60,26,59,26,58,26,57,26,56,26,55,27,54,35,53,35,52,36,51,37,50,38,49,39,48,40,47,38,46,38,45,37,44,36,43,36,42,36,41,36,40,36,39,38,38,43,37,43,36,44,35,44,34,45,33,46,32,47,31,47,30,47,29,47,28,47,27,47,26,47,25,46,24,46,23,46,22,46,21,46,20,46,19,46,18,47,17,49,16,50,15,77,14,83,14],16:[110,1,110,2,113,3,115,4,119,5,121,6,128,7,131,8,134,9,137,10,139,11,143,12,144,13,144,14,144,15,143,16,142,17,138,18,138,19,138,20,137,21,138,22,139,23,140,24,139,25,138,26,138,27,138,28,138,29,138,30,138,31,138,32,138,33,137,34,137,35,137,36,137,37,137,38,137,39,137,40,137,41,138,42,138,43,138,44,138,45,137,46,136,47,135,48,134,49,131,50,129,51,127,52,124,53,118,54,116,55,115,56,110,57,104,58,105,59,106,60,107,61,108,62,108,63,139,64,141,65,145,66,147,67,147,68,147,69,148,70,149,71,149,72,151,73,152,74,152,75,152,76,153,77,154,78,154,79,153,80,153,81,153,82,154,83,154,84,154,85,154,86,153,87,153,88,152,89,151,90,149,91,150,92,149,93,147,94,145,95,144,96,144,97,140,98,98,99,98,100,99,101,126,102,131,103,131,104,131,105,131,106,131,107,131,108,131,109,131,110,130,111,130,112,130,113,130,114,131,115,132,116,133,117,132,118,132,119,124,120,123,121,123,122,122,123,121,124,121,125,120,126,119,127,119,128,118,129,118,130,117,131,117,132,116,133,115,134,115,135,114,136,112,137,111,138,110,139,110,140,109,141,108,142,107,143,106,144,105,145,104,146,103,147,102,148,101,149,100,150,99,151,98,152,98,153,98,154,98,155,98,156,91,157,90,158,89,159,89,160,89,161,89,162,89,163,89,164,89,165,86,166,76,167,74,168,72,169,70,170,69,171,66,172,65,173,64,174,64,175,64,176,64,177,63,178,57,178,56,177,54,176,52,175,50,174,48,173,46,172,45,171,44,170,44,169,44,168,45,167,45,166,46,165,45,164,45,163,45,162,46,161,48,160,50,159,53,158,55,157,57,156,60,155,62,154,63,153,65,152,68,151,31,150,31,149,10,148,9,147,8,146,8,145,7,144,7,143,7,142,8,141,8,140,8,139,8,138,8,137,8,136,8,135,8,134,9,133,11,132,28,131,28,130,28,129,29,128,30,127,31,126,33,125,34,124,54,123,54,122,54,121,54,120,54,119,55,118,55,117,55,116,55,115,55,114,56,113,57,112,60,111,60,110,59,109,59,108,59,107,59,106,60,105,64,104,65,103,64,102,63,101,63,100,63,99,63,98,64,97,67,96,67,95,67,94,67,93,67,92,67,91,67,90,67,89,68,88,68,87,69,86,69,85,69,84,69,83,69,82,68,81,67,80,67,79,67,78,67,77,67,76,67,75,67,74,67,73,67,72,65,71,63,70,63,69,63,68,62,67,62,66,63,65,64,64,66,63,67,62,67,61,60,60,60,59,59,58,59,57,59,56,60,55,65,54,67,53,70,52,73,51,76,50,78,49,88,48,50,47,50,46,49,45,48,44,47,43,47,42,46,41,47,40,47,39,47,38,47,37,47,36,48,35,50,34,51,33,62,32,62,31,62,30,63,29,66,28,67,27,68,26,70,25,71,24,73,23,68,22,68,21,68,20,69,19,71,18,72,17,74,16,76,15,77,14,79,13,80,12,80,11,77,10,76,9,75,8,75,7,76,6,78,5,80,4,81,3,83,2,85,1,110,1],17:[68,40,70,41,71,42,72,43,112,44,112,45,111,46,116,47,115,48,114,49,115,50,115,51,115,52,115,53,118,54,118,55,119,56,121,57,122,58,120,59,119,60,118,61,116,62,110,63,110,64,110,65,111,66,112,67,113,68,115,69,117,70,118,71,121,72,131,73,132,74,132,75,131,76,131,77,131,78,132,79,133,80,134,81,135,82,135,83,136,84,133,85,135,86,136,87,136,88,137,89,137,90,137,91,137,92,137,93,138,94,138,95,139,96,139,97,139,98,139,99,139,100,138,101,138,102,143,103,142,104,144,105,145,106,143,107,133,108,133,109,132,110,134,111,134,112,129,113,129,114,129,115,129,116,131,117,129,118,121,119,120,120,117,121,114,122,114,123,114,124,115,125,117,126,117,127,116,128,105,129,103,130,101,131,94,132,92,133,87,134,85,135,83,136,81,137,79,138,75,138,73,137,72,136,70,135,55,134,53,133,53,132,34,131,33,130,33,129,29,128,27,127,26,126,24,125,22,124,21,123,20,122,20,121,18,120,17,119,17,118,19,117,20,116,20,115,21,114,20,113,20,112,16,111,16,110,18,109,17,108,17,107,14,106,12,105,12,104,13,103,14,102,12,101,8,100,8,99,9,98,8,97,8,96,9,95,11,94,13,93,13,92,13,91,13,90,13,89,13,88,13,87,13,86,13,85,13,84,13,83,13,82,13,81,13,80,13,79,13,78,13,77,13,76,13,75,13,74,19,73,19,72,20,71,23,70,24,69,26,68,29,67,29,66,29,65,29,64,29,63,29,62,29,61,30,60,30,59,30,58,30,57,31,56,31,55,32,54,33,53,33,52,36,51,36,50,38,49,45,48,48,47,51,46,53,45,55,44,56,43,58,42,60,41,62,40,68,40],18:[111,12,111,13,123,14,127,15,127,16,126,17,126,18,126,19,126,20,126,21,124,22,126,23,125,24,125,25,125,26,125,27,125,28,125,29,123,30,125,31,125,32,125,33,125,34,125,35,125,36,125,37,123,38,125,39,126,40,126,41,126,42,126,43,126,44,126,45,127,46,121,47,120,48,112,49,110,50,110,51,110,52,110,53,110,54,110,55,111,56,111,57,111,58,111,59,111,60,111,61,111,62,111,63,111,64,111,65,111,66,111,67,111,68,111,69,111,70,111,71,111,72,111,73,112,74,113,75,113,76,114,77,114,78,114,79,114,80,114,81,114,82,114,83,115,84,116,85,117,86,117,87,117,88,117,89,117,90,117,91,118,92,118,93,118,94,120,95,121,96,121,97,120,98,123,99,124,100,125,101,126,102,126,103,126,104,126,105,126,106,127,107,127,108,127,109,126,110,127,111,127,112,127,113,127,114,125,115,125,116,125,117,124,118,123,119,123,120,124,121,124,122,124,123,125,124,124,125,126,126,126,127,125,128,125,129,125,130,121,131,121,132,121,133,120,134,116,135,115,136,114,137,110,138,101,138,65,137,64,136,64,135,57,134,50,133,49,132,47,131,45,130,44,129,42,128,39,127,38,126,37,125,36,124,36,123,34,122,33,121,31,120,30,119,27,118,26,117,24,116,24,115,24,114,23,113,23,112,22,111,21,110,21,109,22,108,22,107,21,106,21,105,21,104,22,103,21,102,21,101,21,100,22,99,23,98,22,97,21,96,21,95,21,94,21,93,24,92,24,91,24,90,24,89,27,88,27,87,32,86,32,85,31,84,30,83,29,82,29,81,28,80,28,79,28,78,28,77,28,76,28,75,28,74,28,73,28,72,28,71,29,70,29,69,30,68,30,67,31,66,31,65,32,64,32,63,33,62,34,61,34,60,35,59,36,58,36,57,37,56,38,55,38,54,39,53,39,52,40,51,40,50,41,49,41,48,41,47,41,46,41,45,41,44,41,43,40,42,40,41,41,40,41,39,42,38,42,37,43,36,44,35,44,34,44,33,45,32,46,31,50,30,52,29,59,28,59,27,60,26,60,25,60,24,60,23,61,22,64,21,106,20,106,19,106,18,106,17,106,16,105,15,105,14,105,13,106,12,111,12],19:[59,26,59,27,59,28,60,29,61,30,62,31,65,32,64,33,63,34,63,35,63,36,63,37,63,38,63,39,62,40,62,41,62,42,62,43,61,44,61,45,61,46,60,47,60,48,59,49,59,50,59,51,80,52,80,53,82,54,83,55,88,56,87,57,85,58,80,59,109,60,109,61,111,62,112,63,117,64,116,65,117,66,115,67,109,68,109,69,109,70,109,71,110,72,111,73,112,74,114,75,115,76,116,77,117,78,118,79,119,80,120,81,122,82,123,83,123,84,124,85,124,86,124,87,124,88,124,89,124,90,124,91,125,92,125,93,125,94,125,95,125,96,125,97,126,98,127,99,129,100,130,101,131,102,131,103,132,104,132,105,134,106,134,107,134,108,135,109,135,110,135,111,135,112,135,113,135,114,136,115,134,116,134,117,134,118,134,119,132,120,132,121,131,122,130,123,130,124,127,125,126,126,125,127,120,128,117,129,112,130,110,131,73,132,73,133,72,134,72,135,62,135,62,134,62,133,63,132,60,131,50,130,50,129,50,128,51,127,51,126,28,125,24,124,22,123,21,122,21,121,19,120,17,119,15,118,15,117,13,116,13,115,12,114,12,113,10,112,10,111,11,110,12,109,12,108,14,107,14,106,16,105,18,104,20,103,20,102,20,101,20,100,20,99,20,98,20,97,20,96,20,95,19,94,18,93,18,92,18,91,19,90,20,89,20,88,21,87,22,86,22,85,23,84,24,83,25,82,25,81,26,80,27,79,27,78,28,77,29,76,55,75,55,74,55,73,55,72,55,71,55,70,55,69,55,68,55,67,55,66,55,65,55,64,55,63,55,62,55,61,55,60,55,59,55,58,55,57,55,56,55,55,52,54,52,53,51,52,51,51,50,50,50,49,49,48,49,47,48,46,48,45,48,44,49,43,49,42,50,41,50,40,50,39,50,38,51,37,51,36,51,35,51,34,51,33,51,32,51,31,54,30,55,29,55,28,55,27,56,26,59,26],20:[61,36,63,37,64,38,66,39,67,40,69,41,70,42,72,43,74,44,76,45,78,46,109,47,108,48,107,49,108,50,109,51,109,52,108,53,109,54,110,55,110,56,116,57,116,58,116,59,116,60,116,61,114,62,115,63,115,64,114,65,115,66,115,67,116,68,117,69,117,70,117,71,118,72,118,73,118,74,119,75,119,76,119,77,120,78,120,79,120,80,120,81,120,82,118,83,117,84,117,85,117,86,117,87,117,88,117,89,117,90,117,91,116,92,116,93,116,94,116,95,116,96,116,97,116,98,116,99,116,100,116,101,116,102,116,103,117,104,117,105,117,106,117,107,117,108,117,109,117,110,117,111,117,112,120,113,123,114,124,115,125,116,124,117,123,118,124,119,128,120,129,121,129,122,129,123,128,124,124,125,122,126,121,127,121,128,119,129,116,130,115,131,111,132,109,133,106,134,104,135,102,136,99,137,94,138,92,138,89,137,86,136,86,135,83,134,55,133,52,132,52,131,53,130,52,129,54,128,53,127,43,126,43,125,43,124,43,123,43,122,43,121,43,120,43,119,42,118,16,117,16,116,16,115,16,114,17,113,17,112,17,111,13,110,13,109,13,108,13,107,14,106,18,105,19,104,22,103,28,102,28,101,29,100,29,99,29,98,29,97,29,96,29,95,29,94,29,93,29,92,29,91,29,90,29,89,29,88,29,87,29,86,29,85,29,84,29,83,29,82,29,81,29,80,26,79,25,78,24,77,23,76,23,75,26,74,33,73,37,72,37,71,37,70,36,69,35,68,35,67,34,66,33,65,33,64,33,63,32,62,32,61,32,60,32,59,32,58,32,57,33,56,34,55,35,54,36,53,39,52,41,51,42,50,42,49,43,48,43,47,43,46,42,45,41,44,40,43,40,42,40,41,41,40,53,39,54,38,60,37,58,36,61,36],21:[89,21,90,22,90,23,90,24,90,25,90,26,90,27,90,28,90,29,91,30,91,31,91,32,91,33,91,34,91,35,91,36,91,37,92,38,92,39,92,40,92,41,93,42,95,43,98,44,101,45,102,46,102,47,106,48,109,49,111,50,113,51,116,52,117,53,119,54,120,55,121,56,122,57,123,58,124,59,125,60,126,61,127,62,128,63,129,64,130,65,131,66,132,67,133,68,134,69,135,70,136,71,136,72,135,73,132,74,132,75,132,76,133,77,132,78,132,79,132,80,132,81,132,82,132,83,132,84,132,85,132,86,132,87,132,88,133,89,132,90,133,91,133,92,133,93,133,94,133,95,135,96,135,97,136,98,137,99,136,100,134,101,131,102,129,103,126,104,125,105,124,106,126,107,127,108,127,109,126,110,126,111,127,112,128,113,128,114,125,115,113,116,111,117,109,118,108,119,108,120,106,121,104,122,104,123,114,124,113,125,112,126,99,127,102,128,102,129,102,130,103,131,100,132,100,133,100,134,97,135,97,136,96,137,89,138,84,138,82,137,78,136,77,135,75,134,73,133,72,132,72,131,69,130,68,129,60,128,58,127,49,126,48,125,46,124,46,123,47,122,47,121,38,120,36,119,36,118,21,117,16,116,17,115,10,114,9,113,9,112,10,111,11,110,7,109,4,108,2,107,2,106,3,105,3,104,4,103,5,102,5,101,5,100,5,99,4,98,4,97,4,96,5,95,6,94,6,93,7,92,13,91,16,90,18,89,18,88,17,87,17,86,17,85,17,84,17,83,17,82,17,81,17,80,17,79,17,78,18,77,18,76,18,75,18,74,17,73,16,72,14,71,12,70,11,69,11,68,12,67,13,66,14,65,14,64,15,63,16,62,16,61,17,60,18,59,18,58,19,57,20,56,21,55,21,54,22,53,22,52,23,51,23,50,23,49,23,48,23,47,27,46,27,45,28,44,29,43,29,42,30,41,31,40,32,39,32,38,33,37,34,36,71,35,72,34,73,33,80,32,81,31,81,30,81,29,81,28,81,27,81,26,81,25,81,24,81,23,82,22,83,21,89,21],22:[55,14,56,15,56,16,56,17,56,18,55,19,55,20,55,21,54,22,54,23,54,24,53,25,53,26,54,27,55,28,57,29,58,30,60,31,61,32,63,33,64,34,68,35,70,36,72,37,73,38,73,39,74,40,76,41,101,42,102,43,103,44,103,45,103,46,102,47,102,48,102,49,101,50,101,51,100,52,100,53,101,54,120,55,120,56,121,57,121,58,121,59,121,60,122,61,121,62,122,63,122,64,122,65,122,66,122,67,122,68,122,69,123,70,123,71,123,72,123,73,123,74,123,75,124,76,124,77,124,78,123,79,123,80,124,81,124,82,125,83,125,84,125,85,126,86,126,87,126,88,126,89,126,90,126,91,126,92,127,93,127,94,126,95,126,96,126,97,125,98,124,99,124,100,124,101,124,102,125,103,125,104,125,105,124,106,128,107,129,108,129,109,129,110,129,111,129,112,129,113,129,114,129,115,129,116,129,117,129,118,130,119,129,120,127,121,124,122,132,123,132,124,132,125,131,126,129,127,127,128,125,129,124,130,122,131,120,132,116,133,117,134,117,135,116,136,102,137,100,138,60,138,59,137,58,136,58,135,56,134,58,133,58,132,58,131,57,130,56,129,55,128,49,127,48,126,41,125,41,124,41,123,39,122,38,121,38,120,35,119,33,118,33,117,33,116,45,115,44,114,44,113,44,112,43,111,41,110,16,109,14,108,13,107,13,106,13,105,13,104,15,103,16,102,14,101,13,100,13,99,12,98,13,97,15,96,15,95,15,94,16,93,16,92,17,91,20,90,20,89,19,88,18,87,18,86,19,85,19,84,19,83,19,82,20,81,22,80,22,79,32,78,32,77,32,76,32,75,32,74,33,73,33,72,33,71,29,70,27,69,26,68,26,67,27,66,28,65,28,64,28,63,29,62,29,61,30,60,30,59,30,58,31,57,31,56,32,55,32,54,32,53,33,52,33,51,34,50,34,49,35,48,35,47,35,46,36,45,36,44,37,43,37,42,38,41,38,40,39,39,39,38,39,37,40,36,40,35,41,34,40,33,39,32,39,31,39,30,40,29,40,28,41,27,42,26,43,25,42,24,41,23,40,22,39,21,39,20,40,19,42,18,48,17,48,16,49,15,50,14,55,14],23:[100,18,110,19,113,20,113,21,117,22,119,23,119,24,120,25,121,26,121,27,122,28,122,29,122,30,131,31,131,32,133,33,134,34,134,35,136,36,136,37,137,38,137,39,137,40,136,41,137,42,138,43,138,44,137,45,137,46,138,47,138,48,138,49,138,50,138,51,137,52,137,53,136,54,136,55,134,56,133,57,132,58,113,59,123,60,125,61,125,62,126,63,129,64,129,65,132,66,132,67,133,68,133,69,134,70,134,71,135,72,135,73,135,74,135,75,134,76,134,77,133,78,133,79,131,80,131,81,127,82,121,83,121,84,117,85,110,86,123,87,123,88,125,89,125,90,125,91,124,92,125,93,125,94,126,95,126,96,126,97,126,98,126,99,125,100,117,101,117,102,118,103,126,104,126,105,132,106,132,107,135,108,136,109,136,110,137,111,137,112,142,113,142,114,141,115,146,116,141,117,141,118,111,119,114,120,113,121,98,122,96,123,93,124,91,125,88,126,88,127,88,128,93,129,93,130,94,131,97,132,97,133,91,134,85,135,84,136,84,137,84,138,82,139,81,140,80,141,74,141,71,140,70,139,69,138,68,137,68,136,68,135,68,134,68,133,39,132,35,131,34,130,29,129,29,128,28,127,27,126,27,125,27,124,29,123,29,122,21,121,18,120,17,119,18,118,16,117,12,116,11,115,11,114,11,113,14,112,14,111,9,110,7,109,8,108,8,107,10,106,10,105,11,104,12,103,20,102,20,101,20,100,20,99,21,98,21,97,22,96,25,95,25,94,25,93,25,92,25,91,25,90,25,89,26,88,28,87,31,86,32,85,34,84,32,83,31,82,22,81,21,80,20,79,18,78,16,77,16,76,15,75,15,74,14,73,14,72,14,71,15,70,14,69,14,68,15,67,16,66,17,65,20,64,20,63,21,62,22,61,23,60,24,59,25,58,27,57,33,56,54,55,54,54,54,53,55,52,55,51,55,50,56,49,56,48,57,47,58,46,59,45,60,44,63,43,68,42,68,41,67,40,67,39,67,38,67,37,68,36,68,35,70,34,70,33,71,32,74,31,75,30,76,29,76,28,76,27,76,26,79,25,79,24,81,23,87,22,88,21,91,20,91,19,98,18,100,18],24:[61,26,62,27,63,28,63,29,63,30,63,31,62,32,63,33,65,34,68,35,70,36,73,37,75,38,78,39,81,40,118,41,118,42,118,43,117,44,133,45,133,46,132,47,130,48,128,49,133,50,132,51,130,52,127,53,117,54,117,55,117,56,117,57,117,58,117,59,117,60,117,61,117,62,117,63,117,64,117,65,117,66,117,67,117,68,117,69,118,70,120,71,121,72,121,73,121,74,121,75,120,76,120,77,121,78,120,79,120,80,119,81,117,82,117,83,117,84,118,85,118,86,123,87,124,88,124,89,125,90,125,91,125,92,126,93,127,94,127,95,128,96,129,97,129,98,129,99,127,100,127,101,127,102,127,103,127,104,127,105,127,106,127,107,127,108,127,109,128,110,130,111,131,112,132,113,133,114,135,115,135,116,134,117,134,118,134,119,133,120,130,121,130,122,129,123,125,124,126,125,125,126,119,127,119,128,117,129,115,130,114,131,112,132,108,133,106,134,106,135,105,136,95,137,88,138,86,138,75,137,64,136,62,135,62,134,56,133,53,132,53,131,47,130,39,129,32,128,32,127,26,126,25,125,24,124,19,123,18,122,16,121,16,120,15,119,14,118,14,117,15,116,17,115,16,114,15,113,15,112,16,111,16,110,18,109,17,108,19,107,16,106,15,105,15,104,15,103,15,102,15,101,14,100,14,99,17,98,18,97,17,96,18,95,20,94,28,93,30,92,30,91,31,90,33,89,38,88,38,87,38,86,37,85,37,84,37,83,37,82,37,81,37,80,37,79,37,78,37,77,37,76,36,75,33,74,32,73,31,72,31,71,31,70,32,69,32,68,32,67,32,66,32,65,33,64,35,63,38,62,38,61,39,60,40,59,41,58,41,57,42,56,43,55,43,54,44,53,45,52,45,51,46,50,46,49,47,48,48,47,48,46,49,45,50,44,50,43,51,42,51,41,52,40,52,39,53,38,54,37,54,36,55,35,56,34,56,33,56,32,56,31,55,30,55,29,55,28,56,27,58,26,61,26],25:[106,2,106,3,106,4,106,5,110,6,113,7,116,8,117,9,112,10,115,11,117,12,112,13,106,14,106,15,106,16,106,17,106,18,107,19,107,20,108,21,109,22,110,23,112,24,114,25,116,26,117,27,119,28,120,29,120,30,121,31,122,32,122,33,122,34,122,35,122,36,122,37,122,38,122,39,122,40,122,41,121,42,120,43,119,44,118,45,118,46,118,47,118,48,120,49,135,50,135,51,135,52,133,53,138,54,139,55,139,56,140,57,142,58,138,59,131,60,131,61,131,62,131,63,131,64,131,65,131,66,131,67,131,68,131,69,131,70,118,71,118,72,118,73,118,74,118,75,118,76,118,77,118,78,118,79,118,80,118,81,118,82,118,83,118,84,118,85,118,86,118,87,118,88,118,89,118,90,118,91,118,92,118,93,118,94,118,95,118,96,118,97,124,98,125,99,125,100,125,101,128,102,129,103,129,104,129,105,128,106,128,107,128,108,127,109,123,110,126,111,129,112,129,113,129,114,128,115,128,116,119,117,118,118,116,119,108,120,108,121,106,122,106,123,107,124,106,125,105,126,102,127,102,128,101,129,101,130,102,131,101,132,97,133,95,134,93,135,91,136,92,137,92,138,90,139,75,140,75,141,74,142,62,142,52,141,48,140,47,139,47,138,46,137,42,136,41,135,40,134,39,133,40,132,35,131,34,130,34,129,32,128,31,127,27,126,26,125,26,124,26,123,27,122,26,121,25,120,25,119,27,118,30,117,29,116,25,115,24,114,23,113,23,112,22,111,22,110,22,109,22,108,22,107,22,106,23,105,24,104,25,103,30,102,30,101,30,100,31,99,31,98,30,97,29,96,28,95,26,94,25,93,25,92,25,91,25,90,24,89,24,88,24,87,25,86,25,85,25,84,25,83,26,82,26,81,26,80,27,79,27,78,28,77,29,76,29,75,30,74,30,73,31,72,31,71,32,70,32,69,33,68,33,67,34,66,34,65,34,64,34,63,35,62,35,61,35,60,34,59,34,58,34,57,35,56,35,55,35,54,36,53,36,52,37,51,38,50,39,49,40,48,41,47,43,46,45,45,45,44,45,43,45,42,45,41,46,40,46,39,46,38,46,37,46,36,46,35,46,34,46,33,46,32,46,31,46,30,45,29,45,28,91,27,93,26,95,25,97,24,98,23,100,22,100,21,101,20,101,19,103,18,103,17,103,16,103,15,103,14,103,13,103,12,103,11,103,10,103,9,103,8,103,7,103,6,103,5,103,4,102,3,103,2,106,2],26:[70,1,70,2,69,3,69,4,73,5,80,6,82,7,110,8,110,9,110,10,110,11,113,12,118,13,121,14,118,15,116,16,120,17,121,18,118,19,110,20,110,21,110,22,110,23,110,24,111,25,111,26,112,27,113,28,114,29,115,30,116,31,118,32,120,33,121,34,123,35,124,36,125,37,126,38,126,39,127,40,127,41,127,42,127,43,128,44,127,45,127,46,127,47,126,48,126,49,126,50,126,51,124,52,124,53,123,54,123,55,123,56,123,57,123,58,123,59,123,60,123,61,123,62,123,63,123,64,123,65,123,66,123,67,123,68,123,69,123,70,123,71,123,72,123,73,123,74,123,75,123,76,123,77,123,78,123,79,123,80,123,81,123,82,123,83,123,84,123,85,123,86,123,87,123,88,123,89,123,90,123,91,123,92,123,93,123,94,123,95,123,96,123,97,123,98,123,99,123,100,123,101,123,102,123,103,123,104,123,105,123,106,123,107,123,108,123,109,124,110,124,111,124,112,124,113,124,114,124,115,123,116,122,117,120,118,117,119,117,120,118,121,115,122,111,123,113,124,113,125,116,126,116,127,115,128,113,129,105,130,94,131,95,132,95,133,95,134,95,135,95,136,94,137,93,138,91,139,90,140,92,141,91,142,90,143,86,144,83,144,81,143,81,142,80,141,80,140,81,139,79,138,42,137,38,136,36,135,34,134,33,133,32,132,31,131,30,130,30,129,30,128,30,127,30,126,30,125,30,124,30,123,31,122,31,121,32,120,33,119,33,118,33,117,33,116,31,115,31,114,30,113,28,112,26,111,24,110,24,109,24,108,23,107,22,106,15,105,13,104,11,103,10,102,10,101,10,100,10,99,10,98,10,97,11,96,11,95,11,94,11,93,11,92,11,91,11,90,11,89,11,88,11,87,11,86,11,85,12,84,15,83,15,82,15,81,15,80,15,79,15,78,15,77,15,76,15,75,15,74,15,73,15,72,15,71,15,70,15,69,15,68,15,67,15,66,15,65,15,64,15,63,15,62,15,61,15,60,15,59,15,58,15,57,15,56,15,55,15,54,14,53,13,52,12,51,11,50,10,49,10,48,10,47,9,46,9,45,9,44,10,43,10,42,11,41,11,40,12,39,13,38,14,37,16,36,18,35,19,34,21,33,23,32,24,31,25,30,25,29,26,28,27,27,28,26,28,25,28,24,28,23,28,22,28,21,28,20,28,19,28,18,28,17,28,16,28,15,28,14,28,13,28,12,28,11,66,10,66,9,66,8,66,7,66,6,66,5,66,4,66,3,65,2,65,1,70,1],27:[79,20,82,21,84,22,86,23,87,24,89,25,90,26,91,27,92,28,93,29,94,30,94,31,95,32,96,33,96,34,97,35,97,36,98,37,98,38,99,39,99,40,99,41,99,42,100,43,100,44,100,45,100,46,100,47,101,48,101,49,101,50,101,51,102,52,103,53,104,54,104,55,104,56,113,57,114,58,115,59,115,60,115,61,115,62,115,63,115,64,115,65,115,66,115,67,115,68,115,69,115,70,115,71,115,72,115,73,115,74,115,75,115,76,115,77,114,78,114,79,114,80,114,81,114,82,114,83,114,84,114,85,114,86,114,87,114,88,114,89,114,90,118,91,119,92,119,93,119,94,119,95,119,96,119,97,120,98,121,99,122,100,123,101,123,102,123,103,123,104,123,105,123,106,122,107,121,108,121,109,122,110,123,111,124,112,124,113,125,114,125,115,125,116,124,117,123,118,123,119,123,120,123,121,125,122,124,123,122,124,121,125,120,126,120,127,120,128,119,129,119,130,119,131,116,132,115,133,107,134,69,134,66,133,64,132,64,131,64,130,65,129,66,128,58,127,54,126,35,125,31,124,31,123,31,122,32,121,33,120,33,119,34,118,34,117,34,116,34,115,34,114,33,113,32,112,31,111,31,110,30,109,29,108,29,107,29,106,28,105,24,104,22,103,22,102,22,101,23,100,24,99,25,98,25,97,25,96,25,95,25,94,25,93,25,92,25,91,25,90,25,89,26,88,26,87,28,86,39,85,39,84,39,83,39,82,39,81,39,80,39,79,39,78,39,77,39,76,40,75,41,74,41,73,41,72,41,71,41,70,41,69,41,68,42,67,41,66,41,65,41,64,41,63,41,62,41,61,41,60,41,59,41,58,41,57,41,56,41,55,41,54,41,53,42,52,42,51,42,50,42,49,42,48,42,47,43,46,43,45,43,44,43,43,44,42,44,41,44,40,45,39,45,38,45,37,46,36,46,35,47,34,47,33,48,32,49,31,50,30,51,29,52,28,53,27,54,26,55,25,56,24,58,23,60,22,62,21,64,20,79,20],28:[74,12,76,13,77,14,77,15,77,16,77,17,77,18,78,19,78,20,78,21,78,22,78,23,78,24,78,25,78,26,78,27,78,28,79,29,79,30,79,31,79,32,79,33,79,34,79,35,79,36,80,37,88,38,89,39,88,40,91,41,93,42,91,43,92,44,94,45,95,46,96,47,96,48,97,49,98,50,98,51,97,52,98,53,98,54,96,55,97,56,97,57,98,58,98,59,99,60,100,61,101,62,101,63,102,64,102,65,103,66,103,67,103,68,103,69,104,70,104,71,103,72,104,73,107,74,109,75,112,76,113,77,117,78,119,79,120,80,120,81,121,82,122,83,122,84,123,85,124,86,125,87,125,88,126,89,126,90,127,91,128,92,129,93,129,94,131,95,131,96,132,97,134,98,135,99,135,100,136,101,136,102,134,103,129,104,129,105,129,106,129,107,129,108,129,109,129,110,129,111,129,112,129,113,133,114,134,115,135,116,135,117,136,118,138,119,138,120,138,121,137,122,137,123,135,124,132,125,128,126,127,127,126,128,127,129,128,130,126,131,124,132,124,133,122,134,118,135,118,136,116,137,112,138,74,139,73,140,71,140,55,139,54,138,55,137,56,136,43,135,43,134,36,133,33,132,28,131,25,130,23,129,22,128,22,127,18,126,16,125,13,124,11,123,11,122,11,121,11,120,11,119,12,118,12,117,13,116,13,115,13,114,11,113,10,112,10,111,10,110,11,109,19,108,22,107,23,106,23,105,23,104,23,103,23,102,23,101,23,100,23,99,23,98,23,97,23,96,23,95,23,94,23,93,23,92,23,91,22,90,21,89,21,88,19,87,19,86,18,85,18,84,18,83,19,82,19,81,19,80,20,79,20,78,21,77,22,76,22,75,22,74,23,73,25,72,25,71,26,70,25,69,25,68,26,67,26,66,26,65,26,64,26,63,27,62,28,61,28,60,29,59,30,58,31,57,31,56,28,55,28,54,29,53,30,52,31,51,32,50,32,49,34,48,36,47,37,46,62,45,63,44,64,43,65,42,65,41,65,40,65,39,65,38,65,37,65,36,65,35,66,34,65,33,65,32,66,31,66,30,66,29,66,28,66,27,66,26,66,25,66,24,66,23,66,22,66,21,66,20,66,19,66,18,66,17,66,16,66,15,67,14,67,13,69,12,74,12],29:[60,18,61,19,60,20,61,21,62,22,60,23,67,24,67,25,67,26,66,27,110,28,114,29,112,30,115,31,111,32,110,33,111,34,112,35,112,36,113,37,113,38,114,39,115,40,116,41,116,42,117,43,118,44,119,45,119,46,120,47,121,48,121,49,121,50,121,51,122,52,122,53,122,54,123,55,123,56,123,57,123,58,124,59,124,60,128,61,126,62,125,63,127,64,124,65,127,66,129,67,129,68,130,69,132,70,135,71,138,72,141,73,142,74,142,75,144,76,145,77,147,78,147,79,147,80,148,81,147,82,147,83,148,84,148,85,150,86,149,87,149,88,149,89,149,90,147,91,147,92,146,93,145,94,144,95,142,96,140,97,137,98,137,99,137,100,137,101,139,102,141,103,142,104,143,105,144,106,143,107,145,108,145,109,147,110,147,111,147,112,148,113,148,114,149,115,149,116,148,117,148,118,148,119,149,120,147,121,147,122,146,123,147,124,145,125,145,126,145,127,144,128,142,129,142,130,140,131,139,132,137,133,137,134,131,135,128,136,123,137,120,138,83,139,77,140,76,141,76,142,75,143,65,143,64,142,65,141,65,140,63,139,63,138,50,137,50,136,51,135,51,134,52,133,46,132,46,131,44,130,39,129,29,128,28,127,24,126,21,125,21,124,20,123,18,122,13,121,9,120,8,119,7,118,7,117,5,116,5,115,5,114,5,113,4,112,4,111,3,110,3,109,4,108,2,107,2,106,2,105,3,104,3,103,3,102,4,101,4,100,3,99,3,98,0,97,2,96,1,95,-1,94,0,93,-1,92,-1,91,-1,90,0,89,2,88,2,87,3,86,3,85,3,84,5,83,6,82,7,81,8,80,9,79,9,78,11,77,13,76,13,75,13,74,14,73,14,72,14,71,15,70,14,69,14,68,14,67,14,66,14,65,15,64,16,63,17,62,17,61,18,60,19,59,20,58,20,57,21,56,22,55,22,54,23,53,23,52,24,51,24,50,25,49,25,48,25,47,26,46,25,45,25,44,50,43,49,42,49,41,49,40,49,39,49,38,49,37,50,36,50,35,50,34,51,33,51,32,51,31,52,30,52,29,52,28,52,27,52,26,52,25,51,24,52,23,57,22,56,21,57,20,57,19,57,18,60,18],30:[85,27,87,28,89,29,90,30,91,31,93,32,95,33,96,34,98,35,123,36,126,37,125,38,126,39,127,40,128,41,128,42,128,43,129,44,129,45,130,46,130,47,130,48,130,49,130,50,131,51,131,52,132,53,132,54,133,55,133,56,133,57,132,58,132,59,132,60,133,61,133,62,134,63,135,64,135,65,136,66,137,67,138,68,138,69,139,70,139,71,139,72,139,73,140,74,139,75,139,76,139,77,139,78,138,79,138,80,137,81,137,82,135,83,135,84,135,85,135,86,134,87,134,88,134,89,135,90,135,91,135,92,135,93,135,94,135,95,135,96,135,97,135,98,135,99,135,100,135,101,135,102,135,103,135,104,135,105,139,106,138,107,137,108,142,109,142,110,143,111,143,112,144,113,144,114,142,115,140,116,139,117,139,118,138,119,137,120,134,121,133,122,133,123,133,124,128,125,127,126,124,127,122,128,114,129,111,130,110,131,106,132,104,133,101,134,99,135,98,136,95,137,90,138,74,139,70,140,68,141,64,141,65,140,66,139,54,138,54,137,54,136,55,135,55,134,52,133,50,132,50,131,50,130,51,129,52,128,51,127,41,126,41,125,41,124,42,123,42,122,42,121,42,120,40,119,15,118,16,117,16,116,17,115,17,114,17,113,14,112,13,111,13,110,13,109,14,108,15,107,18,106,21,105,27,104,27,103,28,102,28,101,28,100,28,99,28,98,28,97,28,96,28,95,28,94,28,93,28,92,28,91,28,90,28,89,28,88,28,87,28,86,28,85,28,84,27,83,25,82,24,81,23,80,23,79,23,78,30,77,34,76,36,75,36,74,35,73,34,72,33,71,33,70,32,69,32,68,32,67,31,66,31,65,31,64,31,63,31,62,31,61,32,60,33,59,34,58,36,57,40,56,41,55,41,54,41,53,41,52,41,51,41,50,39,49,39,48,39,47,39,46,41,45,51,44,54,43,56,42,70,41,71,40,72,39,72,38,73,37,73,36,74,35,74,34,74,33,75,32,75,31,76,30,77,29,80,28,81,27,85,27],31:[[577,3,593,4,614,5,628,6,635,7,644,8,650,9,660,10,665,11,851,12,852,13,853,14,855,15,857,16,858,17,860,18,862,19,864,20,866,21,867,22,869,23,871,24,873,25,875,26,877,27,879,28,880,29,881,30,880,31,879,32,877,33,877,34,877,35,877,36,877,37,877,38,877,39,877,40,877,41,879,42,881,43,881,44,881,45,881,46,881,47,881,48,881,49,881,50,881,51,881,52,881,53,881,54,881,55,881,56,881,57,881,58,881,59,879,60,877,61,877,62,877,63,877,64,877,65,877,66,877,67,877,68,877,69,945,70,946,71,948,72,949,73,951,74,953,75,955,76,956,77,958,78,960,79,962,80,964,81,966,82,968,83,969,84,972,85,973,86,974,87,974,88,974,89,972,90,971,91,970,92,970,93,970,94,970,95,970,96,970,97,970,98,972,99,973,100,975,101,975,102,975,103,975,104,975,105,975,106,975,107,975,108,975,109,975,110,975,111,975,112,975,113,975,114,975,115,975,116,975,117,974,118,972,119,970,120,971,121,971,122,971,123,971,124,971,125,971,126,971,127,971,128,971,129,971,130,971,131,971,132,971,133,971,134,971,135,971,136,971,137,976,138,977,139,980,140,981,141,981,142,984,143,985,144,985,145,988,146,989,147,989,148,992,149,993,150,993,151,996,152,997,153,997,154,1000,155,1001,156,1001,157,1003,158,1004,159,1005,160,1007,161,1008,162,1009,163,1010,164,1012,165,1012,166,1013,167,1015,168,1016,169,1016,170,1017,171,1019,172,1019,173,1020,174,1022,175,1023,176,1023,177,1024,178,1026,179,1027,180,1027,181,1029,182,1030,183,1030,184,1032,185,1033,186,1034,187,1034,188,1036,189,1037,190,1037,191,1037,192,1039,193,1040,194,1040,195,1041,196,1043,197,1044,198,1044,199,1045,200,1046,201,1047,202,1047,203,1048,204,1049,205,1050,206,1050,207,1052,208,1053,209,1053,210,1053,211,1054,212,1055,213,1056,214,1056,215,1057,216,1058,217,1059,218,1059,219,1060,220,1061,221,1062,222,1062,223,1062,224,1064,225,1064,226,1065,227,1065,228,1066,229,1067,230,1067,231,1067,232,1069,233,1069,234,1070,235,1070,236,1070,237,1071,238,1072,239,1072,240,1072,241,1074,242,1074,243,1075,244,1075,245,1075,246,1076,247,1076,248,1077,249,1077,250,1077,251,1078,252,1079,253,1079,254,1079,255,1080,256,1081,257,1081,258,1081,259,1081,260,1082,261,1083,262,1083,263,1083,264,1084,265,1084,266,1085,267,1086,268,1086,269,1086,270,1086,271,1088,272,1088,273,1088,274,1088,275,1088,276,1089,277,1089,278,1089,279,1089,280,1090,281,1091,282,1091,283,1090,284,1091,285,1092,286,1092,287,1092,288,1092,289,1092,290,1093,291,1093,292,1093,293,1093,294,1094,295,1094,296,1094,297,1094,298,1094,299,1095,300,1095,301,1095,302,1095,303,1095,304,1095,305,1096,306,1096,307,1095,308,1096,309,1096,310,1097,311,1097,312,1096,313,1097,314,1097,315,1097,316,1097,317,1097,318,1097,319,1097,320,1097,321,1097,322,1097,323,1097,324,1098,325,1098,326,1097,327,1097,328,1098,329,1098,330,1098,331,1098,332,1097,333,1098,334,1098,335,1098,336,1098,337,1098,338,1098,339,1098,340,1071,340,1071,339,1071,338,1070,337,1070,336,1069,335,1069,334,1069,333,1068,332,1068,331,1067,330,1067,329,1066,328,1066,327,1066,326,1065,325,1065,324,1064,323,1064,322,1063,321,1063,320,1062,319,1062,318,1061,317,1061,316,1060,315,1060,314,1059,313,1059,312,1058,311,1058,310,1057,309,1057,308,1056,307,1056,306,1055,305,1055,304,1054,303,1053,302,1053,301,1052,300,1052,299,1051,298,1050,297,1050,296,1049,295,1049,294,1048,293,1047,292,1047,291,1046,290,1045,289,1045,288,1044,287,1043,286,1042,285,1042,284,1041,283,1040,282,1040,281,1039,280,1038,279,1037,278,1037,277,1036,276,1035,275,1034,274,1034,273,1033,272,1032,271,1031,270,1030,269,1030,268,1029,267,1028,266,1027,265,1026,264,1025,263,1024,262,1024,261,1023,260,1022,259,1021,258,1020,257,1019,256,1018,255,1017,254,1016,253,1015,252,1014,251,1013,250,1013,249,1011,248,1011,247,1010,246,1009,245,1008,244,1007,243,1006,242,1005,241,1003,240,1002,239,1001,238,1000,237,999,236,998,235,997,234,996,233,995,232,993,231,992,230,991,229,990,228,989,227,988,226,987,225,985,224,984,223,983,222,982,221,980,220,979,219,978,218,976,217,975,216,974,215,972,214,971,213,941,212,939,211,937,210,935,209,934,208,932,207,930,206,929,205,927,204,925,203,923,202,921,201,919,200,917,199,916,198,915,197,915,196,915,195,915,194,915,193,915,192,915,191,915,190,915,189,915,188,915,187,915,186,915,185,914,184,913,183,907,182,906,181,905,180,904,179,904,178,904,177,904,176,904,175,904,174,904,173,903,172,901,171,899,170,898,169,896,168,895,167,893,166,892,165,890,164,888,163,886,162,885,161,874,160,873,159,872,158,871,157,871,156,870,155,847,154,845,153,843,152,842,151,840,150,838,149,836,148,835,147,833,146,831,145,829,144,827,143,825,142,824,141,822,140,822,139,822,138,822,137,822,136,822,135,822,134,822,133,822,132,822,131,822,130,821,129,819,128,817,127,814,126,812,125,809,124,806,123,803,122,801,121,798,120,795,119,792,118,789,117,786,116,783,115,779,114,776,113,773,112,769,111,765,110,762,109,759,108,756,107,752,106,748,105,744,104,740,103,736,102,732,101,728,100,724,99,719,98,714,97,709,96,704,95,699,94,693,93,688,92,680,91,675,90,670,89,662,88,655,87,645,86,637,85,629,84,615,83,604,82,579,81,554,80,554,79,554,78,554,77,554,76,554,75,554,74,554,73,554,72,554,71,554,70,554,69,554,68,554,67,554,66,554,65,554,64,554,63,554,62,554,61,554,60,554,59,554,58,554,57,554,56,554,55,554,54,554,53,554,52,554,51,554,50,554,49,554,48,554,47,554,46,554,45,554,44,554,43,554,42,554,41,554,40,554,39,554,38,554,37,554,36,554,35,554,34,554,33,554,32,554,31,554,30,554,29,554,28,554,27,554,26,554,25,554,24,554,23,554,22,554,21,554,20,554,19,554,18,554,17,554,16,554,15,554,14,554,13,554,12,554,11,554,10,554,9,554,8,554,7,554,6,554,5,554,4,556,3,577,3],[551,3,554,4,554,5,554,6,554,7,554,8,554,9,554,10,554,11,554,12,554,13,554,14,554,15,554,16,554,17,554,18,554,19,554,20,554,21,554,22,554,23,554,24,554,25,554,26,554,27,554,28,554,29,554,30,554,31,554,32,554,33,554,34,554,35,554,36,554,37,554,38,554,39,554,40,554,41,554,42,554,43,554,44,554,45,554,46,554,47,554,48,554,49,554,50,554,51,554,52,554,53,554,54,554,55,554,56,554,57,554,58,554,59,554,60,554,61,554,62,554,63,554,64,554,65,554,66,554,67,554,68,554,69,554,70,554,71,554,72,554,73,554,74,554,75,554,76,554,77,554,78,554,79,554,80,544,81,519,82,508,83,494,84,485,85,478,86,468,87,461,88,453,89,447,90,441,91,435,92,430,93,423,94,419,95,414,96,408,97,404,98,399,99,395,100,390,101,386,102,382,103,378,104,375,105,371,106,367,107,363,108,359,109,356,110,353,111,349,112,346,113,343,114,340,115,337,116,334,117,331,118,328,119,325,120,322,121,319,122,317,123,315,124,314,125,314,126,314,127,314,128,314,129,314,130,314,131,314,132,314,133,314,134,313,135,311,136,309,137,307,138,305,139,303,140,302,141,300,142,298,143,296,144,295,145,293,146,291,147,289,148,266,149,265,150,264,151,263,152,252,153,251,154,249,155,247,156,246,157,244,158,242,159,240,160,239,161,237,162,235,163,234,164,233,165,233,166,233,167,233,168,233,169,233,170,233,171,232,172,230,173,229,174,223,175,222,176,222,177,222,178,222,179,222,180,222,181,222,182,222,183,222,184,222,185,222,186,222,187,221,188,221,189,220,190,219,191,217,192,215,193,213,194,211,195,209,196,207,197,206,198,204,199,202,200,200,201,198,202,196,203,164,204,162,205,161,206,160,207,158,208,157,209,155,210,154,211,153,212,151,213,150,214,149,215,147,216,146,217,145,218,144,219,142,220,141,221,140,222,139,223,137,224,136,225,135,226,134,227,133,228,132,229,130,230,129,231,128,232,127,233,126,234,125,235,123,236,122,237,121,238,120,239,119,240,118,241,117,242,116,243,115,244,114,245,113,246,112,247,111,248,110,249,109,250,108,251,107,252,106,253,105,254,104,255,103,256,102,257,102,258,101,259,100,260,99,261,98,262,97,263,96,264,95,265,95,266,94,267,93,268,92,269,91,270,90,271,90,272,89,273,88,274,87,275,87,276,86,277,85,278,84,279,84,280,83,281,82,282,82,283,81,284,80,285,79,286,79,287,78,288,77,289,77,290,76,291,75,292,75,293,74,294,73,295,73,296,72,297,72,298,71,299,70,300,70,301,69,302,69,303,68,304,68,305,67,306,66,307,66,308,65,309,65,310,64,311,64,312,63,313,63,314,62,315,62,316,61,317,61,318,60,319,60,320,59,321,59,322,58,323,58,324,57,325,57,326,56,327,56,328,56,329,55,330,55,331,54,332,54,333,54,334,53,335,53,336,52,337,52,338,52,339,51,340,24,340,24,339,25,338,25,337,25,336,24,335,25,334,25,333,25,332,25,331,25,330,25,329,25,328,25,327,25,326,25,325,25,324,26,323,25,322,25,321,25,320,26,319,26,318,26,317,25,316,26,315,26,314,26,313,26,312,26,311,26,310,27,309,27,308,27,307,27,306,27,305,28,304,28,303,28,302,28,301,28,300,29,299,29,298,28,297,28,296,29,295,30,294,30,293,29,292,30,291,30,290,31,289,31,288,31,287,31,286,32,285,32,284,32,283,32,282,32,281,33,280,33,279,33,278,33,277,34,276,35,275,35,274,35,273,35,272,36,271,37,270,36,269,37,268,38,267,39,266,39,265,39,264,39,263,40,262,40,261,41,260,41,259,41,258,42,257,43,256,43,255,43,254,44,253,44,252,45,251,46,250,46,249,46,248,47,247,48,246,48,245,48,244,48,243,49,242,50,241,50,240,51,239,51,238,53,237,53,236,53,235,53,234,54,233,55,232,55,231,56,230,57,229,58,228,58,227,58,226,59,225,60,224,61,223,61,222,61,221,63,220,64,219,64,218,64,217,65,216,66,215,67,214,67,213,68,212,69,211,70,210,70,209,71,208,72,207,73,206,73,205,74,204,76,203,76,202,76,201,77,200,79,199,79,198,80,197,81,196,82,195,82,194,83,193,85,192,85,191,86,190,87,189,89,188,89,187,90,186,91,185,92,184,93,183,94,182,96,181,96,180,97,179,98,178,99,177,100,176,100,175,102,174,103,173,104,172,105,171,106,170,107,169,108,168,110,167,110,166,111,165,112,164,114,163,115,162,116,161,118,160,118,159,119,158,121,157,122,156,123,155,125,154,126,153,127,152,129,151,130,150,131,149,133,148,134,147,134,146,137,145,138,144,139,143,141,142,142,141,143,140,145,139,146,138,148,137,149,136,150,135,150,134,151,133,154,132,155,131,155,130,158,129,159,128,160,127,163,126,166,125,166,124,166,123,166,122,166,121,166,120,166,119,166,118,166,117,166,116,166,115,166,114,166,113,166,112,166,111,167,110,166,109,164,108,163,107,162,106,162,105,162,104,162,103,162,102,162,101,162,100,162,99,162,98,162,97,162,96,162,95,162,94,162,93,162,92,162,91,164,90,166,89,167,88,167,87,167,86,167,85,167,84,167,83,167,82,166,81,165,80,164,79,163,78,163,77,164,76,166,75,168,74,170,73,172,72,174,71,176,70,178,69,179,68,181,67,183,66,185,65,187,64,189,63,191,62,192,61,194,60,259,59,259,58,259,57,259,56,259,55,259,54,258,53,256,52,256,51,255,50,255,49,255,48,255,47,255,46,255,45,255,44,255,43,255,42,255,41,255,40,255,39,255,38,255,37,255,36,257,35,259,34,260,33,260,32,260,31,260,30,260,29,260,28,260,27,259,26,257,25,256,24,256,23,256,22,257,21,259,20,261,19,263,18,265,17,267,16,269,15,271,14,273,13,275,12,276,11,278,10,280,9,282,8,283,7,285,6,509,5,530,4,546,3,551,3],[1098,341,1098,342,1098,343,1098,344,1099,345,1098,346,1098,347,1098,348,1098,349,1098,350,1098,351,1098,352,1098,353,1098,354,1098,355,1098,356,1098,357,1098,358,1098,359,1098,360,1097,361,1097,362,1097,363,1098,364,1097,365,1097,366,1097,367,1097,368,1097,369,1097,370,1096,371,1096,372,1096,373,1096,374,1096,375,1095,376,1095,377,1096,378,1095,379,1095,380,1094,381,1095,382,1095,383,1094,384,1094,385,1093,386,1094,387,1094,388,1093,389,1093,390,1092,391,1092,392,1092,393,1092,394,1091,395,1091,396,1091,397,1091,398,1091,399,1090,400,1090,401,1090,402,1090,403,1090,404,1090,405,1090,406,1090,407,1090,408,1090,409,1090,410,1090,411,1090,412,1090,413,1089,414,1089,415,1089,416,1089,417,1090,418,1090,419,1090,420,1090,421,1090,422,1090,423,1089,424,1089,425,1089,426,1089,427,1089,428,1089,429,1089,430,1089,431,1089,432,1088,433,1088,434,1088,435,1088,436,1088,437,1087,438,1087,439,1087,440,1087,441,1087,442,1087,443,1086,444,1086,445,1086,446,1086,447,1085,448,1085,449,1085,450,1085,451,1084,452,1084,453,1084,454,1084,455,1083,456,1083,457,1083,458,1082,459,1082,460,1082,461,1081,462,1081,463,1081,464,1081,465,1080,466,1080,467,1079,468,1079,469,1079,470,1078,471,1078,472,1078,473,1077,474,1077,475,1076,476,1076,477,1076,478,1075,479,1075,480,1074,481,1074,482,1074,483,1073,484,1073,485,1072,486,1072,487,1071,488,1071,489,1070,490,1070,491,1069,492,1069,493,1068,494,1068,495,1067,496,1067,497,1066,498,1066,499,1065,500,1064,501,1064,502,1063,503,1063,504,1062,505,1062,506,1061,507,1061,508,1060,509,1059,510,1059,511,1059,512,1059,513,1059,514,1059,515,1059,516,1059,517,1059,518,1058,519,1058,520,1057,521,1056,522,1055,523,1055,524,1054,525,1053,526,1052,527,1051,528,1050,529,1046,530,1045,531,1044,532,1043,533,1042,534,1042,535,1041,536,1040,537,1039,538,1038,539,1037,540,1037,541,1036,542,1035,543,1034,544,1033,545,1032,546,1032,547,1031,548,1030,549,1029,550,1028,551,1027,552,1026,553,1025,554,1024,555,1023,556,1022,557,1021,558,1020,559,1019,560,1018,561,1017,562,1016,563,1016,564,1015,565,1013,566,1012,567,1011,568,1010,569,1010,570,1010,571,1010,572,1010,573,1010,574,1010,575,1009,576,1008,577,1007,578,1005,579,1004,580,1002,581,1001,582,999,583,997,584,996,585,994,586,993,587,991,588,990,589,988,590,986,591,985,592,984,593,963,594,962,595,961,596,961,597,960,598,959,599,958,600,949,601,947,602,946,603,944,604,943,605,942,606,940,607,939,608,937,609,936,610,935,611,934,612,932,613,931,614,930,615,928,616,928,617,928,618,928,619,928,620,928,621,928,622,927,623,926,624,924,625,920,626,918,627,917,628,917,629,917,630,917,631,917,632,917,633,917,634,917,635,917,636,917,637,917,638,917,639,917,640,917,641,916,642,914,643,913,644,911,645,910,646,908,647,906,648,905,649,903,650,902,651,900,652,899,653,897,654,896,655,894,656,892,657,891,658,891,659,861,660,858,661,855,662,853,663,850,664,848,665,845,666,843,667,840,668,837,669,834,670,832,671,829,672,825,673,822,674,819,675,816,676,813,677,810,678,807,679,803,680,800,681,796,682,793,683,789,684,786,685,786,686,786,687,786,688,784,689,780,690,776,691,773,692,754,693,749,694,745,695,740,696,735,697,730,698,725,699,720,700,714,701,708,702,703,703,696,704,689,705,683,706,675,707,667,708,658,709,648,710,637,711,626,712,625,713,624,714,617,715,609,715,554,714,554,713,554,712,554,711,554,710,554,709,554,708,554,707,554,706,554,705,554,704,554,703,554,702,554,701,554,700,554,699,554,698,554,697,554,696,554,695,554,694,554,693,554,692,554,691,554,690,554,689,554,688,554,687,554,686,554,685,554,684,554,683,554,682,554,681,554,680,554,679,554,678,554,677,554,676,554,675,554,674,554,673,554,672,554,671,554,670,554,669,554,668,554,667,554,666,554,665,554,664,554,663,554,662,554,661,554,660,554,659,554,658,554,657,554,656,554,655,554,654,554,653,554,652,554,651,554,650,554,649,554,648,554,647,554,646,554,645,554,644,554,643,554,642,554,641,554,640,554,639,554,638,554,637,554,636,554,635,554,634,554,633,594,632,604,631,627,630,643,629,650,628,672,627,678,626,685,625,691,624,698,623,704,622,711,621,712,620,719,619,725,618,731,617,732,616,738,615,745,614,746,613,752,612,758,611,759,610,765,609,771,608,772,607,778,606,779,605,784,604,785,603,791,602,797,601,798,600,803,599,804,598,809,597,810,596,811,595,817,594,822,593,823,592,830,591,831,590,832,589,836,588,837,587,842,586,843,585,845,584,850,583,851,582,856,581,857,580,861,579,862,578,862,577,862,576,862,575,862,574,862,573,862,572,862,571,862,570,862,569,862,568,862,567,859,566,858,565,858,564,858,563,858,562,858,561,858,560,858,559,858,558,858,557,858,556,858,555,858,554,858,553,858,552,858,551,858,550,858,549,859,548,861,547,862,546,862,545,862,544,862,543,862,542,862,541,862,540,862,539,861,538,859,537,858,536,859,535,860,534,861,533,863,532,864,531,866,530,868,529,869,528,871,527,872,526,874,525,876,524,877,523,879,522,880,521,882,520,883,519,885,518,886,517,888,516,889,515,948,514,949,513,951,512,953,511,954,510,955,509,955,508,955,507,955,506,955,505,955,504,955,503,955,502,954,501,952,500,951,499,951,498,951,497,951,496,951,495,951,494,951,493,951,492,951,491,951,490,951,489,951,488,951,487,951,486,951,485,951,484,953,483,954,482,955,481,955,480,955,479,955,478,955,477,955,476,956,475,955,474,953,473,952,472,951,471,951,470,952,469,954,468,955,467,957,466,959,465,960,464,962,463,963,462,965,461,967,460,968,459,970,458,971,457,973,456,974,455,976,454,977,453,978,452,980,451,982,450,1034,449,1035,448,1035,447,1036,446,1037,445,1038,444,1038,443,1038,442,1039,441,1039,440,1041,439,1042,438,1042,437,1042,436,1043,435,1044,434,1045,433,1045,432,1046,431,1046,430,1046,429,1047,428,1048,427,1048,426,1048,425,1049,424,1050,423,1051,422,1051,421,1051,420,1052,419,1052,418,1053,417,1054,416,1054,415,1054,414,1055,413,1056,412,1056,411,1056,410,1056,409,1057,408,1058,407,1058,406,1058,405,1058,404,1059,403,1059,402,1060,401,1061,400,1061,399,1061,398,1062,397,1062,396,1062,395,1063,394,1063,393,1063,392,1063,391,1063,390,1064,389,1065,388,1065,387,1065,386,1065,385,1066,384,1066,383,1066,382,1067,381,1067,380,1067,379,1067,378,1067,377,1068,376,1068,375,1068,374,1069,373,1069,372,1069,371,1069,370,1069,369,1069,368,1070,367,1070,366,1070,365,1070,364,1070,363,1070,362,1070,361,1071,360,1071,359,1071,358,1071,357,1071,356,1071,355,1071,354,1071,353,1071,352,1071,351,1071,350,1071,349,1071,348,1071,347,1071,346,1071,345,1071,344,1071,343,1071,342,1071,341,1098,341],[51,341,51,342,51,343,51,344,52,345,52,346,52,347,51,348,51,349,51,350,51,351,51,352,51,353,51,354,51,355,51,356,52,357,52,358,52,359,52,360,52,361,52,362,52,363,53,364,53,365,53,366,53,367,53,368,53,369,54,370,54,371,54,372,54,373,54,374,55,375,55,376,56,377,56,378,56,379,56,380,56,381,57,382,57,383,57,384,58,385,58,386,58,387,58,388,59,389,59,390,60,391,60,392,60,393,60,394,60,395,61,396,61,397,61,398,61,399,62,400,63,401,63,402,64,403,64,404,64,405,64,406,65,407,66,408,66,409,66,410,67,411,67,412,68,413,68,414,69,415,69,416,70,417,70,418,71,419,72,420,72,421,72,422,73,423,74,424,74,425,74,426,75,427,76,428,76,429,77,430,77,431,77,432,78,433,79,434,80,435,80,436,81,437,81,438,82,439,83,440,84,441,84,442,85,443,85,444,86,445,87,446,87,447,139,448,140,449,142,450,143,451,144,452,146,453,148,454,149,455,150,456,152,457,154,458,155,459,157,460,158,461,160,462,162,463,163,464,165,465,166,466,168,467,169,468,169,469,168,470,166,471,165,472,165,473,165,474,165,475,165,476,165,477,165,478,166,479,167,480,168,481,170,482,169,483,169,484,169,485,170,486,170,487,170,488,170,489,170,490,170,491,170,492,170,493,170,494,170,495,170,496,169,497,168,498,167,499,166,500,166,501,166,502,166,503,166,504,166,505,166,506,166,507,166,508,169,509,170,510,172,511,173,512,232,513,233,514,235,515,236,516,237,517,239,518,240,519,242,520,244,521,245,522,247,523,248,524,250,525,252,526,253,527,255,528,256,529,258,530,259,531,261,532,262,533,262,534,261,535,259,536,258,537,258,538,258,539,258,540,258,541,258,542,258,543,258,544,260,545,262,546,262,547,263,548,263,549,263,550,263,551,263,552,263,553,263,554,263,555,263,556,263,557,263,558,263,559,263,560,263,561,263,562,262,563,261,564,258,565,258,566,259,567,259,568,259,569,259,570,259,571,259,572,259,573,259,574,259,575,259,576,259,577,259,578,261,579,266,580,267,581,272,582,273,583,278,584,279,585,280,586,285,587,286,588,291,589,292,590,298,591,299,592,300,593,306,594,312,595,313,596,313,597,319,598,320,599,325,600,326,601,331,602,337,603,338,604,344,605,345,606,351,607,352,608,358,609,364,610,365,611,370,612,376,613,377,614,385,615,390,616,392,617,397,618,404,619,410,620,417,621,419,622,425,623,431,624,438,625,445,626,451,627,471,628,480,629,496,630,519,631,529,632,551,633,554,634,554,635,554,636,554,637,554,638,554,639,554,640,554,641,554,642,554,643,554,644,554,645,554,646,554,647,554,648,554,649,554,650,554,651,554,652,554,653,554,654,554,655,554,656,554,657,554,658,554,659,554,660,554,661,554,662,554,663,554,664,554,665,554,666,554,667,554,668,554,669,554,670,554,671,554,672,554,673,554,674,554,675,554,676,554,677,554,678,554,679,554,680,554,681,554,682,554,683,554,684,554,685,554,686,554,687,554,688,554,689,554,690,554,691,554,692,554,693,554,694,554,695,554,696,554,697,554,698,554,699,554,700,554,701,554,702,554,703,554,704,554,705,554,706,554,707,554,708,554,709,554,710,554,711,554,712,554,713,554,714,513,715,506,715,498,714,498,713,493,712,483,711,473,710,463,709,456,708,448,707,440,706,433,705,426,704,420,703,414,702,408,701,403,700,398,699,392,698,387,697,381,696,377,695,373,694,368,693,350,692,346,691,342,690,338,689,337,688,337,687,337,686,336,685,333,684,330,683,326,682,323,681,319,680,316,679,313,678,309,677,306,676,303,675,300,674,298,673,295,672,292,671,289,670,286,669,283,668,280,667,278,666,275,665,272,664,270,663,267,662,264,661,262,660,259,659,257,658,255,657,229,656,228,655,227,654,225,653,223,652,222,651,220,650,219,649,217,648,216,647,214,646,213,645,211,644,210,643,208,642,206,641,205,640,204,639,204,638,203,637,203,636,203,635,203,634,203,633,203,632,203,631,203,630,203,629,203,628,203,627,203,626,202,625,200,624,196,623,195,622,194,621,192,620,192,619,192,618,192,617,192,616,192,615,192,614,192,613,190,612,189,611,187,610,186,609,185,608,183,607,182,606,180,605,179,604,178,603,176,602,175,601,173,600,172,599,163,598,162,597,161,596,160,595,159,594,159,593,157,592,137,591,136,590,134,589,133,588,131,587,130,586,128,585,127,584,125,583,123,582,122,581,120,580,119,579,117,578,115,577,114,576,112,575,111,574,111,573,111,572,111,571,111,570,111,569,110,568,110,567,109,566,108,565,107,564,106,563,105,562,104,561,103,560,102,559,101,558,100,557,99,556,98,555,97,554,97,553,96,552,95,551,94,550,93,549,92,548,91,547,90,546,89,545,88,544,88,543,87,542,86,541,85,540,84,539,84,538,83,537,82,536,81,535,80,534,80,533,79,532,78,531,77,530,72,529,71,528,70,527,69,526,69,525,68,524,67,523,66,522,66,521,65,520,64,519,64,518,63,517,63,516,63,515,63,514,63,513,64,512,64,511,63,510,63,509,62,508,62,507,61,506,60,505,60,504,59,503,59,502,58,501,57,500,57,499,56,498,56,497,55,496,55,495,54,494,54,493,53,492,53,491,52,490,52,489,51,488,51,487,50,486,50,485,49,484,49,483,49,482,48,481,48,480,47,479,47,478,47,477,46,476,46,475,45,474,45,473,45,472,44,471,44,470,43,469,43,468,43,467,42,466,42,465,42,464,41,463,41,462,41,461,40,460,40,459,40,458,40,457,39,456,39,455,39,454,38,453,38,452,38,451,38,450,37,449,37,448,37,447,37,446,37,445,36,444,36,443,36,442,36,441,35,440,35,439,35,438,35,437,35,436,35,435,35,434,34,433,34,432,34,431,34,430,34,429,33,428,33,427,33,426,33,425,33,424,33,423,33,422,33,421,33,420,33,419,33,418,33,417,33,416,33,415,33,414,33,413,32,412,32,411,32,410,32,409,32,408,32,407,32,406,32,405,32,404,32,403,33,402,33,401,33,400,32,399,31,398,31,397,32,396,31,395,31,394,30,393,30,392,30,391,30,390,29,389,29,388,29,387,29,386,29,385,28,384,28,383,28,382,28,381,28,380,27,379,27,378,27,377,27,376,27,375,26,374,26,373,27,372,27,371,26,370,26,369,26,368,26,367,26,366,25,365,25,364,25,363,25,362,25,361,25,360,24,359,25,358,25,357,25,356,24,355,24,354,25,353,25,352,25,351,24,350,24,349,25,348,25,347,24,346,24,345,24,344,25,343,25,342,24,341,51,341]],32:[[556,13,558,14,599,15,601,16,602,17,639,18,645,19,648,20,650,21,666,22,692,23,695,24,696,25,701,26,723,27,725,28,726,29,755,30,758,31,760,32,763,33,764,34,766,35,767,36,772,37,775,38,778,39,780,40,783,41,785,42,787,43,802,44,803,45,804,46,805,47,806,48,807,49,824,50,827,51,829,52,843,53,845,54,847,55,848,56,848,57,849,58,855,59,856,60,857,61,859,62,860,63,861,64,862,65,866,66,873,67,875,68,877,69,878,70,879,71,879,72,880,73,889,74,900,75,902,76,903,77,905,78,906,79,908,80,909,81,911,82,913,83,914,84,915,85,916,86,917,87,917,88,918,89,918,90,919,91,920,92,921,93,921,94,921,95,922,96,923,97,923,98,924,99,924,100,925,101,925,102,926,103,927,104,952,105,953,106,955,107,956,108,957,109,959,110,960,111,961,112,963,113,964,114,966,115,968,116,968,117,969,118,970,119,970,120,971,121,972,122,972,123,973,124,973,125,974,126,974,127,975,128,976,129,976,130,977,131,978,132,978,133,979,134,980,135,980,136,980,137,981,138,981,139,987,140,989,141,990,142,991,143,991,144,992,145,992,146,993,147,993,148,994,149,994,150,995,151,995,152,996,153,996,154,997,155,998,156,999,157,1000,158,1001,159,1002,160,1003,161,1003,162,1003,163,1004,164,1004,165,1005,166,1006,167,1007,168,1009,169,1016,170,1017,171,1018,172,1019,173,1019,174,1019,175,1020,176,1020,177,1020,178,1020,179,1020,180,1021,181,1022,182,1023,183,1024,184,1026,185,1028,186,1029,187,1029,188,1030,189,1030,190,1031,191,1032,192,1033,193,1034,194,1035,195,1036,196,1037,197,1037,198,1038,199,1039,200,1040,201,1040,202,1041,203,1041,204,1042,205,1042,206,1042,207,1043,208,1043,209,1043,210,1044,211,1045,212,1045,213,1045,214,1045,215,1045,216,1045,217,1045,218,1045,219,1045,220,1047,221,1048,222,1050,223,1051,224,1052,225,1053,226,1054,227,1055,228,1055,229,1056,230,1056,231,1057,232,1057,233,1058,234,1058,235,1059,236,1059,237,1059,238,1060,239,1061,240,1062,241,1062,242,1063,243,1064,244,1065,245,1065,246,1065,247,1066,248,1066,249,1066,250,1066,251,1066,252,1066,253,1066,254,1067,255,1067,256,1068,257,1068,258,1068,259,1069,260,1069,261,1069,262,1070,263,1070,264,1071,265,1072,266,1072,267,1072,268,1072,269,1073,270,1075,271,1075,272,1076,273,1076,274,1077,275,1077,276,1078,277,1078,278,1078,279,1078,280,1078,281,1078,282,1078,283,1078,284,1078,285,1078,286,1079,287,1079,288,1080,289,1089,290,1089,291,1089,292,1088,293,1088,294,1088,295,1087,296,1086,297,1085,298,1084,299,1083,300,1083,301,1082,302,1082,303,1083,304,1083,305,1083,306,1085,307,1087,308,1088,309,1089,310,1089,311,1090,312,1090,313,1090,314,1090,315,1091,316,1091,317,1091,318,1091,319,1091,320,1091,321,1091,322,1091,323,1090,324,1090,325,1089,326,1088,327,1086,328,1086,329,1086,330,1087,331,1087,332,1088,333,1088,334,1089,335,1089,336,1089,337,1102,338,1102,339,1102,340,1101,341,1037,341,1037,340,1036,339,1036,338,1036,337,1036,336,1036,335,1036,334,1036,333,1037,332,1037,331,1037,330,1034,329,1033,328,1032,327,1032,326,1032,325,1032,324,1032,323,1032,322,1032,321,1032,320,1030,319,1029,318,1028,317,1027,316,1027,315,1027,314,1027,313,1026,312,1026,311,1026,310,1026,309,1026,308,1026,307,1027,306,1028,305,1028,304,1028,303,1029,302,1028,301,1026,300,1026,299,1026,298,1026,297,1027,296,1027,295,1027,294,1027,293,1027,292,1027,291,1028,290,1028,289,1028,288,1024,287,1021,286,1020,285,1020,284,1020,283,1018,282,1017,281,1017,280,1016,279,1016,278,1014,277,1014,276,1013,275,1013,274,1013,273,1013,272,1013,271,1013,270,1013,269,1013,268,1011,267,1010,266,1010,265,1010,264,1009,263,1009,262,1009,261,1009,260,1009,259,1009,258,1010,257,993,256,992,255,991,254,991,253,992,252,997,251,989,250,987,249,987,248,986,247,985,246,984,245,983,244,982,243,981,242,981,241,980,240,980,239,980,238,979,237,977,236,976,235,975,234,974,233,974,232,974,231,975,230,975,229,974,228,974,227,974,226,969,225,968,224,967,223,968,222,966,221,964,220,963,219,962,218,962,217,963,216,968,215,969,214,973,213,973,212,961,211,961,210,956,209,956,208,954,207,945,206,943,205,940,204,938,203,937,202,936,201,936,200,936,199,936,198,936,197,936,196,937,195,937,194,938,193,936,192,932,191,928,190,927,189,926,188,926,187,922,186,921,185,920,184,920,183,920,182,920,181,920,180,920,179,920,178,920,177,920,176,920,175,920,174,920,173,920,172,919,171,919,170,919,169,919,168,919,167,919,166,919,165,919,164,919,163,919,162,919,161,919,160,919,159,919,158,919,157,871,156,869,155,868,154,868,153,868,152,868,151,868,150,868,149,868,148,868,147,866,146,864,145,862,144,862,143,859,142,858,141,858,140,857,139,857,138,856,137,856,136,854,135,854,134,854,133,853,132,852,131,841,130,838,129,835,128,834,127,829,126,828,125,827,124,818,123,815,122,815,121,807,120,805,119,804,118,803,117,803,116,798,115,795,114,793,113,792,112,792,111,790,110,776,109,748,108,746,107,745,106,743,105,741,104,716,103,715,102,715,101,707,100,705,99,702,98,677,97,674,96,674,95,669,94,666,93,665,92,622,91,621,90,615,89,611,88,554,87,554,86,554,85,554,84,554,83,554,82,554,81,554,80,554,79,554,78,554,77,554,76,554,75,554,74,554,73,554,72,554,71,554,70,554,69,554,68,554,67,554,66,554,65,554,64,554,63,554,62,554,61,554,60,554,59,554,58,554,57,554,56,554,55,554,54,554,53,554,52,554,51,554,50,554,49,554,48,554,47,554,46,554,45,554,44,554,43,554,42,554,41,554,40,554,39,554,38,554,37,554,36,554,35,554,34,554,33,554,32,554,31,554,30,554,29,554,28,554,27,554,26,554,25,554,24,554,23,554,22,554,21,554,20,554,19,554,18,554,17,554,16,554,15,554,14,554,13,556,13],[495,11,497,12,554,13,554,14,554,15,554,16,554,17,554,18,554,19,554,20,554,21,554,22,554,23,554,24,554,25,554,26,554,27,554,28,554,29,554,30,554,31,554,32,554,33,554,34,554,35,554,36,554,37,554,38,554,39,554,40,554,41,554,42,554,43,554,44,554,45,554,46,554,47,554,48,554,49,554,50,554,51,554,52,554,53,554,54,554,55,554,56,554,57,554,58,554,59,554,60,554,61,554,62,554,63,554,64,554,65,554,66,554,67,554,68,554,69,554,70,554,71,554,72,554,73,554,74,554,75,554,76,554,77,554,78,554,79,554,80,554,81,554,82,554,83,554,84,554,85,554,86,554,87,470,88,469,89,467,90,463,91,432,92,431,93,429,94,420,95,415,96,414,97,412,98,394,99,393,100,393,101,392,102,391,103,389,104,389,105,387,106,386,107,384,108,379,109,376,110,373,111,369,112,367,113,364,114,338,115,331,116,324,117,323,118,323,119,324,120,324,121,323,122,323,123,322,124,319,125,316,126,307,127,308,128,308,129,308,130,308,131,314,132,307,133,306,134,305,135,304,136,300,137,298,138,296,139,289,140,285,141,277,142,275,143,274,144,274,145,274,146,272,147,222,148,222,149,222,150,222,151,222,152,222,153,222,154,222,155,222,156,222,157,222,158,222,159,222,160,222,161,222,162,222,163,222,164,222,165,222,166,221,167,222,168,222,169,222,170,222,171,222,172,222,173,222,174,222,175,222,176,220,177,219,178,207,179,207,180,207,181,205,182,203,183,202,184,201,185,198,186,189,187,189,188,189,189,188,190,187,191,186,192,184,193,183,194,183,195,183,196,183,197,183,198,183,199,182,200,181,201,178,202,178,203,170,204,170,205,169,206,169,207,170,208,170,209,170,210,170,211,170,212,168,213,165,214,165,215,163,216,147,217,146,218,146,219,146,220,146,221,146,222,146,223,145,224,145,225,143,226,144,227,145,228,145,229,144,230,143,231,141,232,141,233,140,234,140,235,137,236,132,237,127,238,128,239,128,240,128,241,128,242,128,243,128,244,128,245,128,246,128,247,126,248,126,249,125,250,125,251,124,252,124,253,125,254,125,255,125,256,125,257,125,258,125,259,125,260,124,261,123,262,122,263,120,264,116,265,117,266,118,267,119,268,119,269,119,270,119,271,119,272,119,273,119,274,119,275,118,276,116,277,116,278,115,279,115,280,114,281,114,282,113,283,113,284,112,285,112,286,111,287,109,288,105,289,105,290,105,291,104,292,103,293,103,294,103,295,104,296,104,297,103,298,102,299,102,300,101,301,101,302,100,303,95,304,95,305,95,306,95,307,95,308,96,309,97,310,97,311,98,312,98,313,98,314,97,315,97,316,97,317,97,318,97,319,96,320,96,321,94,322,92,323,91,324,90,325,90,326,90,327,90,328,90,329,90,330,90,331,89,332,89,333,87,334,86,335,85,336,86,337,86,338,86,339,86,340,86,341,27,341,27,340,27,339,27,338,27,337,27,336,27,335,27,334,28,333,28,332,29,331,30,330,30,329,31,328,32,327,33,326,33,325,33,324,33,323,33,322,33,321,34,320,34,319,34,318,34,317,34,316,34,315,34,314,34,313,34,312,34,311,34,310,34,309,35,308,35,307,35,306,34,305,32,304,31,303,30,302,30,301,29,300,31,299,34,298,40,297,39,296,38,295,38,294,37,293,36,292,36,291,35,290,34,289,34,288,34,287,33,286,33,285,33,284,33,283,33,282,43,281,43,280,43,279,43,278,43,277,43,276,44,275,44,274,45,273,45,272,46,271,47,270,47,269,47,268,48,267,48,266,48,265,49,264,49,263,50,262,50,261,51,260,51,259,52,258,52,257,52,256,53,255,53,254,54,253,54,252,55,251,56,250,56,249,57,248,58,247,58,246,58,245,59,244,59,243,60,242,61,241,62,240,63,239,63,238,63,237,63,236,63,235,63,234,63,233,63,232,64,231,64,230,64,229,65,228,65,227,66,226,66,225,67,224,68,223,69,222,70,221,71,220,73,219,74,218,75,217,76,216,76,215,77,214,78,213,79,212,80,211,82,210,83,209,83,208,84,207,84,206,85,205,85,204,85,203,85,202,86,201,86,200,86,199,87,198,87,197,87,196,87,195,88,194,88,193,89,192,89,191,90,190,90,189,91,188,92,187,93,186,94,185,96,184,97,183,98,182,99,181,99,180,100,179,101,178,102,177,103,176,104,175,105,174,107,173,108,172,108,171,108,170,109,169,110,168,111,167,112,166,113,165,114,164,116,163,116,162,117,161,117,160,118,159,118,158,119,157,120,156,121,155,122,154,123,153,124,152,125,151,126,150,127,149,128,148,130,147,132,146,134,145,136,144,136,143,136,142,137,141,138,140,138,139,139,138,140,137,141,136,142,135,144,134,146,133,148,132,149,131,149,130,150,129,150,128,151,127,152,126,152,125,154,124,156,123,162,122,164,121,165,120,165,119,166,118,166,117,167,116,167,115,168,114,169,113,169,112,171,111,173,110,173,109,174,108,175,107,177,106,178,105,179,104,181,103,182,102,184,101,185,100,186,99,188,98,189,97,214,96,215,95,216,94,216,93,217,92,218,91,218,90,219,89,220,88,220,87,221,86,222,85,223,84,223,83,224,82,225,81,226,80,228,79,228,78,228,77,228,76,229,75,230,74,232,73,234,72,236,71,237,70,239,69,240,68,242,67,255,66,260,65,264,64,266,63,268,62,268,61,268,60,269,59,270,58,271,57,272,56,274,55,277,54,291,53,293,52,301,51,303,50,307,49,308,48,310,47,311,46,313,45,314,44,316,43,318,42,324,41,332,40,334,39,335,38,337,37,343,36,345,35,347,34,348,33,350,32,352,31,371,30,372,29,374,28,383,27,386,26,387,25,389,24,391,23,394,22,396,21,401,20,416,19,418,18,424,17,441,16,441,15,443,14,444,13,448,12,480,11,495,11],[1101,342,1101,343,1100,344,1100,345,1099,346,1099,347,1098,348,1098,349,1097,350,1096,351,1095,352,1094,353,1094,354,1094,355,1093,356,1093,357,1093,358,1092,359,1091,360,1091,361,1092,362,1093,363,1095,364,1098,365,1098,366,1097,367,1096,368,1092,369,1092,370,1092,371,1092,372,1092,373,1092,374,1093,375,1093,376,1093,377,1093,378,1093,379,1093,380,1093,381,1093,382,1094,383,1094,384,1095,385,1095,386,1096,387,1097,388,1098,389,1098,390,1099,391,1099,392,1099,393,1099,394,1099,395,1099,396,1099,397,1099,398,1099,399,1099,400,1099,401,1099,402,1099,403,1098,404,1098,405,1096,406,1096,407,1093,408,1093,409,1093,410,1092,411,1092,412,1091,413,1090,414,1089,415,1088,416,1087,417,1086,418,1085,419,1084,420,1084,421,1084,422,1084,423,1083,424,1084,425,1085,426,1085,427,1086,428,1086,429,1086,430,1086,431,1086,432,1086,433,1084,434,1084,435,1084,436,1084,437,1083,438,1082,439,1081,440,1082,441,1082,442,1082,443,1083,444,1082,445,1082,446,1082,447,1081,448,1079,449,1080,450,1079,451,1079,452,1078,453,1078,454,1078,455,1078,456,1078,457,1079,458,1080,459,1080,460,1080,461,1080,462,1080,463,1080,464,1079,465,1079,466,1078,467,1078,468,1077,469,1075,470,1074,471,1074,472,1073,473,1073,474,1072,475,1072,476,1071,477,1070,478,1068,479,1068,480,1066,481,1062,482,1062,483,1063,484,1064,485,1064,486,1065,487,1066,488,1066,489,1066,490,1067,491,1067,492,1068,493,1068,494,1068,495,1067,496,1067,497,1067,498,1066,499,1066,500,1065,501,1065,502,1064,503,1063,504,1063,505,1063,506,1063,507,1062,508,1061,509,1060,510,1060,511,1060,512,1059,513,1057,514,1057,515,1056,516,1055,517,1054,518,1053,519,1045,520,1045,521,1046,522,1048,523,1048,524,1049,525,1049,526,1049,527,1049,528,1049,529,1049,530,1048,531,1043,532,1043,533,1040,534,1034,535,1032,536,1031,537,1025,538,1024,539,1023,540,1020,541,1020,542,1020,543,1021,544,1021,545,1021,546,1021,547,1021,548,1021,549,1020,550,1020,551,1020,552,1020,553,1020,554,1021,555,1021,556,1021,557,1021,558,1021,559,1021,560,1019,561,1019,562,1016,563,1016,564,1016,565,1015,566,1015,567,1015,568,1015,569,1015,570,1014,571,1012,572,1011,573,1009,574,1003,575,1003,576,1003,577,1001,578,998,579,998,580,997,581,994,582,990,583,990,584,990,585,990,586,990,587,990,588,990,589,990,590,990,591,990,592,990,593,990,594,990,595,989,596,938,597,938,598,938,599,938,600,938,601,938,602,938,603,938,604,938,605,938,606,938,607,938,608,938,609,938,610,938,611,938,612,938,613,938,614,938,615,938,616,938,617,939,618,939,619,939,620,938,621,938,622,938,623,938,624,938,625,937,626,935,627,914,628,913,629,911,630,910,631,908,632,914,633,914,634,914,635,914,636,913,637,896,638,888,639,888,640,888,641,888,642,889,643,889,644,888,645,887,646,885,647,880,648,880,649,880,650,879,651,878,652,877,653,874,654,873,655,870,656,868,657,867,658,859,659,858,660,857,661,859,662,860,663,860,664,860,665,860,666,859,667,858,668,831,669,829,670,826,671,823,672,820,673,815,674,810,675,821,676,821,677,821,678,821,679,820,680,811,681,795,682,790,683,785,684,776,685,776,686,775,687,774,688,766,689,757,690,756,691,755,692,754,693,749,694,749,695,744,696,740,697,732,698,729,699,723,700,722,701,710,702,707,703,724,704,725,705,726,706,726,707,726,708,725,709,724,710,723,711,680,712,679,713,678,714,678,715,676,716,670,717,667,718,622,719,621,720,608,721,607,722,603,722,599,721,577,720,565,719,563,718,564,717,564,716,575,715,600,714,556,713,554,712,554,711,554,710,554,709,554,708,554,707,554,706,554,705,554,704,554,703,554,702,554,701,554,700,554,699,554,698,554,697,554,696,554,695,554,694,554,693,554,692,554,691,554,690,554,689,554,688,554,687,554,686,554,685,554,684,554,683,554,682,554,681,554,680,554,679,554,678,554,677,554,676,554,675,554,674,554,673,554,672,554,671,554,670,554,669,554,668,554,667,554,666,554,665,554,664,554,663,554,662,554,661,554,660,554,659,554,658,554,657,554,656,554,655,554,654,554,653,554,652,554,651,554,650,554,649,554,648,554,647,554,646,554,645,554,644,554,643,554,642,554,641,554,640,554,639,554,638,554,637,554,636,554,635,554,634,554,633,554,632,554,631,554,630,554,629,563,628,583,627,584,626,662,625,663,624,665,623,667,622,670,621,674,620,690,619,693,618,695,617,701,616,731,615,731,614,732,613,733,612,733,611,734,610,735,609,737,608,746,607,750,606,760,605,761,604,765,603,768,602,769,601,770,600,772,599,773,598,774,597,776,596,778,595,782,594,804,593,805,592,806,591,808,590,816,589,817,588,819,587,820,586,821,585,823,584,825,583,830,582,830,581,831,580,832,579,833,578,835,577,837,576,848,575,854,574,857,573,866,572,867,571,868,570,869,569,871,568,883,567,884,566,885,565,885,564,886,563,886,562,887,561,888,560,888,559,889,558,890,557,891,556,892,555,894,554,896,553,897,552,899,551,900,550,901,549,903,548,904,547,905,546,907,545,929,544,931,543,932,542,932,541,933,540,934,539,935,538,935,537,936,536,937,535,937,534,938,533,939,532,939,531,940,530,940,529,941,528,941,527,943,526,944,525,945,524,947,523,948,522,950,521,951,520,953,519,954,518,955,517,957,516,958,515,960,514,964,513,965,512,965,511,966,510,966,509,967,508,968,507,968,506,969,505,969,504,970,503,970,502,971,501,971,500,972,499,972,498,973,497,975,496,978,495,980,494,981,493,981,492,982,491,983,490,984,489,985,488,986,487,986,486,986,485,986,484,987,483,987,482,988,481,988,480,989,479,990,478,990,477,991,476,992,475,993,474,994,473,995,472,995,471,996,470,996,469,997,468,997,467,997,466,997,465,997,464,997,463,997,462,997,461,998,460,998,459,999,458,1000,457,1001,456,1003,455,1004,454,1005,453,1005,452,1006,451,1006,450,1007,449,1007,448,1008,447,1009,446,1009,445,1010,444,1010,443,1011,442,1011,441,1012,440,1012,439,1012,438,1013,437,1013,436,1013,435,1014,434,1014,433,1014,432,1014,431,1014,430,1014,429,1015,428,1015,427,1015,426,1015,425,1016,424,1016,423,1017,422,1017,421,1018,420,1019,419,1020,418,1020,417,1020,416,1020,415,1020,414,1020,413,1020,412,1021,411,1021,410,1022,409,1023,408,1023,407,1023,406,1023,405,1023,404,1024,403,1024,402,1024,401,1025,400,1025,399,1025,398,1025,397,1026,396,1027,395,1027,394,1029,393,1030,392,1031,391,1031,390,1031,389,1031,388,1031,387,1031,386,1031,385,1031,384,1031,383,1031,382,1031,381,1031,380,1032,379,1032,378,1033,377,1034,376,1035,375,1035,374,1036,373,1036,372,1036,371,1036,370,1036,369,1036,368,1036,367,1037,366,1037,365,1037,364,1038,363,1038,362,1039,361,1039,360,1040,359,1040,358,1040,357,1040,356,1040,355,1040,354,1039,353,1039,352,1039,351,1039,350,1039,349,1039,348,1039,347,1039,346,1039,345,1039,344,1039,343,1038,342,1101,342],[86,342,86,343,86,344,86,345,86,346,85,347,85,348,85,349,85,350,85,351,86,352,86,353,86,354,85,355,85,356,85,357,85,358,85,359,85,360,85,361,85,362,85,363,85,364,85,365,86,366,86,367,87,368,87,369,88,370,89,371,89,372,90,373,90,374,91,375,91,376,92,377,92,378,92,379,92,380,92,381,92,382,92,383,92,384,92,385,92,386,92,387,93,388,93,389,94,390,95,391,95,392,96,393,96,394,96,395,276,396,276,397,96,398,96,399,96,400,97,401,97,402,97,403,97,404,97,405,97,406,97,407,97,408,96,409,96,410,96,411,97,412,98,413,98,414,99,415,100,416,100,417,101,418,101,419,102,420,105,421,106,422,108,423,109,424,110,425,110,426,111,427,112,428,113,429,113,430,114,431,115,432,116,433,116,434,116,435,117,436,117,437,117,438,117,439,116,440,117,441,117,442,118,443,119,444,119,445,120,446,120,447,121,448,122,449,122,450,123,451,124,452,124,453,125,454,128,455,130,456,131,457,132,458,133,459,133,460,134,461,135,462,136,463,137,464,138,465,139,466,140,467,140,468,141,469,141,470,142,471,142,472,142,473,142,474,142,475,143,476,143,477,145,478,145,479,146,480,147,481,147,482,147,483,147,484,147,485,148,486,148,487,149,488,149,489,149,490,150,491,150,492,151,493,151,494,152,495,153,496,153,497,154,498,155,499,158,500,159,501,161,502,166,503,168,504,169,505,169,506,170,507,171,508,172,509,173,510,175,511,176,512,177,513,178,514,179,515,180,516,180,517,181,518,182,519,183,520,185,521,185,522,186,523,187,524,187,525,188,526,189,527,189,528,190,529,190,530,191,531,192,532,192,533,193,534,193,535,194,536,195,537,195,538,196,539,222,540,224,541,226,542,227,543,228,544,229,545,231,546,232,547,233,548,235,549,237,550,238,551,239,552,240,553,240,554,241,555,242,556,243,557,244,558,246,559,252,560,253,561,255,562,255,563,257,564,269,565,273,566,274,567,275,568,276,569,282,570,287,571,288,572,295,573,299,574,300,575,301,576,302,577,303,578,303,579,304,580,305,581,306,582,307,583,308,584,309,585,310,586,310,587,311,588,322,589,324,590,325,591,327,592,328,593,329,594,329,595,331,596,332,597,333,598,340,599,357,600,360,601,361,602,371,603,372,604,374,605,374,606,383,607,385,608,386,609,395,610,399,611,415,612,418,613,419,614,433,615,435,616,450,617,452,618,455,619,458,620,475,621,476,622,477,623,481,624,484,625,550,626,553,627,554,628,554,629,554,630,554,631,554,632,554,633,554,634,554,635,554,636,554,637,554,638,554,639,554,640,554,641,554,642,554,643,554,644,554,645,554,646,554,647,554,648,554,649,554,650,554,651,554,652,554,653,554,654,554,655,554,656,554,657,554,658,554,659,554,660,554,661,554,662,554,663,554,664,554,665,554,666,554,667,554,668,554,669,554,670,554,671,554,672,554,673,554,674,554,675,554,676,554,677,554,678,554,679,554,680,554,681,554,682,554,683,554,684,554,685,554,686,554,687,554,688,554,689,554,690,554,691,554,692,554,693,554,694,554,695,554,696,554,697,554,698,554,699,554,700,554,701,554,702,554,703,554,704,554,705,554,706,554,707,554,708,554,709,554,710,549,711,548,712,547,713,527,713,469,712,467,711,467,710,468,709,468,708,469,707,477,706,476,705,471,704,453,703,386,702,383,701,373,700,373,699,374,698,381,697,382,696,385,695,374,694,369,693,363,692,361,691,356,690,355,689,344,688,343,687,336,686,332,685,330,684,328,683,317,682,317,681,308,680,306,679,306,678,306,677,307,676,315,675,313,674,311,673,311,672,307,671,305,670,305,669,304,668,284,667,277,666,275,665,274,664,271,663,270,662,268,661,268,660,267,659,268,658,268,657,255,656,254,655,224,654,222,653,222,652,222,651,222,650,223,649,224,648,224,647,226,646,236,645,236,644,241,643,241,642,240,641,211,640,209,639,208,638,203,637,201,636,200,635,199,634,198,633,197,632,196,631,195,630,195,629,195,628,196,627,196,626,197,625,197,624,192,623,190,622,189,621,189,620,189,619,189,618,189,617,189,616,189,615,189,614,189,613,189,612,189,611,189,610,189,609,189,608,189,607,189,606,189,605,189,604,189,603,189,602,189,601,189,600,189,599,189,598,189,597,189,596,189,595,189,594,189,593,140,592,139,591,138,590,138,589,138,588,138,587,135,586,136,585,135,584,131,583,130,582,128,581,126,580,125,579,125,578,125,577,123,576,122,575,121,574,120,573,120,572,119,571,119,570,118,569,118,568,119,567,119,566,111,565,109,564,107,563,107,562,105,561,104,560,102,559,100,558,99,557,98,556,97,555,97,554,97,553,95,552,94,551,94,550,93,549,93,548,92,547,92,546,92,545,90,544,85,543,84,542,84,541,84,540,81,539,81,538,81,537,81,536,81,535,80,534,78,533,77,532,77,531,76,530,76,529,76,528,70,527,69,526,69,525,69,524,76,523,67,522,65,521,64,520,64,519,64,518,65,517,72,516,71,515,65,514,65,513,62,512,57,511,56,510,55,509,54,508,53,507,52,506,51,505,49,504,48,503,48,502,48,501,46,500,46,499,46,498,46,497,44,496,43,495,43,494,42,493,42,492,41,491,41,490,41,489,40,488,41,487,40,486,39,485,39,484,38,483,38,482,38,481,39,480,39,479,38,478,38,477,38,476,38,475,38,474,38,473,38,472,37,471,36,470,35,469,35,468,35,467,35,466,35,465,35,464,36,463,36,462,36,461,36,460,37,459,38,458,39,457,39,456,38,455,38,454,37,453,37,452,37,451,38,450,38,449,37,448,35,447,35,446,35,445,35,444,35,443,35,442,35,441,35,440,35,439,26,438,24,437,22,436,15,435,15,434,14,433,14,432,14,431,14,430,14,429,14,428,13,427,12,426,11,425,11,424,11,423,11,422,11,421,11,420,10,419,10,418,11,417,11,416,10,415,9,414,9,413,9,412,9,411,9,410,9,409,9,408,10,407,10,406,10,405,10,404,11,403,11,402,11,401,12,400,13,399,14,398,15,397,16,396,18,395,19,394,20,393,21,392,22,391,23,390,23,389,24,388,27,387,27,386,26,385,26,384,26,383,26,382,26,381,26,380,26,379,25,378,18,377,18,376,18,375,18,374,18,373,19,372,24,371,24,370,23,369,23,368,26,367,26,366,27,365,27,364,28,363,29,362,30,361,30,360,30,359,29,358,28,357,27,356,27,355,26,354,25,353,24,352,23,351,23,350,22,349,22,348,22,347,22,346,21,345,21,344,27,343,27,342,86,342]],33:[[622,4,633,5,654,6,655,7,665,8,666,9,666,10,687,11,688,12,688,13,697,14,698,15,698,16,708,17,709,18,729,19,730,20,740,21,741,22,741,23,742,24,761,25,762,26,762,27,763,28,780,29,781,30,781,31,782,32,782,33,782,34,783,35,856,36,856,37,857,38,857,39,858,40,859,41,859,42,861,43,863,44,864,45,866,46,868,47,870,48,871,49,873,50,875,51,876,52,878,53,880,54,881,55,883,56,884,57,886,58,888,59,890,60,893,61,897,62,899,63,901,64,902,65,904,66,907,67,909,68,910,69,913,70,915,71,917,72,919,73,921,74,923,75,926,76,928,77,930,78,932,79,933,80,934,81,934,82,935,83,937,84,937,85,938,86,939,87,941,88,948,89,949,90,951,91,953,92,955,93,957,94,957,95,956,96,956,97,956,98,956,99,955,100,955,101,955,102,955,103,955,104,955,105,955,106,955,107,955,108,955,109,955,110,955,111,955,112,956,113,956,114,955,115,954,116,953,117,952,118,951,119,946,120,947,121,947,122,948,123,948,124,948,125,949,126,953,127,954,128,954,129,955,130,955,131,955,132,962,133,963,134,963,135,964,136,964,137,964,138,965,139,965,140,966,141,966,142,967,143,967,144,968,145,968,146,969,147,969,148,969,149,970,150,975,151,976,152,976,153,977,154,977,155,977,156,978,157,983,158,984,159,984,160,985,161,985,162,985,163,986,164,986,165,987,166,987,167,991,168,992,169,992,170,993,171,993,172,993,173,994,174,994,175,996,176,997,177,997,178,998,179,998,180,998,181,1004,182,1005,183,1005,184,1006,185,1006,186,1006,187,1007,188,1007,189,1008,190,1008,191,1012,192,1013,193,1013,194,1014,195,1014,196,1014,197,1015,198,1015,199,1016,200,1016,201,1019,202,1020,203,1020,204,1021,205,1021,206,1021,207,1022,208,1022,209,1023,210,1023,211,1024,212,1024,213,1024,214,1024,215,1024,216,1024,217,1024,218,1028,219,1029,220,1029,221,1030,222,1030,223,1030,224,1031,225,1031,226,1036,227,1037,228,1037,229,1038,230,1038,231,1038,232,1039,233,1039,234,1040,235,1042,236,1043,237,1043,238,1044,239,1044,240,1044,241,1045,242,1045,243,1046,244,1046,245,1047,246,1047,247,1048,248,1048,249,1049,250,1049,251,1049,252,1050,253,1050,254,1051,255,1051,256,1052,257,1052,258,1052,259,1052,260,1052,261,1052,262,1052,263,1052,264,1052,265,1052,266,1053,267,1053,268,1053,269,1053,270,1054,271,1054,272,1055,273,1055,274,1056,275,1056,276,1056,277,1056,278,1056,279,1056,280,1056,281,1057,282,1057,283,1057,284,1058,285,1058,286,1059,287,1059,288,1060,289,1060,290,1060,291,1060,292,1060,293,1060,294,1060,295,1060,296,1060,297,1060,298,1060,299,1060,300,1061,301,1061,302,1061,303,1061,304,1060,305,1060,306,1060,307,1060,308,1060,309,1060,310,1060,311,1060,312,1060,313,1060,314,1060,315,1060,316,1060,317,1060,318,1060,319,1060,320,1060,321,1060,322,1060,323,1060,324,1060,325,1060,326,1060,327,1060,328,1060,329,1060,330,1060,331,1060,332,1060,333,1060,334,1060,335,1060,336,1060,337,1060,338,1061,339,1061,340,1040,340,1040,339,1039,338,1038,337,1037,336,1037,335,1037,334,1037,333,1037,332,1037,331,1037,330,1037,329,1037,328,1037,327,1037,326,1036,325,1036,324,1036,323,1036,322,1036,321,1037,320,1037,319,1036,318,1035,317,1034,316,1034,315,1034,314,1034,313,1034,312,1034,311,1031,310,1030,309,1029,308,1028,307,1028,306,1028,305,1028,304,1028,303,1023,302,1022,301,1021,300,1020,299,1020,298,1020,297,1017,296,1016,295,1015,294,1014,293,1014,292,1014,291,1014,290,1014,289,1014,288,1014,287,1014,286,1014,285,1013,284,1012,283,1011,282,1011,281,1011,280,1011,279,1011,278,1011,277,1011,276,1007,275,1006,274,1005,273,1004,272,1004,271,1004,270,1004,269,1004,268,1004,267,1004,266,999,265,998,264,997,263,996,262,996,261,996,260,991,259,990,258,989,257,988,256,988,255,988,254,988,253,988,252,986,251,985,250,984,249,983,248,983,247,983,246,983,245,983,244,983,243,983,242,978,241,977,240,976,239,975,238,975,237,975,236,975,235,970,234,969,233,968,232,967,231,967,230,967,229,967,228,962,227,961,226,960,225,959,224,959,223,959,222,959,221,959,220,959,219,959,218,959,217,957,216,956,215,955,214,954,213,954,212,954,211,948,210,947,209,946,208,945,207,945,206,945,205,945,204,941,203,940,202,939,201,938,200,931,199,928,198,927,197,926,196,925,195,925,194,925,193,925,192,925,191,925,190,925,189,925,188,925,187,925,186,925,185,925,184,925,183,924,182,924,181,924,180,923,179,923,178,923,177,923,176,923,175,923,174,924,173,925,172,925,171,925,170,925,169,925,168,925,167,925,166,925,165,925,164,925,163,925,162,925,161,925,160,925,159,925,158,925,157,925,156,925,155,925,154,925,153,925,152,850,151,847,150,846,149,845,148,844,147,844,146,844,145,839,144,838,143,837,142,836,141,831,140,830,139,829,138,828,137,821,136,820,135,819,134,818,133,818,132,818,131,818,130,818,129,811,128,810,127,809,126,808,125,800,124,799,123,798,122,797,121,797,120,782,119,781,118,780,117,779,116,779,115,779,114,779,113,766,112,765,111,764,110,763,109,745,108,744,107,743,106,742,105,735,104,714,103,713,102,712,101,703,100,702,99,701,98,692,97,691,96,690,95,671,94,670,93,669,92,660,91,659,90,576,89,575,88,555,87,554,86,554,85,554,84,554,83,554,82,554,81,554,80,554,79,554,78,554,77,554,76,554,75,554,74,554,73,554,72,554,71,554,70,554,69,554,68,554,67,554,66,554,65,554,64,554,63,554,62,554,61,554,60,554,59,554,58,554,57,554,56,554,55,554,54,554,53,554,52,554,51,554,50,554,49,554,48,554,47,554,46,554,45,554,44,554,43,554,42,554,41,554,40,554,39,554,38,554,37,554,36,554,35,554,34,554,33,554,32,554,31,554,30,554,29,554,28,554,27,554,26,554,25,554,24,554,23,554,22,554,21,554,20,554,19,554,18,554,17,554,16,554,15,554,14,554,13,554,12,554,11,554,10,555,9,555,8,556,7,556,6,557,5,557,4,622,4],[540,4,541,5,550,6,551,7,551,8,552,9,552,10,552,11,553,12,553,13,554,14,554,15,554,16,554,17,554,18,554,19,554,20,554,21,554,22,554,23,554,24,554,25,554,26,554,27,554,28,554,29,554,30,554,31,554,32,554,33,554,34,554,35,554,36,554,37,554,38,554,39,554,40,554,41,554,42,554,43,554,44,554,45,554,46,554,47,554,48,554,49,554,50,554,51,554,52,554,53,554,54,554,55,554,56,554,57,554,58,554,59,554,60,554,61,554,62,554,63,554,64,554,65,554,66,554,67,554,68,554,69,554,70,554,71,554,72,554,73,554,74,554,75,554,76,554,77,554,78,554,79,554,80,554,81,554,82,554,83,554,84,554,85,554,86,554,87,553,88,551,89,469,90,467,91,460,92,459,93,457,94,440,95,439,96,437,97,428,98,427,99,425,100,419,101,418,102,416,103,396,104,390,105,389,106,388,107,386,108,370,109,369,110,368,111,366,112,351,113,351,114,351,115,351,116,350,117,349,118,347,119,333,120,333,121,332,122,331,123,329,124,324,125,323,126,322,127,320,128,314,129,314,130,314,131,314,132,314,133,313,134,312,135,310,136,304,137,303,138,302,139,300,140,296,141,296,142,296,143,296,144,295,145,295,146,294,147,292,148,289,149,220,150,220,151,220,152,220,153,220,154,220,155,220,156,220,157,220,158,220,159,220,160,220,161,220,162,220,163,220,164,220,165,221,166,221,167,222,168,222,169,222,170,222,171,222,172,222,173,222,174,221,175,221,176,220,177,220,178,220,179,220,180,220,181,220,182,220,183,220,184,220,185,220,186,220,187,220,188,219,189,219,190,218,191,216,192,213,193,204,194,203,195,202,196,200,197,194,198,194,199,193,200,192,201,190,202,186,203,186,204,186,205,186,206,185,207,184,208,182,209,178,210,178,211,178,212,177,213,177,214,176,215,174,216,172,217,172,218,172,219,172,220,172,221,171,222,170,223,168,224,165,225,165,226,165,227,164,228,163,229,161,230,158,231,158,232,158,233,158,234,157,235,156,236,154,237,153,238,153,239,153,240,152,241,152,242,151,243,149,244,146,245,146,246,145,247,144,248,142,249,139,250,139,251,139,252,139,253,139,254,139,255,138,256,137,257,135,258,134,259,133,260,132,261,130,262,127,263,127,264,127,265,127,266,127,267,127,268,126,269,125,270,123,271,119,272,119,273,119,274,119,275,119,276,118,277,117,278,115,279,113,280,113,281,113,282,113,283,113,284,113,285,112,286,111,287,109,288,106,289,106,290,106,291,106,292,106,293,106,294,106,295,105,296,104,297,102,298,100,299,100,300,100,301,100,302,100,303,100,304,99,305,98,306,96,307,96,308,96,309,96,310,96,311,96,312,96,313,96,314,95,315,95,316,94,317,92,318,91,319,91,320,91,321,91,322,91,323,91,324,91,325,90,326,89,327,88,328,88,329,88,330,88,331,88,332,88,333,87,334,87,335,86,336,85,337,85,338,85,339,85,340,61,340,61,339,62,338,62,337,62,336,62,335,62,334,62,333,62,332,62,331,62,330,62,329,63,328,63,327,64,326,63,325,63,324,63,323,63,322,63,321,63,320,64,319,64,318,64,317,64,316,64,315,64,314,64,313,64,312,64,311,64,310,65,309,65,308,66,307,66,306,67,305,67,304,68,303,68,302,68,301,68,300,69,299,69,298,69,297,69,296,70,295,70,294,70,293,70,292,70,291,70,290,70,289,70,288,70,287,70,286,70,285,70,284,71,283,71,282,72,281,72,280,72,279,72,278,72,277,72,276,72,275,72,274,73,273,73,272,74,271,74,270,75,269,75,268,75,267,75,266,75,265,75,264,76,263,76,262,77,261,77,260,78,259,78,258,78,257,78,256,78,255,79,254,79,253,80,252,80,251,81,250,81,249,82,248,82,247,83,246,83,245,84,244,84,243,85,242,85,241,86,240,86,239,87,238,87,237,87,236,87,235,87,234,88,233,88,232,89,231,89,230,90,229,90,228,91,227,91,226,92,225,92,224,94,223,95,222,95,221,96,220,96,219,97,218,97,217,98,216,98,215,101,214,101,213,102,212,102,211,103,210,103,209,104,208,104,207,105,206,105,205,107,204,108,203,108,202,109,201,109,200,110,199,110,198,111,197,111,196,116,195,116,194,117,193,117,192,118,191,118,190,119,189,119,188,122,187,123,186,123,185,124,184,124,183,125,182,125,181,126,180,126,179,130,178,130,177,131,176,131,175,134,174,135,173,135,172,136,171,136,170,137,169,137,168,138,167,138,166,143,165,144,164,144,163,145,162,145,161,147,160,148,159,148,158,149,157,149,156,150,155,150,154,154,153,155,152,155,151,156,150,156,149,157,148,157,147,162,146,162,145,163,144,163,143,164,142,164,141,167,140,167,139,168,138,168,137,169,136,169,135,170,134,170,133,175,132,176,131,176,130,177,129,177,128,178,127,178,126,183,125,184,124,184,123,185,122,185,121,186,120,186,119,194,118,195,117,192,116,191,115,190,114,189,113,188,112,187,111,186,110,187,109,187,108,187,107,187,106,187,105,187,104,187,103,187,102,187,101,187,100,187,99,187,98,187,97,187,96,187,95,186,94,186,93,186,92,186,91,186,90,189,89,191,88,193,87,194,86,201,85,203,84,204,83,205,82,206,81,207,80,208,79,208,78,209,77,210,76,211,75,214,74,216,73,218,72,221,71,223,70,225,69,227,68,229,67,231,66,233,65,235,64,237,63,239,62,241,61,243,60,245,59,248,58,252,57,254,56,256,55,258,54,259,53,260,52,262,51,264,50,266,49,267,48,269,47,271,46,272,45,274,44,276,43,277,42,279,41,281,40,282,39,283,38,283,37,284,36,285,35,285,34,349,33,350,32,350,31,351,30,351,29,371,28,371,27,372,26,372,25,391,24,391,23,392,22,392,21,402,20,402,19,421,18,421,17,432,16,433,15,433,14,442,13,443,12,443,11,462,10,463,9,463,8,473,7,473,6,495,5,495,4,540,4],[1061,341,1061,342,1061,343,1061,344,1061,345,1061,346,1061,347,1061,348,1061,349,1060,350,1060,351,1060,352,1060,353,1060,354,1060,355,1060,356,1060,357,1060,358,1060,359,1060,360,1060,361,1060,362,1060,363,1060,364,1061,365,1061,366,1061,367,1061,368,1061,369,1061,370,1061,371,1061,372,1061,373,1061,374,1061,375,1061,376,1061,377,1061,378,1061,379,1062,380,1062,381,1062,382,1062,383,1061,384,1061,385,1061,386,1061,387,1061,388,1061,389,1061,390,1061,391,1061,392,1061,393,1061,394,1061,395,1061,396,1061,397,1061,398,1061,399,1061,400,1061,401,1061,402,1061,403,1061,404,1061,405,1061,406,1061,407,1061,408,1061,409,1061,410,1061,411,1061,412,1061,413,1061,414,1061,415,1061,416,1061,417,1061,418,1061,419,1061,420,1061,421,1061,422,1062,423,1062,424,1062,425,1062,426,1062,427,1062,428,1061,429,1061,430,1061,431,1061,432,1061,433,1061,434,1061,435,1061,436,1061,437,1061,438,1060,439,1059,440,1057,441,1057,442,1057,443,1057,444,1057,445,1057,446,1057,447,1056,448,1055,449,1053,450,1052,451,1052,452,1052,453,1052,454,1051,455,1051,456,1050,457,1048,458,1047,459,1047,460,1047,461,1047,462,1047,463,1046,464,1046,465,1045,466,1043,467,1041,468,1041,469,1041,470,1041,471,1041,472,1041,473,1041,474,1041,475,1040,476,1039,477,1037,478,1033,479,1033,480,1033,481,1033,482,1033,483,1033,484,1032,485,1031,486,1029,487,1029,488,1029,489,1029,490,1029,491,1029,492,1029,493,1029,494,1028,495,1027,496,1025,497,1021,498,1021,499,1021,500,1021,501,1021,502,1020,503,1019,504,1017,505,1014,506,1014,507,1014,508,1014,509,1013,510,1013,511,1012,512,1010,513,1006,514,1006,515,1006,516,1005,517,1005,518,1004,519,1002,520,998,521,998,522,998,523,998,524,998,525,997,526,996,527,994,528,991,529,991,530,991,531,991,532,991,533,991,534,990,535,989,536,987,537,986,538,986,539,986,540,985,541,984,542,982,543,978,544,978,545,978,546,977,547,977,548,976,549,974,550,969,551,969,552,968,553,967,554,965,555,961,556,961,557,961,558,961,559,961,560,960,561,959,562,957,563,953,564,953,565,953,566,952,567,952,568,951,569,949,570,946,571,876,572,876,573,876,574,876,575,876,576,876,577,876,578,876,579,876,580,876,581,876,582,876,583,876,584,876,585,876,586,876,587,876,588,876,589,876,590,876,591,876,592,877,593,877,594,878,595,878,596,878,597,878,598,878,599,878,600,878,601,877,602,877,603,876,604,876,605,876,606,876,607,876,608,876,609,876,610,876,611,876,612,876,613,876,614,876,615,875,616,875,617,874,618,872,619,869,620,858,621,856,622,850,623,849,624,848,625,846,626,841,627,840,628,839,629,837,630,831,631,830,632,830,633,829,634,827,635,820,636,819,637,818,638,816,639,807,640,805,641,799,642,798,643,797,644,795,645,786,646,784,647,775,648,773,649,766,650,765,651,764,652,762,653,752,654,744,655,743,656,741,657,730,658,722,659,722,660,721,661,719,662,712,663,711,664,709,665,691,666,690,667,688,668,680,669,679,670,677,671,659,672,657,673,617,674,615,675,578,676,576,677,570,677,554,676,554,675,554,674,554,673,554,672,554,671,554,670,554,669,554,668,554,667,554,666,554,665,554,664,554,663,554,662,554,661,554,660,554,659,554,658,554,657,554,656,554,655,554,654,554,653,554,652,554,651,554,650,554,649,554,648,554,647,554,646,554,645,554,644,554,643,554,642,554,641,554,640,554,639,554,638,554,637,554,636,554,635,554,634,554,633,554,632,554,631,554,630,554,629,554,628,554,627,554,626,554,625,554,624,554,623,554,622,554,621,554,620,554,619,554,618,554,617,554,616,554,615,554,614,554,613,554,612,554,611,554,610,554,609,554,608,554,607,554,606,554,605,554,604,554,603,554,602,554,601,554,600,554,599,554,598,554,597,554,596,554,595,554,594,562,593,562,592,582,591,582,590,633,589,643,588,683,587,684,586,684,585,693,584,694,583,694,582,714,581,715,580,715,579,725,578,725,577,726,576,726,575,737,574,747,573,748,572,748,571,758,570,768,569,768,568,769,567,769,566,780,565,780,564,791,563,791,562,800,561,800,560,801,559,801,558,812,557,812,556,822,555,822,554,823,553,823,552,831,551,832,550,832,549,833,548,833,547,841,546,841,545,842,544,842,543,851,542,851,541,852,540,852,539,854,538,855,537,855,536,856,535,856,534,856,533,856,532,856,531,856,530,856,529,856,528,856,527,856,526,856,525,856,524,856,523,856,522,856,521,856,520,856,519,857,518,857,517,858,516,859,515,860,514,860,513,861,512,861,511,862,510,862,509,863,508,863,507,864,506,865,505,865,504,933,503,933,502,933,501,933,500,933,499,933,498,933,497,933,496,933,495,933,494,933,493,933,492,933,491,933,490,933,489,933,488,933,487,933,486,933,485,933,484,933,483,933,482,933,481,933,480,933,479,933,478,933,477,933,476,933,475,933,474,933,473,933,472,933,471,934,470,934,469,935,468,936,467,937,466,937,465,938,464,938,463,939,462,939,461,940,460,940,459,941,458,942,457,942,456,983,455,983,454,986,453,987,452,987,451,988,450,988,449,989,448,989,447,990,446,990,445,995,444,995,443,996,442,996,441,997,440,997,439,998,438,998,437,1003,436,1004,435,1004,434,1005,433,1005,432,1006,431,1006,430,1010,429,1010,428,1011,427,1011,426,1012,425,1012,424,1013,423,1013,422,1018,421,1018,420,1019,419,1019,418,1020,417,1020,416,1020,415,1020,414,1021,413,1021,412,1022,411,1022,410,1023,409,1023,408,1024,407,1024,406,1025,405,1025,404,1029,403,1030,402,1030,401,1031,400,1031,399,1032,398,1032,397,1033,396,1033,395,1034,394,1035,393,1035,392,1036,391,1036,390,1037,389,1037,388,1038,387,1038,386,1039,385,1039,384,1040,383,1041,382,1041,381,1041,380,1041,379,1041,378,1040,377,1040,376,1040,375,1040,374,1040,373,1041,372,1041,371,1041,370,1041,369,1041,368,1041,367,1041,366,1041,365,1041,364,1040,363,1040,362,1040,361,1040,360,1041,359,1041,358,1041,357,1041,356,1041,355,1041,354,1041,353,1041,352,1041,351,1041,350,1041,349,1041,348,1041,347,1041,346,1041,345,1041,344,1041,343,1040,342,1040,341,1061,341],[85,341,85,342,85,343,85,344,85,345,85,346,85,347,86,348,86,349,86,350,86,351,86,352,86,353,85,354,85,355,85,356,85,357,85,358,85,359,85,360,85,361,85,362,85,363,84,364,83,365,82,366,82,367,82,368,82,369,82,370,82,371,83,372,83,373,83,374,83,375,83,376,84,377,84,378,84,379,84,380,84,381,84,382,84,383,84,384,84,385,84,386,84,387,84,388,85,389,85,390,85,391,86,392,86,393,87,394,87,395,87,396,87,397,88,398,88,399,88,400,89,401,89,402,90,403,90,404,92,405,93,406,93,407,94,408,94,409,94,410,95,411,95,412,98,413,99,414,99,415,100,416,100,417,100,418,101,419,101,420,102,421,105,422,106,423,106,424,107,425,107,426,107,427,108,428,108,429,112,430,113,431,113,432,114,433,114,434,114,435,115,436,119,437,120,438,120,439,121,440,121,441,121,442,122,443,122,444,126,445,127,446,127,447,128,448,128,449,128,450,129,451,129,452,130,453,132,454,171,455,172,456,172,457,173,458,174,459,174,460,175,461,175,462,176,463,177,464,177,465,178,466,178,467,179,468,179,469,180,470,180,471,180,472,180,473,180,474,180,475,180,476,180,477,181,478,180,479,180,480,180,481,180,482,180,483,180,484,180,485,181,486,181,487,182,488,182,489,182,490,182,491,181,492,181,493,180,494,180,495,180,496,180,497,180,498,180,499,181,500,181,501,181,502,181,503,180,504,180,505,246,506,247,507,247,508,248,509,249,510,249,511,250,512,250,513,251,514,252,515,252,516,253,517,253,518,254,519,254,520,255,521,255,522,255,523,255,524,255,525,255,526,255,527,255,528,256,529,256,530,255,531,255,532,255,533,255,534,255,535,255,536,256,537,257,538,259,539,260,540,260,541,261,542,261,543,261,544,268,545,269,546,269,547,290,548,291,549,291,550,292,551,300,552,301,553,311,554,312,555,312,556,313,557,313,558,313,559,321,560,322,561,332,562,333,563,333,564,342,565,343,566,343,567,353,568,354,569,364,570,365,571,365,572,366,573,383,574,384,575,384,576,385,577,404,578,405,579,405,580,406,581,415,582,416,583,416,584,448,585,449,586,449,587,479,588,512,589,513,590,513,591,522,592,554,593,554,594,554,595,554,596,554,597,554,598,554,599,554,600,554,601,554,602,554,603,554,604,554,605,554,606,554,607,554,608,554,609,554,610,554,611,554,612,554,613,554,614,554,615,554,616,554,617,554,618,554,619,554,620,554,621,554,622,554,623,554,624,554,625,554,626,554,627,554,628,554,629,554,630,554,631,554,632,554,633,554,634,554,635,554,636,554,637,554,638,554,639,554,640,554,641,554,642,554,643,554,644,554,645,554,646,554,647,554,648,554,649,554,650,554,651,554,652,554,653,554,654,554,655,554,656,554,657,554,658,554,659,554,660,554,661,554,662,554,663,554,664,554,665,554,666,554,667,554,668,554,669,554,670,554,671,554,672,554,673,554,674,554,675,554,676,545,677,539,677,528,676,496,675,485,674,484,673,453,672,452,671,451,670,432,669,421,668,420,667,419,666,410,665,409,664,408,663,407,662,388,661,387,660,386,659,385,658,367,657,366,656,365,655,364,654,359,653,358,652,348,651,347,650,346,649,337,648,336,647,335,646,327,645,326,644,316,643,315,642,314,641,313,640,313,639,313,638,306,637,305,636,295,635,294,634,293,633,292,632,274,631,273,630,272,629,263,628,262,627,261,626,260,625,260,624,260,623,241,622,238,621,237,620,236,619,235,618,235,617,235,616,235,615,235,614,235,613,235,612,235,611,235,610,235,609,235,608,235,607,235,606,234,605,234,604,234,603,233,602,233,601,233,600,233,599,233,598,233,597,234,596,235,595,235,594,235,593,235,592,235,591,235,590,235,589,235,588,235,587,235,586,235,585,235,584,235,583,235,582,235,581,235,580,235,579,235,578,235,577,235,576,235,575,235,574,235,573,235,572,166,571,163,570,162,569,161,568,160,567,160,566,160,565,160,564,157,563,156,562,155,561,154,560,154,559,154,558,154,557,154,556,151,555,150,554,149,553,148,552,148,551,143,550,142,549,141,548,140,547,140,546,140,545,140,544,135,543,134,542,133,541,132,540,132,539,132,538,127,537,126,536,125,535,124,534,124,533,124,532,124,531,124,530,124,529,121,528,120,527,119,526,118,525,118,524,118,523,118,522,118,521,114,520,113,519,112,518,111,517,111,516,111,515,111,514,107,513,106,512,105,511,104,510,104,509,104,508,104,507,104,506,100,505,99,504,98,503,97,502,97,501,97,500,97,499,97,498,97,497,93,496,92,495,91,494,90,493,90,492,90,491,90,490,90,489,87,488,86,487,85,486,84,485,84,484,84,483,84,482,84,481,84,480,84,479,81,478,80,477,79,476,78,475,78,474,78,473,78,472,78,471,78,470,78,469,78,468,77,467,76,466,75,465,74,464,74,463,74,462,74,461,74,460,74,459,72,458,71,457,70,456,69,455,69,454,69,453,69,452,69,451,69,450,69,449,69,448,69,447,69,446,69,445,68,444,68,443,68,442,68,441,68,440,67,439,66,438,66,437,66,436,66,435,66,434,66,433,66,432,66,431,66,430,66,429,66,428,65,427,65,426,65,425,65,424,64,423,64,422,64,421,64,420,64,419,64,418,64,417,64,416,64,415,64,414,64,413,63,412,63,411,63,410,63,409,63,408,64,407,64,406,64,405,64,404,64,403,64,402,64,401,63,400,62,399,62,398,62,397,62,396,62,395,62,394,62,393,62,392,62,391,62,390,62,389,61,388,61,387,61,386,61,385,61,384,62,383,62,382,62,381,62,380,62,379,62,378,62,377,62,376,62,375,61,374,61,373,61,372,61,371,62,370,62,369,62,368,62,367,62,366,62,365,62,364,62,363,62,362,62,361,62,360,62,359,62,358,62,357,62,356,62,355,62,354,62,353,62,352,62,351,62,350,62,349,62,348,62,347,62,346,62,345,61,344,61,343,61,342,61,341,85,341]],34:[85,5,86,6,87,7,87,8,87,9,87,10,87,11,88,12,88,13,88,14,88,15,88,16,88,17,89,18,89,19,90,20,91,21,103,22,105,23,106,24,106,25,106,26,106,27,106,28,106,29,106,30,106,31,106,32,106,33,106,34,106,35,106,36,106,37,106,38,106,39,106,40,106,41,106,42,107,43,107,44,108,45,109,46,109,47,109,48,107,49,106,50,106,51,106,52,106,53,106,54,106,55,107,56,107,57,107,58,107,59,107,60,107,61,107,62,107,63,107,64,107,65,108,66,108,67,110,68,111,69,113,70,115,71,116,72,118,73,119,74,121,75,122,76,124,77,125,78,125,79,124,80,124,81,124,82,123,83,121,84,120,85,120,86,120,87,120,88,119,89,119,90,119,91,119,92,119,93,119,94,119,95,119,96,121,97,121,98,122,99,122,100,122,101,122,102,122,103,122,104,122,105,122,106,122,107,122,108,122,109,120,110,118,111,118,112,116,113,110,114,104,115,103,116,104,117,104,118,103,119,102,120,102,121,103,122,102,123,100,124,61,127,63,128,64,129,65,130,64,131,67,132,67,133,67,134,67,135,61,136,59,137,57,138,53,138,51,137,50,136,49,135,49,134,49,133,48,132,48,131,49,130,51,129,53,128,55,127,96,124,94,123,72,122,71,121,65,120,39,119,28,118,27,117,19,116,18,115,17,114,15,113,15,112,15,111,15,110,15,109,18,108,18,107,17,106,17,105,17,104,17,103,17,102,17,101,17,100,17,99,17,98,17,97,19,96,21,95,21,94,21,93,21,92,22,91,23,90,25,89,35,88,35,87,35,86,33,85,32,84,31,83,31,82,31,81,32,80,34,79,36,78,37,77,38,76,40,75,42,74,43,73,43,72,43,71,43,70,43,69,43,68,43,67,43,66,43,65,43,64,43,63,43,62,43,61,43,60,43,59,43,58,43,57,43,56,36,55,34,54,33,53,34,52,35,51,36,50,35,49,36,48,37,47,38,46,39,45,39,44,39,43,41,42,42,41,42,40,42,39,43,38,44,37,45,36,46,35,46,34,47,33,48,32,49,31,48,30,49,29,50,28,50,27,50,26,50,25,50,24,50,23,51,22,51,21,50,20,50,19,50,18,51,17,51,16,53,15,78,14,78,13,79,12,79,11,78,10,78,9,78,8,78,7,79,6,80,5,85,5],35:[79,10,80,11,81,12,81,13,81,14,81,15,82,16,81,17,82,18,82,19,82,20,82,21,82,22,82,23,82,24,83,25,83,26,83,27,83,28,83,29,83,30,104,31,105,32,105,33,105,34,105,35,104,36,104,37,104,38,104,39,104,40,104,41,104,42,104,43,104,44,104,45,104,46,104,47,104,48,104,49,104,50,104,51,104,52,104,53,104,54,104,55,104,56,105,57,109,58,110,59,110,60,110,61,110,62,110,63,110,64,110,65,110,66,110,67,113,68,113,69,113,70,113,71,113,72,113,73,113,74,113,75,113,76,119,77,120,78,120,79,120,80,120,81,120,82,120,83,120,84,120,85,120,86,120,87,120,88,120,89,120,90,120,91,120,92,120,93,122,94,123,95,125,96,125,97,125,98,124,99,123,100,123,101,123,102,123,103,123,104,123,105,123,106,123,107,123,108,123,109,123,110,123,111,123,112,127,113,127,114,128,115,128,116,127,117,126,118,125,119,125,120,125,121,121,122,120,123,121,124,121,125,122,126,122,127,122,128,118,129,116,130,115,131,113,132,112,133,112,134,111,135,99,136,99,137,98,138,98,139,95,140,93,140,90,139,90,138,90,137,83,136,68,135,56,134,54,133,54,132,54,131,48,130,46,129,45,128,38,127,35,126,34,125,33,124,33,123,32,122,32,121,31,120,31,119,31,118,31,117,31,116,31,115,31,114,31,113,31,112,31,111,30,110,30,109,29,108,27,107,27,106,28,105,28,104,26,103,26,102,26,101,26,100,30,99,30,98,30,97,30,96,30,95,30,94,30,93,30,92,30,91,30,90,30,89,30,88,29,87,27,86,26,85,26,84,25,83,26,82,29,81,34,80,36,79,40,78,39,77,38,76,38,75,38,74,38,73,38,72,38,71,38,70,38,69,38,68,38,67,38,66,38,65,38,64,38,63,38,62,38,61,38,60,38,59,38,58,38,57,38,56,39,55,41,54,43,53,44,52,44,51,45,50,45,49,46,48,47,47,48,46,49,45,50,44,51,43,52,42,53,41,55,40,58,39,59,38,62,37,62,36,62,35,62,34,63,33,63,32,63,31,63,30,63,29,64,28,64,27,64,26,64,25,64,24,64,23,65,22,65,21,65,20,65,19,65,18,66,17,66,16,66,15,66,14,66,13,66,12,67,11,69,10,79,10],36:[63,22,65,23,65,24,66,25,66,26,66,27,66,28,66,29,67,30,67,31,67,32,67,33,67,34,67,35,104,36,106,37,112,38,113,39,114,40,115,41,115,42,116,43,118,44,118,45,118,46,118,47,118,48,118,49,118,50,118,51,118,52,118,53,123,54,123,55,123,56,123,57,125,58,125,59,126,60,127,61,126,62,127,63,127,64,127,65,127,66,128,67,127,68,128,69,128,70,128,71,127,72,128,73,127,74,128,75,128,76,127,77,127,78,126,79,126,80,124,81,124,82,124,83,121,84,120,85,119,86,116,87,121,88,123,89,125,90,127,91,128,92,129,93,129,94,130,95,130,96,134,97,135,98,135,99,135,100,134,101,130,102,130,103,129,104,129,105,128,106,128,107,127,108,127,109,127,110,127,111,127,112,127,113,127,114,127,115,127,116,127,117,127,118,127,119,127,120,127,121,126,122,126,123,126,124,126,125,126,126,126,127,127,128,129,129,130,130,130,131,127,132,126,133,112,134,112,135,112,136,112,137,111,138,110,139,108,140,98,140,95,139,94,138,93,137,68,136,67,135,64,134,56,133,54,132,53,131,50,130,48,129,49,128,48,127,48,126,51,125,52,124,56,123,53,122,49,121,44,120,40,119,39,118,35,117,34,116,33,115,31,114,26,113,25,112,24,111,24,110,23,109,23,108,23,107,22,106,22,105,25,104,29,103,32,102,32,101,32,100,32,99,32,98,32,97,32,96,11,95,10,94,9,93,8,92,8,91,7,90,7,89,6,88,6,87,6,86,7,85,7,84,8,83,8,82,10,81,10,80,10,79,11,78,11,77,12,76,13,75,15,74,17,73,17,72,17,71,18,70,17,69,18,68,24,67,25,66,26,65,26,64,27,63,28,62,29,61,30,60,31,59,33,58,34,57,35,56,35,55,36,54,37,53,37,52,37,51,38,50,38,49,38,48,38,47,38,46,38,45,39,44,38,43,38,42,38,41,38,40,39,39,40,38,41,37,41,36,42,35,43,34,46,33,51,32,51,31,51,30,51,29,52,28,52,27,52,26,52,25,53,24,53,23,54,22,63,22],38:[88,33,88,34,89,35,89,36,90,37,91,38,91,39,92,40,92,41,93,42,94,43,94,44,95,45,95,46,96,47,109,48,109,49,110,50,111,51,111,52,112,53,113,54,113,55,114,56,115,57,115,58,116,59,117,60,117,61,119,62,120,63,120,64,120,65,121,66,121,67,122,68,123,69,124,70,124,71,125,72,126,73,127,74,128,75,128,76,128,77,128,78,128,79,126,80,126,81,126,82,126,83,126,84,126,85,125,86,125,87,125,88,125,89,125,90,125,91,125,92,125,93,125,94,125,95,125,96,125,97,125,98,125,99,127,100,128,101,130,102,130,103,129,104,127,105,127,106,126,107,124,108,124,109,124,110,124,111,124,112,124,113,124,114,124,115,124,116,124,117,124,118,124,119,124,120,124,121,124,122,124,123,124,124,124,125,124,126,124,127,124,128,124,129,124,130,123,131,92,132,78,133,76,134,74,135,62,136,60,137,51,137,47,136,46,135,45,134,42,133,37,132,35,131,34,130,33,129,33,128,34,127,34,126,35,125,35,124,35,123,35,122,35,121,35,120,35,119,35,118,35,117,35,116,35,115,35,114,35,113,34,112,28,111,27,110,25,109,19,108,19,107,18,106,17,105,17,104,16,103,16,102,17,101,20,100,20,99,20,98,20,97,20,96,20,95,20,94,20,93,20,92,20,91,20,90,20,89,20,88,20,87,20,86,20,85,20,84,20,83,20,82,20,81,20,80,20,79,20,78,20,77,20,76,20,75,20,74,20,73,20,72,20,71,17,70,16,69,15,68,16,67,17,66,18,65,19,64,20,63,21,62,23,61,24,60,25,59,26,58,27,57,28,56,29,55,31,54,32,53,33,52,33,51,33,50,34,49,36,48,44,47,49,46,51,45,52,44,56,43,62,42,63,41,64,40,66,39,72,38,74,37,78,36,80,35,81,34,84,33,88,33],39:[75,9,76,10,77,11,78,12,79,13,80,14,82,15,83,16,84,17,86,18,88,19,91,20,94,21,96,22,98,23,100,24,101,25,103,26,104,27,104,28,105,29,106,30,106,31,106,32,107,33,107,34,107,35,106,36,106,37,106,38,105,39,104,40,103,41,103,42,101,43,101,44,101,45,101,46,101,47,101,48,101,49,101,50,101,51,110,52,113,53,114,54,114,55,113,56,113,57,113,58,112,59,111,60,108,61,106,62,105,63,105,64,104,65,103,66,102,67,102,68,101,69,101,70,101,71,101,72,106,73,108,74,109,75,111,76,111,77,112,78,112,79,112,80,111,81,110,82,110,83,110,84,110,85,110,86,112,87,114,88,115,89,116,90,117,91,118,92,118,93,119,94,119,95,119,96,119,97,119,98,119,99,119,100,119,101,118,102,118,103,118,104,118,105,118,106,118,107,118,108,119,109,121,110,122,111,123,112,124,113,123,114,124,115,123,116,123,117,123,118,122,119,121,120,121,121,120,122,120,123,119,124,120,125,119,126,116,127,116,128,115,129,112,130,108,131,98,132,97,133,97,134,91,135,86,135,85,134,46,133,43,132,41,131,39,130,38,129,37,128,38,127,38,126,39,125,38,124,34,123,33,122,32,121,31,120,31,119,32,118,36,117,35,116,34,115,33,114,33,113,33,112,34,111,36,110,38,109,40,108,31,107,29,106,29,105,28,104,28,103,29,102,29,101,29,100,27,99,27,98,26,97,26,96,27,95,28,94,33,93,33,92,33,91,33,90,33,89,34,88,33,87,32,86,31,85,32,84,33,83,34,82,35,81,36,80,37,79,37,78,38,77,39,76,40,75,41,74,42,73,39,72,38,71,38,70,38,69,38,68,39,67,39,66,38,65,37,64,37,63,37,62,37,61,37,60,36,59,34,58,33,57,33,56,33,55,33,54,33,53,33,52,35,51,37,50,41,49,41,48,41,47,41,46,42,45,42,44,42,43,41,42,39,41,39,40,38,39,38,38,38,37,37,36,37,35,37,34,37,33,37,32,38,31,38,30,39,29,39,28,40,27,41,26,43,25,44,24,46,23,48,22,50,21,53,20,55,19,57,18,59,17,61,16,63,15,64,14,65,13,66,12,67,11,69,10,70,9,75,9],40:[302,99,305,100,307,101,310,102,312,103,313,104,315,105,316,106,316,107,316,108,317,109,318,110,318,111,318,112,318,113,317,114,316,115,315,116,314,117,313,118,317,119,342,120,343,121,345,122,351,123,353,124,353,125,358,126,359,127,359,128,361,129,362,130,384,131,386,132,389,133,391,134,391,135,392,136,392,137,393,138,394,139,394,140,394,141,394,142,393,143,393,144,390,145,389,146,390,147,390,148,391,149,392,150,392,151,392,152,393,153,393,154,392,155,391,156,391,157,395,158,396,159,397,160,397,161,398,162,399,163,401,164,410,165,414,166,420,167,422,168,423,169,424,170,424,171,424,172,429,173,431,174,433,175,437,176,436,177,436,178,437,179,437,180,438,181,439,182,441,183,440,184,440,185,440,186,441,187,442,188,442,189,445,190,444,191,444,192,443,193,443,194,442,195,442,196,444,197,446,198,444,199,444,200,446,201,447,202,448,203,447,204,447,205,448,206,449,207,449,208,449,209,450,210,450,211,456,212,456,213,458,214,458,215,458,216,462,217,463,218,464,219,465,220,464,221,464,222,464,223,464,224,464,225,466,226,467,227,467,228,467,229,467,230,467,231,468,232,468,233,469,234,469,235,468,236,466,237,465,238,463,239,462,240,434,241,433,242,433,243,402,244,406,245,412,246,412,247,413,248,402,249,402,250,402,251,400,252,399,253,398,254,397,255,396,256,394,257,393,258,392,259,391,260,389,261,388,262,387,263,385,264,384,265,382,266,381,267,381,268,382,269,382,270,383,271,383,272,384,273,385,274,386,275,386,276,387,277,387,278,387,279,388,280,388,281,388,282,388,283,389,284,389,285,389,286,390,287,390,288,391,289,391,290,392,291,393,292,394,293,395,294,395,295,396,296,397,297,398,298,399,299,399,300,400,301,400,302,401,303,401,304,401,305,401,306,401,307,401,308,401,309,401,310,402,311,403,312,404,313,405,314,406,315,408,316,408,317,409,318,409,319,409,320,409,321,409,322,409,323,409,324,409,325,408,326,408,327,407,328,406,329,406,330,406,331,405,332,405,333,404,334,403,335,402,336,402,337,403,338,403,339,404,340,404,341,404,342,405,343,404,344,408,345,412,346,414,347,414,348,414,349,414,350,414,351,415,352,415,353,415,354,416,355,415,356,415,357,414,358,413,359,411,360,410,361,410,362,410,363,410,364,412,365,412,366,412,367,414,368,415,369,415,370,415,371,415,372,415,373,415,374,416,375,415,376,415,377,414,378,414,379,413,380,412,381,412,382,410,383,409,384,407,385,406,386,404,387,397,388,397,389,397,390,397,391,396,392,395,393,394,394,393,395,390,396,390,397,390,398,390,399,390,400,389,401,389,402,388,403,388,404,388,405,388,406,387,407,386,408,385,409,384,410,379,411,361,412,355,413,352,414,350,415,347,416,311,417,302,418,312,419,312,420,301,421,300,422,295,423,293,424,292,425,283,426,283,427,279,428,278,429,271,430,270,431,258,432,252,433,249,434,233,435,238,436,237,437,221,437,218,436,215,435,211,434,204,433,195,432,189,431,185,430,179,429,177,428,172,427,170,426,169,425,169,424,169,423,155,422,151,421,147,420,144,419,143,418,135,417,132,416,130,415,125,414,123,413,118,412,116,411,115,410,114,409,114,408,113,407,110,406,108,405,108,404,104,403,102,402,100,401,98,400,95,399,92,398,82,397,81,396,80,395,80,394,70,393,70,392,70,391,70,390,71,389,68,388,68,387,68,386,66,385,66,384,49,383,49,382,49,381,49,380,47,379,47,378,48,377,46,376,40,375,41,374,33,373,33,372,34,371,30,370,27,369,27,368,28,367,27,366,28,365,27,364,21,363,22,362,22,361,22,360,22,359,19,358,19,357,20,356,20,355,19,354,19,353,18,352,18,351,18,350,14,349,13,348,12,347,12,346,12,345,12,344,12,343,11,342,11,341,9,340,9,339,10,338,8,337,7,336,9,335,8,334,7,333,8,332,7,331,6,330,6,329,6,328,7,327,8,326,8,325,9,324,9,323,12,322,7,321,7,320,6,319,7,318,6,317,7,316,7,315,6,314,8,313,8,312,9,311,10,310,10,309,11,308,9,307,9,306,10,305,11,304,11,303,12,302,10,301,11,300,12,299,12,298,13,297,10,296,11,295,13,294,11,293,11,292,12,291,13,290,13,289,13,288,15,287,16,286,16,285,15,284,16,283,17,282,17,281,18,280,20,279,20,278,18,277,20,276,19,275,19,274,19,273,20,272,21,271,21,270,21,269,22,268,22,267,25,266,25,265,24,264,24,263,28,262,28,261,29,260,29,259,31,258,32,257,35,256,34,255,39,254,39,253,40,252,41,251,42,250,43,249,46,248,44,247,42,246,41,245,41,244,41,243,40,242,40,241,41,240,41,239,39,238,38,237,38,236,37,235,37,234,38,233,38,232,36,231,36,230,35,229,35,228,35,227,35,226,36,225,35,224,36,223,37,222,41,221,41,220,41,219,48,218,49,217,50,216,51,215,53,214,73,213,72,212,73,211,72,210,73,209,76,208,80,207,81,206,82,205,83,204,83,203,82,202,81,201,86,200,86,199,85,198,84,197,91,196,91,195,92,194,91,193,94,192,94,191,95,190,96,189,96,188,96,187,98,186,98,185,97,184,98,183,98,182,99,181,98,180,97,179,97,178,97,177,97,176,97,175,97,174,97,173,97,172,97,171,97,170,97,169,97,168,98,167,98,166,100,165,101,164,102,163,105,162,105,161,106,160,107,159,114,158,114,157,114,156,115,155,115,154,116,153,153,152,158,151,158,150,158,149,163,148,171,147,173,146,174,145,174,144,175,143,176,142,177,141,179,140,181,139,182,138,184,137,185,136,184,135,184,134,185,133,185,132,187,131,189,130,193,129,199,128,200,127,204,126,208,125,210,124,213,123,231,122,231,121,231,120,240,119,238,118,237,117,237,116,236,115,236,114,236,113,236,112,237,111,238,110,238,109,238,108,242,107,243,106,245,105,249,104,289,103,291,102,292,101,296,100,299,99,302,99],41:[78,44,80,45,80,46,80,47,80,48,80,49,81,50,81,51,82,52,82,53,83,54,83,55,84,56,85,57,85,58,86,59,86,60,86,61,86,62,84,63,78,64,78,65,80,66,81,67,81,68,108,69,123,70,124,71,125,72,125,73,125,74,126,75,125,76,125,77,125,78,125,79,125,80,125,81,125,82,126,83,127,84,122,85,122,86,121,87,121,88,121,89,121,90,122,91,122,92,122,93,121,94,118,95,119,96,119,97,119,98,119,99,119,100,120,101,125,102,128,103,129,104,130,105,131,106,131,107,132,108,131,109,131,110,131,111,131,112,132,113,133,114,133,115,134,116,134,117,135,118,135,119,135,120,134,121,134,122,124,123,133,124,136,125,136,126,98,127,99,128,101,129,100,130,100,131,101,132,100,133,101,134,97,135,78,136,78,137,79,138,66,139,68,140,53,141,50,141,50,140,52,139,51,138,52,137,54,136,54,135,37,134,36,133,28,132,29,131,28,130,29,129,29,128,27,127,29,126,28,125,20,124,20,123,32,122,31,121,33,120,34,119,35,118,35,117,34,116,16,115,17,114,18,113,21,112,21,111,20,110,21,109,22,108,24,107,26,106,25,105,25,104,25,103,24,102,25,101,25,100,17,99,10,98,8,97,10,96,11,95,16,94,11,93,11,92,11,91,11,90,11,89,9,88,9,87,10,86,11,85,11,84,11,83,11,82,11,81,12,80,12,79,13,78,14,77,15,76,59,75,60,74,60,73,64,72,63,71,63,70,63,69,63,68,64,67,65,66,64,65,65,64,65,63,66,62,66,61,67,60,67,59,67,58,68,57,68,56,68,55,68,54,68,53,68,52,69,51,69,50,69,49,70,48,71,47,72,46,72,45,73,44,78,44],42:[214,182,348,122,522,98,754,108,986,192,1138,344,1162,378,1160,622,988,752,766,850,574,862,252,822,70,704,6,592,10,370,100,250,180,200,220,240,130,316,56,428,64,586,152,682,308,776,494,808,680,810,858,768,950,714,1074,594,1104,508,1078,360,974,266,852,186,640,146,468,152,336,176,262,222],43:[[169,664,170,583,203,563,212,567,213,570,213,600,215,602,227,595,257,607,308,624,386,642,461,652,509,655,524,654,527,648,542,647,572,648,576,654,579,655,639,652,717,641,780,627,858,601,876,593,879,593,888,599,891,599,891,566,893,563,899,560,929,576,934,581,934,668,926,674,922,667,921,657,918,655,917,652,911,652,902,649,881,660,878,663,872,664,848,676,839,677,833,681,826,681,824,684,800,690,797,692,797,704,791,706,785,706,782,703,781,697,778,697,760,703,754,703,751,705,733,708,724,707,712,712,703,712,697,715,691,714,685,716,682,715,679,717,661,719,658,718,634,723,631,721,628,723,613,724,613,733,611,736,602,736,597,725,555,727,501,725,499,734,497,736,488,736,486,724,462,723,459,721,441,718,438,719,417,715,405,715,390,711,384,712,378,710,376,707,364,708,355,705,340,703,319,696,318,702,315,705,312,707,309,705,306,706,303,704,301,692,298,690,274,683,274,680,267,681,261,677,255,677,246,674,240,671,238,668,223,663,202,651,187,655,186,658,183,660,183,666,180,669,175,669],[1,390,4,429,9,444,15,442,21,444,22,447,16,462,19,471,25,471,27,469,30,470,41,500,50,518,48,530,50,539,52,542,55,543,58,542,60,536,63,537,83,564,92,570,100,579,99,618,101,624,105,624,108,626,114,624,116,621,117,609,120,610,129,607,131,604,134,604,137,601,140,602,140,599,143,598,143,525,135,521,126,524,123,523,114,517,105,508,102,507,80,478,72,464,68,461,52,424,44,397,42,382,45,381,47,378,47,357,41,354,50,327,55,321,70,294,86,271,89,270,123,236,140,222,164,206,170,204,188,191,188,185,190,182,196,179,197,113,195,110,162,91,156,96,154,99,155,129,153,141,132,153,96,181,72,205,60,220,44,244,33,268,26,289,19,319,13,322,3,346],[225,125,226,59,234,52,246,58,270,74,273,74,336,51,372,42,450,29,516,23,582,23,594,25,612,25,678,33,735,44,762,51,810,67,846,83,868,69,869,71,871,68,880,63,889,69,890,78,889,138,880,143,877,142,876,145,862,154,856,156,847,151,841,152,826,143,823,143,817,138,781,127,736,117,719,115,713,112,707,112,703,109,696,110,684,106,666,105,660,102,645,102,633,100,627,97,620,99,583,97,574,101,526,101,517,97,499,97,487,99,484,96,481,98,469,97,463,100,445,103,438,102,435,104,414,106,408,109,321,126,273,142,267,141,261,144,252,142,246,137,243,137,238,131,232,130,226,126],[917,130,919,139,920,190,923,192,924,190,928,194,927,200,929,203,933,202,934,205,946,212,952,218,955,218,956,221,960,222,963,224,964,227,973,232,993,253,1008,266,1009,269,1015,273,1016,276,1025,285,1025,288,1048,321,1054,336,1054,326,1056,325,1059,337,1059,343,1056,343,1059,353,1052,358,1052,376,1057,384,1055,396,1056,402,1053,405,1054,408,1051,417,1048,420,1043,436,1036,451,1023,474,1001,502,992,511,980,521,968,518,962,521,961,524,961,593,968,601,970,598,972,601,971,603,975,604,977,601,982,607,988,604,990,605,992,621,995,623,1001,623,1004,621,1005,576,1039,537,1043,543,1046,543,1050,538,1052,532,1050,517,1061,496,1069,472,1071,469,1074,471,1080,471,1082,468,1083,462,1078,444,1090,444,1092,442,1092,436,1096,427,1099,397,1099,352,1088,325,1080,318,1074,291,1068,273,1052,237,1042,222,1024,201,1003,181,961,149,960,107,954,102,951,103,918,122,918,128]],44:[79,10,80,11,81,12,81,13,81,14,81,15,82,16,81,17,82,18,82,19,82,20,82,21,82,22,82,23,82,24,83,25,83,26,83,27,83,28,83,29,83,30,104,31,105,32,105,33,105,34,105,35,104,36,104,37,104,38,104,39,104,40,104,41,104,42,104,43,104,44,104,45,104,46,104,47,104,48,104,49,104,50,104,51,104,52,104,53,104,54,104,55,104,56,105,57,109,58,110,59,110,60,110,61,110,62,110,63,110,64,110,65,110,66,110,67,113,68,113,69,113,70,113,71,113,72,113,73,113,74,113,75,113,76,119,77,120,78,120,79,120,80,120,81,120,82,120,83,120,84,120,85,120,86,120,87,120,88,120,89,120,90,120,91,120,92,120,93,122,94,123,95,125,96,125,97,125,98,124,99,123,100,123,101,123,102,123,103,123,104,123,105,123,106,123,107,123,108,123,109,123,110,123,111,123,112,127,113,127,114,128,115,128,116,127,117,126,118,125,119,125,120,125,121,121,122,120,123,121,124,121,125,122,126,122,127,122,128,118,129,116,130,115,131,113,132,112,133,112,134,111,135,99,136,99,137,98,138,98,139,95,140,93,140,90,139,90,138,90,137,83,136,68,135,56,134,54,133,54,132,54,131,48,130,46,129,45,128,38,127,35,126,34,125,33,124,33,123,32,122,32,121,31,120,31,119,31,118,31,117,31,116,31,115,31,114,31,113,31,112,31,111,30,110,30,109,29,108,27,107,27,106,28,105,28,104,26,103,26,102,26,101,26,100,30,99,30,98,30,97,30,96,30,95,30,94,30,93,30,92,30,91,30,90,30,89,30,88,29,87,27,86,26,85,26,84,25,83,26,82,29,81,34,80,36,79,40,78,39,77,38,76,38,75,38,74,38,73,38,72,38,71,38,70,38,69,38,68,38,67,38,66,38,65,38,64,38,63,38,62,38,61,38,60,38,59,38,58,38,57,38,56,39,55,41,54,43,53,44,52,44,51,45,50,45,49,46,48,47,47,48,46,49,45,50,44,51,43,52,42,53,41,55,40,58,39,59,38,62,37,62,36,62,35,62,34,63,33,63,32,63,31,63,30,63,29,64,28,64,27,64,26,64,25,64,24,64,23,65,22,65,21,65,20,65,19,65,18,66,17,66,16,66,15,66,14,66,13,66,12,67,11,69,10,79,10],45:[79,20,82,21,84,22,86,23,87,24,89,25,90,26,91,27,92,28,93,29,94,30,94,31,95,32,96,33,96,34,97,35,97,36,98,37,98,38,99,39,99,40,99,41,99,42,100,43,100,44,100,45,100,46,100,47,101,48,101,49,101,50,101,51,102,52,103,53,104,54,104,55,104,56,113,57,114,58,115,59,115,60,115,61,115,62,115,63,115,64,115,65,115,66,115,67,115,68,115,69,115,70,115,71,115,72,115,73,115,74,115,75,115,76,115,77,114,78,114,79,114,80,114,81,114,82,114,83,114,84,114,85,114,86,114,87,114,88,114,89,114,90,118,91,119,92,119,93,119,94,119,95,119,96,119,97,120,98,121,99,122,100,123,101,123,102,123,103,123,104,123,105,123,106,122,107,121,108,121,109,122,110,123,111,124,112,124,113,125,114,125,115,125,116,124,117,123,118,123,119,123,120,123,121,125,122,124,123,122,124,121,125,120,126,120,127,120,128,119,129,119,130,119,131,116,132,115,133,107,134,69,134,66,133,64,132,64,131,64,130,65,129,66,128,58,127,54,126,35,125,31,124,31,123,31,122,32,121,33,120,33,119,34,118,34,117,34,116,34,115,34,114,33,113,32,112,31,111,31,110,30,109,29,108,29,107,29,106,28,105,24,104,22,103,22,102,22,101,23,100,24,99,25,98,25,97,25,96,25,95,25,94,25,93,25,92,25,91,25,90,25,89,26,88,26,87,28,86,39,85,39,84,39,83,39,82,39,81,39,80,39,79,39,78,39,77,39,76,40,75,41,74,41,73,41,72,41,71,41,70,41,69,41,68,42,67,41,66,41,65,41,64,41,63,41,62,41,61,41,60,41,59,41,58,41,57,41,56,41,55,41,54,41,53,42,52,42,51,42,50,42,49,42,48,42,47,43,46,43,45,43,44,43,43,44,42,44,41,44,40,45,39,45,38,45,37,46,36,46,35,47,34,47,33,48,32,49,31,50,30,51,29,52,28,53,27,54,26,55,25,56,24,58,23,60,22,62,21,64,20,79,20]};config.village["buildingPoly"][0]={19:[231,252,300,289,315,317,357,345,313,395,295,356,214,350,163,317],20:[368,407,424,434,510,434,516,457,452,482,381,539,329,516,318,455],21:[157,340,203,366,280,376,299,407,281,441,189,451,135,442],22:[136,461,193,469,278,462,285,517,255,516,154,562],23:[377,388,413,347,467,329,499,350,511,382,527,395,512,423,435,423],24:[298,243,415,207,455,244,482,264,491,282,436,297,387,321,349,298,339,266],25:[434,203,578,190,580,220,559,241,488,250,463,221],26:[605,194,721,216,706,299,621,274,514,282,506,261,568,254,597,229],27:[533,312,601,305,677,321,686,361,666,383,629,366,566,378,538,347],28:[743,220,849,268,779,287,739,317,721,310,733,261,730,229],29:[881,297,925,348,850,380,812,385,787,348,768,336,799,316,848,308],30:[936,365,968,440,824,442,819,402,872,390],31:[964,455,937,532,860,489,817,489,827,456,884,461],32:[703,394,748,360,778,400,788,454,770,490,707,532,664,501,706,483,728,442,723,414],33:[520,115,335,132,197,179,90,260,39,341,29,448,41,571,120,655,246,747,358,794,545,810,664,810,847,766,997,679,1104,593,1116,455,1081,344,993,246,843,181,709,136,525,115,524,169,701,182,877,237,1001,326,1050,418,1053,524,992,627,846,722,703,764,556,765,386,757,261,711,145,626,89,553,77,418,117,329,199,246,280,200,421,166,521,169],34:[920,547,829,614,777,568,741,553,780,531,808,508,847,506,878,528],35:[539,484,572,498,616,502,666,549,607,553,509,571,431,555,469,532,487,507],36:[295,534,356,570,342,597,300,615,265,640,211,659,146,599,186,567,249,542],37:[259,682,331,652,341,634,386,615,396,582,438,597,442,650,467,697,456,738,399,749],38:[594,589,663,583,713,569,726,579,722,616,690,652,632,660,598,632],39:[748,593,815,658,855,672,725,740,703,714,684,668,713,665,742,635],40:[461,599,513,607,569,597,577,641,608,671,656,677,680,710,491,731,490,687,465,644],42:[1116,755,1150,788,1150,794,1151,802,1054,828,1001,754,1065,746],43:[975,760,1035,840,1002,849,928,850,900,835,885,812,910,786]};config.village["resPoly"]={"11115":{"1":[276,329,282,320,291,313,295,307,301,303,328,297,333,285,339,281,345,280,357,270,378,264,396,264,408,268,414,272,435,290,439,305,433,329,426,347,430,356,427,365,416,380,407,386,405,389,399,392,388,381,383,378,380,379,379,374,376,372,367,378,361,378,355,372,354,369,345,361,333,343,327,340,318,348,318,351,310,363,303,368,301,362,296,356,287,353,284,350,278,338,277,332],"10":[687,410,695,434,707,446,709,452,721,462,763,475,784,476,787,474,790,476,796,475,808,468,813,453,819,449,827,440,829,428,841,423,853,414,856,414,859,412,862,406,858,400,834,392,822,392,810,387,792,384,780,380,774,381,753,379,729,391,723,392,708,401,690,406,688,409],"11":[809,455,810,458,825,458,846,467,852,472,857,484,869,489,884,487,899,492,941,492,953,500,962,500,968,502,977,508,992,511,1004,508,1013,502,1019,500,1023,494,1026,493,1039,472,1034,463,1040,442,1038,430,1027,420,1023,414,1023,408,997,384,991,383,973,375,967,376,958,372,952,372,943,368,937,368,919,361,907,360,898,354,892,353,883,357,879,366,876,369,874,381,875,384,872,393,860,403,859,409,847,415,843,420,828,427,826,430,826,436,818,448,812,452],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[522,581,523,575,530,566,536,562,554,555,560,556,575,553,593,556,605,555,620,560,626,565,638,570,659,585,659,591,669,606,666,624,650,645,644,649,608,648,599,645,593,645,575,649,566,655,560,653,548,643,540,625,529,615,527,606,529,600,524,591,523,582],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[538,675,541,693,552,704,557,713,563,719,581,727,611,735,629,735,638,731,640,719,637,710,643,706,655,705,664,698,670,699,676,697,680,688,689,683,691,680,691,674,689,671,677,664,668,656,653,650,641,646,614,647,596,643,569,650,561,658,549,662,543,666,540,672],"18":[614,559,623,557,659,558,695,570,701,570,710,574,719,574,737,581,763,604,765,607,764,610,767,613,779,616,788,623,792,632,805,647,806,653,804,659,793,670,790,671,773,689,764,694,743,695,737,697,722,697,710,694,695,698,686,698,683,696,680,697,677,695,677,692,680,687,689,681,688,672,682,667,676,665,667,656,649,651,646,649,645,646,650,642,650,639,659,632,665,623,664,620,667,608,665,602,658,593,658,587,637,571,625,566,616,560],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,551,219,566,223,575,223,578,226,578,229,588,241,588,244,597,251,600,260,594,272,581,280,583,283,581,286,576,281,570,283,579,289,588,298,588,301,585,302,584,305,575,308,545,308,506,297,505,303,502,301,500,295,491,287,486,278,477,270,472,273,471,267,474,266,474,263,468,245],"3":[602,288,605,294,611,295,617,303,617,306,623,311,624,314,627,313,629,310,638,312,638,315,650,321,652,324,652,327,654,328,645,334,645,337,651,341,654,350,657,351,656,354,661,359,663,368,660,373,654,374,646,381,647,384,650,386,651,392,656,398,659,399,659,396,665,395,673,388,672,382,678,384,677,388,680,392,683,391,682,388,684,386,690,391,696,387,696,384,705,380,706,383,714,379,717,380,717,383,720,384,721,381,731,372,729,366,731,360,738,352,741,351,743,357,740,363,746,365,745,368,747,370,750,368,751,365,756,362,760,356,768,351,768,348,765,346,772,340,769,331,770,328,773,329,778,323,781,322,783,319,778,313,779,310,782,310,787,302,793,298,794,295,791,292,782,287,779,289,777,286,782,283,780,280,781,278,790,280,791,283,794,284,804,276,804,273,796,265,797,261,795,258,786,253,785,250,776,243,779,241,780,238,786,234,787,231,778,225,775,225,769,229,766,235,757,232,752,224,747,229,744,228,743,225,737,221,731,221,725,224,721,233,721,237,713,243,713,240,717,235,714,226,711,225,710,228,707,230,698,227,695,229,692,235,686,233,683,234,675,241,672,238,677,233,675,230,677,227,676,224,667,222,664,225,664,231,661,233,652,232,649,235,648,238,651,239,650,241,641,237,635,237,633,231,639,232,641,235,651,228,650,225,644,220,638,220,632,224,628,236,625,237,616,234,613,232,611,226,609,227,605,236,610,244,616,246,617,249,620,250,621,247,630,244,631,247,634,249,625,250,620,255,620,258,611,258,605,262,607,268,613,271,614,274,617,274,618,271,624,268,626,270,623,276,615,283,603,287],"4":[173,406,188,407,193,412,194,418,190,421,198,421,197,427,200,429,209,429,218,426,220,427,215,432,224,434,224,439,230,439,239,436,230,443,238,443,244,447,253,449,258,454,273,456,274,459,277,461,280,460,281,457,293,455,296,453,302,455,308,452,314,453,318,448,321,447,320,445,311,442,317,440,318,437,324,437,325,440,331,442,343,442,349,438,355,438,356,435,347,427,349,425,364,433,376,433,379,431,381,434,393,432,399,434,402,433,403,431,398,428,401,427,397,423,400,422,409,424,421,424,423,421,420,415,426,414,426,411,423,408,420,410,419,413,416,407,419,407,417,403,414,402,408,396,402,395,379,372,373,370,364,377,361,377,344,360,340,351,330,339,327,338,317,348,317,351,308,363,305,365,303,364,296,355,287,352,284,349,282,343,279,340,277,328,274,325,271,328,265,329,258,338,249,344,242,356,227,361,227,364,222,370,213,375,207,384,201,386,192,395,186,395,181,401,175,401,174,404],"5":[456,322,460,334,456,346,459,358,470,369,479,390,488,397,509,406,521,406,527,404,539,406,563,401,564,398,573,395,575,392,572,386,551,367,548,358,544,352,543,349,545,337,554,322,552,316,546,311,528,305,522,305,513,302,507,304,501,303,492,305,480,305,474,307,462,315,457,321],"6":[541,346,542,352,551,370,572,389,572,392,563,397,562,400,564,403,570,405,609,402,618,399,624,395,640,378,643,377,649,371,655,359,653,353,640,338,636,329,627,323,615,321,606,313,597,311,591,307,570,307,567,305,561,305,543,309,543,312,551,319,550,325,544,334,543,343],"7":[755,379,769,367,775,364,776,358,773,355,774,352,772,346,774,340,788,329,809,321,836,325,857,332,863,336,893,346,898,351,897,354,888,355,882,360,876,378,876,390,871,396,862,402,835,393,823,392,805,386,796,386,781,382,757,380],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"3339":{"1":[276,332,277,344,280,350,285,356,291,357,306,369,312,372,327,372,339,377,360,378,369,383,372,383,378,389,390,394,411,384,419,376,419,373,429,361,429,355,425,349,434,325,438,301,434,289,431,288,421,277,418,276,412,270,400,265,379,263,373,267,361,268,347,279,338,281,333,286,330,295,324,298,303,302,297,305,277,328,277,331],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,551,219,566,223,575,223,578,226,578,229,588,241,588,244,597,251,600,260,594,272,581,280,583,283,581,286,576,281,570,283,579,289,588,298,588,301,585,302,584,305,575,308,545,308,506,297,505,303,502,301,500,295,491,287,486,278,477,270,472,273,471,267,474,266,474,263,468,245],"3":[602,288,605,294,611,295,617,303,617,306,623,311,624,314,627,313,629,310,632,311,637,316,643,317,652,324,659,318,657,315,658,312,661,312,667,317,670,322,669,328,671,331,677,333,677,336,680,338,676,341,678,347,676,350,669,346,657,349,658,358,656,364,660,369,663,369,659,374,653,375,647,379,646,382,657,399,660,398,660,395,666,395,669,393,673,387,673,382,678,385,677,388,680,392,683,391,682,388,684,386,690,391,696,387,696,384,702,381,705,380,707,383,715,378,720,369,726,365,740,351,755,363,766,348,766,344,772,340,769,331,770,328,773,329,783,319,778,313,779,310,782,310,783,307,787,302,793,298,794,295,782,287,779,289,777,286,782,283,780,280,781,278,790,280,791,283,794,284,804,276,804,273,796,265,796,259,790,256,783,248,777,244,779,239,787,232,779,225,770,228,767,234,764,234,755,231,753,225,750,226,748,229,745,229,744,226,738,222,732,221,723,226,724,229,721,232,722,237,714,243,712,241,717,236,712,224,708,230,699,227,696,228,693,234,684,233,676,240,673,239,673,236,676,234,677,225,668,222,662,227,665,230,659,233,653,232,648,237,651,241,648,241,642,237,636,238,634,232,635,230,638,232,639,235,643,234,644,231,650,229,651,226,645,221,639,220,630,226,631,229,626,237,614,233,612,227,609,226,607,229,605,238,612,246,615,246,619,250,620,248,629,243,630,246,633,248,632,250,626,249,623,251,621,257,615,257,606,261,604,264,612,271,613,274,616,274,620,270,626,269,624,275,616,283,604,287],"4":[198,369,202,381,198,393,201,405,213,416,222,437,228,443,255,453,270,450,279,452,297,448,309,450,330,450,360,445,366,441,381,424,387,421,394,413,396,404,396,401,388,392,379,389,361,377,340,377,322,370,304,370,295,368,271,352,265,350,244,349,238,351,223,351,214,354,205,360,199,368],"5":[443,329,449,320,461,312,470,309,497,308,500,306,512,310,518,310,527,314,539,311,566,311,575,315,579,321,578,324,570,331,561,334,555,346,546,351,538,360,537,363,542,372,543,381,549,390,549,393,544,405,529,410,517,408,499,411,493,409,475,402,466,393,461,381,456,384,451,380,450,374,453,372,454,369,448,365,444,353,448,341,445,332],"6":[543,362,547,368,553,368,558,373,549,380,550,383,553,385,574,387,586,395,595,398,604,396,625,396,631,394,636,390,635,384,646,374,650,362,665,351,668,345,666,342,669,339,669,336,663,331,645,326,585,325,579,327,567,335,570,340,568,346,559,348,550,353,547,355,544,361],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"33546":{"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544]},"3447":{"1":[231,333,240,334,255,339,264,345,270,344,276,346,276,349,279,351,284,347,287,348,298,343,298,346,293,351,293,357,299,360,308,360,308,365,317,370,331,366,331,363,337,362,339,357,342,359,357,361,369,365,372,363,381,362,387,365,387,368,390,369,399,367,402,368,407,373,416,373,419,372,420,369,429,369,424,361,433,361,439,353,445,358,448,358,450,352,462,353,465,350,465,347,477,343,479,340,473,339,474,330,471,328,472,326,481,329,483,323,480,320,474,318,469,312,472,308,470,305,452,289,446,288,437,294,434,293,428,287,405,251,399,249,391,257,388,258,382,267,379,268,370,256,358,244,349,238,346,239,327,256,327,259,318,270,312,270,307,276,304,276,295,291,289,294,288,297,282,301,279,299,270,307,267,307,258,313,252,315,246,324,234,331],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,542,218,566,223,590,225,614,233,623,240,629,252,625,261,631,279,625,284,624,287,621,287,617,281,608,279,584,278,581,279,583,282,582,285,579,285,574,280,571,282,572,285,581,291,587,297,588,300,582,306,573,308,540,307,507,296,506,302,503,302,501,296,489,285,487,279,478,271,475,271,473,274,470,268,473,267,474,264,473,258,468,246],"3":[597,227,612,225,621,219,633,215,636,216,663,214,675,216,684,215,690,217,726,217,744,219,774,230,780,230,786,233,798,233,810,239,816,240,825,247,829,253,844,265,844,271,839,276,821,280,806,280,770,312,761,317,753,328,750,327,748,324,727,337,724,337,709,345,691,350,679,346,672,328,666,323,660,322,663,328,662,331,659,333,650,332,647,329,653,320,651,317,636,311,627,302,624,293,625,284,631,279,630,273,624,261,628,255,626,246,623,240,614,233,599,229],"4":[179,414,184,420,187,420,191,424,192,421,202,414,208,417,208,420,203,423,209,425,211,431,219,435,219,438,223,444,229,445,230,448,238,442,244,444,246,447,252,448,257,453,256,456,262,459,274,451,283,453,292,447,293,450,299,451,304,446,303,440,309,442,310,445,316,446,315,452,318,453,320,451,320,448,323,447,324,445,321,442,322,440,325,439,325,436,328,435,331,435,338,443,346,447,349,447,357,441,356,435,353,433,354,431,357,431,359,433,361,442,368,448,379,442,382,442,382,439,385,437,391,437,406,447,412,443,412,449,400,456,388,450,379,457,382,463,388,464,388,467,391,467,392,464,401,458,409,463,411,469,414,472,417,471,419,473,418,476,421,478,423,476,423,473,428,468,426,465,430,457,442,453,442,447,445,445,445,439,447,436,440,430,446,429,450,424,442,417,436,417,430,421,429,424,430,427,436,431,434,433,428,430,426,427,415,420,416,417,423,412,421,409,422,403,413,397,407,397,406,394,393,380,387,378,378,370,372,370,360,376,358,374,360,368,351,363,345,364,340,359,337,359,334,356,322,357,314,364,308,364,308,361,305,358,293,356,290,354,289,352,292,350,291,347,285,344,280,349,277,350,265,346,256,346,255,343,251,341,248,350,245,352,233,349,224,355,225,361,223,364,214,364,205,369,205,372,217,380,219,377,228,373,233,378,234,384,232,390,224,381,222,381,219,387,217,389,214,388,207,397,209,400,212,400,213,403,199,412,190,407,184,409,181,412],"5":[464,373,469,364,478,357,481,345,484,342,505,335,511,335,520,330,523,330,527,336,536,342,538,345,537,357,539,363,550,374,568,381,610,381,616,383,634,381,639,384,609,394,603,393,576,404,564,403,558,404,546,410,531,411,525,409,513,397,498,392,489,392,483,386,477,382,468,379,466,376],"6":[523,330,524,333,538,346,538,361,542,367,551,375,575,382,608,381,617,383,641,383,656,379,659,376,659,370,654,361,656,355,645,345,641,327,637,321,631,317,616,316,607,312,601,315,592,313,577,313,547,323,541,323,526,329],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"3456":{"1":[225,350,231,349,229,358,231,360,237,359,243,354,248,345,257,339,263,333,264,330,273,327,276,328,278,331,278,337,284,349,287,352,296,355,304,366,310,362,316,353,317,347,328,338,339,350,343,359,360,377,363,378,371,372,377,372,383,376,402,396,408,396,414,400,413,397,422,396,425,393,431,392,432,390,426,388,429,386,427,383,428,380,425,378,426,376,432,379,435,378,436,372,430,368,427,368,422,362,423,359,426,358,423,356,422,353,434,357,438,349,441,348,443,354,446,356,449,355,449,346,452,344,457,350,460,351,468,346,469,340,472,342,478,342,477,336,471,332,467,323,467,317,473,317,472,311,478,310,470,303,476,301,464,299,458,294,452,292,443,286,439,280,438,274,429,262,414,250,409,241,403,235,381,220,372,226,370,232,364,241,358,246,348,264,342,270,339,276,330,281,322,290,319,299,295,282,290,288,287,289,286,292,277,299,272,308,260,320,251,323,241,338,238,338,234,344,228,348],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,551,219,566,223,575,223,578,226,578,229,588,241,588,244,597,251,600,260,594,272,581,280,583,283,581,286,576,281,570,283,579,289,588,298,588,301,585,302,584,305,575,308,545,308,506,297,505,303,502,301,500,295,491,287,486,278,477,270,472,273,471,267,474,266,474,263,468,245],"3":[602,288,605,294,611,295,617,303,617,306,623,311,624,314,627,313,629,310,638,312,638,315,650,321,652,324,652,327,654,328,645,334,645,337,651,341,654,350,657,351,656,354,661,359,663,368,660,373,654,374,646,381,647,384,650,386,651,392,656,398,659,399,659,396,665,395,673,388,672,382,678,384,677,388,680,392,683,391,682,388,684,386,690,391,696,387,696,384,702,381,705,380,706,383,709,382,714,379,719,373,719,370,725,366,739,352,742,352,754,362,757,361,765,349,765,344,768,344,771,341,772,338,769,329,772,329,783,320,778,314,778,311,781,310,786,302,792,299,794,296,786,289,780,289,777,287,778,284,781,284,780,278,789,280,793,284,796,283,797,280,800,280,804,274,797,266,798,263,796,259,790,256,783,248,777,244,779,239,787,232,779,225,770,228,767,234,764,234,755,231,753,225,750,226,748,229,745,229,744,226,738,222,732,221,723,226,724,229,721,232,722,237,714,243,712,241,717,236,712,224,708,230,699,227,696,228,693,234,684,233,676,240,673,239,673,236,676,234,677,225,668,222,662,227,665,230,659,233,653,232,648,237,651,241,648,241,642,237,636,238,634,232,635,230,638,232,639,235,643,234,644,231,650,229,651,226,645,221,639,220,630,226,631,229,626,237,614,233,612,227,609,226,605,238,612,246,615,246,619,250,620,248,629,243,630,246,633,248,632,250,626,249,623,251,621,257,615,257,606,261,604,264,612,271,613,274,616,274,620,270,626,269,624,275,616,283,604,287],"4":[173,406,188,407,193,412,194,418,190,421,198,421,197,427,200,429,209,429,218,426,220,427,215,432,224,434,224,439,230,439,239,436,230,443,238,443,244,447,253,449,258,454,273,456,274,459,277,461,280,460,281,457,293,455,296,453,302,455,308,452,314,453,318,448,321,447,320,445,311,442,317,440,318,437,324,437,325,440,331,442,343,442,349,438,355,438,356,435,347,427,349,425,364,433,376,433,379,431,381,434,393,432,399,434,402,433,403,431,398,428,401,427,397,423,400,422,409,424,421,424,423,421,420,415,426,414,426,411,423,408,420,410,419,413,416,407,419,407,417,403,414,402,408,396,402,395,379,372,373,370,364,377,361,377,344,360,340,351,330,339,327,338,317,348,317,351,308,363,305,365,303,364,296,355,287,352,284,349,282,343,279,340,277,328,274,325,271,328,265,329,258,338,249,344,242,356,227,361,227,364,222,370,213,375,207,384,201,386,192,395,186,395,181,401,175,401,174,404],"5":[464,373,469,364,478,357,481,345,484,342,505,335,511,335,520,330,523,330,527,336,536,342,538,345,537,357,539,363,550,374,568,381,610,381,616,383,634,381,639,384,609,394,603,393,576,404,564,403,558,404,546,410,531,411,525,409,513,397,498,392,489,392,483,386,477,382,468,379,466,376],"6":[523,330,524,333,538,346,538,361,542,367,551,375,575,382,608,381,617,383,641,383,656,379,659,376,659,370,654,361,656,355,645,345,641,327,637,321,631,317,616,316,607,312,601,315,592,313,577,313,547,323,541,323,526,329],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"3546":{"1":[231,333,240,334,255,339,264,345,270,344,276,346,276,349,279,351,284,347,287,348,298,343,298,346,292,354,293,357,299,360,301,363,298,366,310,366,319,371,331,371,334,368,343,367,338,358,344,358,350,361,356,361,368,365,371,363,380,362,386,364,386,367,389,369,401,367,406,372,418,373,422,369,428,369,429,367,423,362,426,360,435,360,438,354,447,359,449,353,452,351,455,353,461,353,464,351,464,348,479,341,474,340,474,331,471,326,480,329,482,327,482,324,481,321,475,319,472,316,470,310,473,309,468,303,450,288,447,287,435,294,426,285,406,252,400,248,380,268,374,263,368,254,359,245,347,238,328,255,326,261,319,269,313,270,308,275,305,276,298,284,296,290,293,293,290,293,286,299,283,301,277,301,262,311,253,314,247,323,235,331],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,551,219,566,223,575,223,578,226,578,229,588,241,588,244,597,251,600,260,594,272,581,280,583,283,581,286,576,281,570,283,579,289,588,298,588,301,585,302,584,305,575,308,545,308,506,297,505,303,502,301,500,295,491,287,486,278,477,270,472,273,471,267,474,266,474,263,468,245],"3":[602,288,605,294,611,295,617,303,617,306,623,311,624,314,627,313,629,310,638,312,638,315,650,321,652,324,652,327,654,328,645,334,645,337,651,341,654,350,657,351,656,354,661,359,663,368,660,373,654,374,646,381,647,384,650,386,651,392,656,398,659,399,659,396,665,395,673,388,672,382,678,384,677,388,680,392,683,391,682,388,684,386,690,391,696,387,696,384,702,381,705,380,706,383,709,382,714,379,719,373,719,370,725,366,739,352,742,352,754,362,757,361,765,349,765,344,768,344,771,341,772,338,769,329,772,329,783,320,778,314,778,311,781,310,786,302,792,299,794,296,786,289,780,289,777,287,778,284,781,284,780,278,789,280,793,284,796,283,797,280,800,280,804,274,797,266,798,263,796,259,790,256,783,248,777,244,779,239,787,232,779,225,770,228,767,234,764,234,755,231,753,225,750,226,748,229,745,229,744,226,738,222,732,221,723,226,724,229,721,232,722,237,714,243,712,241,717,236,712,224,708,230,699,227,696,228,693,234,684,233,676,240,673,239,673,236,676,234,677,225,668,222,662,227,665,230,659,233,653,232,648,237,651,241,648,241,642,237,636,238,634,232,635,230,638,232,639,235,643,234,644,231,650,229,651,226,645,221,639,220,630,226,631,229,626,237,614,233,612,227,609,226,605,238,612,246,615,246,619,250,620,248,629,243,630,246,633,248,632,250,626,249,623,251,621,257,615,257,606,261,604,264,612,271,613,274,616,274,620,270,626,269,624,275,616,283,604,287],"4":[190,404,196,399,211,395,226,388,232,380,244,375,249,370,255,368,261,370,267,367,282,370,300,376,306,380,324,378,336,378,345,380,360,378,378,387,387,387,393,392,397,398,396,404,399,407,408,407,414,409,420,412,421,415,409,425,388,432,379,438,372,445,348,447,336,450,333,449,327,453,318,451,303,457,291,459,273,455,267,455,264,457,246,456,225,446,220,440,208,434,202,429,200,426,204,420,204,414,192,406],"5":[464,373,469,364,478,357,481,345,484,342,505,335,511,335,520,330,523,330,527,336,536,342,538,345,537,357,539,363,550,374,568,381,610,381,616,383,634,381,639,384,609,394,603,393,576,404,564,403,558,404,546,410,531,411,525,409,513,397,498,392,489,392,483,386,477,382,468,379,466,376],"6":[523,330,524,333,538,346,538,361,542,367,551,375,575,382,608,381,617,383,641,383,656,379,659,376,659,370,654,361,656,355,645,345,641,327,637,321,631,317,616,316,607,312,601,315,592,313,577,313,547,323,541,323,526,329],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"3547":{"4":[190,404,196,399,211,395,226,388,232,380,244,375,249,370,255,368,261,370,267,367,282,370,300,376,306,380,324,378,336,378,345,380,360,378,378,387,387,387,393,392,397,398,396,404,399,407,408,407,414,409,420,412,421,415,409,425,388,432,379,438,372,445,348,447,336,450,333,449,327,453,318,451,303,457,291,459,273,455,267,455,264,457,246,456,225,446,220,440,208,434,202,429,200,426,204,420,204,414,192,406]},"4347":{"1":[231,333,240,334,255,339,264,345,270,344,276,346,276,349,279,351,284,347,287,348,298,343,298,346,293,351,293,357,299,360,308,360,308,365,317,370,331,366,331,363,337,362,339,357,342,359,357,361,369,365,372,363,381,362,387,365,387,368,390,369,399,367,402,368,407,373,416,373,419,372,420,369,429,369,424,361,433,361,439,353,445,358,448,358,450,352,462,353,465,350,465,347,477,343,479,340,473,339,474,330,471,328,472,326,481,329,483,323,480,320,474,318,469,312,472,308,470,305,452,289,446,288,437,294,434,293,428,287,405,251,399,249,391,257,388,258,382,267,379,268,370,256,358,244,349,238,346,239,327,256,327,259,318,270,312,270,307,276,304,276,295,291,289,294,288,297,282,301,279,299,270,307,267,307,258,313,252,315,246,324,234,331],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,542,218,566,223,590,225,614,233,623,240,629,252,625,261,631,279,625,284,624,287,621,287,617,281,608,279,584,278,581,279,583,282,582,285,579,285,574,280,571,282,572,285,581,291,587,297,588,300,582,306,573,308,540,307,507,296,506,302,503,302,501,296,489,285,487,279,478,271,475,271,473,274,470,268,473,267,474,264,473,258,468,246],"3":[597,227,612,225,621,219,633,215,636,216,663,214,675,216,684,215,690,217,726,217,744,219,774,230,780,230,786,233,798,233,810,239,816,240,825,247,829,253,844,265,844,271,839,276,821,280,806,280,770,312,761,317,753,328,750,327,748,324,727,337,724,337,709,345,691,350,679,346,672,328,666,323,660,322,663,328,662,331,659,333,650,332,647,329,653,320,651,317,636,311,627,302,624,293,625,284,631,279,630,273,624,261,628,255,626,246,623,240,614,233,599,229],"4":[179,414,184,420,187,420,191,424,192,421,202,414,208,417,208,420,203,423,209,425,211,431,219,435,219,438,223,444,229,445,230,448,238,442,244,444,246,447,252,448,257,453,256,456,262,459,274,451,283,453,292,447,293,450,299,451,304,446,303,440,309,442,310,445,316,446,315,452,318,453,320,451,320,448,323,447,324,445,321,442,322,440,325,439,325,436,328,435,331,435,338,443,346,447,349,447,357,441,356,435,353,433,354,431,357,431,359,433,361,442,368,448,379,442,382,442,382,439,385,437,391,437,406,447,412,443,412,449,400,456,388,450,379,457,382,463,388,464,388,467,391,467,392,464,401,458,409,463,411,469,414,472,417,471,419,473,418,476,421,478,423,476,423,473,428,468,426,465,430,457,442,453,442,447,445,445,445,439,447,436,440,430,446,429,450,424,442,417,436,417,430,421,429,424,430,427,436,431,434,433,428,430,426,427,415,420,416,417,423,412,421,409,422,403,413,397,407,397,406,394,393,380,387,378,378,370,372,370,360,376,358,374,360,368,351,363,345,364,340,359,337,359,334,356,322,357,314,364,308,364,308,361,305,358,293,356,290,354,289,352,292,350,291,347,285,344,280,349,277,350,265,346,256,346,255,343,251,341,248,350,245,352,233,349,224,355,225,361,223,364,214,364,205,369,205,372,217,380,219,377,228,373,233,378,234,384,232,390,224,381,222,381,219,387,217,389,214,388,207,397,209,400,212,400,213,403,199,412,190,407,184,409,181,412],"5":[452,410,454,407,463,401,469,400,469,397,478,391,476,388,473,389,472,392,469,391,458,384,458,381,462,375,462,369,456,366,454,363,460,354,463,352,469,354,472,352,465,344,465,341,474,335,472,329,473,326,476,324,477,315,483,310,495,313,501,310,503,304,507,299,510,302,512,311,515,311,518,302,524,301,530,304,531,307,529,310,531,313,529,316,526,317,526,320,532,323,535,320,540,321,540,318,534,316,534,313,537,307,543,304,552,309,558,308,564,310,570,315,568,321,562,324,572,339,563,345,559,351,556,351,555,357,552,360,556,366,555,372,561,377,562,380,556,388,565,385,574,391,577,391,589,383,595,382,598,383,606,391,601,396,598,396,597,401,589,406,588,409,585,410,581,407,578,407,576,409,576,412,574,413,571,413,569,404,554,409,554,412,551,412,550,409,544,407,540,401,537,401,536,407,533,407,533,402,527,401,525,398,526,395,523,394,521,396,521,402,519,405,510,409,509,412,506,411,505,408,499,407,496,408,494,414,491,413,488,407,482,406,477,415,480,421,478,424,472,427,463,419,462,416,456,414,453,411],"6":[546,359,548,365,557,372,556,375,553,376,551,379,551,382,554,384,560,386,575,386,584,392,590,394,605,396,626,396,635,393,636,390,634,384,645,375,648,363,665,351,667,348,665,342,667,336,659,329,650,327,635,325,587,325,581,327,570,335,571,344,553,352,547,358],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"4356":{"1":[225,350,231,346,238,337,241,337,248,325,260,320,274,305,274,302,286,292,287,289,295,282,316,298,319,297,319,294,326,285,332,279,338,276,341,270,347,264,358,246,370,232,374,223,377,223,382,219,409,240,416,252,434,267,438,273,441,282,444,285,447,286,453,292,465,298,474,300,473,303,470,304,479,308,478,310,475,311,475,314,473,316,467,319,469,328,476,336,476,342,470,340,468,342,469,345,463,348,451,344,451,353,448,355,445,355,442,349,439,348,436,354,433,355,427,355,424,352,422,353,426,359,423,360,423,363,435,371,436,377,430,379,424,376,428,380,427,383,430,389,433,390,432,392,423,396,423,399,417,397,417,400,414,401,408,396,399,392,378,372,372,371,363,378,360,377,343,360,341,354,332,342,326,339,322,344,319,345,317,351,306,365,303,365,302,362,296,356,287,353,284,350,279,341,277,329,274,327,265,330,258,339,249,345,244,354,238,359,232,360,229,355,231,352,229,350,226,351],"10":[661,425,663,422,669,419,702,408,709,400,721,396,726,391,732,390,768,389,771,387,777,390,789,388,816,391,837,396,846,403,844,421,827,434,820,455,818,458,812,460,811,472,805,473,802,476,772,478,751,474,742,477,727,477,712,472,709,469,703,473,697,472,691,469,689,466,697,466,698,463,695,460,680,455,672,447,677,438,677,435,671,430,662,426],"11":[834,468,836,474,842,479,848,480,854,486,860,486,875,493,881,491,887,492,893,489,920,493,935,491,959,484,1001,479,1008,470,1035,458,1050,448,1050,445,1048,442,1042,440,1027,438,1024,426,1017,418,1008,417,1002,413,996,413,990,407,978,409,969,408,966,406,961,397,952,393,940,393,931,396,919,396,913,394,907,397,889,396,883,398,874,410,872,422,864,430,858,434,855,434,844,442,842,457,835,466],"12":[166,611,166,620,169,621,181,620,184,622,187,621,196,623,201,619,204,619,205,622,203,625,206,627,215,625,224,630,233,630,235,628,244,627,246,625,237,618,238,615,247,617,259,616,264,625,270,627,279,621,282,615,297,619,306,617,318,619,319,617,313,614,307,608,308,602,310,600,322,598,328,600,328,597,319,591,319,585,324,580,333,582,344,577,336,569,321,564,312,555,306,552,297,544,291,548,276,538,267,526,259,511,256,508,253,508,235,524,220,531,212,539,209,545,204,566,198,575,195,577,193,583,187,592,177,603,171,606,169,609],"13":[332,540,338,531,341,531,352,525,351,519,357,514,360,509,366,505,375,507,379,501,391,495,392,489,395,487,395,481,383,490,374,487,371,481,377,476,386,474,387,472,385,469,391,464,394,466,396,472,402,474,407,471,409,474,411,480,408,486,412,492,411,495,408,496,412,502,418,501,424,503,436,497,439,491,433,487,436,481,435,472,430,467,433,458,436,455,439,455,447,467,443,472,451,484,451,487,456,492,465,491,468,494,469,503,464,508,467,509,469,506,472,507,475,516,470,521,464,517,458,519,456,522,447,527,447,533,450,536,456,533,462,537,471,532,480,531,481,528,490,523,493,523,499,516,505,517,508,519,513,531,518,537,519,543,522,545,528,554,522,560,516,562,515,559,512,558,510,555,513,550,504,553,502,556,496,555,487,562,483,557,477,555,471,557,462,550,460,553,457,554,456,560,450,563,444,558,447,549,446,546,443,548,440,547,437,553,428,558,422,557,414,564,412,567,412,573,406,575,406,578,404,580,389,584,382,577,384,574,393,568,396,570,399,569,399,563,396,562,384,571,381,569,378,570,376,573,367,577,365,580,360,576,357,576,349,583,346,583,340,578,342,569,344,566,347,565,353,570,356,568,357,562,351,562,345,557,344,554,352,547,364,552,367,550,364,547,364,541,358,539,349,543,347,546,344,547,341,552,338,550,337,544,334,543],"14":[522,581,523,575,530,566,536,562,554,555,560,556,575,553,593,556,605,555,620,560,626,565,638,570,659,585,659,591,669,606,666,624,650,645,644,649,608,648,599,645,593,645,575,649,566,655,560,653,548,643,540,625,529,615,527,606,529,600,524,591,523,582],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[538,675,541,693,552,704,557,713,563,719,581,727,611,735,629,735,638,731,640,719,637,710,643,706,655,705,664,698,670,699,676,697,680,688,689,683,691,680,691,674,689,671,677,664,668,656,653,650,641,646,614,647,596,643,569,650,561,658,549,662,543,666,540,672],"18":[614,559,623,557,659,558,695,570,701,570,710,574,719,574,737,581,763,604,765,607,764,610,767,613,779,616,788,623,792,632,805,647,806,653,804,659,793,670,790,671,773,689,764,694,743,695,737,697,722,697,710,694,695,698,686,698,683,696,680,697,677,695,677,692,680,687,689,681,688,672,682,667,676,665,667,656,649,651,646,649,645,646,650,642,650,639,659,632,665,623,664,620,667,608,665,602,658,593,658,587,637,571,625,566,616,560],"2":[451,228,463,242,469,246,472,247,481,241,482,244,474,251,480,255,483,261,483,264,480,267,478,273,475,276,466,272,460,274,455,279,456,282,461,286,458,292,461,294,473,293,476,295,482,291,488,292,489,298,500,304,502,298,508,294,511,294,517,298,526,296,535,300,538,299,543,295,536,283,541,278,539,275,541,272,538,266,547,269,550,272,552,281,544,288,548,294,554,297,557,294,569,292,578,297,587,293,593,293,611,299,623,294,626,292,626,289,629,289,633,294,638,290,639,287,642,286,642,283,637,277,631,273,633,270,629,255,617,247,605,249,603,246,616,236,616,227,613,224,607,224,603,230,589,238,586,238,583,236,583,233,589,230,589,227,586,224,577,221,568,228,559,226,553,214,550,217,546,229,552,233,549,235,543,234,537,238,534,233,528,228,522,227,514,234,511,243,496,238,498,232,490,225,484,222,472,226,469,223,460,221,452,227],"3":[649,283,652,280,673,272,688,262,697,259,706,261,712,257,730,256,760,262,770,277,772,283,781,290,782,302,776,311,767,317,755,319,754,322,769,335,769,341,754,347,727,347,703,341,688,335,676,328,656,301,650,286],"4":[173,406,188,407,193,412,194,418,190,421,198,421,197,427,200,429,209,429,214,425,217,425,218,421,224,416,236,425,254,446,257,446,263,437,269,434,270,431,276,427,282,432,292,447,294,453,303,455,309,452,315,453,319,447,322,446,313,443,312,441,315,441,319,438,325,438,326,441,332,442,344,442,350,438,356,437,355,434,347,426,368,433,380,432,382,435,385,433,394,432,397,434,403,433,402,431,399,430,399,427,402,426,399,425,398,422,404,422,413,425,416,423,419,424,422,423,423,420,421,414,427,413,422,408,418,412,416,409,417,407,420,407,410,398,401,394,390,382,378,372,372,371,363,378,360,376,343,359,341,353,329,338,318,346,317,352,304,366,295,354,289,353,283,348,281,342,278,339,276,327,273,326,264,330,260,336,248,345,241,357,229,360,221,371,215,374,209,382,200,387,191,395,188,394,185,396,180,402,177,400,174,402],"5":[438,372,440,369,446,366,455,365,455,359,450,354,450,351,452,348,461,344,467,347,473,346,476,348,481,354,480,357,482,366,485,367,488,364,491,364,491,358,500,352,500,346,502,343,497,340,499,334,498,331,500,328,495,323,495,314,489,315,480,307,481,304,487,300,493,298,499,300,501,297,507,294,513,294,519,297,525,295,534,299,546,296,558,303,561,302,570,309,570,312,567,312,562,317,562,323,556,326,569,344,569,347,566,349,570,355,566,361,566,367,563,373,575,389,568,399,565,397,562,398,560,401,552,398,551,400,559,412,550,421,543,414,546,408,543,405,537,405,533,400,524,405,524,411,521,414,512,411,511,417,508,416,507,413,489,405,484,409,478,405,484,393,484,390,481,387,478,387,476,390,477,393,471,403,468,400,468,397,465,398,462,395,465,390,464,387,461,386,459,383,450,381,441,375],"6":[554,326,568,344,567,347,564,349,568,355,562,373,565,379,573,387,573,393,568,399,566,405,566,411,569,414,575,412,576,409,573,403,575,401,578,402,580,405,583,405,585,402,588,401,590,403,589,406,597,414,600,414,601,408,604,406,604,397,598,393,595,395,592,394,584,387,599,380,608,388,607,394,613,396,619,401,633,390,633,387,638,382,637,379,639,376,642,378,645,376,646,385,652,387,654,390,652,396,657,400,660,402,661,399,667,396,668,393,661,384,655,381,654,375,663,372,663,381,666,381,668,383,668,386,671,387,676,379,677,370,673,364,675,358,681,353,681,350,678,341,676,338,673,337,672,340,666,345,663,345,667,339,658,334,653,325,653,322,650,319,646,324,644,330,641,326,641,320,635,317,632,318,631,315,622,309,615,309,612,310,605,318,596,322,595,325,597,331,600,330,609,332,608,329,610,326,613,325,619,330,622,330,627,338,632,336,631,333,628,331,630,325,629,322,620,325,611,318,611,315,616,310,617,304,611,299,602,299,590,291,578,297,566,291,557,296,556,299,571,309,571,312,565,312,562,314,561,323,555,325],"7":[781,336,784,354,804,378,828,388,846,393,876,394,882,389,883,377,880,371,882,368,888,366,900,366,901,375,904,378,913,382,934,387,952,387,958,385,961,383,964,374,959,362,947,354,920,353,922,347,914,338,896,324,894,315,889,306,883,300,877,297,859,292,832,290,811,294,802,298,799,301,798,307,799,310,805,315,804,318,786,326,782,335],"8":[144,491,151,482,160,478,165,472,170,469,180,454,186,451,187,448,193,448,199,442,204,433,213,426,223,415,241,429,252,444,255,446,261,445,263,451,262,463,252,472,251,478,245,487,243,493,249,511,236,524,221,532,212,540,210,543,207,561,200,573,194,579,193,585,190,586,187,580,181,579,189,570,187,567,187,561,172,560,171,557,174,555,174,552,168,550,162,551,160,549,163,547,169,538,190,525,190,520,192,517,190,515,184,515,178,511,174,505,168,506,168,503,156,502,153,500,154,497,152,494,146,493],"9":[242,493,248,508,257,509,269,530,272,533,278,533,281,531,284,534,279,539,280,541,292,544,295,543,298,538,301,538,304,541,319,536,322,534,322,531,324,529,336,530,339,529,339,526,345,527,345,524,353,519,350,517,348,511,369,511,372,508,375,509,375,506,361,492,361,489,364,487,365,481,368,479,380,479,383,477,392,476,390,473,384,471,383,468,386,469,386,466,371,458,365,449,356,440,350,437,345,442,324,451,314,462,305,465,302,463,294,451,284,433,275,427,261,440,260,443,263,452,263,461,252,472,244,490]},"4437":{"1":[267,340,269,337,278,331,277,328,271,326,272,323,278,319,278,316,273,312,277,300,280,301,282,307,285,307,287,301,293,298,295,295,294,292,296,289,305,285,308,286,311,280,314,279,316,282,325,283,331,282,333,279,330,278,327,281,324,280,323,275,320,276,317,273,320,268,319,265,322,262,325,260,331,262,333,265,342,269,344,267,350,266,356,270,358,268,349,262,350,259,356,255,362,254,371,260,380,263,385,252,388,250,392,255,394,252,397,252,394,247,400,242,409,246,407,251,408,254,411,255,412,249,418,245,430,245,427,243,433,237,439,238,441,240,440,246,442,249,448,250,455,245,459,254,458,257,452,262,449,262,448,265,451,266,460,263,466,267,468,270,467,273,470,282,482,290,471,301,472,304,478,310,476,313,470,316,467,321,467,324,464,326,470,327,476,332,476,335,475,338,469,340,472,349,471,361,466,366,460,369,461,372,464,370,469,382,465,387,464,393,457,399,469,407,468,410,458,418,456,415,450,412,447,406,444,407,441,405,435,407,435,413,432,411,428,403,425,404,418,397,413,397,414,402,417,403,415,397,410,395,409,392,403,392,400,390,395,382,386,378,380,372,374,370,365,374,359,373,357,363,354,363,349,357,346,359,340,359,337,358,332,352,320,350,299,357,291,351,293,345,292,342,280,346,279,349,276,348,275,345,272,345,270,343],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[181,560,181,566,195,587,194,590,199,602,217,611,217,614,214,617,217,620,226,620,229,619,229,616,232,615,241,617,243,623,242,626,247,635,256,638,271,636,286,630,313,613,316,613,320,617,327,606,342,596,364,575,363,569,357,564,348,563,339,557,333,557,321,547,309,545,304,539,283,541,262,540,247,549,238,549,226,553,217,558,196,555,184,558],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,676,529,665,528,660,525,661,522,658,525,655,525,649,528,647,532,638,542,633,544,635,547,634,556,640,559,640,561,646,567,647,571,652,572,650,570,647,573,644,576,643,579,646,588,641,586,638,590,633,605,633,607,630,612,642,617,637,622,649,617,654,611,652,616,658,616,661,610,663,607,669,604,671,610,677,610,683,607,689,608,692,617,693,623,698,623,701,617,704,616,707,613,708,613,705,608,708,605,708,604,710,610,710,616,715,614,721,611,722,608,726,598,719,597,713,595,715,596,718,588,719,587,722,584,722,582,719,576,719,569,725,566,731,560,733,560,736,557,737,547,729,546,723,543,722,537,724,537,727,534,726,535,723,529,721,530,718,533,716,531,713,534,703,531,702,528,703,527,706,524,705,524,702,518,701,516,695,525,689,531,690,537,687,533,681,530,682,529,685,526,685,525,682,519,679],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,542,218,566,223,590,225,614,233,623,240,629,252,625,261,631,279,625,284,624,287,621,287,617,281,608,279,584,278,581,279,583,282,582,285,579,285,574,280,571,282,572,285,581,291,587,297,588,300,582,306,573,308,540,307,507,296,506,302,503,302,501,296,489,285,487,279,478,271,475,271,473,274,470,268,473,267,474,264,473,258,468,246],"3":[597,227,612,225,621,219,633,215,636,216,663,214,675,216,684,215,690,217,726,217,744,219,774,230,780,230,786,233,798,233,810,239,816,240,825,247,829,253,844,265,844,271,839,276,821,280,806,280,770,312,761,317,753,328,750,327,748,324,727,337,724,337,709,345,691,350,679,346,672,328,666,323,660,322,663,328,662,331,659,333,650,332,647,329,653,320,651,317,636,311,627,302,624,293,625,284,631,279,630,273,624,261,628,255,626,246,623,240,614,233,599,229],"4":[179,414,184,420,187,420,191,424,192,421,202,414,208,417,208,420,203,423,209,425,211,431,219,435,219,438,223,444,229,445,230,448,238,442,244,444,246,447,252,448,257,453,256,456,262,459,274,451,283,453,292,447,293,450,299,451,304,446,303,440,309,442,310,445,316,446,315,452,318,453,320,451,320,448,323,447,324,445,321,442,322,440,325,439,325,436,328,435,331,435,338,443,346,447,349,447,357,441,356,435,353,433,354,431,357,431,359,433,361,442,368,448,379,442,382,442,382,439,385,437,391,437,406,447,412,443,412,449,400,456,388,450,379,457,382,463,388,464,388,467,391,467,392,464,401,458,409,463,411,469,414,472,417,471,419,473,418,476,421,478,423,476,423,473,428,468,426,465,430,457,442,453,442,447,445,445,445,439,447,436,440,430,446,429,450,424,442,417,436,417,430,421,429,424,430,427,436,431,434,433,428,430,426,427,415,420,416,417,423,412,421,409,422,403,413,397,407,397,406,394,393,380,387,378,378,370,372,370,360,376,358,374,360,368,351,363,345,364,340,359,337,359,334,356,322,357,314,364,308,364,308,361,305,358,293,356,290,354,289,352,292,350,291,347,285,344,280,349,277,350,265,346,256,346,255,343,251,341,248,350,245,352,233,349,224,355,225,361,223,364,214,364,205,369,205,372,217,380,219,377,228,373,233,378,234,384,232,390,224,381,222,381,219,387,217,389,214,388,207,397,209,400,212,400,213,403,199,412,190,407,184,409,181,412],"5":[464,373,469,364,478,357,481,345,484,342,505,335,511,335,520,330,523,330,527,336,536,342,538,345,537,357,539,363,550,374,568,381,610,381,616,383,634,381,639,384,609,394,603,393,576,404,564,403,558,404,546,410,531,411,525,409,513,397,498,392,489,392,483,386,477,382,468,379,466,376],"6":[523,330,524,333,538,346,538,361,542,367,551,375,575,382,608,381,617,383,641,383,656,379,659,376,659,370,654,361,656,355,645,345,641,327,637,321,631,317,616,316,607,312,601,315,592,313,577,313,547,323,541,323,526,329],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"4446":{"1":[271,323,271,326,274,326,277,329,278,338,283,344,292,341,293,347,291,350,301,359,304,359,305,356,317,350,317,347,328,338,342,353,343,359,349,357,354,363,357,363,359,365,356,369,358,371,367,374,370,373,372,370,378,372,387,380,390,381,401,393,407,395,415,402,421,401,430,404,434,413,436,411,435,408,440,405,448,408,449,411,455,414,458,418,468,410,468,407,465,404,456,399,458,396,464,393,465,387,469,382,464,370,463,373,460,373,460,370,465,367,466,364,472,358,469,340,475,338,476,332,464,326,467,324,469,316,477,312,477,309,471,303,475,295,481,293,482,290,470,282,467,273,468,270,463,265,460,263,451,266,448,265,449,262,455,260,459,255,454,243,452,249,449,251,446,249,443,250,438,245,441,244,442,241,439,238,433,237,428,242,430,245,427,247,421,245,415,247,412,250,411,256,408,257,407,251,409,246,400,242,395,247,396,250,399,251,393,254,390,254,388,251,385,253,383,262,381,264,372,261,363,254,351,258,349,261,351,264,360,268,355,271,350,266,347,268,344,267,342,269,328,261,322,262,319,265,321,270,318,271,318,274,324,276,322,279,325,281,331,279,331,282,316,283,315,280,312,279,310,285,304,285,295,290,294,293,297,295,298,298,292,298,286,302,285,308,282,307,279,301,277,302,273,311,278,318,276,321,273,322],"10":[662,422,668,417,677,415,680,409,686,407,690,398,695,392,706,385,712,388,722,400,717,405,720,408,720,414,726,418,729,416,731,410,740,408,748,400,757,396,769,387,775,381,778,375,784,371,785,368,791,363,800,369,817,399,825,408,831,411,840,419,849,421,858,427,873,427,873,433,874,436,877,438,877,441,872,456,863,457,857,460,842,459,842,462,836,467,832,473,826,475,814,473,811,479,808,480,793,476,802,470,799,468,793,470,781,470,780,464,777,465,775,463,780,458,778,456,766,464,745,471,739,471,737,467,731,465,728,462,722,466,710,464,709,459,706,458,710,452,708,450,702,451,693,445,693,442,689,437,680,439,677,437,674,438,669,436,671,432,669,429,666,430,663,428,663,425],"11":[845,415,851,411,860,409,865,403,886,389,889,389,898,383,904,377,913,362,931,348,943,362,943,368,945,371,948,373,951,370,954,372,968,396,977,405,983,407,989,412,995,408,1001,414,1010,419,1021,430,1036,434,1039,437,1036,442,1030,444,1024,442,1016,448,1016,454,1022,459,1022,461,1013,464,1007,462,1005,464,1011,473,1008,476,1014,480,1012,482,1003,479,1000,479,998,482,995,482,986,478,980,478,977,481,978,484,967,491,961,487,959,481,956,479,947,480,941,477,935,479,929,478,927,476,927,472,925,469,922,466,916,465,914,468,923,480,911,480,905,484,899,483,894,487,888,485,879,486,877,483,874,485,865,485,863,479,857,481,854,479,848,480,858,472,879,462,880,459,878,457,878,448,881,445,882,439,877,434,877,428,883,423,886,423,886,420,877,421,877,418,875,416,857,415,848,417],"12":[181,560,181,566,195,587,194,590,199,602,217,611,217,614,214,617,217,620,226,620,229,619,229,616,232,615,241,617,243,623,242,626,247,635,256,638,271,636,286,630,313,613,316,613,320,617,327,606,342,596,364,575,363,569,357,564,348,563,339,557,333,557,321,547,309,545,304,539,283,541,262,540,247,549,238,549,226,553,217,558,196,555,184,558],"13":[304,539,328,523,344,508,353,508,356,506,374,512,383,512,395,509,407,511,413,508,422,508,440,513,444,519,440,528,443,531,445,537,440,549,419,560,392,568,377,568,365,575,364,569,358,564,346,561,340,557,334,557,320,546,311,546,305,540],"14":[492,546,494,552,500,553,500,556,503,557,504,554,510,552,509,555,512,557,506,559,497,565,497,568,503,572,506,572,505,576,507,578,507,584,513,588,513,591,519,592,522,590,527,593,527,596,523,599,528,603,526,610,522,610,522,603,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,506,626,510,632,513,632,512,636,515,636,519,633,522,635,522,638,519,640,522,646,528,647,532,638,547,633,552,638,560,641,561,647,567,647,568,650,571,652,572,650,570,648,572,645,575,643,581,646,587,642,588,639,586,637,589,634,601,632,604,633,607,631,609,634,618,629,618,626,624,623,626,620,622,614,622,605,618,600,623,596,617,590,623,585,613,576,614,573,623,568,622,565,616,560,610,559,610,556,617,550,617,547,608,540,599,546,598,549,600,552,598,553,594,554,590,548,581,545,576,550,577,553,575,555,569,552,563,555,560,558,560,561,565,564,566,567,563,566,557,569,554,569,554,563,551,561,545,561,537,550,532,558,530,560,527,560,524,559,522,556,524,553,521,550,512,550,513,547,511,544,505,540,496,542,494,545],"15":[695,524,695,533,698,542,703,548,706,548,706,551,709,553,733,560,735,563,737,560,740,561,741,564,746,560,752,560,791,573,800,578,811,587,817,589,826,589,838,597,853,597,871,590,884,579,896,561,891,552,897,534,894,516,868,494,853,490,844,491,835,489,832,492,814,492,781,500,772,504,757,504,751,502,730,503,718,501,703,506,703,518,697,522],"16":[323,635,335,635,338,637,341,646,340,649,331,653,332,655,344,656,347,659,359,664,360,667,351,670,347,673,363,671,378,679,381,679,387,683,399,687,402,690,420,695,420,698,417,700,417,703,429,699,450,700,455,703,455,709,491,705,497,702,508,691,511,691,520,683,529,679,531,676,527,670,518,667,520,661,511,659,512,653,518,650,510,645,503,636,510,627,511,624,509,615,512,609,518,604,520,598,519,595,513,594,504,589,492,578,490,572,484,567,475,565,463,559,460,560,457,566,454,567,448,565,446,568,434,569,428,572,419,582,419,585,417,587,405,589,399,594,395,600,392,600,383,608,380,605,375,610,369,612,361,620,337,624,333,629,327,632],"17":[516,676,529,665,528,660,525,661,522,658,525,655,525,649,528,647,532,638,542,633,544,635,547,634,556,640,559,640,561,646,567,647,571,652,572,650,570,647,573,644,576,643,579,646,588,641,586,638,590,633,605,633,607,630,612,642,617,637,622,649,617,654,611,652,616,658,616,661,610,663,607,669,604,671,610,677,610,683,607,689,608,692,617,693,623,698,623,701,617,704,616,707,613,708,613,705,608,708,605,708,604,710,610,710,616,715,614,721,611,722,608,726,598,719,597,713,595,715,596,718,588,719,587,722,584,722,582,719,576,719,569,725,566,731,560,733,560,736,557,737,547,729,546,723,543,722,537,724,537,727,534,726,535,723,529,721,530,718,533,716,531,713,534,703,531,702,528,703,527,706,524,705,524,702,518,701,516,695,525,689,531,690,537,687,533,681,530,682,529,685,526,685,525,682,519,679],"18":[611,685,617,683,617,668,620,665,626,663,631,657,627,633,627,621,623,612,623,603,629,595,630,586,632,583,640,578,639,575,636,573,624,571,623,568,625,565,623,562,629,559,631,556,630,550,633,547,642,549,660,557,696,562,708,569,717,572,722,578,725,579,727,585,732,590,738,592,747,592,771,601,773,604,769,610,771,616,780,618,792,618,793,621,784,625,783,628,786,634,789,636,790,645,787,650,784,650,772,658,765,667,756,670,729,687,727,690,718,692,712,697,700,701,682,703,679,705,664,704,652,699,631,699,619,691,616,692,613,690,613,687],"2":[468,243,489,235,495,225,492,224,489,228,492,233,500,228,515,222,524,224,533,219,551,219,560,222,572,223,578,226,577,229,583,234,587,240,587,243,599,254,599,263,591,274,579,280,582,281,581,284,579,285,574,280,571,281,573,287,579,290,587,298,588,301,574,308,541,307,507,296,505,297,505,301,503,300,500,294,491,286,485,277,476,270,474,272,472,271,471,268,474,267,475,264,469,246],"3":[602,289,606,295,609,295,616,301,618,307,626,314,628,311,637,311,637,315,640,315,649,320,652,323,652,326,655,327,646,333,645,336,653,342,653,347,657,351,657,354,663,362,663,368,659,374,653,375,647,379,646,382,649,385,653,394,656,395,656,398,659,399,659,396,665,395,671,390,673,387,671,384,673,382,678,385,678,391,684,392,682,388,684,386,690,391,696,387,696,384,702,380,705,380,707,383,708,381,714,379,719,373,719,370,739,352,742,352,754,362,757,361,765,349,765,344,771,341,769,329,775,328,775,325,783,319,778,313,779,310,782,310,783,305,793,298,794,295,788,290,782,288,779,289,777,286,782,283,780,280,781,278,787,279,790,281,791,284,794,284,797,279,803,277,804,274,796,265,797,262,795,259,786,253,780,246,774,243,768,246,768,243,771,238,774,238,778,242,779,239,785,236,787,233,786,230,777,225,768,230,767,236,761,232,755,231,753,225,745,230,743,225,734,220,725,225,721,233,721,237,713,244,712,242,716,237,713,225,706,230,703,228,697,228,692,236,686,233,683,234,675,242,672,239,673,236,676,234,675,228,677,226,674,223,668,222,662,227,665,229,663,232,654,232,648,236,651,241,648,241,642,237,636,238,634,229,641,235,651,228,646,222,640,220,631,225,627,237,624,237,618,233,615,235,611,227,609,228,605,237,611,245,617,247,619,250,620,248,629,243,635,251,626,249,621,254,621,258,615,257,606,262,604,265,613,271,613,274,617,274,617,271,626,269,624,275,616,283,607,285,604,288],"4":[173,404,175,407,187,406,188,409,195,414,194,417,188,421,199,421,198,427,201,429,204,430,219,426,219,429,212,434,222,433,224,435,222,439,229,439,238,435,238,438,231,443,239,442,241,445,250,450,253,448,257,454,266,454,272,456,273,459,276,461,279,461,282,457,294,455,297,453,303,455,306,452,315,453,316,450,322,446,310,442,316,440,317,437,332,442,338,440,344,442,350,438,356,438,358,436,347,427,349,426,364,433,379,433,382,435,385,433,388,434,394,432,397,434,403,433,402,431,399,430,400,427,403,428,402,422,396,422,399,425,406,422,409,424,418,424,421,423,423,420,418,411,415,409,416,407,419,407,421,405,409,397,403,396,380,373,374,371,368,373,363,378,360,376,342,359,341,353,329,338,318,346,315,355,304,366,294,354,285,351,281,342,278,339,277,330,275,327,265,330,261,336,249,344,242,356,227,362,224,368,215,374,210,382,201,386,193,394,187,395,179,403,176,400,174,403],"5":[465,372,467,378,479,383,488,391,497,391,512,396,521,405,530,411,536,409,548,409,563,403,578,403,602,393,611,393,641,383,617,383,608,381,572,382,548,374,538,362,538,347,534,341,528,338,522,332,522,329,510,335,492,340,489,339,483,343,480,346,479,355,474,361,468,365,466,371],"6":[523,330,527,336,536,342,538,345,539,348,537,351,537,357,541,366,550,374,556,375,562,379,568,381,604,380,616,383,634,381,640,383,655,379,658,376,658,370,654,361,656,355,644,345,642,330,639,324,633,318,627,316,615,316,609,313,600,315,591,313,576,313,564,318,558,318,552,322,534,325,525,329],"7":[708,386,711,387,722,399,721,402,718,404,720,407,720,413,726,418,731,410,737,409,746,403,750,398,756,396,768,388,774,382,777,376,785,369,786,366,792,362,798,366,820,402,826,408,838,416,859,409,867,401,885,389,888,389,897,383,903,378,903,375,893,363,889,354,886,351,880,349,876,337,869,328,854,317,849,311,847,305,841,299,835,297,821,284,810,291,808,297,798,309,786,330,780,335,774,343,771,343,758,358,758,364,740,351,730,362,721,369,711,384],"8":[153,487,156,499,160,505,174,519,174,522,171,525,173,543,171,545,168,545,168,548,170,551,174,549,174,552,179,561,182,558,194,555,218,557,227,552,239,548,248,548,263,540,281,541,284,540,284,534,296,528,299,522,297,516,290,507,278,497,278,491,242,479,233,474,221,470,212,469,200,465,188,465,176,469,170,473,167,473,161,477,155,485],"9":[247,468,248,474,255,481,267,487,276,489,279,492,278,495,283,501,289,505,298,517,299,526,308,525,317,529,329,522,339,511,345,508,360,506,372,511,384,511,390,509,408,510,420,506,419,503,425,499,431,502,434,499,432,496,433,493,430,491,432,488,431,485,428,483,407,482,383,468,359,462,347,461,344,463,329,463,317,465,316,468,310,471,298,471,295,469,292,470,277,467,268,467,265,469,250,467]},"4536":{"1":[267,340,278,331,276,328,273,327,272,324,278,319,273,312,278,300,281,303,283,309,285,307,285,304,291,299,297,298,298,296,295,296,292,293,286,295,284,298,281,297,274,290,274,287,277,284,286,281,296,290,302,286,308,287,311,281,314,280,317,283,326,284,332,282,332,279,321,277,318,275,320,269,319,266,321,263,330,262,342,270,345,267,351,267,357,271,360,269,351,265,349,262,350,259,362,255,371,261,380,263,382,262,385,253,388,249,391,256,396,251,394,248,400,243,409,246,407,252,410,257,411,251,414,248,420,245,429,247,428,244,432,238,438,238,441,240,442,243,440,246,442,249,448,251,451,250,455,244,459,256,457,259,448,264,449,267,458,263,464,266,467,269,469,281,475,284,481,290,481,293,478,296,475,296,471,304,477,310,478,316,481,319,483,325,482,331,486,340,485,343,479,345,476,344,472,339,472,357,469,363,463,369,469,381,465,393,456,399,464,404,468,410,460,417,457,417,455,414,452,414,448,408,442,406,439,406,435,412,432,412,428,415,425,410,422,410,417,404,413,402,411,396,412,392,418,392,420,398,419,402,416,401,414,396,409,392,406,395,395,382,389,383,388,386,377,377,377,372,374,372,369,376,360,374,357,368,359,365,353,366,355,369,353,372,350,371,349,377,346,377,344,369,338,368,332,371,330,374,327,374,318,368,315,369,303,359,297,357,295,354,288,352,291,351,290,356,285,359,285,362,282,362,280,360,281,357,279,354,276,354,275,345,269,343],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,551,219,566,223,575,223,578,226,578,229,588,241,588,244,597,251,600,260,594,272,581,280,583,283,581,286,576,281,570,283,579,289,588,298,588,301,585,302,584,305,575,308,545,308,506,297,505,303,502,301,500,295,491,287,486,278,477,270,472,273,471,267,474,266,474,263,468,245],"3":[602,288,605,294,611,295,617,303,617,306,623,311,624,314,627,313,629,310,638,312,638,315,650,321,652,324,652,327,654,328,645,334,645,337,651,341,654,350,657,351,656,354,661,359,663,368,660,373,654,374,646,381,647,384,650,386,651,392,656,398,659,399,659,396,665,395,673,388,672,382,678,384,677,388,680,392,683,391,682,388,684,386,690,391,696,387,696,384,702,381,705,380,706,383,709,382,714,379,719,373,719,370,725,366,739,352,742,352,754,362,757,361,765,349,765,344,768,344,771,341,772,338,769,329,772,329,783,320,778,314,778,311,781,310,786,302,792,299,794,296,786,289,780,289,777,287,778,284,781,284,780,278,789,280,793,284,796,283,797,280,800,280,804,274,797,266,798,263,796,259,790,256,783,248,777,244,779,239,787,232,779,225,770,228,767,234,764,234,755,231,753,225,750,226,748,229,745,229,744,226,738,222,732,221,723,226,724,229,721,232,722,237,714,243,712,241,717,236,712,224,708,230,699,227,696,228,693,234,684,233,676,240,673,239,673,236,676,234,677,225,668,222,662,227,665,230,659,233,653,232,648,237,651,241,648,241,642,237,636,238,634,232,635,230,638,232,639,235,643,234,644,231,650,229,651,226,645,221,639,220,630,226,631,229,626,237,614,233,612,227,609,226,605,238,612,246,615,246,619,250,620,248,629,243,630,246,633,248,632,250,626,249,623,251,621,257,615,257,606,261,604,264,612,271,613,274,616,274,620,270,626,269,624,275,616,283,604,287],"4":[190,404,196,399,211,395,226,388,232,380,244,375,249,370,255,368,261,370,267,367,282,370,300,376,306,380,324,378,336,378,345,380,360,378,378,387,387,387,393,392,397,398,396,404,399,407,408,407,414,409,420,412,421,415,409,425,388,432,379,438,372,445,348,447,336,450,333,449,327,453,318,451,303,457,291,459,273,455,267,455,264,457,246,456,225,446,220,440,208,434,202,429,200,426,204,420,204,414,192,406],"5":[464,373,469,364,478,357,481,345,484,342,505,335,511,335,520,330,523,330,527,336,536,342,538,345,537,357,539,363,550,374,568,381,610,381,616,383,634,381,639,384,609,394,603,393,576,404,564,403,558,404,546,410,531,411,525,409,513,397,498,392,489,392,483,386,477,382,468,379,466,376],"6":[523,330,524,333,538,346,538,361,542,367,551,375,575,382,608,381,617,383,641,383,656,379,659,376,659,370,654,361,656,355,645,345,641,327,637,321,631,317,616,316,607,312,601,315,592,313,577,313,547,323,541,323,526,329],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"5346":{"1":[271,324,272,327,278,329,278,338,281,341,281,344,287,342,293,343,291,352,302,360,306,356,315,351,318,346,321,345,326,339,329,339,340,351,344,359,350,358,352,361,358,364,357,367,360,373,366,375,372,371,378,372,390,382,401,394,407,396,416,403,422,401,424,403,427,403,430,405,432,411,435,413,435,407,441,405,444,407,447,406,450,412,456,415,458,418,468,410,469,407,457,399,464,393,465,387,469,382,464,370,461,372,460,369,466,366,471,361,472,349,469,340,475,338,476,332,470,327,464,326,467,324,467,321,470,316,476,313,478,310,472,304,471,301,482,290,470,282,467,273,468,270,466,267,460,263,451,266,448,265,449,262,455,260,459,254,455,245,453,245,452,248,449,250,443,250,440,244,442,241,440,238,434,237,428,241,430,244,428,246,419,244,411,251,411,254,409,255,407,249,409,247,407,244,398,244,395,246,395,249,398,251,393,254,390,254,388,251,386,251,381,263,372,261,363,254,357,254,349,261,351,264,357,267,357,270,351,266,345,266,343,269,334,266,332,263,323,261,320,264,320,270,317,272,319,275,324,277,323,280,326,281,332,278,332,281,326,283,317,282,312,279,309,285,303,285,294,291,294,297,285,303,285,306,283,308,278,299,274,308,274,314,277,315,278,318,276,321,273,322],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,328,635,331,637,337,636,341,648,332,652,331,655,343,656,358,664,359,667,347,672,348,674,360,671,396,686,402,690,417,694,420,696,419,699,416,701,417,703,426,700,450,700,453,701,455,704,454,707,456,710,489,706,498,702,507,693,530,679,532,676,531,673,528,671,519,668,518,665,520,662,518,660,512,659,511,656,517,649,514,648,504,636,511,624,509,615,519,603,520,597,506,590,492,577,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,418,582,419,585,417,587,408,587,402,590,395,599,389,601,384,607,381,605,378,606,377,609,368,611,361,619,337,623,334,628,328,632,325,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,551,219,566,223,575,223,578,226,578,229,588,241,588,244,597,251,600,260,594,272,581,280,583,283,581,286,576,281,570,283,579,289,588,298,588,301,585,302,584,305,575,308,545,308,506,297,505,303,502,301,500,295,491,287,486,278,477,270,472,273,471,267,474,266,474,263,468,245],"3":[602,288,605,294,611,295,617,303,617,306,623,311,624,314,627,313,629,310,638,312,638,315,650,321,652,324,652,327,654,328,645,334,645,337,651,341,654,350,657,351,656,354,661,359,663,368,660,373,654,374,646,381,647,384,650,386,651,392,656,398,659,399,659,396,665,395,673,388,672,382,678,384,677,388,680,392,683,391,682,388,684,386,690,391,696,387,696,384,702,381,705,380,706,383,709,382,714,379,719,373,719,370,725,366,739,352,742,352,754,362,757,361,765,349,765,344,768,344,771,341,772,338,769,329,772,329,783,320,778,314,778,311,781,310,786,302,792,299,794,296,786,289,780,289,777,287,778,284,781,284,780,278,789,280,793,284,796,283,797,280,800,280,804,274,797,266,798,263,796,259,790,256,783,248,777,244,779,239,787,232,779,225,770,228,767,234,764,234,755,231,753,225,750,226,748,229,745,229,744,226,738,222,732,221,723,226,724,229,721,232,722,237,714,243,712,241,717,236,712,224,708,230,699,227,696,228,693,234,684,233,676,240,673,239,673,236,676,234,677,225,668,222,662,227,665,230,659,233,653,232,648,237,651,241,648,241,642,237,636,238,634,232,635,230,638,232,639,235,643,234,644,231,650,229,651,226,645,221,639,220,630,226,631,229,626,237,614,233,612,227,609,226,605,238,612,246,615,246,619,250,620,248,629,243,630,246,633,248,632,250,626,249,623,251,621,257,615,257,606,261,604,264,612,271,613,274,616,274,620,270,626,269,624,275,616,283,604,287],"4":[173,406,188,407,193,412,194,418,190,421,198,421,197,427,200,429,209,429,218,426,220,427,215,432,224,434,224,439,230,439,239,436,230,443,238,443,244,447,253,449,258,454,273,456,274,459,277,461,280,460,281,457,293,455,296,453,302,455,308,452,314,453,318,448,321,447,320,445,311,442,317,440,318,437,324,437,325,440,331,442,343,442,349,438,355,438,356,435,347,427,349,425,364,433,376,433,379,431,381,434,393,432,399,434,402,433,403,431,398,428,401,427,397,423,400,422,409,424,421,424,423,421,420,415,426,414,426,411,423,408,420,410,419,413,416,407,419,407,417,403,414,402,408,396,402,395,379,372,373,370,364,377,361,377,344,360,340,351,330,339,327,338,317,348,317,351,308,363,305,365,303,364,296,355,287,352,284,349,282,343,279,340,277,328,274,325,271,328,265,329,258,338,249,344,242,356,227,361,227,364,222,370,213,375,207,384,201,386,192,395,186,395,181,401,175,401,174,404],"5":[452,410,454,407,463,401,469,400,469,397,478,391,476,388,473,389,472,392,469,391,458,384,458,381,462,375,462,369,456,366,454,363,460,354,463,352,469,354,472,352,465,344,465,341,474,335,472,329,473,326,476,324,477,315,483,310,495,313,501,310,503,304,507,299,510,302,512,311,515,311,518,302,524,301,530,304,531,307,529,310,531,313,529,316,526,317,526,320,532,323,535,320,540,321,540,318,534,316,534,313,537,307,543,304,552,309,558,308,564,310,570,315,568,321,562,324,572,339,563,345,559,351,556,351,555,357,552,360,556,366,555,372,561,377,562,380,556,388,565,385,574,391,577,391,589,383,595,382,598,383,606,391,601,396,598,396,597,401,589,406,588,409,585,410,581,407,578,407,576,409,576,412,574,413,571,413,569,404,554,409,554,412,551,412,550,409,544,407,540,401,537,401,536,407,533,407,533,402,527,401,525,398,526,395,523,394,521,396,521,402,519,405,510,409,509,412,506,411,505,408,499,407,496,408,494,414,491,413,488,407,482,406,477,415,480,421,478,424,472,427,463,419,462,416,456,414,453,411],"6":[546,359,548,365,557,372,556,375,553,376,551,379,551,382,554,384,560,386,575,386,584,392,590,394,605,396,626,396,635,393,636,390,634,384,645,375,648,363,665,351,667,348,665,342,667,336,659,329,650,327,635,325,587,325,581,327,570,335,571,344,553,352,547,358],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]},"5436":{"1":[267,340,269,337,278,331,277,328,271,326,272,323,278,319,278,316,273,312,277,300,280,301,282,307,285,307,287,301,293,298,295,295,294,292,296,289,305,285,308,286,311,280,314,279,316,282,325,283,331,282,333,279,330,278,327,281,324,280,323,275,320,276,317,273,320,268,319,265,322,262,325,260,331,262,333,265,342,269,344,267,350,266,356,270,358,268,349,262,350,259,356,255,362,254,371,260,380,263,385,252,388,250,392,255,394,252,397,252,394,247,400,242,409,246,407,251,408,254,411,255,412,249,418,245,430,245,427,243,433,237,439,238,441,240,440,246,442,249,448,250,455,245,459,254,458,257,452,262,449,262,448,265,451,266,460,263,466,267,468,270,467,273,470,282,482,290,471,301,472,304,478,310,476,313,470,316,467,321,467,324,464,326,470,327,476,332,476,335,475,338,469,340,472,349,471,361,466,366,460,369,461,372,464,370,469,382,465,387,464,393,457,399,469,407,468,410,458,418,456,415,450,412,447,406,444,407,441,405,435,407,435,413,432,411,428,403,425,404,418,397,413,397,414,402,417,403,415,397,410,395,409,392,403,392,400,390,395,382,386,378,380,372,374,370,365,374,359,373,357,363,354,363,349,357,346,359,340,359,337,358,332,352,320,350,299,357,291,351,293,345,292,342,280,346,279,349,276,348,275,345,272,345,270,343],"10":[663,428,666,430,669,429,672,438,681,439,687,436,696,447,702,451,708,450,707,459,709,461,709,464,721,466,727,462,730,465,736,467,740,471,746,471,755,466,764,465,773,458,779,457,773,466,780,464,781,470,784,471,799,469,800,471,794,475,795,477,801,477,807,480,810,479,813,474,828,474,834,472,835,469,845,459,857,460,863,457,872,456,874,453,874,447,877,442,877,439,872,434,874,428,871,426,865,428,856,426,850,421,841,419,832,411,823,406,816,397,809,382,799,367,790,362,783,371,780,372,775,381,769,387,763,390,758,395,749,399,744,405,738,409,732,410,726,417,720,414,720,408,717,405,722,401,721,398,710,386,704,385,691,396,687,405,685,407,682,407,675,416,669,416,666,419],"11":[845,415,847,417,859,415,874,416,877,417,876,420,885,420,887,422,878,426,877,429,878,435,881,438,881,444,877,450,880,459,872,466,854,474,849,480,861,480,866,484,875,484,878,486,887,485,890,487,896,486,901,483,904,484,912,479,924,479,921,477,920,471,917,471,914,468,915,466,921,466,930,478,933,479,939,477,948,480,957,479,960,482,959,485,961,488,967,491,972,487,978,485,976,482,982,478,994,482,1000,480,1009,480,1015,482,1018,481,1010,477,1011,471,1006,465,1008,463,1014,464,1017,462,1026,462,1017,454,1015,451,1016,448,1021,443,1030,444,1036,442,1039,437,1033,432,1021,430,1010,419,1004,416,995,408,989,411,975,403,969,397,959,382,959,379,955,373,952,371,946,371,943,368,943,362,931,348,919,358,916,358,902,379,896,384,890,388,884,389,878,395,866,402,864,405,855,411,846,414],"12":[180,563,183,558,192,555,216,558,240,548,249,548,261,540,285,540,288,538,291,540,306,540,311,546,323,548,332,556,359,565,364,571,364,574,361,580,349,589,344,595,326,607,324,613,319,618,315,612,297,625,285,631,261,639,255,639,246,635,240,617,231,615,230,618,227,620,218,620,215,618,215,615,218,612,212,608,203,605,197,600,194,591,195,588,189,576,181,567,181,564],"13":[304,539,318,528,327,524,341,509,359,506,371,511,386,511,392,509,407,510,416,507,422,507,425,509,437,511,443,516,444,519,441,528,446,537,441,549,435,553,432,553,417,561,399,567,375,569,366,575,364,573,364,570,358,565,334,557,322,548,310,546,305,540],"14":[492,546,494,552,500,554,501,557,504,556,505,553,511,552,507,559,498,564,497,567,499,570,505,572,507,577,506,583,512,586,516,592,522,590,525,592,526,595,523,597,524,600,527,601,528,608,525,610,525,605,522,602,516,601,513,603,510,609,511,612,514,612,516,614,514,617,515,620,509,623,507,626,507,629,514,636,519,633,522,635,522,638,519,639,521,645,527,647,531,639,546,633,557,641,560,641,561,647,566,646,570,652,573,651,570,649,574,643,580,646,586,643,589,640,586,638,591,633,614,632,620,625,626,621,623,615,623,609,621,606,622,603,619,601,620,598,623,597,618,591,622,586,622,583,614,576,614,573,623,568,622,565,616,560,610,558,610,555,616,552,618,549,613,543,607,541,598,547,597,550,594,552,592,549,586,546,580,546,575,551,575,554,569,552,563,554,559,560,561,566,555,570,555,564,543,560,543,557,540,555,537,549,530,560,527,560,524,559,524,553,522,550,513,548,512,545,506,541,500,540,494,544],"15":[692,513,696,517,700,511,703,513,702,519,696,522,695,534,700,546,703,549,706,549,711,554,729,560,732,559,734,562,740,562,741,565,745,560,751,560,757,563,769,565,781,571,796,576,808,584,810,587,825,589,831,594,840,598,852,598,858,596,870,591,879,584,882,589,885,588,886,585,882,581,896,560,891,551,898,533,893,515,871,496,859,491,841,489,835,489,832,491,817,491,790,497,775,503,754,503,748,501,730,503,718,501,706,503,703,505,702,508,696,508,693,510],"16":[322,635,337,636,341,645,341,648,330,655,345,657,360,666,345,673,351,674,360,671,372,675,402,690,417,694,420,696,419,699,416,701,418,703,436,699,454,701,454,707,456,710,483,707,495,703,501,699,509,691,512,691,520,684,529,680,532,674,518,666,519,660,510,658,513,652,517,649,514,648,503,636,511,624,509,618,510,612,519,603,520,597,503,588,491,577,492,574,490,571,484,567,478,566,463,558,460,560,457,566,454,567,448,565,446,568,437,568,431,570,425,574,417,587,405,589,395,599,392,599,384,607,381,606,376,609,373,608,359,620,338,623,335,625,335,628,326,632],"17":[516,696,525,689,531,691,536,686,532,681,527,684,519,679,517,676,518,673,527,667,529,661,523,659,525,653,524,650,527,648,529,642,534,637,546,633,555,639,558,639,561,642,561,645,567,647,568,650,571,652,570,649,574,643,577,643,579,646,582,645,587,640,586,637,592,632,598,633,601,631,604,632,608,630,611,640,614,641,617,637,621,649,620,652,617,654,614,652,613,654,617,660,614,663,611,663,608,669,605,671,610,678,610,684,606,690,609,693,618,693,623,699,622,702,614,708,613,705,608,708,605,708,606,710,615,713,619,718,621,715,630,716,630,727,627,729,626,735,623,734,621,729,615,727,619,722,616,719,610,723,609,726,606,726,605,723,599,721,597,715,595,714,594,719,588,719,584,723,583,720,577,718,569,725,566,731,560,734,559,737,556,736,548,730,546,727,547,724,541,722,538,723,538,726,535,726,534,723,529,721,529,718,532,716,531,713,534,704,532,702,529,702,528,705,525,705,524,702,518,701,517,698],"18":[609,686,617,681,616,669,618,666,627,662,631,656,629,650,629,641,626,632,627,620,623,611,623,602,630,593,631,584,640,579,640,576,637,574,625,572,623,569,623,563,625,560,628,559,630,556,630,550,635,546,647,552,665,558,686,560,701,564,713,570,725,579,727,585,733,590,745,591,751,595,763,597,772,602,773,605,769,611,770,614,773,616,794,619,784,626,785,632,790,638,790,647,788,650,785,650,770,660,766,666,760,668,739,682,730,686,725,691,719,692,710,698,677,705,662,704,656,700,650,699,635,700,629,698,623,693,614,691,612,688],"2":[467,243,488,235,488,229,491,224,494,225,494,230,497,230,515,221,521,224,530,219,551,219,566,223,575,223,578,226,578,229,588,241,588,244,597,251,600,260,594,272,581,280,583,283,581,286,576,281,570,283,579,289,588,298,588,301,585,302,584,305,575,308,545,308,506,297,505,303,502,301,500,295,491,287,486,278,477,270,472,273,471,267,474,266,474,263,468,245],"3":[602,288,605,294,611,295,617,303,617,306,623,311,624,314,627,313,629,310,638,312,638,315,650,321,652,324,652,327,654,328,645,334,645,337,651,341,654,350,657,351,656,354,661,359,663,368,660,373,654,374,646,381,647,384,650,386,651,392,656,398,659,399,659,396,665,395,673,388,672,382,678,384,677,388,680,392,683,391,682,388,684,386,690,391,696,387,696,384,702,381,705,380,706,383,709,382,714,379,719,373,719,370,725,366,739,352,742,352,754,362,757,361,765,349,765,344,768,344,771,341,772,338,769,329,772,329,783,320,778,314,778,311,781,310,786,302,792,299,794,296,786,289,780,289,777,287,778,284,781,284,780,278,789,280,793,284,796,283,797,280,800,280,804,274,797,266,798,263,796,259,790,256,783,248,777,244,779,239,787,232,779,225,770,228,767,234,764,234,755,231,753,225,750,226,748,229,745,229,744,226,738,222,732,221,723,226,724,229,721,232,722,237,714,243,712,241,717,236,712,224,708,230,699,227,696,228,693,234,684,233,676,240,673,239,673,236,676,234,677,225,668,222,662,227,665,230,659,233,653,232,648,237,651,241,648,241,642,237,636,238,634,232,635,230,638,232,639,235,643,234,644,231,650,229,651,226,645,221,639,220,630,226,631,229,626,237,614,233,612,227,609,226,605,238,612,246,615,246,619,250,620,248,629,243,630,246,633,248,632,250,626,249,623,251,621,257,615,257,606,261,604,264,612,271,613,274,616,274,620,270,626,269,624,275,616,283,604,287],"4":[179,414,184,420,187,420,191,424,192,421,202,414,208,417,208,420,203,423,209,425,211,431,219,435,219,438,223,444,229,445,230,448,238,442,244,444,246,447,252,448,257,453,256,456,262,459,274,451,283,453,292,447,293,450,299,451,304,446,303,440,309,442,310,445,316,446,315,452,318,453,320,451,320,448,323,447,324,445,321,442,322,440,325,439,325,436,328,435,331,435,338,443,346,447,349,447,357,441,356,435,353,433,354,431,357,431,359,433,361,442,368,448,379,442,382,442,382,439,385,437,391,437,406,447,412,443,412,449,400,456,388,450,379,457,382,463,388,464,388,467,391,467,392,464,401,458,409,463,411,469,414,472,417,471,419,473,418,476,421,478,423,476,423,473,428,468,426,465,430,457,442,453,442,447,445,445,445,439,447,436,440,430,446,429,450,424,442,417,436,417,430,421,429,424,430,427,436,431,434,433,428,430,426,427,415,420,416,417,423,412,421,409,422,403,413,397,407,397,406,394,393,380,387,378,378,370,372,370,360,376,358,374,360,368,351,363,345,364,340,359,337,359,334,356,322,357,314,364,308,364,308,361,305,358,293,356,290,354,289,352,292,350,291,347,285,344,280,349,277,350,265,346,256,346,255,343,251,341,248,350,245,352,233,349,224,355,225,361,223,364,214,364,205,369,205,372,217,380,219,377,228,373,233,378,234,384,232,390,224,381,222,381,219,387,217,389,214,388,207,397,209,400,212,400,213,403,199,412,190,407,184,409,181,412],"5":[464,373,469,364,478,357,481,345,484,342,505,335,511,335,520,330,523,330,527,336,536,342,538,345,537,357,539,363,550,374,568,381,610,381,616,383,634,381,639,384,609,394,603,393,576,404,564,403,558,404,546,410,531,411,525,409,513,397,498,392,489,392,483,386,477,382,468,379,466,376],"6":[523,330,524,333,538,346,538,361,542,367,551,375,575,382,608,381,617,383,641,383,656,379,659,376,659,370,654,361,656,355,645,345,641,327,637,321,631,317,616,316,607,312,601,315,592,313,577,313,547,323,541,323,526,329],"7":[708,386,711,387,721,399,721,402,718,404,720,407,719,410,720,413,726,418,732,410,741,407,749,399,758,395,763,390,766,390,778,375,784,371,791,362,800,369,815,393,817,399,826,408,838,416,844,416,850,412,859,409,867,401,885,389,891,388,903,378,903,375,893,363,889,354,880,349,876,337,872,331,866,325,854,317,847,305,841,299,838,299,820,283,811,290,805,302,796,311,789,326,780,335,779,338,770,344,762,353,756,364,741,352,738,353,719,371,719,374,711,383],"8":[153,488,155,482,169,472,190,464,220,469,241,478,277,490,280,499,289,505,298,517,298,526,295,529,286,533,284,536,286,539,284,541,260,541,251,547,245,549,236,549,218,557,194,555,182,558,179,562,174,553,174,550,169,552,169,549,166,546,169,544,172,545,173,542,173,518,167,513,155,498,154,489],"9":[246,468,249,477,257,484,278,491,279,497,290,506,297,515,299,521,298,524,300,527,306,525,318,529,336,516,340,510,352,508,355,506,373,512,382,512,391,509,409,510,412,508,418,508,423,500,426,499,431,504,434,500,434,494,431,485,428,482,407,482,383,468,365,464,362,462,332,462,317,465,315,468,306,471,282,469,279,467,255,468,249,466]}};config.village["imageSizes"]=[[117,88],[0,0],[0,0],[0,0],[0,0],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],null,[151,145],[151,145],[151,145],[156,186],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[151,145],[974,668],[974,668],[974,668],[151,145],[151,145],[151,145],null,[151,145],[151,145],[472,444],[151,145],[0,0],[950,682],[151,145],[151,145]];config.village["animationOffset"]={tribe1:{building13:{10:[73,-17],20:[76,-8],999:[79,-19]}},tribe2:{building13:{10:[72,-20],20:[81,-8],999:[81,-20]}},tribe3:{building13:{10:[65,-19],20:[79,-5],999:[79,-17]}}};config.village["svg"]={location1_11115:[{paths:["M 276, 329 L 282, 320 L 291, 313 L 295, 307 L 301, 303 L 328, 297 L 333, 285 L 339, 281 L 345, 280 L 357, 270 L 378, 264 L 396, 264 L 408, 268 L 414, 272 L 435, 290 L 439, 305 L 433, 329 L 426, 347 L 430, 356 L 427, 365 L 416, 380 L 407, 386 L 405, 389 L 399, 392 L 388, 381 L 383, 378 L 380, 379 L 379, 374 L 376, 372 L 367, 378 L 361, 378 L 355, 372 L 354, 369 L 345, 361 L 333, 343 L 327, 340 L 318, 348 L 318, 351 L 310, 363 L 303, 368 L 301, 362 L 296, 356 L 287, 353 L 284, 350 L 278, 338 L 277, 332 z"]}],location10_11115:[{paths:["M 687, 410 L 695, 434 L 707, 446 L 709, 452 L 721, 462 L 763, 475 L 784, 476 L 787, 474 L 790, 476 L 796, 475 L 808, 468 L 813, 453 L 819, 449 L 827, 440 L 829, 428 L 841, 423 L 853, 414 L 856, 414 L 859, 412 L 862, 406 L 858, 400 L 834, 392 L 822, 392 L 810, 387 L 792, 384 L 780, 380 L 774, 381 L 753, 379 L 729, 391 L 723, 392 L 708, 401 L 690, 406 L 688, 409 z"]}],location11_11115:[{paths:["M 809, 455 L 810, 458 L 825, 458 L 846, 467 L 852, 472 L 857, 484 L 869, 489 L 884, 487 L 899, 492 L 941, 492 L 953, 500 L 962, 500 L 968, 502 L 977, 508 L 992, 511 L 1004, 508 L 1013, 502 L 1019, 500 L 1023, 494 L 1026, 493 L 1039, 472 L 1034, 463 L 1040, 442 L 1038, 430 L 1027, 420 L 1023, 414 L 1023, 408 L 997, 384 L 991, 383 L 973, 375 L 967, 376 L 958, 372 L 952, 372 L 943, 368 L 937, 368 L 919, 361 L 907, 360 L 898, 354 L 892, 353 L 883, 357 L 879, 366 L 876, 369 L 874, 381 L 875, 384 L 872, 393 L 860, 403 L 859, 409 L 847, 415 L 843, 420 L 828, 427 L 826, 430 L 826, 436 L 818, 448 L 812, 452 z"]}],location12_11115:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_11115:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_11115:[{paths:["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]}],location15_11115:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_11115:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_11115:[{paths:["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]}],location18_11115:[{paths:["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]}],location2_11115:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}],location3_11115:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 705, 380 L 706, 383 L 714, 379 L 717, 380 L 717, 383 L 720, 384 L 721, 381 L 731, 372 L 729, 366 L 731, 360 L 738, 352 L 741, 351 L 743, 357 L 740, 363 L 746, 365 L 745, 368 L 747, 370 L 750, 368 L 751, 365 L 756, 362 L 760, 356 L 768, 351 L 768, 348 L 765, 346 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 778, 323 L 781, 322 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 787, 302 L 793, 298 L 794, 295 L 791, 292 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 797, 261 L 795, 258 L 786, 253 L 785, 250 L 776, 243 L 779, 241 L 780, 238 L 786, 234 L 787, 231 L 778, 225 L 775, 225 L 769, 229 L 766, 235 L 757, 232 L 752, 224 L 747, 229 L 744, 228 L 743, 225 L 737, 221 L 731, 221 L 725, 224 L 721, 233 L 721, 237 L 713, 243 L 713, 240 L 717, 235 L 714, 226 L 711, 225 L 710, 228 L 707, 230 L 698, 227 L 695, 229 L 692, 235 L 686, 233 L 683, 234 L 675, 241 L 672, 238 L 677, 233 L 675, 230 L 677, 227 L 676, 224 L 667, 222 L 664, 225 L 664, 231 L 661, 233 L 652, 232 L 649, 235 L 648, 238 L 651, 239 L 650, 241 L 641, 237 L 635, 237 L 633, 231 L 639, 232 L 641, 235 L 651, 228 L 650, 225 L 644, 220 L 638, 220 L 632, 224 L 628, 236 L 625, 237 L 616, 234 L 613, 232 L 611, 226 L 609, 227 L 605, 236 L 610, 244 L 616, 246 L 617, 249 L 620, 250 L 621, 247 L 630, 244 L 631, 247 L 634, 249 L 625, 250 L 620, 255 L 620, 258 L 611, 258 L 605, 262 L 607, 268 L 613, 271 L 614, 274 L 617, 274 L 618, 271 L 624, 268 L 626, 270 L 623, 276 L 615, 283 L 603, 287 z"]}],location4_11115:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]}],location5_11115:[{paths:["M 456, 322 L 460, 334 L 456, 346 L 459, 358 L 470, 369 L 479, 390 L 488, 397 L 509, 406 L 521, 406 L 527, 404 L 539, 406 L 563, 401 L 564, 398 L 573, 395 L 575, 392 L 572, 386 L 551, 367 L 548, 358 L 544, 352 L 543, 349 L 545, 337 L 554, 322 L 552, 316 L 546, 311 L 528, 305 L 522, 305 L 513, 302 L 507, 304 L 501, 303 L 492, 305 L 480, 305 L 474, 307 L 462, 315 L 457, 321 z"]}],location6_11115:[{paths:["M 541, 346 L 542, 352 L 551, 370 L 572, 389 L 572, 392 L 563, 397 L 562, 400 L 564, 403 L 570, 405 L 609, 402 L 618, 399 L 624, 395 L 640, 378 L 643, 377 L 649, 371 L 655, 359 L 653, 353 L 640, 338 L 636, 329 L 627, 323 L 615, 321 L 606, 313 L 597, 311 L 591, 307 L 570, 307 L 567, 305 L 561, 305 L 543, 309 L 543, 312 L 551, 319 L 550, 325 L 544, 334 L 543, 343 z"]}],location7_11115:[{paths:["M 755, 379 L 769, 367 L 775, 364 L 776, 358 L 773, 355 L 774, 352 L 772, 346 L 774, 340 L 788, 329 L 809, 321 L 836, 325 L 857, 332 L 863, 336 L 893, 346 L 898, 351 L 897, 354 L 888, 355 L 882, 360 L 876, 378 L 876, 390 L 871, 396 L 862, 402 L 835, 393 L 823, 392 L 805, 386 L 796, 386 L 781, 382 L 757, 380 z"]}],location8_11115:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_11115:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location1_3339:[{paths:["M 276,332 L277,344 L280,350 L285,356 L291,357 L306,369 L312,372 L327,372 L339,377 L360,378 L369,383 L372,383 L378,389 L390,394 L411,384 L419,376 L419,373 L429,361 L429,355 L425,349 L434,325 L438,301 L434,289 L431,288 L421,277 L418,276 L412,270 L400,265 L379,263 L373,267 L361,268 L347,279 L338,281 L333,286 L330,295 L324,298 L303,302 L297,305 L277,328 L277,331 z"]}],location10_3339:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_3339:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_3339:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_3339:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_3339:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_3339:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_3339:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_3339:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_3339:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_3339:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}],location3_3339:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 632, 311 L 637, 316 L 643, 317 L 652, 324 L 659, 318 L 657, 315 L 658, 312 L 661, 312 L 667, 317 L 670, 322 L 669, 328 L 671, 331 L 677, 333 L 677, 336 L 680, 338 L 676, 341 L 678, 347 L 676, 350 L 669, 346 L 657, 349 L 658, 358 L 656, 364 L 660, 369 L 663, 369 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 657, 399 L 660, 398 L 660, 395 L 666, 395 L 669, 393 L 673, 387 L 673, 382 L 678, 385 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 707, 383 L 715, 378 L 720, 369 L 726, 365 L 740, 351 L 755, 363 L 766, 348 L 766, 344 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 307 L 787, 302 L 793, 298 L 794, 295 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 607, 229 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}],location4_3339:[{paths:["M 198, 369 L 202, 381 L 198, 393 L 201, 405 L 213, 416 L 222, 437 L 228, 443 L 255, 453 L 270, 450 L 279, 452 L 297, 448 L 309, 450 L 330, 450 L 360, 445 L 366, 441 L 381, 424 L 387, 421 L 394, 413 L 396, 404 L 396, 401 L 388, 392 L 379, 389 L 361, 377 L 340, 377 L 322, 370 L 304, 370 L 295, 368 L 271, 352 L 265, 350 L 244, 349 L 238, 351 L 223, 351 L 214, 354 L 205, 360 L 199, 368 z"]}],location5_3339:[{paths:["M 443, 329 L 449, 320 L 461, 312 L 470, 309 L 497, 308 L 500, 306 L 512, 310 L 518, 310 L 527, 314 L 539, 311 L 566, 311 L 575, 315 L 579, 321 L 578, 324 L 570, 331 L 561, 334 L 555, 346 L 546, 351 L 538, 360 L 537, 363 L 542, 372 L 543, 381 L 549, 390 L 549, 393 L 544, 405 L 529, 410 L 517, 408 L 499, 411 L 493, 409 L 475, 402 L 466, 393 L 461, 381 L 456, 384 L 451, 380 L 450, 374 L 453, 372 L 454, 369 L 448, 365 L 444, 353 L 448, 341 L 445, 332 z"]}],location6_3339:[{paths:["M 543, 362 L 547, 368 L 553, 368 L 558, 373 L 549, 380 L 550, 383 L 553, 385 L 574, 387 L 586, 395 L 595, 398 L 604, 396 L 625, 396 L 631, 394 L 636, 390 L 635, 384 L 646, 374 L 650, 362 L 665, 351 L 668, 345 L 666, 342 L 669, 339 L 669, 336 L 663, 331 L 645, 326 L 585, 325 L 579, 327 L 567, 335 L 570, 340 L 568, 346 L 559, 348 L 550, 353 L 547, 355 L 544, 361 z"]}],location7_3339:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_3339:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_3339:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location11_33546:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location14_33546:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location1_3447:[{paths:["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]}],location10_3447:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_3447:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_3447:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_3447:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_3447:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_3447:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_3447:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_3447:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_3447:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_3447:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]}],location3_3447:[{paths:["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]}],location4_3447:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}],location5_3447:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}],location6_3447:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}],location7_3447:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_3447:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_3447:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location1_3456:[{paths:["M 225, 350 L 231, 349 L 229, 358 L 231, 360 L 237, 359 L 243, 354 L 248, 345 L 257, 339 L 263, 333 L 264, 330 L 273, 327 L 276, 328 L 278, 331 L 278, 337 L 284, 349 L 287, 352 L 296, 355 L 304, 366 L 310, 362 L 316, 353 L 317, 347 L 328, 338 L 339, 350 L 343, 359 L 360, 377 L 363, 378 L 371, 372 L 377, 372 L 383, 376 L 402, 396 L 408, 396 L 414, 400 L 413, 397 L 422, 396 L 425, 393 L 431, 392 L 432, 390 L 426, 388 L 429, 386 L 427, 383 L 428, 380 L 425, 378 L 426, 376 L 432, 379 L 435, 378 L 436, 372 L 430, 368 L 427, 368 L 422, 362 L 423, 359 L 426, 358 L 423, 356 L 422, 353 L 434, 357 L 438, 349 L 441, 348 L 443, 354 L 446, 356 L 449, 355 L 449, 346 L 452, 344 L 457, 350 L 460, 351 L 468, 346 L 469, 340 L 472, 342 L 478, 342 L 477, 336 L 471, 332 L 467, 323 L 467, 317 L 473, 317 L 472, 311 L 478, 310 L 470, 303 L 476, 301 L 464, 299 L 458, 294 L 452, 292 L 443, 286 L 439, 280 L 438, 274 L 429, 262 L 414, 250 L 409, 241 L 403, 235 L 381, 220 L 372, 226 L 370, 232 L 364, 241 L 358, 246 L 348, 264 L 342, 270 L 339, 276 L 330, 281 L 322, 290 L 319, 299 L 295, 282 L 290, 288 L 287, 289 L 286, 292 L 277, 299 L 272, 308 L 260, 320 L 251, 323 L 241, 338 L 238, 338 L 234, 344 L 228, 348 z"]}],location10_3456:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_3456:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_3456:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_3456:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_3456:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_3456:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_3456:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_3456:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_3456:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_3456:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}],location3_3456:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}],location4_3456:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]}],location5_3456:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}],location6_3456:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}],location7_3456:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_3456:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_3456:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location1_3546:[{paths:["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 292, 354 L 293, 357 L 299, 360 L 301, 363 L 298, 366 L 310, 366 L 319, 371 L 331, 371 L 334, 368 L 343, 367 L 338, 358 L 344, 358 L 350, 361 L 356, 361 L 368, 365 L 371, 363 L 380, 362 L 386, 364 L 386, 367 L 389, 369 L 401, 367 L 406, 372 L 418, 373 L 422, 369 L 428, 369 L 429, 367 L 423, 362 L 426, 360 L 435, 360 L 438, 354 L 447, 359 L 449, 353 L 452, 351 L 455, 353 L 461, 353 L 464, 351 L 464, 348 L 479, 341 L 474, 340 L 474, 331 L 471, 326 L 480, 329 L 482, 327 L 482, 324 L 481, 321 L 475, 319 L 472, 316 L 470, 310 L 473, 309 L 468, 303 L 450, 288 L 447, 287 L 435, 294 L 426, 285 L 406, 252 L 400, 248 L 380, 268 L 374, 263 L 368, 254 L 359, 245 L 347, 238 L 328, 255 L 326, 261 L 319, 269 L 313, 270 L 308, 275 L 305, 276 L 298, 284 L 296, 290 L 293, 293 L 290, 293 L 286, 299 L 283, 301 L 277, 301 L 262, 311 L 253, 314 L 247, 323 L 235, 331 z"]}],location10_3546:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_3546:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_3546:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_3546:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_3546:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_3546:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_3546:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_3546:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_3546:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_3546:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}],location3_3546:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}],location4_3546:[{paths:["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]}],location5_3546:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}],location6_3546:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}],location7_3546:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_3546:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_3546:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location4_3547:[{paths:["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]}],location1_4347:[{paths:["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]}],location10_4347:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_4347:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_4347:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_4347:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_4347:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_4347:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_4347:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_4347:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_4347:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_4347:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]}],location3_4347:[{paths:["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]}],location4_4347:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}],location5_4347:[{paths:["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]}],location6_4347:[{paths:["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]}],location7_4347:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_4347:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_4347:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location1_4356:[{paths:["M 225, 350 L 231, 346 L 238, 337 L 241, 337 L 248, 325 L 260, 320 L 274, 305 L 274, 302 L 286, 292 L 287, 289 L 295, 282 L 316, 298 L 319, 297 L 319, 294 L 326, 285 L 332, 279 L 338, 276 L 341, 270 L 347, 264 L 358, 246 L 370, 232 L 374, 223 L 377, 223 L 382, 219 L 409, 240 L 416, 252 L 434, 267 L 438, 273 L 441, 282 L 444, 285 L 447, 286 L 453, 292 L 465, 298 L 474, 300 L 473, 303 L 470, 304 L 479, 308 L 478, 310 L 475, 311 L 475, 314 L 473, 316 L 467, 319 L 469, 328 L 476, 336 L 476, 342 L 470, 340 L 468, 342 L 469, 345 L 463, 348 L 451, 344 L 451, 353 L 448, 355 L 445, 355 L 442, 349 L 439, 348 L 436, 354 L 433, 355 L 427, 355 L 424, 352 L 422, 353 L 426, 359 L 423, 360 L 423, 363 L 435, 371 L 436, 377 L 430, 379 L 424, 376 L 428, 380 L 427, 383 L 430, 389 L 433, 390 L 432, 392 L 423, 396 L 423, 399 L 417, 397 L 417, 400 L 414, 401 L 408, 396 L 399, 392 L 378, 372 L 372, 371 L 363, 378 L 360, 377 L 343, 360 L 341, 354 L 332, 342 L 326, 339 L 322, 344 L 319, 345 L 317, 351 L 306, 365 L 303, 365 L 302, 362 L 296, 356 L 287, 353 L 284, 350 L 279, 341 L 277, 329 L 274, 327 L 265, 330 L 258, 339 L 249, 345 L 244, 354 L 238, 359 L 232, 360 L 229, 355 L 231, 352 L 229, 350 L 226, 351 z"]}],location10_4356:[{paths:["M 661, 425 L 663, 422 L 669, 419 L 702, 408 L 709, 400 L 721, 396 L 726, 391 L 732, 390 L 768, 389 L 771, 387 L 777, 390 L 789, 388 L 816, 391 L 837, 396 L 846, 403 L 844, 421 L 827, 434 L 820, 455 L 818, 458 L 812, 460 L 811, 472 L 805, 473 L 802, 476 L 772, 478 L 751, 474 L 742, 477 L 727, 477 L 712, 472 L 709, 469 L 703, 473 L 697, 472 L 691, 469 L 689, 466 L 697, 466 L 698, 463 L 695, 460 L 680, 455 L 672, 447 L 677, 438 L 677, 435 L 671, 430 L 662, 426 z"]}],location11_4356:[{paths:["M 834, 468 L 836, 474 L 842, 479 L 848, 480 L 854, 486 L 860, 486 L 875, 493 L 881, 491 L 887, 492 L 893, 489 L 920, 493 L 935, 491 L 959, 484 L 1001, 479 L 1008, 470 L 1035, 458 L 1050, 448 L 1050, 445 L 1048, 442 L 1042, 440 L 1027, 438 L 1024, 426 L 1017, 418 L 1008, 417 L 1002, 413 L 996, 413 L 990, 407 L 978, 409 L 969, 408 L 966, 406 L 961, 397 L 952, 393 L 940, 393 L 931, 396 L 919, 396 L 913, 394 L 907, 397 L 889, 396 L 883, 398 L 874, 410 L 872, 422 L 864, 430 L 858, 434 L 855, 434 L 844, 442 L 842, 457 L 835, 466 z"]}],location12_4356:[{paths:["M 166, 611 L 166, 620 L 169, 621 L 181, 620 L 184, 622 L 187, 621 L 196, 623 L 201, 619 L 204, 619 L 205, 622 L 203, 625 L 206, 627 L 215, 625 L 224, 630 L 233, 630 L 235, 628 L 244, 627 L 246, 625 L 237, 618 L 238, 615 L 247, 617 L 259, 616 L 264, 625 L 270, 627 L 279, 621 L 282, 615 L 297, 619 L 306, 617 L 318, 619 L 319, 617 L 313, 614 L 307, 608 L 308, 602 L 310, 600 L 322, 598 L 328, 600 L 328, 597 L 319, 591 L 319, 585 L 324, 580 L 333, 582 L 344, 577 L 336, 569 L 321, 564 L 312, 555 L 306, 552 L 297, 544 L 291, 548 L 276, 538 L 267, 526 L 259, 511 L 256, 508 L 253, 508 L 235, 524 L 220, 531 L 212, 539 L 209, 545 L 204, 566 L 198, 575 L 195, 577 L 193, 583 L 187, 592 L 177, 603 L 171, 606 L 169, 609 z"]}],location13_4356:[{paths:["M 332, 540 L 338, 531 L 341, 531 L 352, 525 L 351, 519 L 357, 514 L 360, 509 L 366, 505 L 375, 507 L 379, 501 L 391, 495 L 392, 489 L 395, 487 L 395, 481 L 383, 490 L 374, 487 L 371, 481 L 377, 476 L 386, 474 L 387, 472 L 385, 469 L 391, 464 L 394, 466 L 396, 472 L 402, 474 L 407, 471 L 409, 474 L 411, 480 L 408, 486 L 412, 492 L 411, 495 L 408, 496 L 412, 502 L 418, 501 L 424, 503 L 436, 497 L 439, 491 L 433, 487 L 436, 481 L 435, 472 L 430, 467 L 433, 458 L 436, 455 L 439, 455 L 447, 467 L 443, 472 L 451, 484 L 451, 487 L 456, 492 L 465, 491 L 468, 494 L 469, 503 L 464, 508 L 467, 509 L 469, 506 L 472, 507 L 475, 516 L 470, 521 L 464, 517 L 458, 519 L 456, 522 L 447, 527 L 447, 533 L 450, 536 L 456, 533 L 462, 537 L 471, 532 L 480, 531 L 481, 528 L 490, 523 L 493, 523 L 499, 516 L 505, 517 L 508, 519 L 513, 531 L 518, 537 L 519, 543 L 522, 545 L 528, 554 L 522, 560 L 516, 562 L 515, 559 L 512, 558 L 510, 555 L 513, 550 L 504, 553 L 502, 556 L 496, 555 L 487, 562 L 483, 557 L 477, 555 L 471, 557 L 462, 550 L 460, 553 L 457, 554 L 456, 560 L 450, 563 L 444, 558 L 447, 549 L 446, 546 L 443, 548 L 440, 547 L 437, 553 L 428, 558 L 422, 557 L 414, 564 L 412, 567 L 412, 573 L 406, 575 L 406, 578 L 404, 580 L 389, 584 L 382, 577 L 384, 574 L 393, 568 L 396, 570 L 399, 569 L 399, 563 L 396, 562 L 384, 571 L 381, 569 L 378, 570 L 376, 573 L 367, 577 L 365, 580 L 360, 576 L 357, 576 L 349, 583 L 346, 583 L 340, 578 L 342, 569 L 344, 566 L 347, 565 L 353, 570 L 356, 568 L 357, 562 L 351, 562 L 345, 557 L 344, 554 L 352, 547 L 364, 552 L 367, 550 L 364, 547 L 364, 541 L 358, 539 L 349, 543 L 347, 546 L 344, 547 L 341, 552 L 338, 550 L 337, 544 L 334, 543 z"]}],location14_4356:[{paths:["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]}],location15_4356:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_4356:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_4356:[{paths:["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]}],location18_4356:[{paths:["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]}],location2_4356:[{paths:["M 451, 228 L 463, 242 L 469, 246 L 472, 247 L 481, 241 L 482, 244 L 474, 251 L 480, 255 L 483, 261 L 483, 264 L 480, 267 L 478, 273 L 475, 276 L 466, 272 L 460, 274 L 455, 279 L 456, 282 L 461, 286 L 458, 292 L 461, 294 L 473, 293 L 476, 295 L 482, 291 L 488, 292 L 489, 298 L 500, 304 L 502, 298 L 508, 294 L 511, 294 L 517, 298 L 526, 296 L 535, 300 L 538, 299 L 543, 295 L 536, 283 L 541, 278 L 539, 275 L 541, 272 L 538, 266 L 547, 269 L 550, 272 L 552, 281 L 544, 288 L 548, 294 L 554, 297 L 557, 294 L 569, 292 L 578, 297 L 587, 293 L 593, 293 L 611, 299 L 623, 294 L 626, 292 L 626, 289 L 629, 289 L 633, 294 L 638, 290 L 639, 287 L 642, 286 L 642, 283 L 637, 277 L 631, 273 L 633, 270 L 629, 255 L 617, 247 L 605, 249 L 603, 246 L 616, 236 L 616, 227 L 613, 224 L 607, 224 L 603, 230 L 589, 238 L 586, 238 L 583, 236 L 583, 233 L 589, 230 L 589, 227 L 586, 224 L 577, 221 L 568, 228 L 559, 226 L 553, 214 L 550, 217 L 546, 229 L 552, 233 L 549, 235 L 543, 234 L 537, 238 L 534, 233 L 528, 228 L 522, 227 L 514, 234 L 511, 243 L 496, 238 L 498, 232 L 490, 225 L 484, 222 L 472, 226 L 469, 223 L 460, 221 L 452, 227 z"]}],location3_4356:[{paths:["M 649, 283 L 652, 280 L 673, 272 L 688, 262 L 697, 259 L 706, 261 L 712, 257 L 730, 256 L 760, 262 L 770, 277 L 772, 283 L 781, 290 L 782, 302 L 776, 311 L 767, 317 L 755, 319 L 754, 322 L 769, 335 L 769, 341 L 754, 347 L 727, 347 L 703, 341 L 688, 335 L 676, 328 L 656, 301 L 650, 286 z"]}],location4_4356:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 214, 425 L 217, 425 L 218, 421 L 224, 416 L 236, 425 L 254, 446 L 257, 446 L 263, 437 L 269, 434 L 270, 431 L 276, 427 L 282, 432 L 292, 447 L 294, 453 L 303, 455 L 309, 452 L 315, 453 L 319, 447 L 322, 446 L 313, 443 L 312, 441 L 315, 441 L 319, 438 L 325, 438 L 326, 441 L 332, 442 L 344, 442 L 350, 438 L 356, 437 L 355, 434 L 347, 426 L 368, 433 L 380, 432 L 382, 435 L 385, 433 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 399, 427 L 402, 426 L 399, 425 L 398, 422 L 404, 422 L 413, 425 L 416, 423 L 419, 424 L 422, 423 L 423, 420 L 421, 414 L 427, 413 L 422, 408 L 418, 412 L 416, 409 L 417, 407 L 420, 407 L 410, 398 L 401, 394 L 390, 382 L 378, 372 L 372, 371 L 363, 378 L 360, 376 L 343, 359 L 341, 353 L 329, 338 L 318, 346 L 317, 352 L 304, 366 L 295, 354 L 289, 353 L 283, 348 L 281, 342 L 278, 339 L 276, 327 L 273, 326 L 264, 330 L 260, 336 L 248, 345 L 241, 357 L 229, 360 L 221, 371 L 215, 374 L 209, 382 L 200, 387 L 191, 395 L 188, 394 L 185, 396 L 180, 402 L 177, 400 L 174, 402 z"]}],location5_4356:[{paths:["M 438, 372 L 440, 369 L 446, 366 L 455, 365 L 455, 359 L 450, 354 L 450, 351 L 452, 348 L 461, 344 L 467, 347 L 473, 346 L 476, 348 L 481, 354 L 480, 357 L 482, 366 L 485, 367 L 488, 364 L 491, 364 L 491, 358 L 500, 352 L 500, 346 L 502, 343 L 497, 340 L 499, 334 L 498, 331 L 500, 328 L 495, 323 L 495, 314 L 489, 315 L 480, 307 L 481, 304 L 487, 300 L 493, 298 L 499, 300 L 501, 297 L 507, 294 L 513, 294 L 519, 297 L 525, 295 L 534, 299 L 546, 296 L 558, 303 L 561, 302 L 570, 309 L 570, 312 L 567, 312 L 562, 317 L 562, 323 L 556, 326 L 569, 344 L 569, 347 L 566, 349 L 570, 355 L 566, 361 L 566, 367 L 563, 373 L 575, 389 L 568, 399 L 565, 397 L 562, 398 L 560, 401 L 552, 398 L 551, 400 L 559, 412 L 550, 421 L 543, 414 L 546, 408 L 543, 405 L 537, 405 L 533, 400 L 524, 405 L 524, 411 L 521, 414 L 512, 411 L 511, 417 L 508, 416 L 507, 413 L 489, 405 L 484, 409 L 478, 405 L 484, 393 L 484, 390 L 481, 387 L 478, 387 L 476, 390 L 477, 393 L 471, 403 L 468, 400 L 468, 397 L 465, 398 L 462, 395 L 465, 390 L 464, 387 L 461, 386 L 459, 383 L 450, 381 L 441, 375 z"]}],location6_4356:[{paths:["M 554, 326 L 568, 344 L 567, 347 L 564, 349 L 568, 355 L 562, 373 L 565, 379 L 573, 387 L 573, 393 L 568, 399 L 566, 405 L 566, 411 L 569, 414 L 575, 412 L 576, 409 L 573, 403 L 575, 401 L 578, 402 L 580, 405 L 583, 405 L 585, 402 L 588, 401 L 590, 403 L 589, 406 L 597, 414 L 600, 414 L 601, 408 L 604, 406 L 604, 397 L 598, 393 L 595, 395 L 592, 394 L 584, 387 L 599, 380 L 608, 388 L 607, 394 L 613, 396 L 619, 401 L 633, 390 L 633, 387 L 638, 382 L 637, 379 L 639, 376 L 642, 378 L 645, 376 L 646, 385 L 652, 387 L 654, 390 L 652, 396 L 657, 400 L 660, 402 L 661, 399 L 667, 396 L 668, 393 L 661, 384 L 655, 381 L 654, 375 L 663, 372 L 663, 381 L 666, 381 L 668, 383 L 668, 386 L 671, 387 L 676, 379 L 677, 370 L 673, 364 L 675, 358 L 681, 353 L 681, 350 L 678, 341 L 676, 338 L 673, 337 L 672, 340 L 666, 345 L 663, 345 L 667, 339 L 658, 334 L 653, 325 L 653, 322 L 650, 319 L 646, 324 L 644, 330 L 641, 326 L 641, 320 L 635, 317 L 632, 318 L 631, 315 L 622, 309 L 615, 309 L 612, 310 L 605, 318 L 596, 322 L 595, 325 L 597, 331 L 600, 330 L 609, 332 L 608, 329 L 610, 326 L 613, 325 L 619, 330 L 622, 330 L 627, 338 L 632, 336 L 631, 333 L 628, 331 L 630, 325 L 629, 322 L 620, 325 L 611, 318 L 611, 315 L 616, 310 L 617, 304 L 611, 299 L 602, 299 L 590, 291 L 578, 297 L 566, 291 L 557, 296 L 556, 299 L 571, 309 L 571, 312 L 565, 312 L 562, 314 L 561, 323 L 555, 325 z"]}],location7_4356:[{paths:["M 781, 336 L 784, 354 L 804, 378 L 828, 388 L 846, 393 L 876, 394 L 882, 389 L 883, 377 L 880, 371 L 882, 368 L 888, 366 L 900, 366 L 901, 375 L 904, 378 L 913, 382 L 934, 387 L 952, 387 L 958, 385 L 961, 383 L 964, 374 L 959, 362 L 947, 354 L 920, 353 L 922, 347 L 914, 338 L 896, 324 L 894, 315 L 889, 306 L 883, 300 L 877, 297 L 859, 292 L 832, 290 L 811, 294 L 802, 298 L 799, 301 L 798, 307 L 799, 310 L 805, 315 L 804, 318 L 786, 326 L 782, 335 z"]}],location8_4356:[{paths:["M 144, 491 L 151, 482 L 160, 478 L 165, 472 L 170, 469 L 180, 454 L 186, 451 L 187, 448 L 193, 448 L 199, 442 L 204, 433 L 213, 426 L 223, 415 L 241, 429 L 252, 444 L 255, 446 L 261, 445 L 263, 451 L 262, 463 L 252, 472 L 251, 478 L 245, 487 L 243, 493 L 249, 511 L 236, 524 L 221, 532 L 212, 540 L 210, 543 L 207, 561 L 200, 573 L 194, 579 L 193, 585 L 190, 586 L 187, 580 L 181, 579 L 189, 570 L 187, 567 L 187, 561 L 172, 560 L 171, 557 L 174, 555 L 174, 552 L 168, 550 L 162, 551 L 160, 549 L 163, 547 L 169, 538 L 190, 525 L 190, 520 L 192, 517 L 190, 515 L 184, 515 L 178, 511 L 174, 505 L 168, 506 L 168, 503 L 156, 502 L 153, 500 L 154, 497 L 152, 494 L 146, 493 z"]}],location9_4356:[{paths:["M 242, 493 L 248, 508 L 257, 509 L 269, 530 L 272, 533 L 278, 533 L 281, 531 L 284, 534 L 279, 539 L 280, 541 L 292, 544 L 295, 543 L 298, 538 L 301, 538 L 304, 541 L 319, 536 L 322, 534 L 322, 531 L 324, 529 L 336, 530 L 339, 529 L 339, 526 L 345, 527 L 345, 524 L 353, 519 L 350, 517 L 348, 511 L 369, 511 L 372, 508 L 375, 509 L 375, 506 L 361, 492 L 361, 489 L 364, 487 L 365, 481 L 368, 479 L 380, 479 L 383, 477 L 392, 476 L 390, 473 L 384, 471 L 383, 468 L 386, 469 L 386, 466 L 371, 458 L 365, 449 L 356, 440 L 350, 437 L 345, 442 L 324, 451 L 314, 462 L 305, 465 L 302, 463 L 294, 451 L 284, 433 L 275, 427 L 261, 440 L 260, 443 L 263, 452 L 263, 461 L 252, 472 L 244, 490 z"]}],location1_4437:[{paths:["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]}],location10_4437:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_4437:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_4437:[{paths:["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]}],location13_4437:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_4437:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_4437:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_4437:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_4437:[{paths:["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]}],location18_4437:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_4437:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]}],location3_4437:[{paths:["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]}],location4_4437:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}],location5_4437:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}],location6_4437:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}],location7_4437:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_4437:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_4437:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location1_4446:[{paths:["M 271, 323 L 271, 326 L 274, 326 L 277, 329 L 278, 338 L 283, 344 L 292, 341 L 293, 347 L 291, 350 L 301, 359 L 304, 359 L 305, 356 L 317, 350 L 317, 347 L 328, 338 L 342, 353 L 343, 359 L 349, 357 L 354, 363 L 357, 363 L 359, 365 L 356, 369 L 358, 371 L 367, 374 L 370, 373 L 372, 370 L 378, 372 L 387, 380 L 390, 381 L 401, 393 L 407, 395 L 415, 402 L 421, 401 L 430, 404 L 434, 413 L 436, 411 L 435, 408 L 440, 405 L 448, 408 L 449, 411 L 455, 414 L 458, 418 L 468, 410 L 468, 407 L 465, 404 L 456, 399 L 458, 396 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 463, 373 L 460, 373 L 460, 370 L 465, 367 L 466, 364 L 472, 358 L 469, 340 L 475, 338 L 476, 332 L 464, 326 L 467, 324 L 469, 316 L 477, 312 L 477, 309 L 471, 303 L 475, 295 L 481, 293 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 463, 265 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 255 L 454, 243 L 452, 249 L 449, 251 L 446, 249 L 443, 250 L 438, 245 L 441, 244 L 442, 241 L 439, 238 L 433, 237 L 428, 242 L 430, 245 L 427, 247 L 421, 245 L 415, 247 L 412, 250 L 411, 256 L 408, 257 L 407, 251 L 409, 246 L 400, 242 L 395, 247 L 396, 250 L 399, 251 L 393, 254 L 390, 254 L 388, 251 L 385, 253 L 383, 262 L 381, 264 L 372, 261 L 363, 254 L 351, 258 L 349, 261 L 351, 264 L 360, 268 L 355, 271 L 350, 266 L 347, 268 L 344, 267 L 342, 269 L 328, 261 L 322, 262 L 319, 265 L 321, 270 L 318, 271 L 318, 274 L 324, 276 L 322, 279 L 325, 281 L 331, 279 L 331, 282 L 316, 283 L 315, 280 L 312, 279 L 310, 285 L 304, 285 L 295, 290 L 294, 293 L 297, 295 L 298, 298 L 292, 298 L 286, 302 L 285, 308 L 282, 307 L 279, 301 L 277, 302 L 273, 311 L 278, 318 L 276, 321 L 273, 322 z"]}],location10_4446:[{paths:["M 662, 422 L 668, 417 L 677, 415 L 680, 409 L 686, 407 L 690, 398 L 695, 392 L 706, 385 L 712, 388 L 722, 400 L 717, 405 L 720, 408 L 720, 414 L 726, 418 L 729, 416 L 731, 410 L 740, 408 L 748, 400 L 757, 396 L 769, 387 L 775, 381 L 778, 375 L 784, 371 L 785, 368 L 791, 363 L 800, 369 L 817, 399 L 825, 408 L 831, 411 L 840, 419 L 849, 421 L 858, 427 L 873, 427 L 873, 433 L 874, 436 L 877, 438 L 877, 441 L 872, 456 L 863, 457 L 857, 460 L 842, 459 L 842, 462 L 836, 467 L 832, 473 L 826, 475 L 814, 473 L 811, 479 L 808, 480 L 793, 476 L 802, 470 L 799, 468 L 793, 470 L 781, 470 L 780, 464 L 777, 465 L 775, 463 L 780, 458 L 778, 456 L 766, 464 L 745, 471 L 739, 471 L 737, 467 L 731, 465 L 728, 462 L 722, 466 L 710, 464 L 709, 459 L 706, 458 L 710, 452 L 708, 450 L 702, 451 L 693, 445 L 693, 442 L 689, 437 L 680, 439 L 677, 437 L 674, 438 L 669, 436 L 671, 432 L 669, 429 L 666, 430 L 663, 428 L 663, 425 z"]}],location11_4446:[{paths:["M 845, 415 L 851, 411 L 860, 409 L 865, 403 L 886, 389 L 889, 389 L 898, 383 L 904, 377 L 913, 362 L 931, 348 L 943, 362 L 943, 368 L 945, 371 L 948, 373 L 951, 370 L 954, 372 L 968, 396 L 977, 405 L 983, 407 L 989, 412 L 995, 408 L 1001, 414 L 1010, 419 L 1021, 430 L 1036, 434 L 1039, 437 L 1036, 442 L 1030, 444 L 1024, 442 L 1016, 448 L 1016, 454 L 1022, 459 L 1022, 461 L 1013, 464 L 1007, 462 L 1005, 464 L 1011, 473 L 1008, 476 L 1014, 480 L 1012, 482 L 1003, 479 L 1000, 479 L 998, 482 L 995, 482 L 986, 478 L 980, 478 L 977, 481 L 978, 484 L 967, 491 L 961, 487 L 959, 481 L 956, 479 L 947, 480 L 941, 477 L 935, 479 L 929, 478 L 927, 476 L 927, 472 L 925, 469 L 922, 466 L 916, 465 L 914, 468 L 923, 480 L 911, 480 L 905, 484 L 899, 483 L 894, 487 L 888, 485 L 879, 486 L 877, 483 L 874, 485 L 865, 485 L 863, 479 L 857, 481 L 854, 479 L 848, 480 L 858, 472 L 879, 462 L 880, 459 L 878, 457 L 878, 448 L 881, 445 L 882, 439 L 877, 434 L 877, 428 L 883, 423 L 886, 423 L 886, 420 L 877, 421 L 877, 418 L 875, 416 L 857, 415 L 848, 417 z"]}],location12_4446:[{paths:["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]}],location13_4446:[{paths:["M 304, 539 L 328, 523 L 344, 508 L 353, 508 L 356, 506 L 374, 512 L 383, 512 L 395, 509 L 407, 511 L 413, 508 L 422, 508 L 440, 513 L 444, 519 L 440, 528 L 443, 531 L 445, 537 L 440, 549 L 419, 560 L 392, 568 L 377, 568 L 365, 575 L 364, 569 L 358, 564 L 346, 561 L 340, 557 L 334, 557 L 320, 546 L 311, 546 L 305, 540 z"]}],location14_4446:[{paths:["M 492, 546 L 494, 552 L 500, 553 L 500, 556 L 503, 557 L 504, 554 L 510, 552 L 509, 555 L 512, 557 L 506, 559 L 497, 565 L 497, 568 L 503, 572 L 506, 572 L 505, 576 L 507, 578 L 507, 584 L 513, 588 L 513, 591 L 519, 592 L 522, 590 L 527, 593 L 527, 596 L 523, 599 L 528, 603 L 526, 610 L 522, 610 L 522, 603 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 506, 626 L 510, 632 L 513, 632 L 512, 636 L 515, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 640 L 522, 646 L 528, 647 L 532, 638 L 547, 633 L 552, 638 L 560, 641 L 561, 647 L 567, 647 L 568, 650 L 571, 652 L 572, 650 L 570, 648 L 572, 645 L 575, 643 L 581, 646 L 587, 642 L 588, 639 L 586, 637 L 589, 634 L 601, 632 L 604, 633 L 607, 631 L 609, 634 L 618, 629 L 618, 626 L 624, 623 L 626, 620 L 622, 614 L 622, 605 L 618, 600 L 623, 596 L 617, 590 L 623, 585 L 613, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 559 L 610, 556 L 617, 550 L 617, 547 L 608, 540 L 599, 546 L 598, 549 L 600, 552 L 598, 553 L 594, 554 L 590, 548 L 581, 545 L 576, 550 L 577, 553 L 575, 555 L 569, 552 L 563, 555 L 560, 558 L 560, 561 L 565, 564 L 566, 567 L 563, 566 L 557, 569 L 554, 569 L 554, 563 L 551, 561 L 545, 561 L 537, 550 L 532, 558 L 530, 560 L 527, 560 L 524, 559 L 522, 556 L 524, 553 L 521, 550 L 512, 550 L 513, 547 L 511, 544 L 505, 540 L 496, 542 L 494, 545 z"]}],location15_4446:[{paths:["M 695, 524 L 695, 533 L 698, 542 L 703, 548 L 706, 548 L 706, 551 L 709, 553 L 733, 560 L 735, 563 L 737, 560 L 740, 561 L 741, 564 L 746, 560 L 752, 560 L 791, 573 L 800, 578 L 811, 587 L 817, 589 L 826, 589 L 838, 597 L 853, 597 L 871, 590 L 884, 579 L 896, 561 L 891, 552 L 897, 534 L 894, 516 L 868, 494 L 853, 490 L 844, 491 L 835, 489 L 832, 492 L 814, 492 L 781, 500 L 772, 504 L 757, 504 L 751, 502 L 730, 503 L 718, 501 L 703, 506 L 703, 518 L 697, 522 z"]}],location16_4446:[{paths:["M 323, 635 L 335, 635 L 338, 637 L 341, 646 L 340, 649 L 331, 653 L 332, 655 L 344, 656 L 347, 659 L 359, 664 L 360, 667 L 351, 670 L 347, 673 L 363, 671 L 378, 679 L 381, 679 L 387, 683 L 399, 687 L 402, 690 L 420, 695 L 420, 698 L 417, 700 L 417, 703 L 429, 699 L 450, 700 L 455, 703 L 455, 709 L 491, 705 L 497, 702 L 508, 691 L 511, 691 L 520, 683 L 529, 679 L 531, 676 L 527, 670 L 518, 667 L 520, 661 L 511, 659 L 512, 653 L 518, 650 L 510, 645 L 503, 636 L 510, 627 L 511, 624 L 509, 615 L 512, 609 L 518, 604 L 520, 598 L 519, 595 L 513, 594 L 504, 589 L 492, 578 L 490, 572 L 484, 567 L 475, 565 L 463, 559 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 434, 569 L 428, 572 L 419, 582 L 419, 585 L 417, 587 L 405, 589 L 399, 594 L 395, 600 L 392, 600 L 383, 608 L 380, 605 L 375, 610 L 369, 612 L 361, 620 L 337, 624 L 333, 629 L 327, 632 z"]}],location17_4446:[{paths:["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]}],location18_4446:[{paths:["M 611, 685 L 617, 683 L 617, 668 L 620, 665 L 626, 663 L 631, 657 L 627, 633 L 627, 621 L 623, 612 L 623, 603 L 629, 595 L 630, 586 L 632, 583 L 640, 578 L 639, 575 L 636, 573 L 624, 571 L 623, 568 L 625, 565 L 623, 562 L 629, 559 L 631, 556 L 630, 550 L 633, 547 L 642, 549 L 660, 557 L 696, 562 L 708, 569 L 717, 572 L 722, 578 L 725, 579 L 727, 585 L 732, 590 L 738, 592 L 747, 592 L 771, 601 L 773, 604 L 769, 610 L 771, 616 L 780, 618 L 792, 618 L 793, 621 L 784, 625 L 783, 628 L 786, 634 L 789, 636 L 790, 645 L 787, 650 L 784, 650 L 772, 658 L 765, 667 L 756, 670 L 729, 687 L 727, 690 L 718, 692 L 712, 697 L 700, 701 L 682, 703 L 679, 705 L 664, 704 L 652, 699 L 631, 699 L 619, 691 L 616, 692 L 613, 690 L 613, 687 z"]}],location2_4446:[{paths:["M 468, 243 L 489, 235 L 495, 225 L 492, 224 L 489, 228 L 492, 233 L 500, 228 L 515, 222 L 524, 224 L 533, 219 L 551, 219 L 560, 222 L 572, 223 L 578, 226 L 577, 229 L 583, 234 L 587, 240 L 587, 243 L 599, 254 L 599, 263 L 591, 274 L 579, 280 L 582, 281 L 581, 284 L 579, 285 L 574, 280 L 571, 281 L 573, 287 L 579, 290 L 587, 298 L 588, 301 L 574, 308 L 541, 307 L 507, 296 L 505, 297 L 505, 301 L 503, 300 L 500, 294 L 491, 286 L 485, 277 L 476, 270 L 474, 272 L 472, 271 L 471, 268 L 474, 267 L 475, 264 L 469, 246 z"]}],location3_4446:[{paths:["M 602, 289 L 606, 295 L 609, 295 L 616, 301 L 618, 307 L 626, 314 L 628, 311 L 637, 311 L 637, 315 L 640, 315 L 649, 320 L 652, 323 L 652, 326 L 655, 327 L 646, 333 L 645, 336 L 653, 342 L 653, 347 L 657, 351 L 657, 354 L 663, 362 L 663, 368 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 649, 385 L 653, 394 L 656, 395 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 671, 390 L 673, 387 L 671, 384 L 673, 382 L 678, 385 L 678, 391 L 684, 392 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 380 L 705, 380 L 707, 383 L 708, 381 L 714, 379 L 719, 373 L 719, 370 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 771, 341 L 769, 329 L 775, 328 L 775, 325 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 305 L 793, 298 L 794, 295 L 788, 290 L 782, 288 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 787, 279 L 790, 281 L 791, 284 L 794, 284 L 797, 279 L 803, 277 L 804, 274 L 796, 265 L 797, 262 L 795, 259 L 786, 253 L 780, 246 L 774, 243 L 768, 246 L 768, 243 L 771, 238 L 774, 238 L 778, 242 L 779, 239 L 785, 236 L 787, 233 L 786, 230 L 777, 225 L 768, 230 L 767, 236 L 761, 232 L 755, 231 L 753, 225 L 745, 230 L 743, 225 L 734, 220 L 725, 225 L 721, 233 L 721, 237 L 713, 244 L 712, 242 L 716, 237 L 713, 225 L 706, 230 L 703, 228 L 697, 228 L 692, 236 L 686, 233 L 683, 234 L 675, 242 L 672, 239 L 673, 236 L 676, 234 L 675, 228 L 677, 226 L 674, 223 L 668, 222 L 662, 227 L 665, 229 L 663, 232 L 654, 232 L 648, 236 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 229 L 641, 235 L 651, 228 L 646, 222 L 640, 220 L 631, 225 L 627, 237 L 624, 237 L 618, 233 L 615, 235 L 611, 227 L 609, 228 L 605, 237 L 611, 245 L 617, 247 L 619, 250 L 620, 248 L 629, 243 L 635, 251 L 626, 249 L 621, 254 L 621, 258 L 615, 257 L 606, 262 L 604, 265 L 613, 271 L 613, 274 L 617, 274 L 617, 271 L 626, 269 L 624, 275 L 616, 283 L 607, 285 L 604, 288 z"]}],location4_4446:[{paths:["M 173, 404 L 175, 407 L 187, 406 L 188, 409 L 195, 414 L 194, 417 L 188, 421 L 199, 421 L 198, 427 L 201, 429 L 204, 430 L 219, 426 L 219, 429 L 212, 434 L 222, 433 L 224, 435 L 222, 439 L 229, 439 L 238, 435 L 238, 438 L 231, 443 L 239, 442 L 241, 445 L 250, 450 L 253, 448 L 257, 454 L 266, 454 L 272, 456 L 273, 459 L 276, 461 L 279, 461 L 282, 457 L 294, 455 L 297, 453 L 303, 455 L 306, 452 L 315, 453 L 316, 450 L 322, 446 L 310, 442 L 316, 440 L 317, 437 L 332, 442 L 338, 440 L 344, 442 L 350, 438 L 356, 438 L 358, 436 L 347, 427 L 349, 426 L 364, 433 L 379, 433 L 382, 435 L 385, 433 L 388, 434 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 400, 427 L 403, 428 L 402, 422 L 396, 422 L 399, 425 L 406, 422 L 409, 424 L 418, 424 L 421, 423 L 423, 420 L 418, 411 L 415, 409 L 416, 407 L 419, 407 L 421, 405 L 409, 397 L 403, 396 L 380, 373 L 374, 371 L 368, 373 L 363, 378 L 360, 376 L 342, 359 L 341, 353 L 329, 338 L 318, 346 L 315, 355 L 304, 366 L 294, 354 L 285, 351 L 281, 342 L 278, 339 L 277, 330 L 275, 327 L 265, 330 L 261, 336 L 249, 344 L 242, 356 L 227, 362 L 224, 368 L 215, 374 L 210, 382 L 201, 386 L 193, 394 L 187, 395 L 179, 403 L 176, 400 L 174, 403 z"]}],location5_4446:[{paths:["M 465, 372 L 467, 378 L 479, 383 L 488, 391 L 497, 391 L 512, 396 L 521, 405 L 530, 411 L 536, 409 L 548, 409 L 563, 403 L 578, 403 L 602, 393 L 611, 393 L 641, 383 L 617, 383 L 608, 381 L 572, 382 L 548, 374 L 538, 362 L 538, 347 L 534, 341 L 528, 338 L 522, 332 L 522, 329 L 510, 335 L 492, 340 L 489, 339 L 483, 343 L 480, 346 L 479, 355 L 474, 361 L 468, 365 L 466, 371 z"]}],location6_4446:[{paths:["M 523, 330 L 527, 336 L 536, 342 L 538, 345 L 539, 348 L 537, 351 L 537, 357 L 541, 366 L 550, 374 L 556, 375 L 562, 379 L 568, 381 L 604, 380 L 616, 383 L 634, 381 L 640, 383 L 655, 379 L 658, 376 L 658, 370 L 654, 361 L 656, 355 L 644, 345 L 642, 330 L 639, 324 L 633, 318 L 627, 316 L 615, 316 L 609, 313 L 600, 315 L 591, 313 L 576, 313 L 564, 318 L 558, 318 L 552, 322 L 534, 325 L 525, 329 z"]}],location7_4446:[{paths:["M 708, 386 L 711, 387 L 722, 399 L 721, 402 L 718, 404 L 720, 407 L 720, 413 L 726, 418 L 731, 410 L 737, 409 L 746, 403 L 750, 398 L 756, 396 L 768, 388 L 774, 382 L 777, 376 L 785, 369 L 786, 366 L 792, 362 L 798, 366 L 820, 402 L 826, 408 L 838, 416 L 859, 409 L 867, 401 L 885, 389 L 888, 389 L 897, 383 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 886, 351 L 880, 349 L 876, 337 L 869, 328 L 854, 317 L 849, 311 L 847, 305 L 841, 299 L 835, 297 L 821, 284 L 810, 291 L 808, 297 L 798, 309 L 786, 330 L 780, 335 L 774, 343 L 771, 343 L 758, 358 L 758, 364 L 740, 351 L 730, 362 L 721, 369 L 711, 384 z"]}],location8_4446:[{paths:["M 153, 487 L 156, 499 L 160, 505 L 174, 519 L 174, 522 L 171, 525 L 173, 543 L 171, 545 L 168, 545 L 168, 548 L 170, 551 L 174, 549 L 174, 552 L 179, 561 L 182, 558 L 194, 555 L 218, 557 L 227, 552 L 239, 548 L 248, 548 L 263, 540 L 281, 541 L 284, 540 L 284, 534 L 296, 528 L 299, 522 L 297, 516 L 290, 507 L 278, 497 L 278, 491 L 242, 479 L 233, 474 L 221, 470 L 212, 469 L 200, 465 L 188, 465 L 176, 469 L 170, 473 L 167, 473 L 161, 477 L 155, 485 z"]}],location9_4446:[{paths:["M 247, 468 L 248, 474 L 255, 481 L 267, 487 L 276, 489 L 279, 492 L 278, 495 L 283, 501 L 289, 505 L 298, 517 L 299, 526 L 308, 525 L 317, 529 L 329, 522 L 339, 511 L 345, 508 L 360, 506 L 372, 511 L 384, 511 L 390, 509 L 408, 510 L 420, 506 L 419, 503 L 425, 499 L 431, 502 L 434, 499 L 432, 496 L 433, 493 L 430, 491 L 432, 488 L 431, 485 L 428, 483 L 407, 482 L 383, 468 L 359, 462 L 347, 461 L 344, 463 L 329, 463 L 317, 465 L 316, 468 L 310, 471 L 298, 471 L 295, 469 L 292, 470 L 277, 467 L 268, 467 L 265, 469 L 250, 467 z"]}],location1_4536:[{paths:["M 267, 340 L 278, 331 L 276, 328 L 273, 327 L 272, 324 L 278, 319 L 273, 312 L 278, 300 L 281, 303 L 283, 309 L 285, 307 L 285, 304 L 291, 299 L 297, 298 L 298, 296 L 295, 296 L 292, 293 L 286, 295 L 284, 298 L 281, 297 L 274, 290 L 274, 287 L 277, 284 L 286, 281 L 296, 290 L 302, 286 L 308, 287 L 311, 281 L 314, 280 L 317, 283 L 326, 284 L 332, 282 L 332, 279 L 321, 277 L 318, 275 L 320, 269 L 319, 266 L 321, 263 L 330, 262 L 342, 270 L 345, 267 L 351, 267 L 357, 271 L 360, 269 L 351, 265 L 349, 262 L 350, 259 L 362, 255 L 371, 261 L 380, 263 L 382, 262 L 385, 253 L 388, 249 L 391, 256 L 396, 251 L 394, 248 L 400, 243 L 409, 246 L 407, 252 L 410, 257 L 411, 251 L 414, 248 L 420, 245 L 429, 247 L 428, 244 L 432, 238 L 438, 238 L 441, 240 L 442, 243 L 440, 246 L 442, 249 L 448, 251 L 451, 250 L 455, 244 L 459, 256 L 457, 259 L 448, 264 L 449, 267 L 458, 263 L 464, 266 L 467, 269 L 469, 281 L 475, 284 L 481, 290 L 481, 293 L 478, 296 L 475, 296 L 471, 304 L 477, 310 L 478, 316 L 481, 319 L 483, 325 L 482, 331 L 486, 340 L 485, 343 L 479, 345 L 476, 344 L 472, 339 L 472, 357 L 469, 363 L 463, 369 L 469, 381 L 465, 393 L 456, 399 L 464, 404 L 468, 410 L 460, 417 L 457, 417 L 455, 414 L 452, 414 L 448, 408 L 442, 406 L 439, 406 L 435, 412 L 432, 412 L 428, 415 L 425, 410 L 422, 410 L 417, 404 L 413, 402 L 411, 396 L 412, 392 L 418, 392 L 420, 398 L 419, 402 L 416, 401 L 414, 396 L 409, 392 L 406, 395 L 395, 382 L 389, 383 L 388, 386 L 377, 377 L 377, 372 L 374, 372 L 369, 376 L 360, 374 L 357, 368 L 359, 365 L 353, 366 L 355, 369 L 353, 372 L 350, 371 L 349, 377 L 346, 377 L 344, 369 L 338, 368 L 332, 371 L 330, 374 L 327, 374 L 318, 368 L 315, 369 L 303, 359 L 297, 357 L 295, 354 L 288, 352 L 291, 351 L 290, 356 L 285, 359 L 285, 362 L 282, 362 L 280, 360 L 281, 357 L 279, 354 L 276, 354 L 275, 345 L 269, 343 z"]}],location10_4536:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_4536:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_4536:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_4536:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_4536:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_4536:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_4536:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_4536:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_4536:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_4536:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}],location3_4536:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}],location4_4536:[{paths:["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]}],location5_4536:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}],location6_4536:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}],location7_4536:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_4536:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_4536:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location1_5346:[{paths:["M 271, 324 L 272, 327 L 278, 329 L 278, 338 L 281, 341 L 281, 344 L 287, 342 L 293, 343 L 291, 352 L 302, 360 L 306, 356 L 315, 351 L 318, 346 L 321, 345 L 326, 339 L 329, 339 L 340, 351 L 344, 359 L 350, 358 L 352, 361 L 358, 364 L 357, 367 L 360, 373 L 366, 375 L 372, 371 L 378, 372 L 390, 382 L 401, 394 L 407, 396 L 416, 403 L 422, 401 L 424, 403 L 427, 403 L 430, 405 L 432, 411 L 435, 413 L 435, 407 L 441, 405 L 444, 407 L 447, 406 L 450, 412 L 456, 415 L 458, 418 L 468, 410 L 469, 407 L 457, 399 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 461, 372 L 460, 369 L 466, 366 L 471, 361 L 472, 349 L 469, 340 L 475, 338 L 476, 332 L 470, 327 L 464, 326 L 467, 324 L 467, 321 L 470, 316 L 476, 313 L 478, 310 L 472, 304 L 471, 301 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 466, 267 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 254 L 455, 245 L 453, 245 L 452, 248 L 449, 250 L 443, 250 L 440, 244 L 442, 241 L 440, 238 L 434, 237 L 428, 241 L 430, 244 L 428, 246 L 419, 244 L 411, 251 L 411, 254 L 409, 255 L 407, 249 L 409, 247 L 407, 244 L 398, 244 L 395, 246 L 395, 249 L 398, 251 L 393, 254 L 390, 254 L 388, 251 L 386, 251 L 381, 263 L 372, 261 L 363, 254 L 357, 254 L 349, 261 L 351, 264 L 357, 267 L 357, 270 L 351, 266 L 345, 266 L 343, 269 L 334, 266 L 332, 263 L 323, 261 L 320, 264 L 320, 270 L 317, 272 L 319, 275 L 324, 277 L 323, 280 L 326, 281 L 332, 278 L 332, 281 L 326, 283 L 317, 282 L 312, 279 L 309, 285 L 303, 285 L 294, 291 L 294, 297 L 285, 303 L 285, 306 L 283, 308 L 278, 299 L 274, 308 L 274, 314 L 277, 315 L 278, 318 L 276, 321 L 273, 322 z"]}],location10_5346:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_5346:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_5346:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_5346:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_5346:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_5346:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_5346:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}],location17_5346:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_5346:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_5346:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}],location3_5346:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}],location4_5346:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]}],location5_5346:[{paths:["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]}],location6_5346:[{paths:["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]}],location7_5346:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_5346:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_5346:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location1_5436:[{paths:["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]}],location10_5436:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}],location11_5436:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}],location12_5436:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}],location13_5436:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}],location14_5436:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}],location15_5436:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}],location16_5436:[{paths:["M 322, 635 L 337, 636 L 341, 645 L 341, 648 L 330, 655 L 345, 657 L 360, 666 L 345, 673 L 351, 674 L 360, 671 L 372, 675 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 418, 703 L 436, 699 L 454, 701 L 454, 707 L 456, 710 L 483, 707 L 495, 703 L 501, 699 L 509, 691 L 512, 691 L 520, 684 L 529, 680 L 532, 674 L 518, 666 L 519, 660 L 510, 658 L 513, 652 L 517, 649 L 514, 648 L 503, 636 L 511, 624 L 509, 618 L 510, 612 L 519, 603 L 520, 597 L 503, 588 L 491, 577 L 492, 574 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 417, 587 L 405, 589 L 395, 599 L 392, 599 L 384, 607 L 381, 606 L 376, 609 L 373, 608 L 359, 620 L 338, 623 L 335, 625 L 335, 628 L 326, 632 z"]}],location17_5436:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}],location18_5436:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}],location2_5436:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}],location3_5436:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}],location4_5436:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}],location5_5436:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}],location6_5436:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}],location7_5436:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}],location8_5436:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}],location9_5436:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}],location19:[{paths:["M 231, 252 L 300, 289 L 315, 317 L 357, 345 L 313, 395 L 295, 356 L 214, 350 L 163, 317 z"]}],location20:[{paths:["M 368, 407 L 424, 434 L 510, 434 L 516, 457 L 452, 482 L 381, 539 L 329, 516 L 318, 455 z"]}],location21:[{paths:["M 157, 340 L 203, 366 L 280, 376 L 299, 407 L 281, 441 L 189, 451 L 135, 442 z"]}],location22:[{paths:["M 136, 461 L 193, 469 L 278, 462 L 285, 517 L 255, 516 L 154, 562 z"]}],location23:[{paths:["M 377, 388 L 413, 347 L 467, 329 L 499, 350 L 511, 382 L 527, 395 L 512, 423 L 435, 423 z"]}],location24:[{paths:["M 298, 243 L 415, 207 L 455, 244 L 482, 264 L 491, 282 L 436, 297 L 387, 321 L 349, 298 L 339, 266 z"]}],location25:[{paths:["M 434, 203 L 578, 190 L 580, 220 L 559, 241 L 488, 250 L 463, 221 z"]}],location26:[{paths:["M 605, 194 L 721, 216 L 706, 299 L 621, 274 L 514, 282 L 506, 261 L 568, 254 L 597, 229 z"]}],location27:[{paths:["M 533, 312 L 601, 305 L 677, 321 L 686, 361 L 666, 383 L 629, 366 L 566, 378 L 538, 347 z"]}],location28:[{paths:["M 743, 220 L 849, 268 L 779, 287 L 739, 317 L 721, 310 L 733, 261 L 730, 229 z"]}],location29:[{paths:["M 881, 297 L 925, 348 L 850, 380 L 812, 385 L 787, 348 L 768, 336 L 799, 316 L 848, 308 z"]}],location30:[{paths:["M 936, 365 L 968, 440 L 824, 442 L 819, 402 L 872, 390 z"]}],location31:[{paths:["M 964, 455 L 937, 532 L 860, 489 L 817, 489 L 827, 456 L 884, 461 z"]}],location32:[{paths:["M 703, 394 L 748, 360 L 778, 400 L 788, 454 L 770, 490 L 707, 532 L 664, 501 L 706, 483 L 728, 442 L 723, 414 z"]}],location33:[{paths:["M 520, 115 L 335, 132 L 197, 179 L 90, 260 L 39, 341 L 29, 448 L 41, 571 L 120, 655 L 246, 747 L 358, 794 L 545, 810 L 664, 810 L 847, 766 L 997, 679 L 1104, 593 L 1116, 455 L 1081, 344 L 993, 246 L 843, 181 L 709, 136 L 525, 115 L 524, 169 L 701, 182 L 877, 237 L 1001, 326 L 1050, 418 L 1053, 524 L 992, 627 L 846, 722 L 703, 764 L 556, 765 L 386, 757 L 261, 711 L 145, 626 L 89, 553 L 77, 418 L 117, 329 L 199, 246 L 280, 200 L 421, 166 L 521, 169 z"]}],location34:[{paths:["M 920, 547 L 829, 614 L 777, 568 L 741, 553 L 780, 531 L 808, 508 L 847, 506 L 878, 528 z"]}],location35:[{paths:["M 539, 484 L 572, 498 L 616, 502 L 666, 549 L 607, 553 L 509, 571 L 431, 555 L 469, 532 L 487, 507 z"]}],location36:[{paths:["M 295, 534 L 356, 570 L 342, 597 L 300, 615 L 265, 640 L 211, 659 L 146, 599 L 186, 567 L 249, 542 z"]}],location37:[{paths:["M 259, 682 L 331, 652 L 341, 634 L 386, 615 L 396, 582 L 438, 597 L 442, 650 L 467, 697 L 456, 738 L 399, 749 z"]}],location38:[{paths:["M 594, 589 L 663, 583 L 713, 569 L 726, 579 L 722, 616 L 690, 652 L 632, 660 L 598, 632 z"]}],location39:[{paths:["M 748, 593 L 815, 658 L 855, 672 L 725, 740 L 703, 714 L 684, 668 L 713, 665 L 742, 635 z"]}],location40:[{paths:["M 461, 599 L 513, 607 L 569, 597 L 577, 641 L 608, 671 L 656, 677 L 680, 710 L 491, 731 L 490, 687 L 465, 644 z"]}],location42:[{paths:["M 1116, 755 L 1150, 788 L 1150, 794 L 1151, 802 L 1054, 828 L 1001, 754 L 1065, 746 z"]}],location43:[{paths:["M 975, 760 L 1035, 840 L 1002, 849 L 928, 850 L 900, 835 L 885, 812 L 910, 786 z"]}],g31_15_normal:[{size:{h:340,w:1108},paths:["M 1093.4251,339.95653 1091.5,309.5 l 0,-6 -1,0 0,-5 -1,0 0,-5 -1,0 0,-4 -1,0 0,-3 -1,0 c -0.7,-3.7 -1.3,-7.3 -2,-11 l -1,0 c -0.3,-3 -0.7,-6 -1,-9 l -1,0 0,-3 -1,0 0,-2 -1,0 c -0.7,-3 -1.3,-6 -2,-9 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 0,-3 -1,0 c -0.7,-2 -1.3,-4 -2,-6 l -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-3 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 c -0.3,-1 -0.7,-2 -1,-3 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1 -0.7,-2 -1,-3 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -4.7,-4.3 -9.3,-8.7 -14,-13 -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 c -1,-0.7 -2,-1.3 -3,-2 l 0,-3 c 2.8,-0.7 3.6,-1.9 6,-3 -0.2,-2.6 -0.1,-3.4 -1,-5 l -1,0 0,-15 c 2,-0.6 0.9,0.1 2,-1 l 1,0 c -0.8,-3.3 -12.7,-15.2 -16,-16 -0.8,-3.2 -3.8,-6.2 -7,-7 -1.2,-4.1 -1.7,-1.8 -4,-4 -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 0,-2 c -2.3,-1.7 -4.7,-3.3 -7,-5 -2,-2.3 -4,-4.7 -6,-7 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 -1,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -4.8,-2.7 -14.5,-0.5 -21,-1 -1.7,-0.3 -3.3,-0.7 -5,-1 0,0 -0.7,1.5 -3,1 l 0,-1 -4,0 0,1 -3,0 c -2.1,-0.1 -2,-1 -2,-1 -3.4,-0.9 -6.7,0.6 -9,1 -0.6,2 0.1,0.9 -1,2 l 0,1 -4,0 c -0.7,1 -1.3,2 -2,3 -1.7,0.3 -3.3,0.7 -5,1 -0.7,1 -1.3,2 -2,3 l -3,0 c -3.2,0.6 -4.6,1.7 -6,4 -4.2,-0.5 -7.7,-1.4 -11,-3 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -2,0 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 c -2.3,-0.3 -4.7,-0.7 -7,-1 l 0,-1 -5,0 0,-1 -3,0 0,-1 c -2.7,-0.3 -5.3,-0.7 -8,-1 l 0,-1 -4,0 0,-1 -4,0 0,-1 -4,0 0,-1 -3,0 0,-1 c -4.3,-0.7 -8.7,-1.3 -13,-2 l 0,-1 -3,0 0,-1 c -4,-0.3 -8,-0.7 -12,-1 -8,-2.4 -18.1,-3.6 -26,-6 -4.3,-0.3 -8.7,-0.7 -13,-1 l 0,-1 c -5,-0.3 -10,-0.7 -15,-1 -5.6,-1.7 -14.4,-2.3 -20,-4 l -12,0 0,-1 -14,0 0,-1 -15,0 0,-1 -19,0 0,-1 c -1.7,0.3 -3.3,0.7 -5,1 0,0 -0.6,-1.4 -3,-1 -0.2,0 -0.4,1.3 -2,1 -9.4,-1.7 -31.8,-2.6 -41,0 l -13,0 0,1 c -10,0.3 -20,0.7 -30,1 l 0,1 c -5.3,0.3 -10.7,0.7 -16,1 l 0,1 c -2.4,0.6 -2.7,-1.1 -4,-1 l 0,1 -7,0 0,1 -7,0 0,1 -7,0 0,1 -8,0 0,1 -4,0 0,1 -7,0 0,1 -6,0 0,1 -6,0 0,1 -6,0 0,1 -4,0 0,1 c -3.3,0.3 -6.7,0.7 -10,1 l 0,1 -4,0 0,1 -4,0 0,1 -4,0 0,1 c -3,0.3 -6,0.7 -9,1 l 0,1 -4,0 0,1 -6,0 0,1 -3,0 0,1 -4,0 0,1 -2,0 0,1 -5,0 0,1 -3,0 0,1 -5,0 0,1 -4,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -1.7,0.3 -3.3,0.7 -5,1 l 0,1 c -4.9,-0.4 -4.4,-1.2 -8,-3 l 0,-1 -5,0 c -0.7,-1 -1.3,-2 -2,-3 -1.7,-0.3 -3.3,-0.7 -5,-1 -0.7,-1 -1.3,-2 -2,-3 l -4,0 c -1,-1.3 -2,-2.7 -3,-4 -14.3,0.3 -28.7,0.7 -43,1 -3.1,3.7 -8.6,4.6 -10,10 -3.5,0.9 -9.3,7.4 -12,10 -0.3,0.7 -0.7,1.3 -1,2 -2.9,2.1 -4.9,1.9 -6,6 -4.2,1.1 -5.4,4.4 -8,7 -4.4,4.4 -9,8.1 -13,13 -1,0.3 -2,0.7 -3,1 -1.8,1.3 -3.4,4.3 -4,7 2.7,0.7 2.3,1.4 5,2 l 0,13 c -1,0.3 -2,0.7 -3,1 0.2,5.1 1.5,5.3 5,7 l 0,3 c -5.7,3 -11.3,6 -17,9 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -1,1.3 -2,2.7 -3,4 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -1,1.3 -2,2.7 -3,4 -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.7 -2.7,3.3 -4,5 l -2,0 c -3,3.3 -6,6.7 -9,10 -7,7 -14.1,12.9 -20,21 -2.3,2 -4.7,4 -7,6 l 0,2 c -1.7,1.3 -3.3,2.7 -5,4 l 0,2 c -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 -2,2 0,2 -1,0 0,2 -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,2 -1,0 c -0.3,1.3 -0.7,2.7 -1,4 l -1,0 0,3 -1,0 0,2 -1,0 0,2 -1,0 c -0.7,2 -1.3,4 -2,6 l -1,0 c -0.3,2 -0.7,4 -1,6 l -1,0 0,2 -1,0 0,3 -1,0 0,3 -1,0 0,4 -1,0 0,4 -1,0 0,3 -1,0 c -0.3,2.3 -0.7,4.7 -1,7 l -1,0 c -0.3,2.7 -0.7,5.3 -1,8 l -1,0 0,4 -1,0 0,5 -1,0 0,5 -1,0 0,6 -1,0 0,15 c 0,0.1 -1.4,0.8 -1,3 0,0 1.5,0.9 1,3 l -1,6.34004 -1.308263,3.37077 26.509534,0.20127 c 0.3,-1.7 -0.406991,-1.89111 -0.106991,-3.59111 L 51.5,336.5 l 0,-8 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-5 c 1.3,-0.7 2.7,-1.3 4,-2 l 0,-4 1,0 0,-6 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-4 c 1,-0.7 2,-1.3 3,-2 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 2,0 c 1.7,-3 3.3,-6 5,-9 l 1,0 0,-4 3,0 0,-2 3,0 c 1.1,-2.3 1.8,-3.8 4,-5 l 0,-4 c 5.9,-1.2 12.8,-9.1 15,-14 l 2,0 0,-2 4,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 2,0 0,-3 c 4.3,-0.6 3.4,-2.1 6,-4 l 0,-1 c 1,0.3 2,0.7 3,1 0,0 2.5,-2.7 3,-3 l 0,-3 3,0 0,-2 4,0 0,-2 3,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-3 c 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 3,-6 3,0 0,-1 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 2,-0.7 3,-1 0.7,-1 1.3,-2 2,-3 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 c 2.2,-1.4 1.4,0.4 3,-2 4.2,0.1 5.8,0.2 8,2 0.3,0.7 0.7,1.3 1,2 1.7,0.8 3,-1 3,-1 1,0.3 2,0.7 3,1 0.7,2.7 1.4,2.3 2,5 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 l 0,-3 c 3.3,-0.7 3.8,-1.9 8,-2 0.9,-1.1 -0.1,-0.2 1,-1 l 0,-14 c 0.6,-1.1 4.1,-1.3 5,-2 1.2,-1 0,-2.7 1,-4 l 1,0 0,-2 1,0 0,5 1,0 c 1.3,1.7 2.9,2.2 4,4 1.7,-0.3 3.3,-0.7 5,-1 l 0,-45 c -1,-0.3 -2,-0.7 -3,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1,-0.7 -2,-1.3 -3,-2 1.4,-5.4 5.6,-8.5 8,-13 l 2,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 c 0.9,2.6 -0.1,15 -1,16 l 0,6 c 0.2,0.4 5.2,3.2 6,4 1.3,1.7 2.7,3.3 4,5 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 l 0,1 c 1,0.3 2,0.7 3,1 1.1,1.1 0,0.4 2,1 0.8,-1.3 0.7,-1.2 2,-2 l 0,-13 c 2,0.3 4,0.7 6,1 l 0,2 2,0 0,3 c 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 0.8,-3.2 2.3,-3.8 5,-5 l 0,-1 c 1,0.3 2,0.7 3,1 l 0,-9 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 3,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 0,-1 4,0 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 l 1,0 0,-2 c 1,0.7 2,1.3 3,2 0.7,0.1 7.1,-1.5 8,-2 0.3,-0.7 0.7,-1.3 1,-2 2,-1 3.6,0.5 5,-1 0.3,-1 0.7,-2 1,-3 3.3,0.3 6.7,0.7 10,1 l 0,-1 3,0 0,-1 5,0 c 0.3,-1 0.7,-2 1,-3 1.1,-0.8 1.8,2 2,2 1,-0.3 2,-0.7 3,-1 l 0,-2 c 2,0.3 4,0.7 6,1 l 0,-1 2,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-3 c 1,0.8 1,1.2 2,2 l 0,1 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,0.3 2,0.7 3,1 l 0,-2 c 2,0.3 6.1,1.3 9,0 0.3,-0.7 0.7,-1.3 1,-2 l 8,0 c 6.2,-1.9 14.9,-3.2 21,-5 l 7,0 0,-1 c 4.3,-0.3 8.7,-0.7 13,-1 l 0,-1 c 0.9,0 3.6,1.9 6,1 l 0,-1 2,0 0,-1 9,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.7,0.3 3.3,0.7 5,1 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 10,2.2 13,1 0.3,-0.7 0.7,-1.3 1,-2 l 1,1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 c 1.7,-0.3 1.7,0.9 2,1 l 9,0 c 6.3,-0.3 12.7,-0.7 19,-1 l 12,0 c 0.3,-1 0.7,-2 1,-3 1,0.7 2,1.3 3,2 1,-0.6 -0.9,-0.8 1,-2 l 0,2 c 2.4,-0.6 2.2,-1.1 4,-2 l 0,2 7,0 0,1 52,0 c 5.9,1.7 16,-0.7 22,1 l 0,1 8,0 c 1.9,0.2 2,1 2,1 4.3,-0.3 8.7,-0.7 13,-1 l 0,2 c 16.2,3.2 36.7,3.7 51,9 l 6,0 0,1 9,0 0,1 6,0 0,1 4,0 0,1 c 2.7,0.9 7.8,1 9,0 l 10,0 3,6 7,0 0,1 3,0 0,1 4,0 0,1 c 1.2,0.2 1.8,-1.9 4,-1 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 2,0 0,1 c 1.7,0.5 1.8,-0.9 2,-1 3.8,-0.8 3.1,1.6 4,2 l 5,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 4,0 0,1 3,0 c 4,1.6 5.8,3 12,3 l 0,2 1,0 0,-1 1,0 c 1.6,0.4 1.3,1.6 2,2 l 2,0 0,1 3,0 0,1 2,0 0,1 3,0 0,1 3,0 0,1 3,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 c 2.6,1.3 4.5,3.4 8,4 l 0,8 c 4.4,0.3 4,1.5 8,2 l 0,3 c 2,-0.6 0.9,0.1 2,-1 l 1,0 0,3 c 2.7,-0.8 3.1,-1.6 5,-3 l 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,13 c 1.7,0.3 3.3,0.7 5,1 1.1,-1.3 2.7,-1.8 4,-3 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 0,-1 c 1,-0.7 2,-1.3 3,-2 l 0,-2 1,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-6 -1,0 c -1.7,-5.9 0.6,-14.3 1,-19 l 3,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 0,2 c 0.7,0.3 1.3,0.7 2,1 1.4,2.1 2.5,4.3 3,7 l 1,0 c -1.8,2.9 -5.7,5.7 -9,7 l 0,45 c 1.3,0.1 4,1 4,1 l 0,-1 2,0 0,-1 c 1,-0.3 2,-0.7 3,-1 0.3,-1.3 0.7,-2.7 1,-4 3.7,1 5.1,3.4 8,5 -0.1,3.9 -1,11.8 1,14 l 0,1 c 1.4,-0.8 2,-1 4,0 l 0,1 3,0 0,1 1,0 0,3 c 1,-0.3 2,-0.7 3,-1 0.3,1 0.7,2 1,3 l 2,0 c 0.6,-2 -0.1,-0.9 1,-2 3.1,-5.1 3.3,-0.8 7,-3 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.7 2.7,-1.3 4,-2 1.6,2.4 1.1,0.6 3,2 1,1.3 2,2.7 3,4 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 c 1.3,0.3 2.7,0.7 4,1 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 0,1 6,0 0,1 1,0 c 0.7,2 1.3,4 2,6 2.6,0.5 5.6,1.3 7,3 1.4,1.8 -1,1 2,3 l 0,2 c 3.5,1 5.7,3.8 8,6 0.3,0.7 0.7,1.3 1,2 1.3,0.3 2.7,0.7 4,1 l 0,1 1,0 c 1.9,2.3 -1.1,1.8 3,3 0.6,2.4 0.3,1.9 2,3 0.6,2 -0.1,0.9 1,2 l 0,-2 c 1,0.3 2,0.7 3,1 l 0,5 c 1.7,0.3 3.3,0.7 5,1 l 0,3 1,0 0,1 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,1.7 0.7,3.3 1,5 l 1,0 c 1.3,1.7 2.7,3.3 4,5 l 3,0 0,4 c 4.9,1.3 2.8,2.7 5,6 1,0.7 2,1.3 3,2 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.3,1.7 0.7,3.3 1,5 l 1,0 0,2 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 0,2 1,0 0,3 1.7116,3.41569 c 0.3,1.7 0.9135,3.15768 1.2135,4.85768 l 23.1423,-4e-5 z"]},{size:{h:420,w:1108},offset:{y:340},z:43,paths:["m 135.5,140.5 c 9,0 20.7,-0.9 28,1 3,-0.3 6,-0.7 9,-1 l 0,1 8,0 c 2.3,3.7 6,3.3 8,6 l 0,2 c 0.7,0.3 1.3,0.7 2,1 1.7,2 3.3,4 5,6 1,0.3 2,0.7 3,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 c 3,3.3 6,6.7 9,10 l 2,0 c 0.7,1 1.3,2 2,3 0.7,0.3 1.3,0.7 2,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 3.1,2.3 4.8,1.5 6,6 4,1 4.4,3.8 7,6 -0.3,0.6 -2,2 -2,2 l 0,15 c 3.2,0.8 2.9,1.2 3,5 -2.3,1.3 -4.7,2.7 -7,4 0.3,1 0.7,2 1,3 3.3,2 6.7,4 10,6 1.7,0.3 3.3,0.7 5,1 l 0,1 2,0 0,1 3,0 0,1 3,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 3,0 0,1 2,0 0,1 c 3.3,0.7 6.7,1.3 10,2 l 0,1 3,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 4,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 4,0 0,1 5,0 0,1 3,0 0,1 3,0 0,1 c 3,0.3 6,0.7 9,1 l 0,1 3,0 0,1 c 4.3,0.7 8.7,1.3 13,2 l 0,1 c 3,0.3 6,0.7 9,1 l 0,1 7,0 0,1 4,0 0,1 4,0 0,1 4,0 0,1 7,0 c 15.4,4.8 34.1,3.8 48,8 l 14,0 c 14.5,4.2 34,3.6 52,4 5.9,0.1 17,2.9 24,1 l 0,-1 c 3,0.3 6,0.7 9,1 l 9,0 0,-1 1,0 c 2.7,-0.3 3,1 3,1 l 13,0 0,-1 c 1,0.3 2,0.7 3,1 l 27,0 0,-1 19,0 0,-1 1,0 10,0 0,-1 10,0 0,-1 11,0 c 8.8,-2.6 20.5,-2.4 29,-5 8,-0.7 16,-1.3 24,-2 10,-3 22.2,-4.8 32,-8 3.7,-0.3 7.3,-0.7 11,-1 l 0,-1 4,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,-1 3,0 0,-1 3,0 0,-1 c 2.7,-0.3 5.3,-0.7 8,-1 l 0,-1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 3,-0.7 6,-1.3 9,-2 l 0,-1 2,0 0,-1 c 4.3,-1 8.7,-2 13,-3 l 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 0,-6 c -2,-0.7 -4,-1.3 -6,-2 l 0,-5 c 1,-0.3 2,-0.7 3,-1 l 0,-14 -1,0 c -0.8,-1.5 -0.7,-1.7 -1,-4 3.7,-3.3 7.3,-6.7 11,-10 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 2,-2 0,-2 1,0 c 0.7,-1 1.3,-2 2,-3 1,-0.3 2,-0.7 3,-1 4,-4.3 8,-8.7 12,-13 l 2,0 c 1,-1.7 2,-3.3 3,-5 l 2,0 c 4,-4.3 8,-8.7 12,-13 l 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 18,0 0,-1 7,0 0,1 1,0 0,-1 18,0 c 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 l 0,1 c 1.5,0.9 2.4,0.8 5,1 1.3,-5 6.8,-7.7 10,-11 4.3,-4.3 7.4,-9 11,-14 1,-0.7 2,-1.3 3,-2 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1,-0.7 2,-1.3 3,-2 0.7,-2 1.3,-4 2,-6 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 2,-2 0,-2 1,0 0,-2 1,0 0,-2 1,0 0,-2 2,-2 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 0,-3 1,0 0,-3 1,0 0,-3 1,0 0,-4 1,0 0,-3 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l 1,0 c 0.3,-3.3 0.7,-6.7 1,-10 l 1,0 0,-9 c 0.3,-3.3 0.7712,-7.26928 1.0712,-10.56928 l -1.4982,-5.05237 c -0.3,-1.3 -1.2655,-2.13071 -1.5654,-3.43071 l 24.6441,0.0712 0.3596,3.34829 c 0.4,4.4 4.1887,12.03292 3.9887,17.63292 -0.3,1 -0.7,2 -1,3 l 1,0 c 0.3,2 0.7,4 1,6 l 1,0 0,7 -1,0 c 0.3,2.7 0.7,5.3 1,8 l -2,0 c 2.8,7.1 4,13.5 4,24 l -3,0 c 1.3,4 2.7,8 4,12 -0.3,4 -0.7,8 -1,12 -3.8,0 -6.3,0.5 -9,1 0.9,4.9 2.7,10.5 4,15 -0.3,4 -0.7,8 -1,12 l -12,0 c -0.8,1.1 0.1,0.1 -1,1 -0.7,3.3 -1.3,6.7 -2,10 l 1,0 c 1,6.7 2,13.3 3,20 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1.7 -0.7,3.3 -1,5 -4.6,-0.4 -6.4,-1.9 -12,-2 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,3 -1,0 0,2 -1,0 c -0.6,2.1 1,3 1,3 0.7,5 1.3,10 2,15 l -1,0 c -1,4 -4.1,4.9 -6,8 -4.1,-0.8 -5.7,-3.1 -10,-4 -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.1 -1.1,3.7 -2,5 -0.7,0.3 -1.3,0.7 -2,1 -3.2,3.4 -4,5 -4,12 l 1,0 0,6 -1,0 0,2 -1,0 c -1.7,2 -3.3,4 -5,6 l -2,0 0,-1 c -1.7,-0.3 -3.3,-0.7 -5,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.5 -1.3,0.5 -2,1 -7.1,1.9 -5.2,15.1 -5,24 -4.5,1.1 -7.5,4.8 -12,6 l 0,2 c -2.8,-0.7 -2.2,-0.3 -3,-3 -3.4,-0.9 -1.9,-1.3 -4,-3 -3.7,5 -2.8,-0.9 -7,0 l 0,1 c -2,0.7 -4,1.3 -6,2 l 0,1 c -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -3,0.3 -6,0.7 -9,1 l 0,-1 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.7,-1 -1.3,-2 -2,-3 -1,-0.3 -2,-0.7 -3,-1 -0.4,7.3 -1,16.3 -1,25 l 0,8 1,0 0,7 -2,0 0,1 -2,0 0,1 c -0.7,0.3 -1.3,0.7 -2,1 l 0,13 c -1.1,1.1 -0.4,0 -1,2 -1,-0.3 -2,-0.7 -3,-1 l 0,1 c -2.7,1.2 -4.2,1.8 -5,5 l -4,0 c -0.3,1 -0.7,2 -1,3 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -1,0.3 -2,0.7 -3,1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1.8,-1.4 -2,-1.6 -5,-2 -1.9,2.1 -4.6,2.4 -7,4 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -3,0 0,1 -2,0 0,1 -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.6,0.4 -0.8,1.3 -2,2 0.6,3.1 1,6.7 1,11 -5.1,1 -6.8,4.3 -12,5 -1.1,-2.6 -6.5,-10.5 -12,-8 -0.7,1 -1.3,2 -2,3 l -2,0 0,1 -3,0 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 -5,0 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -2.3,0.3 -4.7,0.7 -7,1 -4.6,1.7 -9.7,4.7 -15,6 0.3,4 0.7,8 1,12 -3.1,0.7 -8.3,3.2 -10,2 -2.5,-0.7 -1.6,-0.5 -3,-2 l -1,0 0,-2 c -1.3,-1 -2.7,-2 -4,-3 -0.3,-0.7 -0.7,-1.3 -1,-2 l -3,0 c -1.1,0.9 -5.6,2.5 -8,2 l 0,-1 -4,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,1 -2,0 0,1 c -3.3,0.7 -6.7,1.3 -10,2 l 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -3.7,0.3 -7.3,0.7 -11,1 l 0,1 c -4,0.3 -8,0.7 -12,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,12 c -4.3,0.7 -8.7,1.3 -13,2 -0.7,-3.2 -1.5,-1.9 -2,-3 -0.3,-2.3 -0.7,-4.7 -1,-7 l -1,0 0,-1 -4,0 c -2.7,2.3 -9,0.8 -13,2 l 0,1 -7,0 0,1 -8,0 0,1 -8,0 0,1 -7,0 0,1 c -3,-0.3 -6,-0.7 -9,-1 l 0,1 -3,0 0,1 c -8,0.7 -16,1.3 -24,2 l 0,13 c -4,0.3 -8,0.7 -12,1 l 0,-1 -1,0 c -0.2,-4.9 -1.7,-6.1 -2,-11 -32.7,0.3 -65.3,0.7 -98,1 -1,3.7 -2,7.3 -3,11 l -11,0 c -0.7,-1.9 -1,-3.9 -1,-7 l -1,0 0,-6 c -6,-0.3 -12,-0.7 -18,-1 l 0,-1 c -7.7,-0.3 -15.3,-0.7 -23,-1 l 0,-1 -8,0 0,-1 -7,0 c -7.8,-2.3 -16.1,-2.9 -26,-3 -1.7,3.3 -3.3,6.7 -5,10 l -4,0 0,-1 -8,0 0,-12 -1,0 0,-1 c -6.3,-1 -12.7,-2 -19,-3 l 0,-1 -3,0 0,-1 -6,0 0,-1 c -3.3,-0.3 -6.7,-0.7 -10,-1 l 0,-1 -3,0 0,-1 -4,0 0,-1 -5,0 c -5.4,-1.7 -8.7,-3.8 -16,-4 l -6,9 -12,-3 c -0.1,-4.3 0.4,-7.9 1,-11 l -1,0 0,-1 c -5.6,-0.1 -8.1,-2.6 -12,-4 l -4,0 0,-1 -3,0 c -2.7,-1 -5.3,-2 -8,-3 -0.3,-1.7 -0.7,-3.3 -1,-5 l -3,0 c -0.7,-1 -1.3,-2 -2,-3 l -1,0 0,-2 c -0.6,-0.8 -2,-0.8 -3,-2 -1,0.3 -2,0.7 -3,1 l 0,1 -2,0 c -2.9,1.9 -0.4,3.2 -6,4 -1.5,-1.8 -2.7,-1.9 -6,-2 -2,2.3 -4,4.7 -6,7 l -5,0 c -1.4,-1.4 -5.6,-2.5 -8,-3 0.3,-4 0.7,-8 1,-12 l -1,0 0,-1 -3,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 -2,0 0,-1 -2,0 0,-1 c -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 -2,0 0,-1 -2,0 -2,-2 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2.5,-1.7 -4.4,-2.5 -8,-3 -1.6,2 -4,3.4 -7,4 l 0,-2 -1,0 0,3 c -2.4,0.5 -3.1,1.2 -5,2 l 0,-2 c -1.1,-1.1 -0.4,0 -1,-2 -1,0.3 -2,0.7 -3,1 l 0,-1 c -1.2,-0.9 -1.3,-2.5 -2,-3 -2.7,-1 -5.3,-2 -8,-3 l 0,-13 c -5.1,-2.5 -6.2,-3.2 -6,-11 1.5,-1.7 1,-5.8 1,-9 l 0,-22 c -5,0.5 -6.6,3.2 -10,5 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 l -7,0 0,1 -2,0 c -3.8,1.9 -4.1,3.6 -10,4 -1.7,-2 -4.4,-3 -6,-5 -3,0.7 -6,1.3 -9,2 -1.3,1.7 -2.7,3.3 -4,5 l -1,-1 c -2.4,-1 -3.2,-1.1 -4,-4 -1,-0.3 -2,-0.7 -3,-1 l 0,-1 -2,0 0,-1 c -1,0.3 -2,0.7 -3,1 l 0,-19 c -5.2,-3 -8.7,-10.3 -15,-12 l 0,1 -9,3 c -2.3,-2.7 -4.7,-5.3 -7,-8 0.3,-4.7 0.7,-9.3 1,-14 l -1,0 0,-2 c -1,-0.7 -2,-1.3 -3,-2 l 0,-1 c -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -1.9,-2.6 -3.8,-1.7 -5,-6 -4.3,1 -8.7,2 -13,3 -1.9,-3.3 -4.9,-4.8 -6,-9 l 1,0 0,-6 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.7 -0.7,-3.3 -1,-5 -4.7,0.3 -9.3,0.7 -14,1 -0.8,-3.2 -4.3,-6.3 -3,-11 l 1,0 0,-5 1,0 0,-2 1,0 0,-5 1,0 0,-5 1,0 c 0.9,-3.2 -1.8,-9.7 -3,-11 -1.9,2.1 -0.5,0 -3,1 -3.9,1.5 -6.9,1.4 -9,-2 l -1,0 0,-3 -1,0 0,-3 -1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 0,-3 1,0 c 0.7,-3 1.3,-6 2,-9 -3.7,0.3 -5.5,1.5 -8,-1 -1.1,-1.1 -0.4,0 -1,-2 -3.7,-4 2.4,-17.5 3,-22 l -2,0 c -1.8,-1.2 -1.1,-8 -1,-11 l 1,0 0,-4 1,0 c 0.7,-3 1.3,-6 2,-9 -0.7,-0.3 -1.3,-0.7 -2,-1 0.3,-1 0.7,-2 1,-3 -0.4,-1.4 -1.9,-6.1 -1,-9 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l -2,0 7.03178,-17.61653 0.647244,-3.61652 26.132415,0.40255 -1.710803,3.11334 L 49.8,2.5 c -0.3,2 0.1,4 -0.3,6 -4,10.7 -0.5,25.7 3,35 0.3,2.3 0.7,4.7 1,7 l 1,0 0,5 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,4 c 0.7,0.3 1.3,0.7 2,1 l 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,3 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,2 1,0 0,2 2,2 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 1,0 c 0.3,1 0.7,2 1,3 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 c 2.3,2 4.7,4 7,6 l 0,2 c 4.3,4 8.7,8 13,12 3.2,3.2 3.8,6.7 10,7 0.8,-1.2 0,0 1,-1 1,-1 -0.2,-0.3 1,-1 l 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.7,-1 1.3,-2 2,-3 3.6,-2 4.4,1.5 6,-4 z"]}]};config.windowConfig={};var Travian=new (function Travian(){})();Travian.app={directives:{}};Travian.ServiceArr=[];Travian.Service={};Travian.Interceptor={};Travian.Directive={};Travian.Filter={};Travian.txt={};Travian.locale={};Travian.htmlFilters={};Travian.datetimeFormats={};Travian.http={};Travian.tick={};Travian.Config=Travian.Config||{};Travian.Globals=Travian.Globals||{};var module={exports:{}};Travian.htmlFilters.i18ndt='<span i18ndt="{{_?_}}" format="mediumTime"></span>';Travian.htmlFilters.i18ndtshort='<span i18ndt="{{_?_}}" format="short"></span>';Travian.htmlFilters.i18ndtdate='<span i18ndt="{{_?_}}" format="shortDate"></span>';Travian.htmlFilters.i18ndtMediumDate='<span i18ndt="{{_?_}}" format="mediumDate"></span>';Travian.htmlFilters.i18ndtOffset='<span i18ndt="{{_?_}}" format="mediumTime" fast-offset="true"></span>';Travian.htmlFilters.countdown='<span countdown="{{_?_}}"></span>';Travian.htmlFilters.bold={tag:"b"};Travian.htmlFilters.r="<br />";Travian.htmlFilters.itemStart="<li>";Travian.htmlFilters.itemEnd="</li>";Travian.htmlFilters.playerLink='<player-link class="truncated" playerId="{{_?_}}" playerName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></player-link>';Travian.htmlFilters.villageLink='<village-link class="truncated" villageId="{{_?_}}" villageName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></village-link>';Travian.htmlFilters.allianceLink='<alliance-link class="truncated" allianceId="{{_?_}}" allianceName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></alliance-link>';Travian.htmlFilters.troopLink='<troop-link trooptype="{{_?_}}"></troop-link>';Travian.htmlFilters.buildingLink='<building-link building-type="{{_?_}}"></building-link>';Travian.htmlFilters.icon='<i class="icon {{_?_}}"></i>';Travian.htmlFilters.coords='<coordinates x="{{_?_}}" y="{{_?_}}"></coordinates>';Travian.htmlFilters.plainCoords='<coordinates x="{{_?_}}" y="{{_?_}}" nolink="true"></coordinates>';Travian.htmlFilters.HHMMSS="{{_?_|HHMMSS}}";Travian.htmlFilters.HHMM="{{_?_|HHMM}}";Travian.htmlFilters.fromNow='<span i18ndt="{{_?_}}" relative="from"></span>';Travian.htmlFilters.truncate='<span class="truncated">{{_?_}}</span>';Travian.htmlFilters.percent="{{_?_| bidiNumber:'percent':false:false}}";Travian.htmlFilters.signedPercent="{{_?_| bidiNumber:'percent':true:false}}";Travian.htmlFilters.signed="{{_?_| bidiNumber:'':true:false}}";Travian.htmlFilters.ratio='<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_"></span>';Travian.htmlFilters.ratioStyled='<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_:true"></span>';Travian.htmlFilters.translate='<translate options="{{::_?_}}">?</translate>';Travian.htmlFilters["short"]="{{::_?_|shortBigNumber:_?_}}";Travian.datetimeFormats={0:{fullDate:"EEEE, d. MMMM y",longDate:"d. MMMM y",medium:"dd.MM.yyyy HH:mm:ss",mediumDate:"dd.MM.yyyy",mediumTime:"HH:mm:ss","short":"dd.MM.yy HH:mm",shortDate:"dd.MM.yy",shortTime:"HH:mm",veryShort:"dd.MM. | HH:mm"},1:{fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MM/dd/yyyy h:mm:ss a",mediumDate:"MM/dd/yyyy",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a",veryShort:"MM/dd | HH:mm"},2:{fullDate:"EEEE, d MMMM y",longDate:"d MMMM y",medium:"dd/MM/yyyy h:mm:ss a",mediumDate:"dd/MM/yyyy",mediumTime:"h:mm:ss a","short":"dd/MM/yy h:mm a",shortDate:"dd/MM/yy",shortTime:"h:mm a",veryShort:"dd/MM | h:mm a"},3:{fullDate:"EEEE, y MMMM dd",longDate:"y MMMM d",medium:"yyyy/MM/dd HH:mm:ss",mediumDate:"yyyy/MM/dd",mediumTime:"HH:mm:ss","short":"yyyy/MM/dd HH:mm",shortDate:"yyyy/MM/dd",shortTime:"HH:mm",veryShort:"MM/dd | HH:mm"}};var charCustomisations={female:{color:[0,1,2,3,4,5,6,7],ear:["0","1","10","11","2","3","4","5","6","7","8","9"],eye:["0","1","10","11","2","3","4","5","6","7","8","9"],eyebrow:["0","1","10","11","2","3","4","5","6","7","8","9"],hair:["0","1","10","11","2","3","4","5","6","7","8","9"],mouth:["0","1","10","11","2","3","4","5","6","7","8","9"],nose:["0","1","10","11","2","3","4","5","6","7","8","9"]},male:{color:[0,1,2,3,4,5,6,7],beard:["0","1","10","2","3","4","5","6","7","8","9"],ear:["0","1","10","11","2","3","4","5","6","7","8","9"],eye:["0","1","10","11","2","3","4","5","6","7","8","9"],eyebrow:["0","1","10","11","2","3","4","5","6","7","8","9"],hair:["0","1","10","11","2","3","4","5","6","7","8","9"],mouth:["0","1","10","11","2","3","4","5","6","7","8","9"],nose:["0","1","10","11","2","3","4","5","6","7","8","9"]}};String.prototype.trim=function(d){var e=String(this);var b,a=0,c=0;e+="";if(!d){b=" \n\r\t\f\x0b\xa0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000"}else{d+="";b=d.replace(/([\[\]\(\)\.\?\/\*\{\}\+\$\^\:])/g,"$1")}a=e.length;for(c=0;c<a;c++){if(b.indexOf(e.charAt(c))===-1){e=e.substring(c);break}}a=e.length;for(c=a-1;c>=0;c--){if(b.indexOf(e.charAt(c))===-1){e=e.substring(0,c+1);break}}return b.indexOf(e.charAt(0))===-1?e:""};function array_merge_recursive(d,c){for(var b in c){try{if(c[b].constructor==Object){d[b]=array_merge_recursive(d[b],c[b])}else{d[b]=c[b]}}catch(a){d[b]=c[b]}}return d}Number.prototype.toHHMMSS=function(b){var c=Math.max(0,parseInt(this));var a=Math.floor(c/3600);var d=Math.floor((c-(a*3600))/60);var f=c-(a*3600)-(d*60);if(a<10){a="0"+a}if(d<10){d="0"+d}var e=a+":"+d;if(!b){if(f<10){f="0"+f}e+=":"+f}return e};Number.prototype.digitLength=function(){return(Math.floor(Math.log(this)/Math.LN10)+1)};String.prototype.ucfirst=function(){var a=this.charAt(0).toUpperCase();return a+this.substr(1)};var keyValueToArray=function(e,c,d){var a=[];for(var b in e){var f={};f[c]=b;f[d]=e[b];a.push(f)}return a};function uniqid(c){if(typeof c==="undefined"){c=""}var b;var a=function(d,e){d=parseInt(d,10).toString(16);if(e<d.length){return d.slice(d.length-e)}if(e>d.length){return Array(1+(e-d.length)).join("0")+d}return d};if(!this.t5){this.t5={}}if(!this.t5.uniqidSeed){this.t5.uniqidSeed=Math.floor(Math.random()*123456789)}this.t5.uniqidSeed++;b=c;b+=a(parseInt(new Date().getTime()/1000,10),8);b+=a(this.t5.uniqidSeed,5);return b};

// Input 0
function w() {
  return function() {
  }
}
function ha(a) {
  return function() {
    return a
  }
}
window.getServerUrl = function() {
  "undefined" == typeof config.SERVER_ENV && (config.SERVER_ENV = "devPHP");
  if("devPHP" === config.SERVER_ENV) {
    return config.devPHPUrl
  }
  if("live" === config.SERVER_ENV) {
    return config.liveUrl
  }
};
window.getQuery = function(a, c, b, l) {
  var h = {};
  h.controller = a;
  h.action = c;
  h.params = b;
  l && (h.session = l);
  return h
};
window.getStdTimezoneOffset = function() {
  return Math.max((new Date((new Date).getFullYear(), 0, 1)).getTimezoneOffset(), (new Date((new Date).getFullYear(), 6, 1)).getTimezoneOffset())
};
window.xy2id = function(a, c) {
  return a + 16384 + 32768 * (c + 16384)
};
window.id2xy = function(a) {
  return 0 > a || null === a ? new V(0, 0) : new V(a % 32768 - 16384, Math.floor(a / 32768) - 16384)
};
window.eliminateDuplicates = function(a) {
  for(var c = [], b = {}, l = 0;l < a.length;l++) {
    b.hasOwnProperty(a[l]) || (b[a[l]] = !0, c.push(a[l]))
  }
  return c
};
window.computedStyle = function(a, c) {
  var b = "";
  document.defaultView && document.defaultView.getComputedStyle ? b = document.defaultView.getComputedStyle(a, "").getPropertyValue(c) : a.currentStyle && (c = c.replace(/\-(\w)/g, function(a, b) {
    return b.toUpperCase()
  }), b = a.currentStyle[c]);
  return b
};
window.multiObserve = function(a, c, b) {
  for(var l = 0, h = 0;h < c.length;h++) {
    a.$observe(c[h], function(a) {
      "undefined" != typeof a && "" != a && l++;
      l >= c.length && b()
    })
  }
};
window.unitIdToNr = function(a) {
  return 1 + (a - 1) % 10
};
window.nrToUnitId = function(a, c) {
  return 10 * +(c - 1) + +a
};
window.getResourceAllocation = function(a) {
  return{wood:a.substring(0, 1), clay:a.substring(1, 2), iron:a.substring(2, 3), crop:a.substring(3)}
};
window.bytesToSize = function(a, c) {
  return 0 <= a && 1024 > a ? a + " B" : 1024 <= a && 1048576 > a ? (a / 1024).toFixed(c) + " KB" : 1048576 <= a && 1073741824 > a ? (a / 1048576).toFixed(c) + " MB" : 1073741824 <= a && 1099511627776 > a ? (a / 1073741824).toFixed(c) + " GB" : 1099511627776 <= a ? (a / 1099511627776).toFixed(c) + " TB" : a + " B"
};
window.getUrlVars = function() {
  var a = [];
  if(-1 == window.location.href.indexOf("?")) {
    return a
  }
  var c = window.location.href.slice(window.location.href.indexOf("?") + 1);
  0 <= c.indexOf("#") && (c = c.slice(0, c.indexOf("#")));
  for(var c = c.split("&"), b = 0, l = c.length;b < l;b++) {
    var h = c[b].split("=");
    1 == h.length && (h[1] = "");
    a[h[0]] = h[1]
  }
  return a
};
window.getUrlVar = function(a) {
  var c = getUrlVars();
  return"undefined" != typeof c[a] ? c[a] : null
};
window.getDirection = function() {
  return config.direction
};
window.getLanguage = function() {
  return config.language
};
window.getReadingDirectionFrom = function() {
  return"rtl" == config.direction ? "right" : "left"
};
window.getReadingDirectionTo = function() {
  return"rtl" == config.direction ? "left" : "right"
};
window.console || (console = {log:w()});
window.getUnitTribeAndUnitNumber = function(a) {
  a = String(a).split(",");
  var c = -1, b;
  if(1 == a.length) {
    var l = parseInt(a[0]), c = Math.floor((l - 1) / 10) + 1;
    b = (l - 1) % 10 + 1
  }else {
    2 == a.length && (c = parseInt(a[0]), b = parseInt(a[1]), l = 10 * (c - 1) + b)
  }
  return{tribeId:c, troopId:b, unitNumber:l, tribeName:{1:"roman", 2:"teuton", 3:"gaul", 4:"nature", 5:"natar"}[c]}
};
var ja = null, ka = [];
window.doAngularApply = function() {
  Travian.rootScope.$$phase || Travian.rootScope.$apply(function() {
    for(var a = 0;a < ka.length;a++) {
      ka[a]()
    }
    ka = []
  });
  ja = null
};
window.requestAngularApply = function(a) {
  null == ja && (ja = window.setTimeout(doAngularApply, 50));
  "function" == typeof a && ka.push(a)
};
window.getAngularService = function(a) {
  return angular.element(document.body).injector().get(a)
};
window.getLocale = function(a) {
  var c = {"default":"en_US", ae:"ar_AE", br:"pt_BR", cl:"es_CL", cs:"cs_CZ", cz:"cs_CZ", de:"de_DE", da:"da_DK", dk:"da_DK", ee:"et_EE", en:"en_US", es:"es_ES", et:"et_EE", fi:"fi_FI", fr:"fr_FR", gb:"en_GB", hu:"hu_HU", id:"id_ID", it:"it_IT", lt:"lt_LT", lv:"lv_LV", nl:"nl_NL", no:"no_NO", pl:"pl_PL", pt:"pt_PT", ro:"ro_RO", ru:"ru_RU", sk:"sk_SK", si:"sl_SI", sl:"sl_SI", se:"sv_SE", tr:"tr_TR", ua:"uk_UA", uk:"en_GB", us:"en_US"};
  return"undefined" != typeof c[a] ? c[a] : c["default"]
};
window.getLocaleLanguage = function(a) {
  return a.toLowerCase().split("_")[0]
};
window.getLocaleRegion = function(a) {
  return a.toLowerCase().split("_")[1]
};
window.changeLanguage = function(a) {
  "undefined" != typeof config.live && config.live ? $.getScript(Travian.Config.cdnPrefix + "lang/" + a + ".js?v=" + Travian.Config.apiVersion, function() {
    Travian.gf.set(a);
    $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "_quests_version" + Travian.Config.questVersion + ".js?v=" + Travian.Config.apiVersion, function() {
      Travian.rootScope.$broadcast("newTranslation")
    })
  }) : $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "/lang.js", function() {
    Travian.gf.set(a);
    $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "/quests_version" + Travian.Config.questVersion + ".js", function() {
      $.getScript(Travian.Config.cdnPrefix + "lang/" + a + "/inGameHelp.js", function() {
        Travian.rootScope.$broadcast("newTranslation")
      })
    })
  })
};
window.escapeHtmlTags = function(a) {
  return a.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
};
window.getOuterHeightWithMargin = function(a) {
  if(null == a || 0 == a.length) {
    return 0
  }
  for(var c = 0, b = 0;b < a.length;b++) {
    var l = a[b], h = getComputedStyle(l), c = c + (l.offsetHeight + parseInt(h.getPropertyValue("margin-top")) + parseInt(h.getPropertyValue("margin-bottom")))
  }
  return c
};
window.copyTextToClipboard = function(a) {
  var c = document.createElement("textarea");
  c.style.position = "fixed";
  c.style.top = 0;
  c.style.left = 0;
  c.style.width = "2em";
  c.style.height = "2em";
  c.style.padding = 0;
  c.style.border = "none";
  c.style.outline = "none";
  c.style.di = "none";
  c.style.background = "transparent";
  c.value = a;
  document.body.appendChild(c);
  c.select();
  try {
    document.execCommand("copy")
  }catch(b) {
  }
  document.body.removeChild(c)
};
window.getParent = function(a) {
  if(!a) {
    return angular.lf(this[0].parentNode)
  }
  a = [].slice.call(document.querySelectorAll(a));
  for(var c = this[0], b;"HTML" !== c.nodeName;) {
    c = c.parentNode, -1 !== a.indexOf(c) && (b = c, c = document.documentElement)
  }
  return angular.lf(b)
};
window.countWatchers = function(a, c) {
  function b(e, c) {
    var f = 0;
    angular.forEach(["$scope", "$isolateScope"], function(a) {
      e.data() && e.data().hasOwnProperty(a) && angular.forEach(e.data()[a].$h, function(a) {
        h.push(a);
        f++
      })
    });
    angular.forEach(e.children(), function(a) {
      f += b(angular.element(a), c + 1)
    });
    c == a && 0 < f && console.log("Depth " + c + ", watches: " + f + " scope: ", e);
    return f
  }
  void 0 === a && (a = -1);
  var l = null, l = c ? angular.element(document.getElementById(c)) : angular.element(document.getElementsByTagName("body")), h = [];
  b(l, 0);
  var g = [];
  angular.forEach(h, function(a) {
    0 > g.indexOf(a) && g.push(a)
  });
  console.log(g.length)
};
window.getTotalElementHeight = function(a, c) {
  var b = $(a), l = $(a).after("<div></div>").next();
  l.html(c.replace(/\n/g, "<br>") + ".");
  l.css("line-height", b.css("line-height"));
  l.css("padding-left", b.css("padding-left"));
  l.css("padding-right", b.css("padding-right"));
  l.css("padding-top", b.css("padding-top"));
  l.css("padding-bottom", b.css("padding-bottom"));
  l.css("border-width", b.css("border-left-width"));
  l.css("border-style", b.css("border-left-style"));
  l.css("border-color", b.css("border-left-color"));
  l.css("white-space", b.css("white-space"));
  l.css("visibility", "hidden");
  l.css("height", "auto");
  $.browser.msie && l.css("padding-right", parseInt(b.css("padding-right")) + 4 + "px");
  b = l.height();
  l.remove();
  return b
};
String.prototype.trim = function(a) {
  var c = String(this), b = 0, l = 0, c = c + "";
  a = a ? (a + "").replace(/([\[\]\(\)\.\?\/\*\{\}\+\$\^\:])/g, "$1") : " \n\r\t\f\x0B\u00a0\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u200b\u2028\u2029\u3000";
  b = c.length;
  for(l = 0;l < b;l++) {
    if(-1 === a.indexOf(c.charAt(l))) {
      c = c.substring(l);
      break
    }
  }
  b = c.length;
  for(l = b - 1;0 <= l;l--) {
    if(-1 === a.indexOf(c.charAt(l))) {
      c = c.substring(0, l + 1);
      break
    }
  }
  return-1 === a.indexOf(c.charAt(0)) ? c : ""
};
function la(a, c) {
  var b = Math.max(0, parseInt(a)), l = Math.floor(b / 3600), h = Math.floor((b - 3600 * l) / 60), b = b - 3600 * l - 60 * h;
  10 > l && (l = "0" + l);
  10 > h && (h = "0" + h);
  l = l + ":" + h;
  c || (10 > b && (b = "0" + b), l += ":" + b);
  return l
}
function na(a) {
  function c(a, c) {
    a = parseInt(a, 10).toString(16);
    return c < a.length ? a.slice(a.length - c) : c > a.length ? Array(1 + (c - a.length)).join("0") + a : a
  }
  "undefined" === typeof a && (a = "");
  this.t5 || (this.t5 = {});
  this.t5.Ad || (this.t5.Ad = Math.floor(123456789 * Math.random()));
  this.t5.Ad++;
  a += c(parseInt((new Date).getTime() / 1E3, 10), 8);
  return a += c(this.t5.Ad, 5)
}
var Travian = new (w());
Travian.app = {Zd:{}};
Travian.ServiceArr = [];
Travian.Service = {};
Travian.Interceptor = {};
Travian.Directive = {};
Travian.Filter = {};
Travian.txt = {};
Travian.locale = {};
Travian.htmlFilters = {};
Travian.datetimeFormats = {};
Travian.http = {};
Travian.tick = {};
Travian.Config = Travian.Config || {};
Travian.Globals = Travian.Globals || {};
config.village = {};
config.village.locationPos = [{x:null, y:null}, {x:381, y:307, z:1}, {x:518, y:238, z:1}, {x:691, y:269, z:1}, {x:272, y:370, z:1}, {x:508, y:351, z:1}, {x:602, y:336, z:1}, {x:803, y:329, z:1}, {x:199, y:485, z:1}, {x:312, y:472, z:1}, {x:739, y:394, z:1}, {x:918, y:405, z:1}, {x:253, y:564, z:1}, {x:376, y:513, z:1}, {x:548, y:568}, {x:795, y:502, z:1}, {x:433, y:605, z:1}, {x:559, y:666, z:1}, {x:680, y:604, z:1}, {x:260, y:362, z:5}, {x:383, y:510, z:7}, {x:190, y:443, z:6}, {x:181, y:557, z:7}, 
{x:451, y:421, z:6}, {x:402, y:311, z:3}, {x:519, y:256, z:2}, {x:658, y:278, z:3}, {x:608, y:381, z:5}, {x:789, y:292, z:4}, {x:848, y:384, z:5}, {x:951, y:432, z:6}, {x:964, y:561, z:7}, {x:726, y:526, z:6}, {x:509, y:756, z:0, z2:43}, {x:859, y:622, z:8}, {x:542, y:572, z:8}, {x:266, y:622, z:8}, {x:392, y:689, z:9}, {x:663, y:652, z:9}, {x:772, y:710, z:10}, {x:535, y:688, z:10}, {x:60, y:471, z:1}, {x:1083, y:821, z:44}, {x:952, y:860, z:45}];
config.village.worldWonderPos = {x:533, y:598, z:6};
config.village.buildingPoly = {0:[66, 12, 75, 13, 82, 14, 84, 15, 86, 16, 87, 17, 89, 18, 90, 19, 91, 20, 94, 21, 95, 22, 95, 23, 95, 24, 96, 25, 96, 26, 97, 27, 98, 28, 98, 29, 99, 30, 100, 31, 101, 32, 101, 33, 101, 34, 101, 35, 101, 36, 101, 37, 101, 38, 101, 39, 101, 40, 101, 41, 101, 42, 101, 43, 101, 44, 101, 45, 100, 46, 100, 47, 100, 48, 100, 49, 100, 50, 100, 51, 100, 52, 100, 53, 99, 54, 99, 55, 99, 56, 99, 57, 98, 58, 98, 59, 98, 60, 97, 61, 96, 62, 96, 63, 94, 64, 93, 65, 92, 66, 90, 
67, 89, 68, 88, 69, 87, 70, 85, 71, 82, 72, 80, 73, 76, 74, 67, 75, 63, 75, 43, 74, 39, 73, 37, 72, 34, 71, 32, 70, 30, 69, 29, 68, 27, 67, 26, 66, 25, 65, 24, 64, 23, 63, 22, 62, 21, 61, 21, 60, 20, 59, 19, 58, 19, 57, 18, 56, 18, 55, 18, 54, 17, 53, 17, 52, 16, 51, 16, 50, 15, 49, 15, 48, 15, 47, 15, 46, 15, 45, 15, 44, 15, 43, 15, 42, 15, 41, 16, 40, 16, 39, 16, 38, 16, 37, 17, 36, 17, 35, 17, 34, 18, 33, 19, 32, 19, 31, 19, 30, 19, 29, 19, 28, 20, 27, 21, 26, 23, 25, 23, 24, 24, 23, 26, 22, 27, 
21, 28, 20, 30, 19, 33, 18, 35, 17, 37, 16, 40, 15, 46, 14, 50, 13, 56, 12, 66, 12], 1:[33, 1, 34, 2, 36, 3, 36, 4, 36, 5, 36, 6, 70, 7, 109, 8, 110, 9, 112, 10, 112, 11, 112, 12, 112, 13, 112, 14, 111, 15, 110, 16, 110, 17, 107, 18, 107, 19, 108, 20, 116, 21, 118, 22, 119, 23, 119, 24, 119, 25, 119, 26, 119, 27, 118, 28, 118, 29, 116, 30, 117, 31, 118, 32, 118, 33, 118, 34, 117, 35, 111, 36, 111, 37, 112, 38, 112, 39, 112, 40, 113, 41, 113, 42, 113, 43, 114, 44, 114, 45, 113, 46, 112, 47, 111, 48, 
113, 49, 114, 50, 114, 51, 114, 52, 114, 53, 113, 54, 113, 55, 113, 56, 112, 57, 111, 58, 111, 59, 108, 60, 110, 61, 111, 62, 111, 63, 111, 64, 111, 65, 110, 66, 103, 67, 103, 68, 103, 69, 103, 70, 102, 71, 102, 72, 101, 73, 106, 74, 108, 75, 109, 76, 116, 77, 117, 78, 119, 79, 119, 80, 119, 81, 119, 82, 119, 83, 118, 84, 117, 85, 117, 86, 114, 87, 116, 88, 117, 89, 117, 90, 117, 91, 117, 92, 117, 93, 115, 94, 112, 95, 112, 96, 112, 97, 112, 98, 111, 99, 111, 100, 109, 101, 111, 102, 112, 103, 112, 
104, 112, 105, 111, 106, 110, 107, 61, 107, 19, 106, 18, 105, 17, 104, 17, 103, 6, 102, 5, 101, 4, 100, 4, 99, 4, 98, 5, 97, 5, 96, 2, 95, 1, 94, 1, 93, 1, 92, 1, 91, 1, 90, 2, 89, 3, 88, 5, 87, 7, 86, 6, 85, 5, 84, 6, 83, 6, 82, 7, 81, 7, 80, 7, 79, 7, 78, 6, 77, 6, 76, 6, 75, 5, 74, 6, 73, 6, 72, 5, 71, 4, 70, 2, 69, 1, 68, 1, 67, 1, 66, 1, 65, 1, 64, 2, 63, 3, 62, 5, 61, 6, 60, 6, 59, 6, 58, 6, 57, 4, 56, 3, 55, 2, 54, 3, 53, 3, 52, 4, 51, 4, 50, 4, 49, 4, 48, 5, 47, 5, 46, 5, 45, 6, 44, 6, 43, 
7, 42, 7, 41, 9, 40, 8, 39, 7, 38, 7, 37, 8, 36, 6, 35, 5, 34, 4, 33, 5, 32, 5, 31, 6, 30, 6, 29, 6, 28, 6, 27, 7, 26, 7, 25, 7, 24, 8, 23, 8, 22, 9, 21, 9, 20, 13, 19, 13, 18, 14, 17, 14, 16, 15, 15, 15, 14, 27, 13, 27, 12, 26, 11, 25, 10, 23, 9, 22, 8, 22, 7, 22, 6, 22, 5, 22, 4, 23, 3, 24, 2, 26, 1, 33, 1], 2:[70, 3, 72, 4, 72, 5, 74, 6, 79, 7, 80, 8, 83, 9, 86, 10, 87, 11, 87, 12, 86, 13, 86, 14, 87, 15, 89, 16, 89, 17, 89, 18, 89, 19, 91, 20, 94, 21, 95, 22, 94, 23, 94, 24, 95, 25, 95, 26, 98, 
27, 100, 28, 101, 29, 103, 30, 104, 31, 105, 32, 105, 33, 105, 34, 106, 35, 107, 36, 109, 37, 111, 38, 113, 39, 115, 40, 118, 41, 117, 42, 117, 43, 117, 44, 119, 45, 119, 46, 117, 47, 115, 48, 113, 49, 112, 50, 110, 51, 109, 52, 109, 53, 108, 54, 108, 55, 105, 56, 105, 57, 105, 58, 105, 59, 105, 60, 107, 61, 106, 62, 106, 63, 106, 64, 104, 65, 102, 66, 100, 67, 101, 68, 101, 69, 89, 70, 81, 71, 66, 72, 43, 73, 44, 74, 42, 74, 40, 73, 38, 72, 32, 71, 29, 70, 26, 69, 21, 68, 20, 67, 19, 66, 19, 65, 
18, 64, 17, 63, 16, 62, 16, 61, 14, 60, 13, 59, 12, 58, 11, 57, 11, 56, 10, 55, 9, 54, 8, 53, 8, 52, 8, 51, 9, 50, 12, 49, 13, 48, 17, 47, 18, 46, 20, 45, 21, 44, 21, 43, 21, 42, 20, 41, 20, 40, 23, 39, 26, 38, 17, 37, 16, 36, 16, 35, 16, 34, 18, 33, 18, 32, 20, 31, 28, 30, 28, 29, 15, 28, 12, 27, 7, 26, 3, 25, 2, 24, 1, 23, 1, 22, 1, 21, 2, 20, 2, 19, 3, 18, 5, 17, 7, 16, 8, 15, 10, 14, 41, 13, 42, 12, 43, 11, 44, 10, 45, 9, 47, 8, 50, 7, 53, 6, 61, 5, 64, 4, 66, 3, 70, 3], 3:[70, 1, 70, 2, 71, 
3, 71, 4, 72, 5, 73, 6, 73, 7, 74, 8, 74, 9, 74, 10, 74, 11, 74, 12, 75, 13, 75, 14, 76, 15, 76, 16, 77, 17, 77, 18, 78, 19, 79, 20, 79, 21, 81, 22, 82, 23, 82, 24, 83, 25, 83, 26, 84, 27, 85, 28, 96, 29, 97, 30, 98, 31, 99, 32, 100, 33, 101, 34, 102, 35, 103, 36, 104, 37, 104, 38, 105, 39, 107, 40, 108, 41, 110, 42, 111, 43, 112, 44, 113, 45, 113, 46, 114, 47, 114, 48, 115, 49, 116, 50, 117, 51, 117, 52, 117, 53, 117, 54, 117, 55, 116, 56, 115, 57, 116, 58, 116, 59, 115, 60, 115, 61, 114, 62, 114, 
63, 114, 64, 114, 65, 116, 66, 116, 67, 117, 68, 117, 69, 117, 70, 118, 71, 118, 72, 119, 73, 118, 74, 118, 75, 118, 76, 118, 77, 118, 78, 116, 79, 114, 80, 112, 81, 112, 82, 112, 83, 111, 84, 110, 85, 108, 86, 107, 87, 107, 88, 108, 89, 73, 90, 73, 91, 34, 92, 31, 92, 29, 91, 28, 90, 28, 89, 15, 88, 15, 87, 13, 86, 11, 85, 9, 84, 9, 83, 7, 82, 6, 81, 5, 80, 4, 79, 5, 78, 5, 77, 6, 76, 6, 75, 6, 74, 4, 73, 4, 72, 4, 71, 4, 70, 5, 69, 1, 68, 1, 67, 0, 66, 1, 65, 1, 64, 1, 63, 2, 62, 3, 61, 2, 60, 
0, 59, 0, 58, 0, 57, 3, 56, 8, 55, 8, 54, 9, 53, 12, 52, 5, 51, 6, 50, 7, 49, 7, 48, 8, 47, 9, 46, 9, 45, 8, 44, 9, 43, 9, 42, 9, 41, 10, 40, 10, 39, 10, 38, 11, 37, 12, 36, 13, 35, 14, 34, 15, 33, 17, 32, 18, 31, 18, 30, 19, 29, 19, 28, 20, 27, 20, 26, 20, 25, 21, 24, 21, 23, 22, 22, 23, 21, 25, 20, 26, 19, 27, 18, 28, 17, 28, 16, 29, 15, 30, 14, 31, 13, 31, 12, 32, 11, 33, 10, 33, 9, 34, 8, 35, 7, 36, 6, 38, 5, 39, 4, 40, 3, 41, 2, 42, 1, 70, 1], 4:[83, 3, 83, 4, 84, 5, 87, 6, 88, 7, 90, 8, 91, 
9, 92, 10, 94, 11, 95, 12, 96, 13, 97, 14, 98, 15, 98, 16, 99, 17, 99, 18, 100, 19, 100, 20, 101, 21, 101, 22, 102, 23, 102, 24, 103, 25, 103, 26, 103, 27, 104, 28, 104, 29, 108, 30, 108, 31, 108, 32, 109, 33, 109, 34, 110, 35, 110, 36, 111, 37, 111, 38, 112, 39, 113, 40, 113, 41, 114, 42, 114, 43, 115, 44, 116, 45, 117, 46, 117, 47, 119, 48, 119, 49, 119, 50, 119, 51, 119, 52, 118, 53, 118, 54, 118, 55, 118, 56, 118, 57, 118, 58, 118, 59, 118, 60, 117, 61, 116, 62, 115, 63, 115, 64, 117, 65, 118, 
66, 118, 67, 117, 68, 117, 69, 114, 70, 114, 71, 114, 72, 114, 73, 115, 74, 116, 75, 116, 76, 116, 77, 116, 78, 116, 79, 117, 80, 118, 81, 117, 82, 117, 83, 115, 84, 115, 85, 110, 86, 111, 87, 111, 88, 111, 89, 64, 90, 58, 90, 55, 89, 53, 88, 31, 87, 27, 86, 26, 85, 25, 84, 24, 83, 24, 82, 24, 81, 23, 80, 21, 79, 20, 78, 19, 77, 19, 76, 18, 75, 17, 74, 16, 73, 15, 72, 14, 71, 13, 70, 12, 69, 12, 68, 12, 67, 11, 66, 11, 65, 11, 64, 11, 63, 11, 62, 11, 61, 11, 60, 11, 59, 11, 58, 11, 57, 12, 56, 12, 
55, 12, 54, 13, 53, 14, 52, 15, 51, 17, 50, 17, 49, 5, 48, 4, 47, 0, 46, 0, 45, 0, 44, 0, 43, 0, 42, 1, 41, 2, 40, 3, 39, 4, 38, 1, 37, 2, 36, 3, 35, 2, 34, 3, 33, 2, 32, 2, 31, 4, 30, 5, 29, 5, 28, 6, 27, 8, 26, 8, 25, 8, 24, 9, 23, 11, 22, 11, 21, 29, 20, 29, 19, 30, 18, 30, 17, 30, 16, 31, 15, 32, 14, 32, 13, 32, 12, 33, 11, 34, 10, 35, 9, 36, 8, 37, 7, 41, 6, 44, 5, 50, 4, 52, 3, 83, 3], 5:[85, 18, 85, 19, 86, 20, 86, 21, 87, 22, 87, 23, 88, 24, 88, 25, 89, 26, 89, 27, 89, 28, 90, 29, 90, 30, 
91, 31, 92, 32, 92, 33, 93, 34, 94, 35, 94, 36, 95, 37, 96, 38, 96, 39, 97, 40, 98, 41, 98, 42, 99, 43, 100, 44, 101, 45, 120, 46, 125, 47, 125, 48, 126, 49, 127, 50, 127, 51, 128, 52, 128, 53, 128, 54, 127, 55, 126, 56, 125, 57, 124, 58, 125, 59, 126, 60, 126, 61, 126, 62, 126, 63, 126, 64, 125, 65, 124, 66, 122, 67, 123, 68, 123, 69, 124, 70, 124, 71, 123, 72, 123, 73, 122, 74, 117, 75, 119, 76, 119, 77, 124, 78, 124, 79, 124, 80, 124, 81, 124, 82, 125, 83, 124, 84, 124, 85, 123, 86, 122, 87, 117, 
88, 119, 89, 120, 90, 122, 91, 123, 92, 124, 93, 124, 94, 122, 95, 120, 96, 125, 97, 126, 98, 127, 99, 127, 100, 127, 101, 128, 102, 128, 103, 128, 104, 126, 105, 124, 106, 124, 107, 125, 108, 126, 109, 126, 110, 127, 111, 128, 112, 127, 113, 127, 114, 126, 115, 124, 116, 117, 117, 118, 118, 119, 119, 119, 120, 120, 121, 121, 122, 122, 123, 122, 124, 121, 125, 120, 126, 119, 127, 92, 128, 92, 129, 94, 130, 97, 131, 98, 132, 98, 133, 98, 134, 97, 135, 91, 136, 90, 137, 88, 138, 79, 139, 65, 140, 64, 
141, 63, 142, 61, 143, 57, 143, 57, 142, 53, 141, 52, 140, 52, 139, 52, 138, 50, 137, 50, 136, 50, 135, 50, 134, 50, 133, 51, 132, 52, 131, 53, 130, 59, 129, 60, 128, 61, 127, 62, 126, 62, 125, 24, 124, 22, 123, 21, 122, 20, 121, 20, 120, 20, 119, 20, 118, 20, 117, 20, 116, 21, 115, 22, 114, 24, 113, 26, 112, 28, 111, 30, 110, 33, 109, 35, 108, 30, 107, 28, 106, 26, 105, 25, 104, 19, 103, 18, 102, 17, 101, 17, 100, 17, 99, 17, 98, 17, 97, 18, 96, 20, 95, 21, 94, 21, 93, 21, 92, 21, 91, 22, 90, 23, 
89, 25, 88, 29, 87, 30, 86, 31, 85, 35, 84, 33, 83, 33, 82, 33, 81, 34, 80, 36, 79, 18, 78, 17, 77, 17, 76, 16, 75, 16, 74, 17, 73, 18, 72, 21, 71, 18, 70, 17, 69, 17, 68, 16, 67, 16, 66, 17, 65, 21, 64, 29, 63, 29, 62, 29, 61, 29, 60, 29, 59, 29, 58, 29, 57, 29, 56, 28, 55, 27, 54, 25, 53, 25, 52, 25, 51, 25, 50, 25, 49, 26, 48, 42, 47, 42, 46, 43, 45, 43, 44, 44, 43, 45, 42, 46, 41, 46, 40, 47, 39, 48, 38, 48, 37, 49, 36, 50, 35, 50, 34, 51, 33, 52, 32, 52, 31, 53, 30, 54, 29, 55, 28, 55, 27, 59, 
26, 61, 25, 61, 24, 64, 23, 67, 22, 69, 21, 73, 20, 75, 19, 78, 18, 85, 18], 6:[64, 23, 65, 24, 66, 25, 68, 26, 70, 27, 71, 28, 73, 29, 76, 30, 79, 31, 81, 32, 83, 33, 87, 34, 91, 35, 95, 36, 95, 37, 95, 38, 95, 39, 95, 40, 95, 41, 96, 42, 97, 43, 97, 44, 97, 45, 98, 46, 99, 47, 99, 48, 100, 49, 101, 50, 102, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 105, 57, 106, 58, 107, 59, 107, 60, 109, 61, 110, 62, 109, 63, 110, 64, 111, 65, 113, 66, 112, 67, 110, 68, 109, 69, 108, 70, 103, 71, 122, 72, 
123, 73, 123, 74, 123, 75, 124, 76, 124, 77, 124, 78, 124, 79, 124, 80, 124, 81, 124, 82, 124, 83, 124, 84, 125, 85, 125, 86, 125, 87, 125, 88, 125, 89, 125, 90, 126, 91, 126, 92, 126, 93, 126, 94, 127, 95, 127, 96, 128, 97, 128, 98, 129, 99, 129, 100, 130, 101, 131, 102, 131, 103, 131, 104, 131, 105, 132, 106, 132, 107, 132, 108, 132, 109, 132, 110, 133, 111, 134, 112, 135, 113, 135, 114, 136, 115, 136, 116, 134, 117, 133, 118, 132, 119, 131, 120, 130, 121, 128, 122, 127, 123, 126, 124, 86, 125, 
86, 126, 86, 127, 85, 128, 76, 129, 75, 130, 75, 131, 73, 132, 57, 133, 57, 134, 55, 135, 54, 136, 43, 137, 41, 137, 40, 136, 39, 135, 37, 134, 35, 133, 34, 132, 32, 131, 31, 130, 31, 129, 32, 128, 29, 127, 26, 126, 24, 125, 24, 124, 21, 123, 21, 122, 21, 121, 22, 120, 20, 119, 19, 118, 20, 117, 20, 116, 21, 115, 21, 114, 22, 113, 24, 112, 24, 111, 24, 110, 24, 109, 24, 108, 24, 107, 23, 106, 23, 105, 23, 104, 22, 103, 20, 102, 19, 101, 19, 100, 18, 99, 18, 98, 19, 97, 21, 96, 22, 95, 23, 94, 25, 
93, 27, 92, 27, 91, 29, 90, 31, 89, 32, 88, 34, 87, 36, 86, 36, 85, 38, 84, 40, 83, 41, 82, 41, 81, 41, 80, 41, 79, 41, 78, 41, 77, 41, 76, 41, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 41, 67, 40, 66, 38, 65, 36, 64, 36, 63, 35, 62, 35, 61, 35, 60, 36, 59, 37, 58, 38, 57, 39, 56, 39, 55, 40, 54, 41, 53, 42, 52, 43, 51, 43, 50, 43, 49, 44, 48, 45, 47, 46, 46, 46, 45, 47, 44, 48, 43, 49, 42, 50, 41, 50, 40, 51, 39, 51, 38, 52, 37, 53, 36, 53, 35, 53, 34, 54, 33, 55, 32, 56, 31, 56, 
30, 57, 29, 58, 28, 58, 27, 58, 26, 58, 25, 59, 24, 59, 23, 64, 23], 7:[47, 33, 49, 34, 49, 35, 108, 36, 109, 37, 110, 38, 111, 39, 111, 40, 112, 41, 113, 42, 114, 43, 115, 44, 115, 45, 116, 46, 117, 47, 118, 48, 119, 49, 119, 50, 120, 51, 121, 52, 121, 53, 122, 54, 123, 55, 125, 56, 126, 57, 126, 58, 127, 59, 127, 60, 128, 61, 129, 62, 130, 63, 131, 64, 132, 65, 131, 66, 131, 67, 131, 68, 129, 69, 127, 70, 127, 71, 127, 72, 127, 73, 127, 74, 127, 75, 127, 76, 127, 77, 127, 78, 127, 79, 127, 80, 
126, 81, 126, 82, 131, 83, 133, 84, 136, 85, 137, 86, 137, 87, 138, 88, 138, 89, 140, 90, 141, 91, 142, 92, 142, 93, 142, 94, 142, 95, 143, 96, 144, 97, 144, 98, 144, 99, 144, 100, 144, 101, 144, 102, 140, 103, 140, 104, 140, 105, 139, 106, 136, 107, 136, 108, 137, 109, 136, 110, 135, 111, 133, 112, 133, 113, 132, 114, 127, 115, 127, 116, 127, 117, 120, 118, 119, 119, 118, 120, 118, 121, 118, 122, 117, 123, 107, 124, 107, 125, 107, 126, 108, 127, 108, 128, 108, 129, 108, 130, 108, 131, 108, 132, 
101, 133, 94, 134, 94, 135, 94, 136, 94, 137, 94, 138, 93, 139, 73, 139, 73, 138, 72, 137, 72, 136, 72, 135, 53, 134, 45, 133, 37, 132, 31, 131, 26, 130, 23, 129, 22, 128, 19, 127, 15, 126, 14, 125, 14, 124, 11, 123, 9, 122, 8, 121, 9, 120, 6, 119, 5, 118, 4, 117, 4, 116, 3, 115, 3, 114, 3, 113, 4, 112, 4, 111, 5, 110, 6, 109, 7, 108, 8, 107, 7, 106, 7, 105, 7, 104, 8, 103, 9, 102, 11, 101, 11, 100, 11, 99, 12, 98, 13, 97, 12, 96, 11, 95, 12, 94, 16, 93, 17, 92, 17, 91, 17, 90, 17, 89, 16, 88, 16, 
87, 16, 86, 16, 85, 17, 84, 18, 83, 20, 82, 23, 81, 35, 80, 36, 79, 37, 78, 37, 77, 37, 76, 37, 75, 37, 74, 37, 73, 37, 72, 37, 71, 37, 70, 37, 69, 37, 68, 37, 67, 37, 66, 37, 65, 37, 64, 37, 63, 37, 62, 37, 61, 37, 60, 37, 59, 38, 58, 38, 57, 38, 56, 38, 55, 38, 54, 38, 53, 38, 52, 38, 51, 38, 50, 38, 49, 38, 48, 38, 47, 38, 46, 38, 45, 39, 44, 38, 43, 38, 42, 38, 41, 38, 40, 39, 39, 39, 38, 39, 37, 39, 36, 39, 35, 40, 34, 41, 33, 47, 33], 8:[73, 2, 75, 3, 76, 4, 83, 5, 85, 6, 86, 7, 86, 8, 86, 
9, 85, 10, 85, 11, 85, 12, 86, 13, 87, 14, 87, 15, 88, 16, 89, 17, 89, 18, 89, 19, 88, 20, 87, 21, 86, 22, 85, 23, 84, 24, 83, 25, 81, 26, 87, 27, 88, 28, 100, 29, 100, 30, 100, 31, 100, 32, 100, 33, 100, 34, 100, 35, 100, 36, 100, 37, 100, 38, 100, 39, 98, 40, 95, 41, 87, 42, 91, 43, 93, 44, 94, 45, 94, 46, 95, 47, 94, 48, 95, 49, 95, 50, 95, 51, 95, 52, 95, 53, 97, 54, 98, 55, 98, 56, 98, 57, 97, 58, 97, 59, 98, 60, 98, 61, 99, 62, 99, 63, 99, 64, 100, 65, 101, 66, 102, 67, 102, 68, 103, 69, 103, 
70, 103, 71, 104, 72, 104, 73, 104, 74, 105, 75, 105, 76, 105, 77, 105, 78, 104, 79, 104, 80, 103, 81, 101, 82, 96, 83, 96, 84, 97, 85, 97, 86, 97, 87, 97, 88, 98, 89, 99, 90, 100, 91, 101, 92, 102, 93, 102, 94, 103, 95, 103, 96, 104, 97, 104, 98, 104, 99, 104, 100, 104, 101, 104, 102, 104, 103, 104, 104, 104, 105, 104, 106, 104, 107, 104, 108, 103, 109, 103, 110, 102, 111, 101, 112, 100, 113, 99, 114, 98, 115, 96, 116, 96, 117, 96, 118, 96, 119, 96, 120, 96, 121, 98, 122, 99, 123, 98, 124, 98, 125, 
97, 126, 97, 127, 97, 128, 93, 129, 93, 130, 97, 131, 98, 132, 99, 133, 99, 134, 99, 135, 99, 136, 98, 137, 96, 138, 87, 139, 60, 140, 56, 140, 54, 139, 54, 138, 54, 137, 50, 136, 48, 135, 48, 134, 49, 133, 50, 132, 49, 131, 48, 130, 46, 129, 43, 128, 42, 127, 35, 126, 34, 125, 34, 124, 35, 123, 42, 122, 41, 121, 42, 120, 42, 119, 43, 118, 44, 117, 44, 116, 44, 115, 45, 114, 45, 113, 46, 112, 46, 111, 46, 110, 46, 109, 45, 108, 45, 107, 45, 106, 45, 105, 45, 104, 45, 103, 45, 102, 45, 101, 45, 100, 
45, 99, 45, 98, 45, 97, 45, 96, 45, 95, 45, 94, 46, 93, 47, 92, 48, 91, 28, 90, 26, 89, 25, 88, 26, 87, 26, 86, 26, 85, 25, 84, 24, 83, 23, 82, 22, 81, 21, 80, 20, 79, 20, 78, 20, 77, 20, 76, 21, 75, 22, 74, 24, 73, 25, 72, 26, 71, 27, 70, 28, 69, 29, 68, 30, 67, 32, 66, 33, 65, 34, 64, 35, 63, 36, 62, 38, 61, 39, 60, 40, 59, 41, 58, 42, 57, 43, 56, 45, 55, 46, 54, 47, 53, 48, 52, 49, 51, 50, 50, 50, 49, 50, 48, 47, 47, 42, 46, 37, 45, 33, 44, 28, 43, 24, 42, 19, 41, 18, 40, 17, 39, 16, 38, 17, 37, 
17, 36, 17, 35, 18, 34, 18, 33, 19, 32, 19, 31, 20, 30, 20, 29, 21, 28, 21, 27, 22, 26, 21, 25, 20, 24, 19, 23, 20, 22, 20, 21, 21, 20, 22, 19, 28, 18, 28, 17, 29, 16, 30, 15, 31, 14, 32, 13, 34, 12, 35, 11, 67, 10, 68, 9, 68, 8, 68, 7, 69, 6, 69, 5, 69, 4, 70, 3, 70, 2, 73, 2], 9:[98, 17, 100, 18, 102, 19, 102, 20, 102, 21, 102, 22, 102, 23, 102, 24, 102, 25, 102, 26, 103, 27, 103, 28, 103, 29, 103, 30, 103, 31, 103, 32, 103, 33, 103, 34, 103, 35, 103, 36, 103, 37, 104, 38, 104, 39, 105, 40, 106, 
41, 106, 42, 107, 43, 107, 44, 108, 45, 108, 46, 109, 47, 109, 48, 110, 49, 110, 50, 111, 51, 111, 52, 112, 53, 112, 54, 112, 55, 113, 56, 113, 57, 114, 58, 114, 59, 114, 60, 114, 61, 115, 62, 115, 63, 116, 64, 116, 65, 117, 66, 117, 67, 116, 68, 116, 69, 116, 70, 116, 71, 116, 72, 116, 73, 116, 74, 115, 75, 115, 76, 115, 77, 114, 78, 113, 79, 113, 80, 113, 81, 113, 82, 114, 83, 116, 84, 117, 85, 118, 86, 120, 87, 121, 88, 122, 89, 124, 90, 124, 91, 124, 92, 124, 93, 124, 94, 124, 95, 129, 96, 130, 
97, 130, 98, 130, 99, 131, 100, 132, 101, 132, 102, 132, 103, 132, 104, 131, 105, 130, 106, 130, 107, 130, 108, 130, 109, 130, 110, 129, 111, 122, 112, 122, 113, 122, 114, 120, 115, 116, 116, 115, 117, 113, 118, 112, 119, 109, 120, 108, 121, 110, 122, 111, 123, 111, 124, 111, 125, 110, 126, 110, 127, 110, 128, 109, 129, 107, 130, 105, 131, 103, 132, 100, 133, 99, 134, 97, 135, 90, 135, 86, 134, 84, 133, 83, 132, 83, 131, 83, 130, 82, 129, 80, 128, 78, 127, 74, 126, 39, 125, 39, 124, 39, 123, 37, 
122, 35, 121, 35, 120, 34, 119, 34, 118, 31, 117, 30, 116, 24, 115, 23, 114, 24, 113, 25, 112, 25, 111, 18, 110, 11, 109, 10, 108, 9, 107, 8, 106, 7, 105, 7, 104, 8, 103, 8, 102, 8, 101, 9, 100, 10, 99, 12, 98, 14, 97, 13, 96, 13, 95, 12, 94, 12, 93, 13, 92, 24, 91, 25, 90, 27, 89, 27, 88, 26, 87, 24, 86, 23, 85, 23, 84, 22, 83, 18, 82, 17, 81, 16, 80, 16, 79, 16, 78, 16, 77, 16, 76, 23, 75, 24, 74, 24, 73, 24, 72, 25, 71, 25, 70, 26, 69, 28, 68, 29, 67, 30, 66, 32, 65, 33, 64, 34, 63, 35, 62, 36, 
61, 36, 60, 37, 59, 38, 58, 38, 57, 38, 56, 38, 55, 39, 54, 39, 53, 40, 52, 40, 51, 41, 50, 43, 49, 45, 48, 47, 47, 50, 46, 55, 45, 59, 44, 62, 43, 64, 42, 66, 41, 68, 40, 70, 39, 71, 38, 73, 37, 74, 36, 76, 35, 77, 34, 78, 33, 79, 32, 80, 31, 81, 30, 83, 29, 85, 28, 89, 27, 90, 26, 90, 25, 90, 24, 90, 23, 90, 22, 90, 21, 90, 20, 90, 19, 91, 18, 94, 17, 98, 17], 10:[106, 32, 106, 33, 107, 34, 107, 35, 108, 36, 108, 37, 108, 38, 109, 39, 109, 40, 110, 41, 110, 42, 111, 43, 111, 44, 112, 45, 112, 46, 
113, 47, 113, 48, 114, 49, 114, 50, 115, 51, 115, 52, 116, 53, 119, 54, 119, 55, 119, 56, 120, 57, 120, 58, 120, 59, 120, 60, 120, 61, 120, 62, 121, 63, 121, 64, 122, 65, 122, 66, 123, 67, 124, 68, 123, 69, 123, 70, 123, 71, 121, 72, 120, 73, 119, 74, 118, 75, 118, 76, 118, 77, 118, 78, 119, 79, 119, 80, 119, 81, 119, 82, 119, 83, 119, 84, 119, 85, 119, 86, 119, 87, 119, 88, 119, 89, 120, 90, 120, 91, 120, 92, 120, 93, 120, 94, 119, 95, 119, 96, 119, 97, 120, 98, 120, 99, 121, 100, 121, 101, 121, 
102, 121, 103, 121, 104, 121, 105, 121, 106, 121, 107, 121, 108, 123, 109, 123, 110, 123, 111, 123, 112, 123, 113, 123, 114, 123, 115, 123, 116, 121, 117, 121, 118, 121, 119, 121, 120, 121, 121, 121, 122, 121, 123, 121, 124, 121, 125, 121, 126, 121, 127, 120, 128, 98, 129, 98, 130, 98, 131, 98, 132, 98, 133, 98, 134, 98, 135, 97, 136, 96, 137, 95, 138, 90, 139, 87, 139, 69, 138, 68, 137, 67, 136, 66, 135, 65, 134, 65, 133, 47, 132, 45, 131, 44, 130, 44, 129, 43, 128, 41, 127, 39, 126, 38, 125, 33, 
124, 32, 123, 31, 122, 31, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 31, 110, 31, 109, 31, 108, 30, 107, 28, 106, 27, 105, 25, 104, 24, 103, 23, 102, 23, 101, 23, 100, 23, 99, 22, 98, 22, 97, 22, 96, 22, 95, 22, 94, 22, 93, 21, 92, 21, 91, 21, 90, 23, 89, 24, 88, 26, 87, 27, 86, 28, 85, 30, 84, 31, 83, 33, 82, 34, 81, 32, 80, 32, 79, 32, 78, 32, 77, 33, 76, 34, 75, 35, 74, 36, 73, 37, 72, 38, 71, 39, 70, 40, 69, 42, 68, 43, 67, 44, 66, 45, 65, 
46, 64, 47, 63, 48, 62, 49, 61, 50, 60, 52, 59, 53, 58, 55, 57, 59, 56, 61, 55, 62, 54, 63, 53, 64, 52, 65, 51, 67, 50, 68, 49, 72, 48, 73, 47, 76, 46, 77, 45, 82, 44, 84, 43, 86, 42, 86, 41, 86, 40, 87, 39, 89, 38, 90, 37, 92, 36, 93, 35, 95, 34, 97, 33, 102, 32, 106, 32], 11:[67, 18, 68, 19, 69, 20, 70, 21, 71, 22, 72, 23, 73, 24, 74, 25, 75, 26, 77, 27, 78, 28, 81, 29, 84, 30, 85, 31, 87, 32, 88, 33, 89, 34, 91, 35, 92, 36, 92, 37, 93, 38, 93, 39, 94, 40, 94, 41, 94, 42, 94, 43, 93, 44, 93, 45, 
92, 46, 92, 47, 91, 48, 90, 49, 89, 50, 89, 51, 90, 52, 89, 53, 90, 54, 90, 55, 90, 56, 90, 57, 90, 58, 90, 59, 90, 60, 90, 61, 90, 62, 90, 63, 90, 64, 90, 65, 90, 66, 90, 67, 90, 68, 90, 69, 90, 70, 90, 71, 90, 72, 90, 73, 90, 74, 90, 75, 90, 76, 90, 77, 90, 78, 90, 79, 90, 80, 90, 81, 90, 82, 90, 83, 90, 84, 90, 85, 90, 86, 90, 87, 90, 88, 90, 89, 91, 90, 93, 91, 95, 92, 98, 93, 100, 94, 102, 95, 105, 96, 108, 97, 111, 98, 114, 99, 114, 100, 114, 101, 114, 102, 113, 103, 112, 104, 112, 105, 111, 
106, 111, 107, 111, 108, 111, 109, 111, 110, 111, 111, 111, 112, 111, 113, 111, 114, 111, 115, 111, 116, 111, 117, 111, 118, 111, 119, 111, 120, 111, 121, 110, 122, 109, 123, 108, 124, 107, 125, 106, 126, 104, 127, 102, 128, 101, 129, 99, 130, 98, 131, 96, 132, 95, 133, 94, 134, 93, 135, 90, 136, 87, 137, 86, 138, 86, 139, 86, 140, 82, 141, 77, 142, 74, 142, 67, 141, 64, 140, 62, 139, 62, 138, 63, 137, 63, 136, 49, 135, 46, 134, 44, 133, 42, 132, 41, 131, 41, 130, 42, 129, 42, 128, 41, 127, 40, 126, 
40, 125, 40, 124, 40, 123, 41, 122, 24, 121, 22, 120, 21, 119, 21, 118, 21, 117, 20, 116, 21, 115, 22, 114, 21, 113, 21, 112, 20, 111, 19, 110, 19, 109, 18, 108, 18, 107, 18, 106, 19, 105, 20, 104, 21, 103, 34, 102, 34, 101, 34, 100, 34, 99, 34, 98, 34, 97, 36, 96, 40, 95, 40, 94, 40, 93, 40, 92, 40, 91, 40, 90, 40, 89, 40, 88, 40, 87, 40, 86, 40, 85, 30, 84, 29, 83, 29, 82, 29, 81, 29, 80, 31, 79, 31, 78, 30, 77, 29, 76, 28, 75, 28, 74, 28, 73, 28, 72, 28, 71, 28, 70, 27, 69, 25, 68, 25, 67, 24, 
66, 24, 65, 24, 64, 23, 63, 23, 62, 23, 61, 28, 60, 30, 59, 35, 58, 39, 57, 39, 56, 39, 55, 39, 54, 40, 53, 40, 52, 39, 51, 38, 50, 38, 49, 37, 48, 36, 47, 36, 46, 35, 45, 35, 44, 35, 43, 35, 42, 35, 41, 36, 40, 36, 39, 37, 38, 38, 37, 39, 36, 40, 35, 41, 34, 42, 33, 44, 32, 45, 31, 46, 30, 48, 29, 50, 28, 52, 27, 53, 26, 55, 25, 56, 24, 57, 23, 59, 22, 60, 21, 61, 20, 62, 19, 63, 18, 67, 18], 13:[47, 34, 101, 35, 102, 36, 103, 37, 103, 38, 103, 39, 103, 40, 103, 41, 103, 42, 103, 43, 103, 44, 103, 
45, 103, 46, 104, 47, 104, 48, 104, 49, 103, 50, 104, 51, 106, 52, 104, 53, 104, 54, 106, 55, 106, 56, 107, 57, 106, 58, 107, 59, 108, 60, 108, 61, 109, 62, 110, 63, 110, 64, 110, 65, 111, 66, 111, 67, 110, 68, 111, 69, 111, 70, 111, 71, 111, 72, 111, 73, 113, 74, 115, 75, 117, 76, 119, 77, 120, 78, 122, 79, 124, 80, 126, 81, 128, 82, 130, 83, 132, 84, 134, 85, 134, 86, 134, 87, 133, 88, 132, 89, 131, 90, 131, 91, 131, 92, 131, 93, 131, 94, 131, 95, 131, 96, 131, 97, 136, 98, 137, 99, 137, 100, 137, 
101, 138, 102, 138, 103, 139, 104, 140, 105, 140, 106, 139, 107, 138, 108, 138, 109, 138, 110, 138, 111, 138, 112, 136, 113, 136, 114, 133, 115, 135, 116, 135, 117, 134, 118, 130, 119, 127, 120, 127, 121, 127, 122, 126, 123, 125, 124, 127, 125, 127, 126, 126, 127, 125, 128, 126, 129, 127, 130, 126, 131, 128, 132, 128, 133, 127, 134, 125, 135, 119, 136, 118, 137, 111, 138, 106, 139, 79, 139, 73, 138, 72, 137, 65, 136, 63, 135, 62, 134, 61, 133, 61, 132, 59, 131, 56, 130, 51, 129, 49, 128, 48, 127, 
47, 126, 29, 125, 27, 124, 26, 123, 25, 122, 25, 121, 25, 120, 25, 119, 25, 118, 26, 117, 28, 116, 31, 115, 30, 114, 29, 113, 26, 112, 19, 111, 18, 110, 15, 109, 14, 108, 13, 107, 14, 106, 12, 105, 12, 104, 12, 103, 12, 102, 13, 101, 12, 100, 12, 99, 8, 98, 7, 97, 7, 96, 8, 95, 6, 94, 5, 93, 5, 92, 6, 91, 6, 90, 8, 89, 11, 88, 11, 87, 13, 86, 13, 85, 13, 84, 13, 83, 13, 82, 13, 81, 13, 80, 13, 79, 13, 78, 13, 77, 13, 76, 13, 75, 13, 74, 13, 73, 13, 72, 12, 71, 11, 70, 9, 69, 9, 68, 9, 67, 10, 66, 
11, 65, 12, 64, 14, 63, 14, 62, 15, 61, 15, 60, 16, 59, 17, 58, 18, 57, 19, 56, 20, 55, 21, 54, 21, 53, 22, 52, 32, 51, 32, 50, 32, 49, 33, 48, 33, 47, 33, 46, 33, 45, 33, 44, 34, 43, 34, 42, 35, 41, 35, 40, 35, 39, 36, 38, 37, 37, 39, 36, 42, 35, 43, 34, 47, 34], 14:[76, 23, 78, 24, 79, 25, 83, 26, 86, 27, 87, 28, 88, 29, 88, 30, 89, 31, 89, 32, 89, 33, 90, 34, 90, 35, 89, 36, 89, 37, 89, 38, 88, 39, 87, 40, 85, 41, 88, 42, 93, 43, 95, 44, 95, 45, 96, 46, 96, 47, 97, 48, 97, 49, 96, 50, 96, 51, 
96, 52, 95, 53, 95, 54, 94, 55, 93, 56, 90, 57, 87, 58, 118, 59, 118, 60, 117, 61, 117, 62, 117, 63, 116, 64, 116, 65, 114, 66, 114, 67, 119, 68, 119, 69, 120, 70, 120, 71, 120, 72, 121, 73, 120, 74, 120, 75, 120, 76, 120, 77, 122, 78, 123, 79, 123, 80, 122, 81, 122, 82, 120, 83, 118, 84, 119, 85, 121, 86, 132, 87, 133, 88, 132, 89, 132, 90, 133, 91, 133, 92, 133, 93, 134, 94, 134, 95, 134, 96, 134, 97, 134, 98, 135, 99, 137, 100, 138, 101, 136, 102, 128, 103, 129, 104, 130, 105, 130, 106, 130, 107, 
130, 108, 129, 109, 128, 110, 128, 111, 128, 112, 128, 113, 127, 114, 123, 115, 124, 116, 125, 117, 126, 118, 126, 119, 126, 120, 129, 121, 129, 122, 130, 123, 131, 124, 125, 125, 128, 126, 115, 127, 115, 128, 116, 129, 115, 130, 113, 131, 107, 132, 92, 133, 93, 134, 91, 135, 92, 136, 89, 137, 86, 138, 81, 139, 75, 139, 50, 138, 48, 137, 47, 136, 44, 135, 41, 134, 36, 133, 35, 132, 35, 131, 32, 130, 30, 129, 30, 128, 30, 127, 25, 126, 25, 125, 23, 124, 23, 123, 23, 122, 21, 121, 20, 120, 19, 119, 
18, 118, 18, 117, 17, 116, 16, 115, 16, 114, 16, 113, 17, 112, 16, 111, 16, 110, 17, 109, 18, 108, 20, 107, 24, 106, 17, 105, 12, 104, 13, 103, 11, 102, 14, 101, 13, 100, 15, 99, 16, 98, 16, 97, 17, 96, 18, 95, 19, 94, 19, 93, 20, 92, 21, 91, 22, 90, 29, 89, 29, 88, 30, 87, 29, 86, 24, 85, 23, 84, 22, 83, 21, 82, 21, 81, 22, 80, 26, 79, 27, 78, 28, 77, 30, 76, 30, 75, 31, 74, 31, 73, 32, 72, 32, 71, 32, 70, 32, 69, 32, 68, 32, 67, 33, 66, 33, 65, 33, 64, 34, 63, 35, 62, 36, 61, 38, 60, 66, 59, 66, 
58, 66, 57, 66, 56, 50, 55, 49, 54, 46, 53, 45, 52, 45, 51, 44, 50, 44, 49, 44, 48, 45, 47, 45, 46, 45, 45, 46, 44, 46, 43, 47, 42, 47, 41, 48, 40, 49, 39, 51, 38, 58, 37, 57, 36, 57, 35, 57, 34, 59, 33, 59, 32, 60, 31, 60, 30, 60, 29, 61, 28, 64, 27, 66, 26, 68, 25, 70, 24, 72, 23, 76, 23], 15:[83, 14, 85, 15, 86, 16, 87, 17, 88, 18, 88, 19, 88, 20, 88, 21, 88, 22, 88, 23, 88, 24, 88, 25, 88, 26, 88, 27, 88, 28, 88, 29, 88, 30, 88, 31, 88, 32, 88, 33, 89, 34, 91, 35, 94, 36, 99, 37, 103, 38, 106, 
39, 107, 40, 109, 41, 110, 42, 110, 43, 111, 44, 112, 45, 112, 46, 112, 47, 113, 48, 113, 49, 114, 50, 114, 51, 114, 52, 115, 53, 115, 54, 115, 55, 116, 56, 117, 57, 117, 58, 119, 59, 120, 60, 120, 61, 121, 62, 122, 63, 123, 64, 124, 65, 124, 66, 125, 67, 125, 68, 126, 69, 126, 70, 125, 71, 125, 72, 125, 73, 124, 74, 123, 75, 122, 76, 122, 77, 122, 78, 122, 79, 122, 80, 122, 81, 122, 82, 122, 83, 124, 84, 125, 85, 127, 86, 132, 87, 133, 88, 133, 89, 134, 90, 135, 91, 136, 92, 135, 93, 135, 94, 133, 
95, 133, 96, 133, 97, 133, 98, 133, 99, 133, 100, 133, 101, 133, 102, 133, 103, 131, 104, 130, 105, 128, 106, 124, 107, 123, 108, 122, 109, 122, 110, 120, 111, 121, 112, 123, 113, 125, 114, 127, 115, 128, 116, 130, 117, 131, 118, 132, 119, 132, 120, 131, 121, 130, 122, 128, 123, 126, 124, 126, 125, 124, 126, 123, 127, 121, 128, 120, 129, 118, 130, 115, 131, 113, 132, 112, 133, 110, 134, 109, 135, 107, 136, 105, 137, 104, 138, 102, 139, 100, 140, 99, 141, 97, 142, 95, 143, 91, 143, 89, 142, 88, 141, 
86, 140, 85, 139, 83, 138, 81, 137, 75, 136, 73, 135, 72, 134, 59, 133, 57, 132, 57, 131, 57, 130, 57, 129, 56, 128, 54, 127, 52, 126, 51, 125, 49, 124, 47, 123, 31, 122, 30, 121, 29, 120, 29, 119, 28, 118, 26, 117, 26, 116, 25, 115, 24, 114, 23, 113, 24, 112, 24, 111, 25, 110, 26, 109, 25, 108, 24, 107, 23, 106, 19, 105, 18, 104, 17, 103, 15, 102, 14, 101, 14, 100, 14, 99, 14, 98, 14, 97, 12, 96, 12, 95, 12, 94, 12, 93, 12, 92, 12, 91, 12, 90, 12, 89, 12, 88, 12, 87, 12, 86, 12, 85, 12, 84, 10, 
83, 9, 82, 9, 81, 9, 80, 9, 79, 10, 78, 10, 77, 10, 76, 11, 75, 13, 74, 14, 73, 15, 72, 16, 71, 17, 70, 17, 69, 18, 68, 19, 67, 20, 66, 21, 65, 22, 64, 22, 63, 23, 62, 24, 61, 25, 60, 26, 59, 26, 58, 26, 57, 26, 56, 26, 55, 27, 54, 35, 53, 35, 52, 36, 51, 37, 50, 38, 49, 39, 48, 40, 47, 38, 46, 38, 45, 37, 44, 36, 43, 36, 42, 36, 41, 36, 40, 36, 39, 38, 38, 43, 37, 43, 36, 44, 35, 44, 34, 45, 33, 46, 32, 47, 31, 47, 30, 47, 29, 47, 28, 47, 27, 47, 26, 47, 25, 46, 24, 46, 23, 46, 22, 46, 21, 46, 20, 
46, 19, 46, 18, 47, 17, 49, 16, 50, 15, 77, 14, 83, 14], 16:[110, 1, 110, 2, 113, 3, 115, 4, 119, 5, 121, 6, 128, 7, 131, 8, 134, 9, 137, 10, 139, 11, 143, 12, 144, 13, 144, 14, 144, 15, 143, 16, 142, 17, 138, 18, 138, 19, 138, 20, 137, 21, 138, 22, 139, 23, 140, 24, 139, 25, 138, 26, 138, 27, 138, 28, 138, 29, 138, 30, 138, 31, 138, 32, 138, 33, 137, 34, 137, 35, 137, 36, 137, 37, 137, 38, 137, 39, 137, 40, 137, 41, 138, 42, 138, 43, 138, 44, 138, 45, 137, 46, 136, 47, 135, 48, 134, 49, 131, 50, 
129, 51, 127, 52, 124, 53, 118, 54, 116, 55, 115, 56, 110, 57, 104, 58, 105, 59, 106, 60, 107, 61, 108, 62, 108, 63, 139, 64, 141, 65, 145, 66, 147, 67, 147, 68, 147, 69, 148, 70, 149, 71, 149, 72, 151, 73, 152, 74, 152, 75, 152, 76, 153, 77, 154, 78, 154, 79, 153, 80, 153, 81, 153, 82, 154, 83, 154, 84, 154, 85, 154, 86, 153, 87, 153, 88, 152, 89, 151, 90, 149, 91, 150, 92, 149, 93, 147, 94, 145, 95, 144, 96, 144, 97, 140, 98, 98, 99, 98, 100, 99, 101, 126, 102, 131, 103, 131, 104, 131, 105, 131, 
106, 131, 107, 131, 108, 131, 109, 131, 110, 130, 111, 130, 112, 130, 113, 130, 114, 131, 115, 132, 116, 133, 117, 132, 118, 132, 119, 124, 120, 123, 121, 123, 122, 122, 123, 121, 124, 121, 125, 120, 126, 119, 127, 119, 128, 118, 129, 118, 130, 117, 131, 117, 132, 116, 133, 115, 134, 115, 135, 114, 136, 112, 137, 111, 138, 110, 139, 110, 140, 109, 141, 108, 142, 107, 143, 106, 144, 105, 145, 104, 146, 103, 147, 102, 148, 101, 149, 100, 150, 99, 151, 98, 152, 98, 153, 98, 154, 98, 155, 98, 156, 91, 
157, 90, 158, 89, 159, 89, 160, 89, 161, 89, 162, 89, 163, 89, 164, 89, 165, 86, 166, 76, 167, 74, 168, 72, 169, 70, 170, 69, 171, 66, 172, 65, 173, 64, 174, 64, 175, 64, 176, 64, 177, 63, 178, 57, 178, 56, 177, 54, 176, 52, 175, 50, 174, 48, 173, 46, 172, 45, 171, 44, 170, 44, 169, 44, 168, 45, 167, 45, 166, 46, 165, 45, 164, 45, 163, 45, 162, 46, 161, 48, 160, 50, 159, 53, 158, 55, 157, 57, 156, 60, 155, 62, 154, 63, 153, 65, 152, 68, 151, 31, 150, 31, 149, 10, 148, 9, 147, 8, 146, 8, 145, 7, 144, 
7, 143, 7, 142, 8, 141, 8, 140, 8, 139, 8, 138, 8, 137, 8, 136, 8, 135, 8, 134, 9, 133, 11, 132, 28, 131, 28, 130, 28, 129, 29, 128, 30, 127, 31, 126, 33, 125, 34, 124, 54, 123, 54, 122, 54, 121, 54, 120, 54, 119, 55, 118, 55, 117, 55, 116, 55, 115, 55, 114, 56, 113, 57, 112, 60, 111, 60, 110, 59, 109, 59, 108, 59, 107, 59, 106, 60, 105, 64, 104, 65, 103, 64, 102, 63, 101, 63, 100, 63, 99, 63, 98, 64, 97, 67, 96, 67, 95, 67, 94, 67, 93, 67, 92, 67, 91, 67, 90, 67, 89, 68, 88, 68, 87, 69, 86, 69, 
85, 69, 84, 69, 83, 69, 82, 68, 81, 67, 80, 67, 79, 67, 78, 67, 77, 67, 76, 67, 75, 67, 74, 67, 73, 67, 72, 65, 71, 63, 70, 63, 69, 63, 68, 62, 67, 62, 66, 63, 65, 64, 64, 66, 63, 67, 62, 67, 61, 60, 60, 60, 59, 59, 58, 59, 57, 59, 56, 60, 55, 65, 54, 67, 53, 70, 52, 73, 51, 76, 50, 78, 49, 88, 48, 50, 47, 50, 46, 49, 45, 48, 44, 47, 43, 47, 42, 46, 41, 47, 40, 47, 39, 47, 38, 47, 37, 47, 36, 48, 35, 50, 34, 51, 33, 62, 32, 62, 31, 62, 30, 63, 29, 66, 28, 67, 27, 68, 26, 70, 25, 71, 24, 73, 23, 68, 
22, 68, 21, 68, 20, 69, 19, 71, 18, 72, 17, 74, 16, 76, 15, 77, 14, 79, 13, 80, 12, 80, 11, 77, 10, 76, 9, 75, 8, 75, 7, 76, 6, 78, 5, 80, 4, 81, 3, 83, 2, 85, 1, 110, 1], 17:[68, 40, 70, 41, 71, 42, 72, 43, 112, 44, 112, 45, 111, 46, 116, 47, 115, 48, 114, 49, 115, 50, 115, 51, 115, 52, 115, 53, 118, 54, 118, 55, 119, 56, 121, 57, 122, 58, 120, 59, 119, 60, 118, 61, 116, 62, 110, 63, 110, 64, 110, 65, 111, 66, 112, 67, 113, 68, 115, 69, 117, 70, 118, 71, 121, 72, 131, 73, 132, 74, 132, 75, 131, 
76, 131, 77, 131, 78, 132, 79, 133, 80, 134, 81, 135, 82, 135, 83, 136, 84, 133, 85, 135, 86, 136, 87, 136, 88, 137, 89, 137, 90, 137, 91, 137, 92, 137, 93, 138, 94, 138, 95, 139, 96, 139, 97, 139, 98, 139, 99, 139, 100, 138, 101, 138, 102, 143, 103, 142, 104, 144, 105, 145, 106, 143, 107, 133, 108, 133, 109, 132, 110, 134, 111, 134, 112, 129, 113, 129, 114, 129, 115, 129, 116, 131, 117, 129, 118, 121, 119, 120, 120, 117, 121, 114, 122, 114, 123, 114, 124, 115, 125, 117, 126, 117, 127, 116, 128, 
105, 129, 103, 130, 101, 131, 94, 132, 92, 133, 87, 134, 85, 135, 83, 136, 81, 137, 79, 138, 75, 138, 73, 137, 72, 136, 70, 135, 55, 134, 53, 133, 53, 132, 34, 131, 33, 130, 33, 129, 29, 128, 27, 127, 26, 126, 24, 125, 22, 124, 21, 123, 20, 122, 20, 121, 18, 120, 17, 119, 17, 118, 19, 117, 20, 116, 20, 115, 21, 114, 20, 113, 20, 112, 16, 111, 16, 110, 18, 109, 17, 108, 17, 107, 14, 106, 12, 105, 12, 104, 13, 103, 14, 102, 12, 101, 8, 100, 8, 99, 9, 98, 8, 97, 8, 96, 9, 95, 11, 94, 13, 93, 13, 92, 
13, 91, 13, 90, 13, 89, 13, 88, 13, 87, 13, 86, 13, 85, 13, 84, 13, 83, 13, 82, 13, 81, 13, 80, 13, 79, 13, 78, 13, 77, 13, 76, 13, 75, 13, 74, 19, 73, 19, 72, 20, 71, 23, 70, 24, 69, 26, 68, 29, 67, 29, 66, 29, 65, 29, 64, 29, 63, 29, 62, 29, 61, 30, 60, 30, 59, 30, 58, 30, 57, 31, 56, 31, 55, 32, 54, 33, 53, 33, 52, 36, 51, 36, 50, 38, 49, 45, 48, 48, 47, 51, 46, 53, 45, 55, 44, 56, 43, 58, 42, 60, 41, 62, 40, 68, 40], 18:[111, 12, 111, 13, 123, 14, 127, 15, 127, 16, 126, 17, 126, 18, 126, 19, 
126, 20, 126, 21, 124, 22, 126, 23, 125, 24, 125, 25, 125, 26, 125, 27, 125, 28, 125, 29, 123, 30, 125, 31, 125, 32, 125, 33, 125, 34, 125, 35, 125, 36, 125, 37, 123, 38, 125, 39, 126, 40, 126, 41, 126, 42, 126, 43, 126, 44, 126, 45, 127, 46, 121, 47, 120, 48, 112, 49, 110, 50, 110, 51, 110, 52, 110, 53, 110, 54, 110, 55, 111, 56, 111, 57, 111, 58, 111, 59, 111, 60, 111, 61, 111, 62, 111, 63, 111, 64, 111, 65, 111, 66, 111, 67, 111, 68, 111, 69, 111, 70, 111, 71, 111, 72, 111, 73, 112, 74, 113, 75, 
113, 76, 114, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 115, 84, 116, 85, 117, 86, 117, 87, 117, 88, 117, 89, 117, 90, 117, 91, 118, 92, 118, 93, 118, 94, 120, 95, 121, 96, 121, 97, 120, 98, 123, 99, 124, 100, 125, 101, 126, 102, 126, 103, 126, 104, 126, 105, 126, 106, 127, 107, 127, 108, 127, 109, 126, 110, 127, 111, 127, 112, 127, 113, 127, 114, 125, 115, 125, 116, 125, 117, 124, 118, 123, 119, 123, 120, 124, 121, 124, 122, 124, 123, 125, 124, 124, 125, 126, 126, 126, 127, 125, 
128, 125, 129, 125, 130, 121, 131, 121, 132, 121, 133, 120, 134, 116, 135, 115, 136, 114, 137, 110, 138, 101, 138, 65, 137, 64, 136, 64, 135, 57, 134, 50, 133, 49, 132, 47, 131, 45, 130, 44, 129, 42, 128, 39, 127, 38, 126, 37, 125, 36, 124, 36, 123, 34, 122, 33, 121, 31, 120, 30, 119, 27, 118, 26, 117, 24, 116, 24, 115, 24, 114, 23, 113, 23, 112, 22, 111, 21, 110, 21, 109, 22, 108, 22, 107, 21, 106, 21, 105, 21, 104, 22, 103, 21, 102, 21, 101, 21, 100, 22, 99, 23, 98, 22, 97, 21, 96, 21, 95, 21, 
94, 21, 93, 24, 92, 24, 91, 24, 90, 24, 89, 27, 88, 27, 87, 32, 86, 32, 85, 31, 84, 30, 83, 29, 82, 29, 81, 28, 80, 28, 79, 28, 78, 28, 77, 28, 76, 28, 75, 28, 74, 28, 73, 28, 72, 28, 71, 29, 70, 29, 69, 30, 68, 30, 67, 31, 66, 31, 65, 32, 64, 32, 63, 33, 62, 34, 61, 34, 60, 35, 59, 36, 58, 36, 57, 37, 56, 38, 55, 38, 54, 39, 53, 39, 52, 40, 51, 40, 50, 41, 49, 41, 48, 41, 47, 41, 46, 41, 45, 41, 44, 41, 43, 40, 42, 40, 41, 41, 40, 41, 39, 42, 38, 42, 37, 43, 36, 44, 35, 44, 34, 44, 33, 45, 32, 46, 
31, 50, 30, 52, 29, 59, 28, 59, 27, 60, 26, 60, 25, 60, 24, 60, 23, 61, 22, 64, 21, 106, 20, 106, 19, 106, 18, 106, 17, 106, 16, 105, 15, 105, 14, 105, 13, 106, 12, 111, 12], 19:[59, 26, 59, 27, 59, 28, 60, 29, 61, 30, 62, 31, 65, 32, 64, 33, 63, 34, 63, 35, 63, 36, 63, 37, 63, 38, 63, 39, 62, 40, 62, 41, 62, 42, 62, 43, 61, 44, 61, 45, 61, 46, 60, 47, 60, 48, 59, 49, 59, 50, 59, 51, 80, 52, 80, 53, 82, 54, 83, 55, 88, 56, 87, 57, 85, 58, 80, 59, 109, 60, 109, 61, 111, 62, 112, 63, 117, 64, 116, 
65, 117, 66, 115, 67, 109, 68, 109, 69, 109, 70, 109, 71, 110, 72, 111, 73, 112, 74, 114, 75, 115, 76, 116, 77, 117, 78, 118, 79, 119, 80, 120, 81, 122, 82, 123, 83, 123, 84, 124, 85, 124, 86, 124, 87, 124, 88, 124, 89, 124, 90, 124, 91, 125, 92, 125, 93, 125, 94, 125, 95, 125, 96, 125, 97, 126, 98, 127, 99, 129, 100, 130, 101, 131, 102, 131, 103, 132, 104, 132, 105, 134, 106, 134, 107, 134, 108, 135, 109, 135, 110, 135, 111, 135, 112, 135, 113, 135, 114, 136, 115, 134, 116, 134, 117, 134, 118, 134, 
119, 132, 120, 132, 121, 131, 122, 130, 123, 130, 124, 127, 125, 126, 126, 125, 127, 120, 128, 117, 129, 112, 130, 110, 131, 73, 132, 73, 133, 72, 134, 72, 135, 62, 135, 62, 134, 62, 133, 63, 132, 60, 131, 50, 130, 50, 129, 50, 128, 51, 127, 51, 126, 28, 125, 24, 124, 22, 123, 21, 122, 21, 121, 19, 120, 17, 119, 15, 118, 15, 117, 13, 116, 13, 115, 12, 114, 12, 113, 10, 112, 10, 111, 11, 110, 12, 109, 12, 108, 14, 107, 14, 106, 16, 105, 18, 104, 20, 103, 20, 102, 20, 101, 20, 100, 20, 99, 20, 98, 
20, 97, 20, 96, 20, 95, 19, 94, 18, 93, 18, 92, 18, 91, 19, 90, 20, 89, 20, 88, 21, 87, 22, 86, 22, 85, 23, 84, 24, 83, 25, 82, 25, 81, 26, 80, 27, 79, 27, 78, 28, 77, 29, 76, 55, 75, 55, 74, 55, 73, 55, 72, 55, 71, 55, 70, 55, 69, 55, 68, 55, 67, 55, 66, 55, 65, 55, 64, 55, 63, 55, 62, 55, 61, 55, 60, 55, 59, 55, 58, 55, 57, 55, 56, 55, 55, 52, 54, 52, 53, 51, 52, 51, 51, 50, 50, 50, 49, 49, 48, 49, 47, 48, 46, 48, 45, 48, 44, 49, 43, 49, 42, 50, 41, 50, 40, 50, 39, 50, 38, 51, 37, 51, 36, 51, 35, 
51, 34, 51, 33, 51, 32, 51, 31, 54, 30, 55, 29, 55, 28, 55, 27, 56, 26, 59, 26], 20:[61, 36, 63, 37, 64, 38, 66, 39, 67, 40, 69, 41, 70, 42, 72, 43, 74, 44, 76, 45, 78, 46, 109, 47, 108, 48, 107, 49, 108, 50, 109, 51, 109, 52, 108, 53, 109, 54, 110, 55, 110, 56, 116, 57, 116, 58, 116, 59, 116, 60, 116, 61, 114, 62, 115, 63, 115, 64, 114, 65, 115, 66, 115, 67, 116, 68, 117, 69, 117, 70, 117, 71, 118, 72, 118, 73, 118, 74, 119, 75, 119, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 118, 
83, 117, 84, 117, 85, 117, 86, 117, 87, 117, 88, 117, 89, 117, 90, 117, 91, 116, 92, 116, 93, 116, 94, 116, 95, 116, 96, 116, 97, 116, 98, 116, 99, 116, 100, 116, 101, 116, 102, 116, 103, 117, 104, 117, 105, 117, 106, 117, 107, 117, 108, 117, 109, 117, 110, 117, 111, 117, 112, 120, 113, 123, 114, 124, 115, 125, 116, 124, 117, 123, 118, 124, 119, 128, 120, 129, 121, 129, 122, 129, 123, 128, 124, 124, 125, 122, 126, 121, 127, 121, 128, 119, 129, 116, 130, 115, 131, 111, 132, 109, 133, 106, 134, 104, 
135, 102, 136, 99, 137, 94, 138, 92, 138, 89, 137, 86, 136, 86, 135, 83, 134, 55, 133, 52, 132, 52, 131, 53, 130, 52, 129, 54, 128, 53, 127, 43, 126, 43, 125, 43, 124, 43, 123, 43, 122, 43, 121, 43, 120, 43, 119, 42, 118, 16, 117, 16, 116, 16, 115, 16, 114, 17, 113, 17, 112, 17, 111, 13, 110, 13, 109, 13, 108, 13, 107, 14, 106, 18, 105, 19, 104, 22, 103, 28, 102, 28, 101, 29, 100, 29, 99, 29, 98, 29, 97, 29, 96, 29, 95, 29, 94, 29, 93, 29, 92, 29, 91, 29, 90, 29, 89, 29, 88, 29, 87, 29, 86, 29, 85, 
29, 84, 29, 83, 29, 82, 29, 81, 29, 80, 26, 79, 25, 78, 24, 77, 23, 76, 23, 75, 26, 74, 33, 73, 37, 72, 37, 71, 37, 70, 36, 69, 35, 68, 35, 67, 34, 66, 33, 65, 33, 64, 33, 63, 32, 62, 32, 61, 32, 60, 32, 59, 32, 58, 32, 57, 33, 56, 34, 55, 35, 54, 36, 53, 39, 52, 41, 51, 42, 50, 42, 49, 43, 48, 43, 47, 43, 46, 42, 45, 41, 44, 40, 43, 40, 42, 40, 41, 41, 40, 53, 39, 54, 38, 60, 37, 58, 36, 61, 36], 21:[89, 21, 90, 22, 90, 23, 90, 24, 90, 25, 90, 26, 90, 27, 90, 28, 90, 29, 91, 30, 91, 31, 91, 32, 
91, 33, 91, 34, 91, 35, 91, 36, 91, 37, 92, 38, 92, 39, 92, 40, 92, 41, 93, 42, 95, 43, 98, 44, 101, 45, 102, 46, 102, 47, 106, 48, 109, 49, 111, 50, 113, 51, 116, 52, 117, 53, 119, 54, 120, 55, 121, 56, 122, 57, 123, 58, 124, 59, 125, 60, 126, 61, 127, 62, 128, 63, 129, 64, 130, 65, 131, 66, 132, 67, 133, 68, 134, 69, 135, 70, 136, 71, 136, 72, 135, 73, 132, 74, 132, 75, 132, 76, 133, 77, 132, 78, 132, 79, 132, 80, 132, 81, 132, 82, 132, 83, 132, 84, 132, 85, 132, 86, 132, 87, 132, 88, 133, 89, 
132, 90, 133, 91, 133, 92, 133, 93, 133, 94, 133, 95, 135, 96, 135, 97, 136, 98, 137, 99, 136, 100, 134, 101, 131, 102, 129, 103, 126, 104, 125, 105, 124, 106, 126, 107, 127, 108, 127, 109, 126, 110, 126, 111, 127, 112, 128, 113, 128, 114, 125, 115, 113, 116, 111, 117, 109, 118, 108, 119, 108, 120, 106, 121, 104, 122, 104, 123, 114, 124, 113, 125, 112, 126, 99, 127, 102, 128, 102, 129, 102, 130, 103, 131, 100, 132, 100, 133, 100, 134, 97, 135, 97, 136, 96, 137, 89, 138, 84, 138, 82, 137, 78, 136, 
77, 135, 75, 134, 73, 133, 72, 132, 72, 131, 69, 130, 68, 129, 60, 128, 58, 127, 49, 126, 48, 125, 46, 124, 46, 123, 47, 122, 47, 121, 38, 120, 36, 119, 36, 118, 21, 117, 16, 116, 17, 115, 10, 114, 9, 113, 9, 112, 10, 111, 11, 110, 7, 109, 4, 108, 2, 107, 2, 106, 3, 105, 3, 104, 4, 103, 5, 102, 5, 101, 5, 100, 5, 99, 4, 98, 4, 97, 4, 96, 5, 95, 6, 94, 6, 93, 7, 92, 13, 91, 16, 90, 18, 89, 18, 88, 17, 87, 17, 86, 17, 85, 17, 84, 17, 83, 17, 82, 17, 81, 17, 80, 17, 79, 17, 78, 18, 77, 18, 76, 18, 75, 
18, 74, 17, 73, 16, 72, 14, 71, 12, 70, 11, 69, 11, 68, 12, 67, 13, 66, 14, 65, 14, 64, 15, 63, 16, 62, 16, 61, 17, 60, 18, 59, 18, 58, 19, 57, 20, 56, 21, 55, 21, 54, 22, 53, 22, 52, 23, 51, 23, 50, 23, 49, 23, 48, 23, 47, 27, 46, 27, 45, 28, 44, 29, 43, 29, 42, 30, 41, 31, 40, 32, 39, 32, 38, 33, 37, 34, 36, 71, 35, 72, 34, 73, 33, 80, 32, 81, 31, 81, 30, 81, 29, 81, 28, 81, 27, 81, 26, 81, 25, 81, 24, 81, 23, 82, 22, 83, 21, 89, 21], 22:[55, 14, 56, 15, 56, 16, 56, 17, 56, 18, 55, 19, 55, 20, 
55, 21, 54, 22, 54, 23, 54, 24, 53, 25, 53, 26, 54, 27, 55, 28, 57, 29, 58, 30, 60, 31, 61, 32, 63, 33, 64, 34, 68, 35, 70, 36, 72, 37, 73, 38, 73, 39, 74, 40, 76, 41, 101, 42, 102, 43, 103, 44, 103, 45, 103, 46, 102, 47, 102, 48, 102, 49, 101, 50, 101, 51, 100, 52, 100, 53, 101, 54, 120, 55, 120, 56, 121, 57, 121, 58, 121, 59, 121, 60, 122, 61, 121, 62, 122, 63, 122, 64, 122, 65, 122, 66, 122, 67, 122, 68, 122, 69, 123, 70, 123, 71, 123, 72, 123, 73, 123, 74, 123, 75, 124, 76, 124, 77, 124, 78, 
123, 79, 123, 80, 124, 81, 124, 82, 125, 83, 125, 84, 125, 85, 126, 86, 126, 87, 126, 88, 126, 89, 126, 90, 126, 91, 126, 92, 127, 93, 127, 94, 126, 95, 126, 96, 126, 97, 125, 98, 124, 99, 124, 100, 124, 101, 124, 102, 125, 103, 125, 104, 125, 105, 124, 106, 128, 107, 129, 108, 129, 109, 129, 110, 129, 111, 129, 112, 129, 113, 129, 114, 129, 115, 129, 116, 129, 117, 129, 118, 130, 119, 129, 120, 127, 121, 124, 122, 132, 123, 132, 124, 132, 125, 131, 126, 129, 127, 127, 128, 125, 129, 124, 130, 122, 
131, 120, 132, 116, 133, 117, 134, 117, 135, 116, 136, 102, 137, 100, 138, 60, 138, 59, 137, 58, 136, 58, 135, 56, 134, 58, 133, 58, 132, 58, 131, 57, 130, 56, 129, 55, 128, 49, 127, 48, 126, 41, 125, 41, 124, 41, 123, 39, 122, 38, 121, 38, 120, 35, 119, 33, 118, 33, 117, 33, 116, 45, 115, 44, 114, 44, 113, 44, 112, 43, 111, 41, 110, 16, 109, 14, 108, 13, 107, 13, 106, 13, 105, 13, 104, 15, 103, 16, 102, 14, 101, 13, 100, 13, 99, 12, 98, 13, 97, 15, 96, 15, 95, 15, 94, 16, 93, 16, 92, 17, 91, 20, 
90, 20, 89, 19, 88, 18, 87, 18, 86, 19, 85, 19, 84, 19, 83, 19, 82, 20, 81, 22, 80, 22, 79, 32, 78, 32, 77, 32, 76, 32, 75, 32, 74, 33, 73, 33, 72, 33, 71, 29, 70, 27, 69, 26, 68, 26, 67, 27, 66, 28, 65, 28, 64, 28, 63, 29, 62, 29, 61, 30, 60, 30, 59, 30, 58, 31, 57, 31, 56, 32, 55, 32, 54, 32, 53, 33, 52, 33, 51, 34, 50, 34, 49, 35, 48, 35, 47, 35, 46, 36, 45, 36, 44, 37, 43, 37, 42, 38, 41, 38, 40, 39, 39, 39, 38, 39, 37, 40, 36, 40, 35, 41, 34, 40, 33, 39, 32, 39, 31, 39, 30, 40, 29, 40, 28, 41, 
27, 42, 26, 43, 25, 42, 24, 41, 23, 40, 22, 39, 21, 39, 20, 40, 19, 42, 18, 48, 17, 48, 16, 49, 15, 50, 14, 55, 14], 23:[100, 18, 110, 19, 113, 20, 113, 21, 117, 22, 119, 23, 119, 24, 120, 25, 121, 26, 121, 27, 122, 28, 122, 29, 122, 30, 131, 31, 131, 32, 133, 33, 134, 34, 134, 35, 136, 36, 136, 37, 137, 38, 137, 39, 137, 40, 136, 41, 137, 42, 138, 43, 138, 44, 137, 45, 137, 46, 138, 47, 138, 48, 138, 49, 138, 50, 138, 51, 137, 52, 137, 53, 136, 54, 136, 55, 134, 56, 133, 57, 132, 58, 113, 59, 123, 
60, 125, 61, 125, 62, 126, 63, 129, 64, 129, 65, 132, 66, 132, 67, 133, 68, 133, 69, 134, 70, 134, 71, 135, 72, 135, 73, 135, 74, 135, 75, 134, 76, 134, 77, 133, 78, 133, 79, 131, 80, 131, 81, 127, 82, 121, 83, 121, 84, 117, 85, 110, 86, 123, 87, 123, 88, 125, 89, 125, 90, 125, 91, 124, 92, 125, 93, 125, 94, 126, 95, 126, 96, 126, 97, 126, 98, 126, 99, 125, 100, 117, 101, 117, 102, 118, 103, 126, 104, 126, 105, 132, 106, 132, 107, 135, 108, 136, 109, 136, 110, 137, 111, 137, 112, 142, 113, 142, 114, 
141, 115, 146, 116, 141, 117, 141, 118, 111, 119, 114, 120, 113, 121, 98, 122, 96, 123, 93, 124, 91, 125, 88, 126, 88, 127, 88, 128, 93, 129, 93, 130, 94, 131, 97, 132, 97, 133, 91, 134, 85, 135, 84, 136, 84, 137, 84, 138, 82, 139, 81, 140, 80, 141, 74, 141, 71, 140, 70, 139, 69, 138, 68, 137, 68, 136, 68, 135, 68, 134, 68, 133, 39, 132, 35, 131, 34, 130, 29, 129, 29, 128, 28, 127, 27, 126, 27, 125, 27, 124, 29, 123, 29, 122, 21, 121, 18, 120, 17, 119, 18, 118, 16, 117, 12, 116, 11, 115, 11, 114, 
11, 113, 14, 112, 14, 111, 9, 110, 7, 109, 8, 108, 8, 107, 10, 106, 10, 105, 11, 104, 12, 103, 20, 102, 20, 101, 20, 100, 20, 99, 21, 98, 21, 97, 22, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 28, 87, 31, 86, 32, 85, 34, 84, 32, 83, 31, 82, 22, 81, 21, 80, 20, 79, 18, 78, 16, 77, 16, 76, 15, 75, 15, 74, 14, 73, 14, 72, 14, 71, 15, 70, 14, 69, 14, 68, 15, 67, 16, 66, 17, 65, 20, 64, 20, 63, 21, 62, 22, 61, 23, 60, 24, 59, 25, 58, 27, 57, 33, 56, 54, 55, 54, 54, 54, 53, 55, 
52, 55, 51, 55, 50, 56, 49, 56, 48, 57, 47, 58, 46, 59, 45, 60, 44, 63, 43, 68, 42, 68, 41, 67, 40, 67, 39, 67, 38, 67, 37, 68, 36, 68, 35, 70, 34, 70, 33, 71, 32, 74, 31, 75, 30, 76, 29, 76, 28, 76, 27, 76, 26, 79, 25, 79, 24, 81, 23, 87, 22, 88, 21, 91, 20, 91, 19, 98, 18, 100, 18], 24:[61, 26, 62, 27, 63, 28, 63, 29, 63, 30, 63, 31, 62, 32, 63, 33, 65, 34, 68, 35, 70, 36, 73, 37, 75, 38, 78, 39, 81, 40, 118, 41, 118, 42, 118, 43, 117, 44, 133, 45, 133, 46, 132, 47, 130, 48, 128, 49, 133, 50, 132, 
51, 130, 52, 127, 53, 117, 54, 117, 55, 117, 56, 117, 57, 117, 58, 117, 59, 117, 60, 117, 61, 117, 62, 117, 63, 117, 64, 117, 65, 117, 66, 117, 67, 117, 68, 117, 69, 118, 70, 120, 71, 121, 72, 121, 73, 121, 74, 121, 75, 120, 76, 120, 77, 121, 78, 120, 79, 120, 80, 119, 81, 117, 82, 117, 83, 117, 84, 118, 85, 118, 86, 123, 87, 124, 88, 124, 89, 125, 90, 125, 91, 125, 92, 126, 93, 127, 94, 127, 95, 128, 96, 129, 97, 129, 98, 129, 99, 127, 100, 127, 101, 127, 102, 127, 103, 127, 104, 127, 105, 127, 
106, 127, 107, 127, 108, 127, 109, 128, 110, 130, 111, 131, 112, 132, 113, 133, 114, 135, 115, 135, 116, 134, 117, 134, 118, 134, 119, 133, 120, 130, 121, 130, 122, 129, 123, 125, 124, 126, 125, 125, 126, 119, 127, 119, 128, 117, 129, 115, 130, 114, 131, 112, 132, 108, 133, 106, 134, 106, 135, 105, 136, 95, 137, 88, 138, 86, 138, 75, 137, 64, 136, 62, 135, 62, 134, 56, 133, 53, 132, 53, 131, 47, 130, 39, 129, 32, 128, 32, 127, 26, 126, 25, 125, 24, 124, 19, 123, 18, 122, 16, 121, 16, 120, 15, 119, 
14, 118, 14, 117, 15, 116, 17, 115, 16, 114, 15, 113, 15, 112, 16, 111, 16, 110, 18, 109, 17, 108, 19, 107, 16, 106, 15, 105, 15, 104, 15, 103, 15, 102, 15, 101, 14, 100, 14, 99, 17, 98, 18, 97, 17, 96, 18, 95, 20, 94, 28, 93, 30, 92, 30, 91, 31, 90, 33, 89, 38, 88, 38, 87, 38, 86, 37, 85, 37, 84, 37, 83, 37, 82, 37, 81, 37, 80, 37, 79, 37, 78, 37, 77, 37, 76, 36, 75, 33, 74, 32, 73, 31, 72, 31, 71, 31, 70, 32, 69, 32, 68, 32, 67, 32, 66, 32, 65, 33, 64, 35, 63, 38, 62, 38, 61, 39, 60, 40, 59, 41, 
58, 41, 57, 42, 56, 43, 55, 43, 54, 44, 53, 45, 52, 45, 51, 46, 50, 46, 49, 47, 48, 48, 47, 48, 46, 49, 45, 50, 44, 50, 43, 51, 42, 51, 41, 52, 40, 52, 39, 53, 38, 54, 37, 54, 36, 55, 35, 56, 34, 56, 33, 56, 32, 56, 31, 55, 30, 55, 29, 55, 28, 56, 27, 58, 26, 61, 26], 25:[106, 2, 106, 3, 106, 4, 106, 5, 110, 6, 113, 7, 116, 8, 117, 9, 112, 10, 115, 11, 117, 12, 112, 13, 106, 14, 106, 15, 106, 16, 106, 17, 106, 18, 107, 19, 107, 20, 108, 21, 109, 22, 110, 23, 112, 24, 114, 25, 116, 26, 117, 27, 119, 
28, 120, 29, 120, 30, 121, 31, 122, 32, 122, 33, 122, 34, 122, 35, 122, 36, 122, 37, 122, 38, 122, 39, 122, 40, 122, 41, 121, 42, 120, 43, 119, 44, 118, 45, 118, 46, 118, 47, 118, 48, 120, 49, 135, 50, 135, 51, 135, 52, 133, 53, 138, 54, 139, 55, 139, 56, 140, 57, 142, 58, 138, 59, 131, 60, 131, 61, 131, 62, 131, 63, 131, 64, 131, 65, 131, 66, 131, 67, 131, 68, 131, 69, 131, 70, 118, 71, 118, 72, 118, 73, 118, 74, 118, 75, 118, 76, 118, 77, 118, 78, 118, 79, 118, 80, 118, 81, 118, 82, 118, 83, 118, 
84, 118, 85, 118, 86, 118, 87, 118, 88, 118, 89, 118, 90, 118, 91, 118, 92, 118, 93, 118, 94, 118, 95, 118, 96, 118, 97, 124, 98, 125, 99, 125, 100, 125, 101, 128, 102, 129, 103, 129, 104, 129, 105, 128, 106, 128, 107, 128, 108, 127, 109, 123, 110, 126, 111, 129, 112, 129, 113, 129, 114, 128, 115, 128, 116, 119, 117, 118, 118, 116, 119, 108, 120, 108, 121, 106, 122, 106, 123, 107, 124, 106, 125, 105, 126, 102, 127, 102, 128, 101, 129, 101, 130, 102, 131, 101, 132, 97, 133, 95, 134, 93, 135, 91, 136, 
92, 137, 92, 138, 90, 139, 75, 140, 75, 141, 74, 142, 62, 142, 52, 141, 48, 140, 47, 139, 47, 138, 46, 137, 42, 136, 41, 135, 40, 134, 39, 133, 40, 132, 35, 131, 34, 130, 34, 129, 32, 128, 31, 127, 27, 126, 26, 125, 26, 124, 26, 123, 27, 122, 26, 121, 25, 120, 25, 119, 27, 118, 30, 117, 29, 116, 25, 115, 24, 114, 23, 113, 23, 112, 22, 111, 22, 110, 22, 109, 22, 108, 22, 107, 22, 106, 23, 105, 24, 104, 25, 103, 30, 102, 30, 101, 30, 100, 31, 99, 31, 98, 30, 97, 29, 96, 28, 95, 26, 94, 25, 93, 25, 
92, 25, 91, 25, 90, 24, 89, 24, 88, 24, 87, 25, 86, 25, 85, 25, 84, 25, 83, 26, 82, 26, 81, 26, 80, 27, 79, 27, 78, 28, 77, 29, 76, 29, 75, 30, 74, 30, 73, 31, 72, 31, 71, 32, 70, 32, 69, 33, 68, 33, 67, 34, 66, 34, 65, 34, 64, 34, 63, 35, 62, 35, 61, 35, 60, 34, 59, 34, 58, 34, 57, 35, 56, 35, 55, 35, 54, 36, 53, 36, 52, 37, 51, 38, 50, 39, 49, 40, 48, 41, 47, 43, 46, 45, 45, 45, 44, 45, 43, 45, 42, 45, 41, 46, 40, 46, 39, 46, 38, 46, 37, 46, 36, 46, 35, 46, 34, 46, 33, 46, 32, 46, 31, 46, 30, 45, 
29, 45, 28, 91, 27, 93, 26, 95, 25, 97, 24, 98, 23, 100, 22, 100, 21, 101, 20, 101, 19, 103, 18, 103, 17, 103, 16, 103, 15, 103, 14, 103, 13, 103, 12, 103, 11, 103, 10, 103, 9, 103, 8, 103, 7, 103, 6, 103, 5, 103, 4, 102, 3, 103, 2, 106, 2], 26:[70, 1, 70, 2, 69, 3, 69, 4, 73, 5, 80, 6, 82, 7, 110, 8, 110, 9, 110, 10, 110, 11, 113, 12, 118, 13, 121, 14, 118, 15, 116, 16, 120, 17, 121, 18, 118, 19, 110, 20, 110, 21, 110, 22, 110, 23, 110, 24, 111, 25, 111, 26, 112, 27, 113, 28, 114, 29, 115, 30, 116, 
31, 118, 32, 120, 33, 121, 34, 123, 35, 124, 36, 125, 37, 126, 38, 126, 39, 127, 40, 127, 41, 127, 42, 127, 43, 128, 44, 127, 45, 127, 46, 127, 47, 126, 48, 126, 49, 126, 50, 126, 51, 124, 52, 124, 53, 123, 54, 123, 55, 123, 56, 123, 57, 123, 58, 123, 59, 123, 60, 123, 61, 123, 62, 123, 63, 123, 64, 123, 65, 123, 66, 123, 67, 123, 68, 123, 69, 123, 70, 123, 71, 123, 72, 123, 73, 123, 74, 123, 75, 123, 76, 123, 77, 123, 78, 123, 79, 123, 80, 123, 81, 123, 82, 123, 83, 123, 84, 123, 85, 123, 86, 123, 
87, 123, 88, 123, 89, 123, 90, 123, 91, 123, 92, 123, 93, 123, 94, 123, 95, 123, 96, 123, 97, 123, 98, 123, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 124, 110, 124, 111, 124, 112, 124, 113, 124, 114, 124, 115, 123, 116, 122, 117, 120, 118, 117, 119, 117, 120, 118, 121, 115, 122, 111, 123, 113, 124, 113, 125, 116, 126, 116, 127, 115, 128, 113, 129, 105, 130, 94, 131, 95, 132, 95, 133, 95, 134, 95, 135, 95, 136, 94, 137, 93, 138, 91, 139, 
90, 140, 92, 141, 91, 142, 90, 143, 86, 144, 83, 144, 81, 143, 81, 142, 80, 141, 80, 140, 81, 139, 79, 138, 42, 137, 38, 136, 36, 135, 34, 134, 33, 133, 32, 132, 31, 131, 30, 130, 30, 129, 30, 128, 30, 127, 30, 126, 30, 125, 30, 124, 30, 123, 31, 122, 31, 121, 32, 120, 33, 119, 33, 118, 33, 117, 33, 116, 31, 115, 31, 114, 30, 113, 28, 112, 26, 111, 24, 110, 24, 109, 24, 108, 23, 107, 22, 106, 15, 105, 13, 104, 11, 103, 10, 102, 10, 101, 10, 100, 10, 99, 10, 98, 10, 97, 11, 96, 11, 95, 11, 94, 11, 
93, 11, 92, 11, 91, 11, 90, 11, 89, 11, 88, 11, 87, 11, 86, 11, 85, 12, 84, 15, 83, 15, 82, 15, 81, 15, 80, 15, 79, 15, 78, 15, 77, 15, 76, 15, 75, 15, 74, 15, 73, 15, 72, 15, 71, 15, 70, 15, 69, 15, 68, 15, 67, 15, 66, 15, 65, 15, 64, 15, 63, 15, 62, 15, 61, 15, 60, 15, 59, 15, 58, 15, 57, 15, 56, 15, 55, 15, 54, 14, 53, 13, 52, 12, 51, 11, 50, 10, 49, 10, 48, 10, 47, 9, 46, 9, 45, 9, 44, 10, 43, 10, 42, 11, 41, 11, 40, 12, 39, 13, 38, 14, 37, 16, 36, 18, 35, 19, 34, 21, 33, 23, 32, 24, 31, 25, 
30, 25, 29, 26, 28, 27, 27, 28, 26, 28, 25, 28, 24, 28, 23, 28, 22, 28, 21, 28, 20, 28, 19, 28, 18, 28, 17, 28, 16, 28, 15, 28, 14, 28, 13, 28, 12, 28, 11, 66, 10, 66, 9, 66, 8, 66, 7, 66, 6, 66, 5, 66, 4, 66, 3, 65, 2, 65, 1, 70, 1], 27:[79, 20, 82, 21, 84, 22, 86, 23, 87, 24, 89, 25, 90, 26, 91, 27, 92, 28, 93, 29, 94, 30, 94, 31, 95, 32, 96, 33, 96, 34, 97, 35, 97, 36, 98, 37, 98, 38, 99, 39, 99, 40, 99, 41, 99, 42, 100, 43, 100, 44, 100, 45, 100, 46, 100, 47, 101, 48, 101, 49, 101, 50, 101, 51, 
102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 113, 57, 114, 58, 115, 59, 115, 60, 115, 61, 115, 62, 115, 63, 115, 64, 115, 65, 115, 66, 115, 67, 115, 68, 115, 69, 115, 70, 115, 71, 115, 72, 115, 73, 115, 74, 115, 75, 115, 76, 115, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 114, 84, 114, 85, 114, 86, 114, 87, 114, 88, 114, 89, 114, 90, 118, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 119, 97, 120, 98, 121, 99, 122, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 
122, 107, 121, 108, 121, 109, 122, 110, 123, 111, 124, 112, 124, 113, 125, 114, 125, 115, 125, 116, 124, 117, 123, 118, 123, 119, 123, 120, 123, 121, 125, 122, 124, 123, 122, 124, 121, 125, 120, 126, 120, 127, 120, 128, 119, 129, 119, 130, 119, 131, 116, 132, 115, 133, 107, 134, 69, 134, 66, 133, 64, 132, 64, 131, 64, 130, 65, 129, 66, 128, 58, 127, 54, 126, 35, 125, 31, 124, 31, 123, 31, 122, 32, 121, 33, 120, 33, 119, 34, 118, 34, 117, 34, 116, 34, 115, 34, 114, 33, 113, 32, 112, 31, 111, 31, 110, 
30, 109, 29, 108, 29, 107, 29, 106, 28, 105, 24, 104, 22, 103, 22, 102, 22, 101, 23, 100, 24, 99, 25, 98, 25, 97, 25, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 26, 87, 28, 86, 39, 85, 39, 84, 39, 83, 39, 82, 39, 81, 39, 80, 39, 79, 39, 78, 39, 77, 39, 76, 40, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 42, 67, 41, 66, 41, 65, 41, 64, 41, 63, 41, 62, 41, 61, 41, 60, 41, 59, 41, 58, 41, 57, 41, 56, 41, 55, 41, 54, 41, 53, 42, 52, 42, 51, 42, 50, 42, 49, 42, 
48, 42, 47, 43, 46, 43, 45, 43, 44, 43, 43, 44, 42, 44, 41, 44, 40, 45, 39, 45, 38, 45, 37, 46, 36, 46, 35, 47, 34, 47, 33, 48, 32, 49, 31, 50, 30, 51, 29, 52, 28, 53, 27, 54, 26, 55, 25, 56, 24, 58, 23, 60, 22, 62, 21, 64, 20, 79, 20], 28:[74, 12, 76, 13, 77, 14, 77, 15, 77, 16, 77, 17, 77, 18, 78, 19, 78, 20, 78, 21, 78, 22, 78, 23, 78, 24, 78, 25, 78, 26, 78, 27, 78, 28, 79, 29, 79, 30, 79, 31, 79, 32, 79, 33, 79, 34, 79, 35, 79, 36, 80, 37, 88, 38, 89, 39, 88, 40, 91, 41, 93, 42, 91, 43, 92, 
44, 94, 45, 95, 46, 96, 47, 96, 48, 97, 49, 98, 50, 98, 51, 97, 52, 98, 53, 98, 54, 96, 55, 97, 56, 97, 57, 98, 58, 98, 59, 99, 60, 100, 61, 101, 62, 101, 63, 102, 64, 102, 65, 103, 66, 103, 67, 103, 68, 103, 69, 104, 70, 104, 71, 103, 72, 104, 73, 107, 74, 109, 75, 112, 76, 113, 77, 117, 78, 119, 79, 120, 80, 120, 81, 121, 82, 122, 83, 122, 84, 123, 85, 124, 86, 125, 87, 125, 88, 126, 89, 126, 90, 127, 91, 128, 92, 129, 93, 129, 94, 131, 95, 131, 96, 132, 97, 134, 98, 135, 99, 135, 100, 136, 101, 
136, 102, 134, 103, 129, 104, 129, 105, 129, 106, 129, 107, 129, 108, 129, 109, 129, 110, 129, 111, 129, 112, 129, 113, 133, 114, 134, 115, 135, 116, 135, 117, 136, 118, 138, 119, 138, 120, 138, 121, 137, 122, 137, 123, 135, 124, 132, 125, 128, 126, 127, 127, 126, 128, 127, 129, 128, 130, 126, 131, 124, 132, 124, 133, 122, 134, 118, 135, 118, 136, 116, 137, 112, 138, 74, 139, 73, 140, 71, 140, 55, 139, 54, 138, 55, 137, 56, 136, 43, 135, 43, 134, 36, 133, 33, 132, 28, 131, 25, 130, 23, 129, 22, 128, 
22, 127, 18, 126, 16, 125, 13, 124, 11, 123, 11, 122, 11, 121, 11, 120, 11, 119, 12, 118, 12, 117, 13, 116, 13, 115, 13, 114, 11, 113, 10, 112, 10, 111, 10, 110, 11, 109, 19, 108, 22, 107, 23, 106, 23, 105, 23, 104, 23, 103, 23, 102, 23, 101, 23, 100, 23, 99, 23, 98, 23, 97, 23, 96, 23, 95, 23, 94, 23, 93, 23, 92, 23, 91, 22, 90, 21, 89, 21, 88, 19, 87, 19, 86, 18, 85, 18, 84, 18, 83, 19, 82, 19, 81, 19, 80, 20, 79, 20, 78, 21, 77, 22, 76, 22, 75, 22, 74, 23, 73, 25, 72, 25, 71, 26, 70, 25, 69, 25, 
68, 26, 67, 26, 66, 26, 65, 26, 64, 26, 63, 27, 62, 28, 61, 28, 60, 29, 59, 30, 58, 31, 57, 31, 56, 28, 55, 28, 54, 29, 53, 30, 52, 31, 51, 32, 50, 32, 49, 34, 48, 36, 47, 37, 46, 62, 45, 63, 44, 64, 43, 65, 42, 65, 41, 65, 40, 65, 39, 65, 38, 65, 37, 65, 36, 65, 35, 66, 34, 65, 33, 65, 32, 66, 31, 66, 30, 66, 29, 66, 28, 66, 27, 66, 26, 66, 25, 66, 24, 66, 23, 66, 22, 66, 21, 66, 20, 66, 19, 66, 18, 66, 17, 66, 16, 66, 15, 67, 14, 67, 13, 69, 12, 74, 12], 29:[60, 18, 61, 19, 60, 20, 61, 21, 62, 
22, 60, 23, 67, 24, 67, 25, 67, 26, 66, 27, 110, 28, 114, 29, 112, 30, 115, 31, 111, 32, 110, 33, 111, 34, 112, 35, 112, 36, 113, 37, 113, 38, 114, 39, 115, 40, 116, 41, 116, 42, 117, 43, 118, 44, 119, 45, 119, 46, 120, 47, 121, 48, 121, 49, 121, 50, 121, 51, 122, 52, 122, 53, 122, 54, 123, 55, 123, 56, 123, 57, 123, 58, 124, 59, 124, 60, 128, 61, 126, 62, 125, 63, 127, 64, 124, 65, 127, 66, 129, 67, 129, 68, 130, 69, 132, 70, 135, 71, 138, 72, 141, 73, 142, 74, 142, 75, 144, 76, 145, 77, 147, 78, 
147, 79, 147, 80, 148, 81, 147, 82, 147, 83, 148, 84, 148, 85, 150, 86, 149, 87, 149, 88, 149, 89, 149, 90, 147, 91, 147, 92, 146, 93, 145, 94, 144, 95, 142, 96, 140, 97, 137, 98, 137, 99, 137, 100, 137, 101, 139, 102, 141, 103, 142, 104, 143, 105, 144, 106, 143, 107, 145, 108, 145, 109, 147, 110, 147, 111, 147, 112, 148, 113, 148, 114, 149, 115, 149, 116, 148, 117, 148, 118, 148, 119, 149, 120, 147, 121, 147, 122, 146, 123, 147, 124, 145, 125, 145, 126, 145, 127, 144, 128, 142, 129, 142, 130, 140, 
131, 139, 132, 137, 133, 137, 134, 131, 135, 128, 136, 123, 137, 120, 138, 83, 139, 77, 140, 76, 141, 76, 142, 75, 143, 65, 143, 64, 142, 65, 141, 65, 140, 63, 139, 63, 138, 50, 137, 50, 136, 51, 135, 51, 134, 52, 133, 46, 132, 46, 131, 44, 130, 39, 129, 29, 128, 28, 127, 24, 126, 21, 125, 21, 124, 20, 123, 18, 122, 13, 121, 9, 120, 8, 119, 7, 118, 7, 117, 5, 116, 5, 115, 5, 114, 5, 113, 4, 112, 4, 111, 3, 110, 3, 109, 4, 108, 2, 107, 2, 106, 2, 105, 3, 104, 3, 103, 3, 102, 4, 101, 4, 100, 3, 99, 
3, 98, 0, 97, 2, 96, 1, 95, -1, 94, 0, 93, -1, 92, -1, 91, -1, 90, 0, 89, 2, 88, 2, 87, 3, 86, 3, 85, 3, 84, 5, 83, 6, 82, 7, 81, 8, 80, 9, 79, 9, 78, 11, 77, 13, 76, 13, 75, 13, 74, 14, 73, 14, 72, 14, 71, 15, 70, 14, 69, 14, 68, 14, 67, 14, 66, 14, 65, 15, 64, 16, 63, 17, 62, 17, 61, 18, 60, 19, 59, 20, 58, 20, 57, 21, 56, 22, 55, 22, 54, 23, 53, 23, 52, 24, 51, 24, 50, 25, 49, 25, 48, 25, 47, 26, 46, 25, 45, 25, 44, 50, 43, 49, 42, 49, 41, 49, 40, 49, 39, 49, 38, 49, 37, 50, 36, 50, 35, 50, 34, 
51, 33, 51, 32, 51, 31, 52, 30, 52, 29, 52, 28, 52, 27, 52, 26, 52, 25, 51, 24, 52, 23, 57, 22, 56, 21, 57, 20, 57, 19, 57, 18, 60, 18], 30:[85, 27, 87, 28, 89, 29, 90, 30, 91, 31, 93, 32, 95, 33, 96, 34, 98, 35, 123, 36, 126, 37, 125, 38, 126, 39, 127, 40, 128, 41, 128, 42, 128, 43, 129, 44, 129, 45, 130, 46, 130, 47, 130, 48, 130, 49, 130, 50, 131, 51, 131, 52, 132, 53, 132, 54, 133, 55, 133, 56, 133, 57, 132, 58, 132, 59, 132, 60, 133, 61, 133, 62, 134, 63, 135, 64, 135, 65, 136, 66, 137, 67, 
138, 68, 138, 69, 139, 70, 139, 71, 139, 72, 139, 73, 140, 74, 139, 75, 139, 76, 139, 77, 139, 78, 138, 79, 138, 80, 137, 81, 137, 82, 135, 83, 135, 84, 135, 85, 135, 86, 134, 87, 134, 88, 134, 89, 135, 90, 135, 91, 135, 92, 135, 93, 135, 94, 135, 95, 135, 96, 135, 97, 135, 98, 135, 99, 135, 100, 135, 101, 135, 102, 135, 103, 135, 104, 135, 105, 139, 106, 138, 107, 137, 108, 142, 109, 142, 110, 143, 111, 143, 112, 144, 113, 144, 114, 142, 115, 140, 116, 139, 117, 139, 118, 138, 119, 137, 120, 134, 
121, 133, 122, 133, 123, 133, 124, 128, 125, 127, 126, 124, 127, 122, 128, 114, 129, 111, 130, 110, 131, 106, 132, 104, 133, 101, 134, 99, 135, 98, 136, 95, 137, 90, 138, 74, 139, 70, 140, 68, 141, 64, 141, 65, 140, 66, 139, 54, 138, 54, 137, 54, 136, 55, 135, 55, 134, 52, 133, 50, 132, 50, 131, 50, 130, 51, 129, 52, 128, 51, 127, 41, 126, 41, 125, 41, 124, 42, 123, 42, 122, 42, 121, 42, 120, 40, 119, 15, 118, 16, 117, 16, 116, 17, 115, 17, 114, 17, 113, 14, 112, 13, 111, 13, 110, 13, 109, 14, 108, 
15, 107, 18, 106, 21, 105, 27, 104, 27, 103, 28, 102, 28, 101, 28, 100, 28, 99, 28, 98, 28, 97, 28, 96, 28, 95, 28, 94, 28, 93, 28, 92, 28, 91, 28, 90, 28, 89, 28, 88, 28, 87, 28, 86, 28, 85, 28, 84, 27, 83, 25, 82, 24, 81, 23, 80, 23, 79, 23, 78, 30, 77, 34, 76, 36, 75, 36, 74, 35, 73, 34, 72, 33, 71, 33, 70, 32, 69, 32, 68, 32, 67, 31, 66, 31, 65, 31, 64, 31, 63, 31, 62, 31, 61, 32, 60, 33, 59, 34, 58, 36, 57, 40, 56, 41, 55, 41, 54, 41, 53, 41, 52, 41, 51, 41, 50, 39, 49, 39, 48, 39, 47, 39, 46, 
41, 45, 51, 44, 54, 43, 56, 42, 70, 41, 71, 40, 72, 39, 72, 38, 73, 37, 73, 36, 74, 35, 74, 34, 74, 33, 75, 32, 75, 31, 76, 30, 77, 29, 80, 28, 81, 27, 85, 27], 31:[[577, 3, 593, 4, 614, 5, 628, 6, 635, 7, 644, 8, 650, 9, 660, 10, 665, 11, 851, 12, 852, 13, 853, 14, 855, 15, 857, 16, 858, 17, 860, 18, 862, 19, 864, 20, 866, 21, 867, 22, 869, 23, 871, 24, 873, 25, 875, 26, 877, 27, 879, 28, 880, 29, 881, 30, 880, 31, 879, 32, 877, 33, 877, 34, 877, 35, 877, 36, 877, 37, 877, 38, 877, 39, 877, 40, 
877, 41, 879, 42, 881, 43, 881, 44, 881, 45, 881, 46, 881, 47, 881, 48, 881, 49, 881, 50, 881, 51, 881, 52, 881, 53, 881, 54, 881, 55, 881, 56, 881, 57, 881, 58, 881, 59, 879, 60, 877, 61, 877, 62, 877, 63, 877, 64, 877, 65, 877, 66, 877, 67, 877, 68, 877, 69, 945, 70, 946, 71, 948, 72, 949, 73, 951, 74, 953, 75, 955, 76, 956, 77, 958, 78, 960, 79, 962, 80, 964, 81, 966, 82, 968, 83, 969, 84, 972, 85, 973, 86, 974, 87, 974, 88, 974, 89, 972, 90, 971, 91, 970, 92, 970, 93, 970, 94, 970, 95, 970, 96, 
970, 97, 970, 98, 972, 99, 973, 100, 975, 101, 975, 102, 975, 103, 975, 104, 975, 105, 975, 106, 975, 107, 975, 108, 975, 109, 975, 110, 975, 111, 975, 112, 975, 113, 975, 114, 975, 115, 975, 116, 975, 117, 974, 118, 972, 119, 970, 120, 971, 121, 971, 122, 971, 123, 971, 124, 971, 125, 971, 126, 971, 127, 971, 128, 971, 129, 971, 130, 971, 131, 971, 132, 971, 133, 971, 134, 971, 135, 971, 136, 971, 137, 976, 138, 977, 139, 980, 140, 981, 141, 981, 142, 984, 143, 985, 144, 985, 145, 988, 146, 989, 
147, 989, 148, 992, 149, 993, 150, 993, 151, 996, 152, 997, 153, 997, 154, 1E3, 155, 1001, 156, 1001, 157, 1003, 158, 1004, 159, 1005, 160, 1007, 161, 1008, 162, 1009, 163, 1010, 164, 1012, 165, 1012, 166, 1013, 167, 1015, 168, 1016, 169, 1016, 170, 1017, 171, 1019, 172, 1019, 173, 1020, 174, 1022, 175, 1023, 176, 1023, 177, 1024, 178, 1026, 179, 1027, 180, 1027, 181, 1029, 182, 1030, 183, 1030, 184, 1032, 185, 1033, 186, 1034, 187, 1034, 188, 1036, 189, 1037, 190, 1037, 191, 1037, 192, 1039, 193, 
1040, 194, 1040, 195, 1041, 196, 1043, 197, 1044, 198, 1044, 199, 1045, 200, 1046, 201, 1047, 202, 1047, 203, 1048, 204, 1049, 205, 1050, 206, 1050, 207, 1052, 208, 1053, 209, 1053, 210, 1053, 211, 1054, 212, 1055, 213, 1056, 214, 1056, 215, 1057, 216, 1058, 217, 1059, 218, 1059, 219, 1060, 220, 1061, 221, 1062, 222, 1062, 223, 1062, 224, 1064, 225, 1064, 226, 1065, 227, 1065, 228, 1066, 229, 1067, 230, 1067, 231, 1067, 232, 1069, 233, 1069, 234, 1070, 235, 1070, 236, 1070, 237, 1071, 238, 1072, 
239, 1072, 240, 1072, 241, 1074, 242, 1074, 243, 1075, 244, 1075, 245, 1075, 246, 1076, 247, 1076, 248, 1077, 249, 1077, 250, 1077, 251, 1078, 252, 1079, 253, 1079, 254, 1079, 255, 1080, 256, 1081, 257, 1081, 258, 1081, 259, 1081, 260, 1082, 261, 1083, 262, 1083, 263, 1083, 264, 1084, 265, 1084, 266, 1085, 267, 1086, 268, 1086, 269, 1086, 270, 1086, 271, 1088, 272, 1088, 273, 1088, 274, 1088, 275, 1088, 276, 1089, 277, 1089, 278, 1089, 279, 1089, 280, 1090, 281, 1091, 282, 1091, 283, 1090, 284, 1091, 
285, 1092, 286, 1092, 287, 1092, 288, 1092, 289, 1092, 290, 1093, 291, 1093, 292, 1093, 293, 1093, 294, 1094, 295, 1094, 296, 1094, 297, 1094, 298, 1094, 299, 1095, 300, 1095, 301, 1095, 302, 1095, 303, 1095, 304, 1095, 305, 1096, 306, 1096, 307, 1095, 308, 1096, 309, 1096, 310, 1097, 311, 1097, 312, 1096, 313, 1097, 314, 1097, 315, 1097, 316, 1097, 317, 1097, 318, 1097, 319, 1097, 320, 1097, 321, 1097, 322, 1097, 323, 1097, 324, 1098, 325, 1098, 326, 1097, 327, 1097, 328, 1098, 329, 1098, 330, 1098, 
331, 1098, 332, 1097, 333, 1098, 334, 1098, 335, 1098, 336, 1098, 337, 1098, 338, 1098, 339, 1098, 340, 1071, 340, 1071, 339, 1071, 338, 1070, 337, 1070, 336, 1069, 335, 1069, 334, 1069, 333, 1068, 332, 1068, 331, 1067, 330, 1067, 329, 1066, 328, 1066, 327, 1066, 326, 1065, 325, 1065, 324, 1064, 323, 1064, 322, 1063, 321, 1063, 320, 1062, 319, 1062, 318, 1061, 317, 1061, 316, 1060, 315, 1060, 314, 1059, 313, 1059, 312, 1058, 311, 1058, 310, 1057, 309, 1057, 308, 1056, 307, 1056, 306, 1055, 305, 1055, 
304, 1054, 303, 1053, 302, 1053, 301, 1052, 300, 1052, 299, 1051, 298, 1050, 297, 1050, 296, 1049, 295, 1049, 294, 1048, 293, 1047, 292, 1047, 291, 1046, 290, 1045, 289, 1045, 288, 1044, 287, 1043, 286, 1042, 285, 1042, 284, 1041, 283, 1040, 282, 1040, 281, 1039, 280, 1038, 279, 1037, 278, 1037, 277, 1036, 276, 1035, 275, 1034, 274, 1034, 273, 1033, 272, 1032, 271, 1031, 270, 1030, 269, 1030, 268, 1029, 267, 1028, 266, 1027, 265, 1026, 264, 1025, 263, 1024, 262, 1024, 261, 1023, 260, 1022, 259, 1021, 
258, 1020, 257, 1019, 256, 1018, 255, 1017, 254, 1016, 253, 1015, 252, 1014, 251, 1013, 250, 1013, 249, 1011, 248, 1011, 247, 1010, 246, 1009, 245, 1008, 244, 1007, 243, 1006, 242, 1005, 241, 1003, 240, 1002, 239, 1001, 238, 1E3, 237, 999, 236, 998, 235, 997, 234, 996, 233, 995, 232, 993, 231, 992, 230, 991, 229, 990, 228, 989, 227, 988, 226, 987, 225, 985, 224, 984, 223, 983, 222, 982, 221, 980, 220, 979, 219, 978, 218, 976, 217, 975, 216, 974, 215, 972, 214, 971, 213, 941, 212, 939, 211, 937, 210, 
935, 209, 934, 208, 932, 207, 930, 206, 929, 205, 927, 204, 925, 203, 923, 202, 921, 201, 919, 200, 917, 199, 916, 198, 915, 197, 915, 196, 915, 195, 915, 194, 915, 193, 915, 192, 915, 191, 915, 190, 915, 189, 915, 188, 915, 187, 915, 186, 915, 185, 914, 184, 913, 183, 907, 182, 906, 181, 905, 180, 904, 179, 904, 178, 904, 177, 904, 176, 904, 175, 904, 174, 904, 173, 903, 172, 901, 171, 899, 170, 898, 169, 896, 168, 895, 167, 893, 166, 892, 165, 890, 164, 888, 163, 886, 162, 885, 161, 874, 160, 873, 
159, 872, 158, 871, 157, 871, 156, 870, 155, 847, 154, 845, 153, 843, 152, 842, 151, 840, 150, 838, 149, 836, 148, 835, 147, 833, 146, 831, 145, 829, 144, 827, 143, 825, 142, 824, 141, 822, 140, 822, 139, 822, 138, 822, 137, 822, 136, 822, 135, 822, 134, 822, 133, 822, 132, 822, 131, 822, 130, 821, 129, 819, 128, 817, 127, 814, 126, 812, 125, 809, 124, 806, 123, 803, 122, 801, 121, 798, 120, 795, 119, 792, 118, 789, 117, 786, 116, 783, 115, 779, 114, 776, 113, 773, 112, 769, 111, 765, 110, 762, 109, 
759, 108, 756, 107, 752, 106, 748, 105, 744, 104, 740, 103, 736, 102, 732, 101, 728, 100, 724, 99, 719, 98, 714, 97, 709, 96, 704, 95, 699, 94, 693, 93, 688, 92, 680, 91, 675, 90, 670, 89, 662, 88, 655, 87, 645, 86, 637, 85, 629, 84, 615, 83, 604, 82, 579, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 
554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 554, 12, 554, 11, 554, 10, 554, 9, 554, 8, 554, 7, 554, 6, 554, 5, 554, 4, 556, 3, 577, 3], [551, 3, 554, 4, 554, 5, 554, 6, 554, 7, 
554, 8, 554, 9, 554, 10, 554, 11, 554, 12, 554, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 
554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 544, 81, 519, 82, 508, 83, 494, 84, 485, 85, 478, 86, 468, 87, 461, 88, 453, 89, 447, 90, 441, 91, 435, 92, 430, 93, 423, 94, 419, 95, 414, 96, 408, 97, 404, 98, 399, 99, 395, 100, 390, 101, 386, 102, 382, 103, 378, 104, 375, 105, 371, 106, 367, 107, 363, 108, 359, 109, 356, 110, 353, 111, 349, 112, 346, 113, 343, 114, 340, 115, 337, 116, 334, 117, 
331, 118, 328, 119, 325, 120, 322, 121, 319, 122, 317, 123, 315, 124, 314, 125, 314, 126, 314, 127, 314, 128, 314, 129, 314, 130, 314, 131, 314, 132, 314, 133, 314, 134, 313, 135, 311, 136, 309, 137, 307, 138, 305, 139, 303, 140, 302, 141, 300, 142, 298, 143, 296, 144, 295, 145, 293, 146, 291, 147, 289, 148, 266, 149, 265, 150, 264, 151, 263, 152, 252, 153, 251, 154, 249, 155, 247, 156, 246, 157, 244, 158, 242, 159, 240, 160, 239, 161, 237, 162, 235, 163, 234, 164, 233, 165, 233, 166, 233, 167, 233, 
168, 233, 169, 233, 170, 233, 171, 232, 172, 230, 173, 229, 174, 223, 175, 222, 176, 222, 177, 222, 178, 222, 179, 222, 180, 222, 181, 222, 182, 222, 183, 222, 184, 222, 185, 222, 186, 222, 187, 221, 188, 221, 189, 220, 190, 219, 191, 217, 192, 215, 193, 213, 194, 211, 195, 209, 196, 207, 197, 206, 198, 204, 199, 202, 200, 200, 201, 198, 202, 196, 203, 164, 204, 162, 205, 161, 206, 160, 207, 158, 208, 157, 209, 155, 210, 154, 211, 153, 212, 151, 213, 150, 214, 149, 215, 147, 216, 146, 217, 145, 218, 
144, 219, 142, 220, 141, 221, 140, 222, 139, 223, 137, 224, 136, 225, 135, 226, 134, 227, 133, 228, 132, 229, 130, 230, 129, 231, 128, 232, 127, 233, 126, 234, 125, 235, 123, 236, 122, 237, 121, 238, 120, 239, 119, 240, 118, 241, 117, 242, 116, 243, 115, 244, 114, 245, 113, 246, 112, 247, 111, 248, 110, 249, 109, 250, 108, 251, 107, 252, 106, 253, 105, 254, 104, 255, 103, 256, 102, 257, 102, 258, 101, 259, 100, 260, 99, 261, 98, 262, 97, 263, 96, 264, 95, 265, 95, 266, 94, 267, 93, 268, 92, 269, 
91, 270, 90, 271, 90, 272, 89, 273, 88, 274, 87, 275, 87, 276, 86, 277, 85, 278, 84, 279, 84, 280, 83, 281, 82, 282, 82, 283, 81, 284, 80, 285, 79, 286, 79, 287, 78, 288, 77, 289, 77, 290, 76, 291, 75, 292, 75, 293, 74, 294, 73, 295, 73, 296, 72, 297, 72, 298, 71, 299, 70, 300, 70, 301, 69, 302, 69, 303, 68, 304, 68, 305, 67, 306, 66, 307, 66, 308, 65, 309, 65, 310, 64, 311, 64, 312, 63, 313, 63, 314, 62, 315, 62, 316, 61, 317, 61, 318, 60, 319, 60, 320, 59, 321, 59, 322, 58, 323, 58, 324, 57, 325, 
57, 326, 56, 327, 56, 328, 56, 329, 55, 330, 55, 331, 54, 332, 54, 333, 54, 334, 53, 335, 53, 336, 52, 337, 52, 338, 52, 339, 51, 340, 24, 340, 24, 339, 25, 338, 25, 337, 25, 336, 24, 335, 25, 334, 25, 333, 25, 332, 25, 331, 25, 330, 25, 329, 25, 328, 25, 327, 25, 326, 25, 325, 25, 324, 26, 323, 25, 322, 25, 321, 25, 320, 26, 319, 26, 318, 26, 317, 25, 316, 26, 315, 26, 314, 26, 313, 26, 312, 26, 311, 26, 310, 27, 309, 27, 308, 27, 307, 27, 306, 27, 305, 28, 304, 28, 303, 28, 302, 28, 301, 28, 300, 
29, 299, 29, 298, 28, 297, 28, 296, 29, 295, 30, 294, 30, 293, 29, 292, 30, 291, 30, 290, 31, 289, 31, 288, 31, 287, 31, 286, 32, 285, 32, 284, 32, 283, 32, 282, 32, 281, 33, 280, 33, 279, 33, 278, 33, 277, 34, 276, 35, 275, 35, 274, 35, 273, 35, 272, 36, 271, 37, 270, 36, 269, 37, 268, 38, 267, 39, 266, 39, 265, 39, 264, 39, 263, 40, 262, 40, 261, 41, 260, 41, 259, 41, 258, 42, 257, 43, 256, 43, 255, 43, 254, 44, 253, 44, 252, 45, 251, 46, 250, 46, 249, 46, 248, 47, 247, 48, 246, 48, 245, 48, 244, 
48, 243, 49, 242, 50, 241, 50, 240, 51, 239, 51, 238, 53, 237, 53, 236, 53, 235, 53, 234, 54, 233, 55, 232, 55, 231, 56, 230, 57, 229, 58, 228, 58, 227, 58, 226, 59, 225, 60, 224, 61, 223, 61, 222, 61, 221, 63, 220, 64, 219, 64, 218, 64, 217, 65, 216, 66, 215, 67, 214, 67, 213, 68, 212, 69, 211, 70, 210, 70, 209, 71, 208, 72, 207, 73, 206, 73, 205, 74, 204, 76, 203, 76, 202, 76, 201, 77, 200, 79, 199, 79, 198, 80, 197, 81, 196, 82, 195, 82, 194, 83, 193, 85, 192, 85, 191, 86, 190, 87, 189, 89, 188, 
89, 187, 90, 186, 91, 185, 92, 184, 93, 183, 94, 182, 96, 181, 96, 180, 97, 179, 98, 178, 99, 177, 100, 176, 100, 175, 102, 174, 103, 173, 104, 172, 105, 171, 106, 170, 107, 169, 108, 168, 110, 167, 110, 166, 111, 165, 112, 164, 114, 163, 115, 162, 116, 161, 118, 160, 118, 159, 119, 158, 121, 157, 122, 156, 123, 155, 125, 154, 126, 153, 127, 152, 129, 151, 130, 150, 131, 149, 133, 148, 134, 147, 134, 146, 137, 145, 138, 144, 139, 143, 141, 142, 142, 141, 143, 140, 145, 139, 146, 138, 148, 137, 149, 
136, 150, 135, 150, 134, 151, 133, 154, 132, 155, 131, 155, 130, 158, 129, 159, 128, 160, 127, 163, 126, 166, 125, 166, 124, 166, 123, 166, 122, 166, 121, 166, 120, 166, 119, 166, 118, 166, 117, 166, 116, 166, 115, 166, 114, 166, 113, 166, 112, 166, 111, 167, 110, 166, 109, 164, 108, 163, 107, 162, 106, 162, 105, 162, 104, 162, 103, 162, 102, 162, 101, 162, 100, 162, 99, 162, 98, 162, 97, 162, 96, 162, 95, 162, 94, 162, 93, 162, 92, 162, 91, 164, 90, 166, 89, 167, 88, 167, 87, 167, 86, 167, 85, 167, 
84, 167, 83, 167, 82, 166, 81, 165, 80, 164, 79, 163, 78, 163, 77, 164, 76, 166, 75, 168, 74, 170, 73, 172, 72, 174, 71, 176, 70, 178, 69, 179, 68, 181, 67, 183, 66, 185, 65, 187, 64, 189, 63, 191, 62, 192, 61, 194, 60, 259, 59, 259, 58, 259, 57, 259, 56, 259, 55, 259, 54, 258, 53, 256, 52, 256, 51, 255, 50, 255, 49, 255, 48, 255, 47, 255, 46, 255, 45, 255, 44, 255, 43, 255, 42, 255, 41, 255, 40, 255, 39, 255, 38, 255, 37, 255, 36, 257, 35, 259, 34, 260, 33, 260, 32, 260, 31, 260, 30, 260, 29, 260, 
28, 260, 27, 259, 26, 257, 25, 256, 24, 256, 23, 256, 22, 257, 21, 259, 20, 261, 19, 263, 18, 265, 17, 267, 16, 269, 15, 271, 14, 273, 13, 275, 12, 276, 11, 278, 10, 280, 9, 282, 8, 283, 7, 285, 6, 509, 5, 530, 4, 546, 3, 551, 3], [1098, 341, 1098, 342, 1098, 343, 1098, 344, 1099, 345, 1098, 346, 1098, 347, 1098, 348, 1098, 349, 1098, 350, 1098, 351, 1098, 352, 1098, 353, 1098, 354, 1098, 355, 1098, 356, 1098, 357, 1098, 358, 1098, 359, 1098, 360, 1097, 361, 1097, 362, 1097, 363, 1098, 364, 1097, 
365, 1097, 366, 1097, 367, 1097, 368, 1097, 369, 1097, 370, 1096, 371, 1096, 372, 1096, 373, 1096, 374, 1096, 375, 1095, 376, 1095, 377, 1096, 378, 1095, 379, 1095, 380, 1094, 381, 1095, 382, 1095, 383, 1094, 384, 1094, 385, 1093, 386, 1094, 387, 1094, 388, 1093, 389, 1093, 390, 1092, 391, 1092, 392, 1092, 393, 1092, 394, 1091, 395, 1091, 396, 1091, 397, 1091, 398, 1091, 399, 1090, 400, 1090, 401, 1090, 402, 1090, 403, 1090, 404, 1090, 405, 1090, 406, 1090, 407, 1090, 408, 1090, 409, 1090, 410, 1090, 
411, 1090, 412, 1090, 413, 1089, 414, 1089, 415, 1089, 416, 1089, 417, 1090, 418, 1090, 419, 1090, 420, 1090, 421, 1090, 422, 1090, 423, 1089, 424, 1089, 425, 1089, 426, 1089, 427, 1089, 428, 1089, 429, 1089, 430, 1089, 431, 1089, 432, 1088, 433, 1088, 434, 1088, 435, 1088, 436, 1088, 437, 1087, 438, 1087, 439, 1087, 440, 1087, 441, 1087, 442, 1087, 443, 1086, 444, 1086, 445, 1086, 446, 1086, 447, 1085, 448, 1085, 449, 1085, 450, 1085, 451, 1084, 452, 1084, 453, 1084, 454, 1084, 455, 1083, 456, 1083, 
457, 1083, 458, 1082, 459, 1082, 460, 1082, 461, 1081, 462, 1081, 463, 1081, 464, 1081, 465, 1080, 466, 1080, 467, 1079, 468, 1079, 469, 1079, 470, 1078, 471, 1078, 472, 1078, 473, 1077, 474, 1077, 475, 1076, 476, 1076, 477, 1076, 478, 1075, 479, 1075, 480, 1074, 481, 1074, 482, 1074, 483, 1073, 484, 1073, 485, 1072, 486, 1072, 487, 1071, 488, 1071, 489, 1070, 490, 1070, 491, 1069, 492, 1069, 493, 1068, 494, 1068, 495, 1067, 496, 1067, 497, 1066, 498, 1066, 499, 1065, 500, 1064, 501, 1064, 502, 1063, 
503, 1063, 504, 1062, 505, 1062, 506, 1061, 507, 1061, 508, 1060, 509, 1059, 510, 1059, 511, 1059, 512, 1059, 513, 1059, 514, 1059, 515, 1059, 516, 1059, 517, 1059, 518, 1058, 519, 1058, 520, 1057, 521, 1056, 522, 1055, 523, 1055, 524, 1054, 525, 1053, 526, 1052, 527, 1051, 528, 1050, 529, 1046, 530, 1045, 531, 1044, 532, 1043, 533, 1042, 534, 1042, 535, 1041, 536, 1040, 537, 1039, 538, 1038, 539, 1037, 540, 1037, 541, 1036, 542, 1035, 543, 1034, 544, 1033, 545, 1032, 546, 1032, 547, 1031, 548, 1030, 
549, 1029, 550, 1028, 551, 1027, 552, 1026, 553, 1025, 554, 1024, 555, 1023, 556, 1022, 557, 1021, 558, 1020, 559, 1019, 560, 1018, 561, 1017, 562, 1016, 563, 1016, 564, 1015, 565, 1013, 566, 1012, 567, 1011, 568, 1010, 569, 1010, 570, 1010, 571, 1010, 572, 1010, 573, 1010, 574, 1010, 575, 1009, 576, 1008, 577, 1007, 578, 1005, 579, 1004, 580, 1002, 581, 1001, 582, 999, 583, 997, 584, 996, 585, 994, 586, 993, 587, 991, 588, 990, 589, 988, 590, 986, 591, 985, 592, 984, 593, 963, 594, 962, 595, 961, 
596, 961, 597, 960, 598, 959, 599, 958, 600, 949, 601, 947, 602, 946, 603, 944, 604, 943, 605, 942, 606, 940, 607, 939, 608, 937, 609, 936, 610, 935, 611, 934, 612, 932, 613, 931, 614, 930, 615, 928, 616, 928, 617, 928, 618, 928, 619, 928, 620, 928, 621, 928, 622, 927, 623, 926, 624, 924, 625, 920, 626, 918, 627, 917, 628, 917, 629, 917, 630, 917, 631, 917, 632, 917, 633, 917, 634, 917, 635, 917, 636, 917, 637, 917, 638, 917, 639, 917, 640, 917, 641, 916, 642, 914, 643, 913, 644, 911, 645, 910, 646, 
908, 647, 906, 648, 905, 649, 903, 650, 902, 651, 900, 652, 899, 653, 897, 654, 896, 655, 894, 656, 892, 657, 891, 658, 891, 659, 861, 660, 858, 661, 855, 662, 853, 663, 850, 664, 848, 665, 845, 666, 843, 667, 840, 668, 837, 669, 834, 670, 832, 671, 829, 672, 825, 673, 822, 674, 819, 675, 816, 676, 813, 677, 810, 678, 807, 679, 803, 680, 800, 681, 796, 682, 793, 683, 789, 684, 786, 685, 786, 686, 786, 687, 786, 688, 784, 689, 780, 690, 776, 691, 773, 692, 754, 693, 749, 694, 745, 695, 740, 696, 735, 
697, 730, 698, 725, 699, 720, 700, 714, 701, 708, 702, 703, 703, 696, 704, 689, 705, 683, 706, 675, 707, 667, 708, 658, 709, 648, 710, 637, 711, 626, 712, 625, 713, 624, 714, 617, 715, 609, 715, 554, 714, 554, 713, 554, 712, 554, 711, 554, 710, 554, 709, 554, 708, 554, 707, 554, 706, 554, 705, 554, 704, 554, 703, 554, 702, 554, 701, 554, 700, 554, 699, 554, 698, 554, 697, 554, 696, 554, 695, 554, 694, 554, 693, 554, 692, 554, 691, 554, 690, 554, 689, 554, 688, 554, 687, 554, 686, 554, 685, 554, 684, 
554, 683, 554, 682, 554, 681, 554, 680, 554, 679, 554, 678, 554, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 
633, 594, 632, 604, 631, 627, 630, 643, 629, 650, 628, 672, 627, 678, 626, 685, 625, 691, 624, 698, 623, 704, 622, 711, 621, 712, 620, 719, 619, 725, 618, 731, 617, 732, 616, 738, 615, 745, 614, 746, 613, 752, 612, 758, 611, 759, 610, 765, 609, 771, 608, 772, 607, 778, 606, 779, 605, 784, 604, 785, 603, 791, 602, 797, 601, 798, 600, 803, 599, 804, 598, 809, 597, 810, 596, 811, 595, 817, 594, 822, 593, 823, 592, 830, 591, 831, 590, 832, 589, 836, 588, 837, 587, 842, 586, 843, 585, 845, 584, 850, 583, 
851, 582, 856, 581, 857, 580, 861, 579, 862, 578, 862, 577, 862, 576, 862, 575, 862, 574, 862, 573, 862, 572, 862, 571, 862, 570, 862, 569, 862, 568, 862, 567, 859, 566, 858, 565, 858, 564, 858, 563, 858, 562, 858, 561, 858, 560, 858, 559, 858, 558, 858, 557, 858, 556, 858, 555, 858, 554, 858, 553, 858, 552, 858, 551, 858, 550, 858, 549, 859, 548, 861, 547, 862, 546, 862, 545, 862, 544, 862, 543, 862, 542, 862, 541, 862, 540, 862, 539, 861, 538, 859, 537, 858, 536, 859, 535, 860, 534, 861, 533, 863, 
532, 864, 531, 866, 530, 868, 529, 869, 528, 871, 527, 872, 526, 874, 525, 876, 524, 877, 523, 879, 522, 880, 521, 882, 520, 883, 519, 885, 518, 886, 517, 888, 516, 889, 515, 948, 514, 949, 513, 951, 512, 953, 511, 954, 510, 955, 509, 955, 508, 955, 507, 955, 506, 955, 505, 955, 504, 955, 503, 955, 502, 954, 501, 952, 500, 951, 499, 951, 498, 951, 497, 951, 496, 951, 495, 951, 494, 951, 493, 951, 492, 951, 491, 951, 490, 951, 489, 951, 488, 951, 487, 951, 486, 951, 485, 951, 484, 953, 483, 954, 482, 
955, 481, 955, 480, 955, 479, 955, 478, 955, 477, 955, 476, 956, 475, 955, 474, 953, 473, 952, 472, 951, 471, 951, 470, 952, 469, 954, 468, 955, 467, 957, 466, 959, 465, 960, 464, 962, 463, 963, 462, 965, 461, 967, 460, 968, 459, 970, 458, 971, 457, 973, 456, 974, 455, 976, 454, 977, 453, 978, 452, 980, 451, 982, 450, 1034, 449, 1035, 448, 1035, 447, 1036, 446, 1037, 445, 1038, 444, 1038, 443, 1038, 442, 1039, 441, 1039, 440, 1041, 439, 1042, 438, 1042, 437, 1042, 436, 1043, 435, 1044, 434, 1045, 
433, 1045, 432, 1046, 431, 1046, 430, 1046, 429, 1047, 428, 1048, 427, 1048, 426, 1048, 425, 1049, 424, 1050, 423, 1051, 422, 1051, 421, 1051, 420, 1052, 419, 1052, 418, 1053, 417, 1054, 416, 1054, 415, 1054, 414, 1055, 413, 1056, 412, 1056, 411, 1056, 410, 1056, 409, 1057, 408, 1058, 407, 1058, 406, 1058, 405, 1058, 404, 1059, 403, 1059, 402, 1060, 401, 1061, 400, 1061, 399, 1061, 398, 1062, 397, 1062, 396, 1062, 395, 1063, 394, 1063, 393, 1063, 392, 1063, 391, 1063, 390, 1064, 389, 1065, 388, 1065, 
387, 1065, 386, 1065, 385, 1066, 384, 1066, 383, 1066, 382, 1067, 381, 1067, 380, 1067, 379, 1067, 378, 1067, 377, 1068, 376, 1068, 375, 1068, 374, 1069, 373, 1069, 372, 1069, 371, 1069, 370, 1069, 369, 1069, 368, 1070, 367, 1070, 366, 1070, 365, 1070, 364, 1070, 363, 1070, 362, 1070, 361, 1071, 360, 1071, 359, 1071, 358, 1071, 357, 1071, 356, 1071, 355, 1071, 354, 1071, 353, 1071, 352, 1071, 351, 1071, 350, 1071, 349, 1071, 348, 1071, 347, 1071, 346, 1071, 345, 1071, 344, 1071, 343, 1071, 342, 1071, 
341, 1098, 341], [51, 341, 51, 342, 51, 343, 51, 344, 52, 345, 52, 346, 52, 347, 51, 348, 51, 349, 51, 350, 51, 351, 51, 352, 51, 353, 51, 354, 51, 355, 51, 356, 52, 357, 52, 358, 52, 359, 52, 360, 52, 361, 52, 362, 52, 363, 53, 364, 53, 365, 53, 366, 53, 367, 53, 368, 53, 369, 54, 370, 54, 371, 54, 372, 54, 373, 54, 374, 55, 375, 55, 376, 56, 377, 56, 378, 56, 379, 56, 380, 56, 381, 57, 382, 57, 383, 57, 384, 58, 385, 58, 386, 58, 387, 58, 388, 59, 389, 59, 390, 60, 391, 60, 392, 60, 393, 60, 394, 
60, 395, 61, 396, 61, 397, 61, 398, 61, 399, 62, 400, 63, 401, 63, 402, 64, 403, 64, 404, 64, 405, 64, 406, 65, 407, 66, 408, 66, 409, 66, 410, 67, 411, 67, 412, 68, 413, 68, 414, 69, 415, 69, 416, 70, 417, 70, 418, 71, 419, 72, 420, 72, 421, 72, 422, 73, 423, 74, 424, 74, 425, 74, 426, 75, 427, 76, 428, 76, 429, 77, 430, 77, 431, 77, 432, 78, 433, 79, 434, 80, 435, 80, 436, 81, 437, 81, 438, 82, 439, 83, 440, 84, 441, 84, 442, 85, 443, 85, 444, 86, 445, 87, 446, 87, 447, 139, 448, 140, 449, 142, 
450, 143, 451, 144, 452, 146, 453, 148, 454, 149, 455, 150, 456, 152, 457, 154, 458, 155, 459, 157, 460, 158, 461, 160, 462, 162, 463, 163, 464, 165, 465, 166, 466, 168, 467, 169, 468, 169, 469, 168, 470, 166, 471, 165, 472, 165, 473, 165, 474, 165, 475, 165, 476, 165, 477, 165, 478, 166, 479, 167, 480, 168, 481, 170, 482, 169, 483, 169, 484, 169, 485, 170, 486, 170, 487, 170, 488, 170, 489, 170, 490, 170, 491, 170, 492, 170, 493, 170, 494, 170, 495, 170, 496, 169, 497, 168, 498, 167, 499, 166, 500, 
166, 501, 166, 502, 166, 503, 166, 504, 166, 505, 166, 506, 166, 507, 166, 508, 169, 509, 170, 510, 172, 511, 173, 512, 232, 513, 233, 514, 235, 515, 236, 516, 237, 517, 239, 518, 240, 519, 242, 520, 244, 521, 245, 522, 247, 523, 248, 524, 250, 525, 252, 526, 253, 527, 255, 528, 256, 529, 258, 530, 259, 531, 261, 532, 262, 533, 262, 534, 261, 535, 259, 536, 258, 537, 258, 538, 258, 539, 258, 540, 258, 541, 258, 542, 258, 543, 258, 544, 260, 545, 262, 546, 262, 547, 263, 548, 263, 549, 263, 550, 263, 
551, 263, 552, 263, 553, 263, 554, 263, 555, 263, 556, 263, 557, 263, 558, 263, 559, 263, 560, 263, 561, 263, 562, 262, 563, 261, 564, 258, 565, 258, 566, 259, 567, 259, 568, 259, 569, 259, 570, 259, 571, 259, 572, 259, 573, 259, 574, 259, 575, 259, 576, 259, 577, 259, 578, 261, 579, 266, 580, 267, 581, 272, 582, 273, 583, 278, 584, 279, 585, 280, 586, 285, 587, 286, 588, 291, 589, 292, 590, 298, 591, 299, 592, 300, 593, 306, 594, 312, 595, 313, 596, 313, 597, 319, 598, 320, 599, 325, 600, 326, 601, 
331, 602, 337, 603, 338, 604, 344, 605, 345, 606, 351, 607, 352, 608, 358, 609, 364, 610, 365, 611, 370, 612, 376, 613, 377, 614, 385, 615, 390, 616, 392, 617, 397, 618, 404, 619, 410, 620, 417, 621, 419, 622, 425, 623, 431, 624, 438, 625, 445, 626, 451, 627, 471, 628, 480, 629, 496, 630, 519, 631, 529, 632, 551, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 
652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 554, 677, 554, 678, 554, 679, 554, 680, 554, 681, 554, 682, 554, 683, 554, 684, 554, 685, 554, 686, 554, 687, 554, 688, 554, 689, 554, 690, 554, 691, 554, 692, 554, 693, 554, 694, 554, 695, 554, 696, 554, 697, 554, 698, 554, 699, 554, 700, 554, 701, 554, 702, 
554, 703, 554, 704, 554, 705, 554, 706, 554, 707, 554, 708, 554, 709, 554, 710, 554, 711, 554, 712, 554, 713, 554, 714, 513, 715, 506, 715, 498, 714, 498, 713, 493, 712, 483, 711, 473, 710, 463, 709, 456, 708, 448, 707, 440, 706, 433, 705, 426, 704, 420, 703, 414, 702, 408, 701, 403, 700, 398, 699, 392, 698, 387, 697, 381, 696, 377, 695, 373, 694, 368, 693, 350, 692, 346, 691, 342, 690, 338, 689, 337, 688, 337, 687, 337, 686, 336, 685, 333, 684, 330, 683, 326, 682, 323, 681, 319, 680, 316, 679, 313, 
678, 309, 677, 306, 676, 303, 675, 300, 674, 298, 673, 295, 672, 292, 671, 289, 670, 286, 669, 283, 668, 280, 667, 278, 666, 275, 665, 272, 664, 270, 663, 267, 662, 264, 661, 262, 660, 259, 659, 257, 658, 255, 657, 229, 656, 228, 655, 227, 654, 225, 653, 223, 652, 222, 651, 220, 650, 219, 649, 217, 648, 216, 647, 214, 646, 213, 645, 211, 644, 210, 643, 208, 642, 206, 641, 205, 640, 204, 639, 204, 638, 203, 637, 203, 636, 203, 635, 203, 634, 203, 633, 203, 632, 203, 631, 203, 630, 203, 629, 203, 628, 
203, 627, 203, 626, 202, 625, 200, 624, 196, 623, 195, 622, 194, 621, 192, 620, 192, 619, 192, 618, 192, 617, 192, 616, 192, 615, 192, 614, 192, 613, 190, 612, 189, 611, 187, 610, 186, 609, 185, 608, 183, 607, 182, 606, 180, 605, 179, 604, 178, 603, 176, 602, 175, 601, 173, 600, 172, 599, 163, 598, 162, 597, 161, 596, 160, 595, 159, 594, 159, 593, 157, 592, 137, 591, 136, 590, 134, 589, 133, 588, 131, 587, 130, 586, 128, 585, 127, 584, 125, 583, 123, 582, 122, 581, 120, 580, 119, 579, 117, 578, 115, 
577, 114, 576, 112, 575, 111, 574, 111, 573, 111, 572, 111, 571, 111, 570, 111, 569, 110, 568, 110, 567, 109, 566, 108, 565, 107, 564, 106, 563, 105, 562, 104, 561, 103, 560, 102, 559, 101, 558, 100, 557, 99, 556, 98, 555, 97, 554, 97, 553, 96, 552, 95, 551, 94, 550, 93, 549, 92, 548, 91, 547, 90, 546, 89, 545, 88, 544, 88, 543, 87, 542, 86, 541, 85, 540, 84, 539, 84, 538, 83, 537, 82, 536, 81, 535, 80, 534, 80, 533, 79, 532, 78, 531, 77, 530, 72, 529, 71, 528, 70, 527, 69, 526, 69, 525, 68, 524, 
67, 523, 66, 522, 66, 521, 65, 520, 64, 519, 64, 518, 63, 517, 63, 516, 63, 515, 63, 514, 63, 513, 64, 512, 64, 511, 63, 510, 63, 509, 62, 508, 62, 507, 61, 506, 60, 505, 60, 504, 59, 503, 59, 502, 58, 501, 57, 500, 57, 499, 56, 498, 56, 497, 55, 496, 55, 495, 54, 494, 54, 493, 53, 492, 53, 491, 52, 490, 52, 489, 51, 488, 51, 487, 50, 486, 50, 485, 49, 484, 49, 483, 49, 482, 48, 481, 48, 480, 47, 479, 47, 478, 47, 477, 46, 476, 46, 475, 45, 474, 45, 473, 45, 472, 44, 471, 44, 470, 43, 469, 43, 468, 
43, 467, 42, 466, 42, 465, 42, 464, 41, 463, 41, 462, 41, 461, 40, 460, 40, 459, 40, 458, 40, 457, 39, 456, 39, 455, 39, 454, 38, 453, 38, 452, 38, 451, 38, 450, 37, 449, 37, 448, 37, 447, 37, 446, 37, 445, 36, 444, 36, 443, 36, 442, 36, 441, 35, 440, 35, 439, 35, 438, 35, 437, 35, 436, 35, 435, 35, 434, 34, 433, 34, 432, 34, 431, 34, 430, 34, 429, 33, 428, 33, 427, 33, 426, 33, 425, 33, 424, 33, 423, 33, 422, 33, 421, 33, 420, 33, 419, 33, 418, 33, 417, 33, 416, 33, 415, 33, 414, 33, 413, 32, 412, 
32, 411, 32, 410, 32, 409, 32, 408, 32, 407, 32, 406, 32, 405, 32, 404, 32, 403, 33, 402, 33, 401, 33, 400, 32, 399, 31, 398, 31, 397, 32, 396, 31, 395, 31, 394, 30, 393, 30, 392, 30, 391, 30, 390, 29, 389, 29, 388, 29, 387, 29, 386, 29, 385, 28, 384, 28, 383, 28, 382, 28, 381, 28, 380, 27, 379, 27, 378, 27, 377, 27, 376, 27, 375, 26, 374, 26, 373, 27, 372, 27, 371, 26, 370, 26, 369, 26, 368, 26, 367, 26, 366, 25, 365, 25, 364, 25, 363, 25, 362, 25, 361, 25, 360, 24, 359, 25, 358, 25, 357, 25, 356, 
24, 355, 24, 354, 25, 353, 25, 352, 25, 351, 24, 350, 24, 349, 25, 348, 25, 347, 24, 346, 24, 345, 24, 344, 25, 343, 25, 342, 24, 341, 51, 341]], 32:[[556, 13, 558, 14, 599, 15, 601, 16, 602, 17, 639, 18, 645, 19, 648, 20, 650, 21, 666, 22, 692, 23, 695, 24, 696, 25, 701, 26, 723, 27, 725, 28, 726, 29, 755, 30, 758, 31, 760, 32, 763, 33, 764, 34, 766, 35, 767, 36, 772, 37, 775, 38, 778, 39, 780, 40, 783, 41, 785, 42, 787, 43, 802, 44, 803, 45, 804, 46, 805, 47, 806, 48, 807, 49, 824, 50, 827, 51, 
829, 52, 843, 53, 845, 54, 847, 55, 848, 56, 848, 57, 849, 58, 855, 59, 856, 60, 857, 61, 859, 62, 860, 63, 861, 64, 862, 65, 866, 66, 873, 67, 875, 68, 877, 69, 878, 70, 879, 71, 879, 72, 880, 73, 889, 74, 900, 75, 902, 76, 903, 77, 905, 78, 906, 79, 908, 80, 909, 81, 911, 82, 913, 83, 914, 84, 915, 85, 916, 86, 917, 87, 917, 88, 918, 89, 918, 90, 919, 91, 920, 92, 921, 93, 921, 94, 921, 95, 922, 96, 923, 97, 923, 98, 924, 99, 924, 100, 925, 101, 925, 102, 926, 103, 927, 104, 952, 105, 953, 106, 
955, 107, 956, 108, 957, 109, 959, 110, 960, 111, 961, 112, 963, 113, 964, 114, 966, 115, 968, 116, 968, 117, 969, 118, 970, 119, 970, 120, 971, 121, 972, 122, 972, 123, 973, 124, 973, 125, 974, 126, 974, 127, 975, 128, 976, 129, 976, 130, 977, 131, 978, 132, 978, 133, 979, 134, 980, 135, 980, 136, 980, 137, 981, 138, 981, 139, 987, 140, 989, 141, 990, 142, 991, 143, 991, 144, 992, 145, 992, 146, 993, 147, 993, 148, 994, 149, 994, 150, 995, 151, 995, 152, 996, 153, 996, 154, 997, 155, 998, 156, 999, 
157, 1E3, 158, 1001, 159, 1002, 160, 1003, 161, 1003, 162, 1003, 163, 1004, 164, 1004, 165, 1005, 166, 1006, 167, 1007, 168, 1009, 169, 1016, 170, 1017, 171, 1018, 172, 1019, 173, 1019, 174, 1019, 175, 1020, 176, 1020, 177, 1020, 178, 1020, 179, 1020, 180, 1021, 181, 1022, 182, 1023, 183, 1024, 184, 1026, 185, 1028, 186, 1029, 187, 1029, 188, 1030, 189, 1030, 190, 1031, 191, 1032, 192, 1033, 193, 1034, 194, 1035, 195, 1036, 196, 1037, 197, 1037, 198, 1038, 199, 1039, 200, 1040, 201, 1040, 202, 1041, 
203, 1041, 204, 1042, 205, 1042, 206, 1042, 207, 1043, 208, 1043, 209, 1043, 210, 1044, 211, 1045, 212, 1045, 213, 1045, 214, 1045, 215, 1045, 216, 1045, 217, 1045, 218, 1045, 219, 1045, 220, 1047, 221, 1048, 222, 1050, 223, 1051, 224, 1052, 225, 1053, 226, 1054, 227, 1055, 228, 1055, 229, 1056, 230, 1056, 231, 1057, 232, 1057, 233, 1058, 234, 1058, 235, 1059, 236, 1059, 237, 1059, 238, 1060, 239, 1061, 240, 1062, 241, 1062, 242, 1063, 243, 1064, 244, 1065, 245, 1065, 246, 1065, 247, 1066, 248, 1066, 
249, 1066, 250, 1066, 251, 1066, 252, 1066, 253, 1066, 254, 1067, 255, 1067, 256, 1068, 257, 1068, 258, 1068, 259, 1069, 260, 1069, 261, 1069, 262, 1070, 263, 1070, 264, 1071, 265, 1072, 266, 1072, 267, 1072, 268, 1072, 269, 1073, 270, 1075, 271, 1075, 272, 1076, 273, 1076, 274, 1077, 275, 1077, 276, 1078, 277, 1078, 278, 1078, 279, 1078, 280, 1078, 281, 1078, 282, 1078, 283, 1078, 284, 1078, 285, 1078, 286, 1079, 287, 1079, 288, 1080, 289, 1089, 290, 1089, 291, 1089, 292, 1088, 293, 1088, 294, 1088, 
295, 1087, 296, 1086, 297, 1085, 298, 1084, 299, 1083, 300, 1083, 301, 1082, 302, 1082, 303, 1083, 304, 1083, 305, 1083, 306, 1085, 307, 1087, 308, 1088, 309, 1089, 310, 1089, 311, 1090, 312, 1090, 313, 1090, 314, 1090, 315, 1091, 316, 1091, 317, 1091, 318, 1091, 319, 1091, 320, 1091, 321, 1091, 322, 1091, 323, 1090, 324, 1090, 325, 1089, 326, 1088, 327, 1086, 328, 1086, 329, 1086, 330, 1087, 331, 1087, 332, 1088, 333, 1088, 334, 1089, 335, 1089, 336, 1089, 337, 1102, 338, 1102, 339, 1102, 340, 1101, 
341, 1037, 341, 1037, 340, 1036, 339, 1036, 338, 1036, 337, 1036, 336, 1036, 335, 1036, 334, 1036, 333, 1037, 332, 1037, 331, 1037, 330, 1034, 329, 1033, 328, 1032, 327, 1032, 326, 1032, 325, 1032, 324, 1032, 323, 1032, 322, 1032, 321, 1032, 320, 1030, 319, 1029, 318, 1028, 317, 1027, 316, 1027, 315, 1027, 314, 1027, 313, 1026, 312, 1026, 311, 1026, 310, 1026, 309, 1026, 308, 1026, 307, 1027, 306, 1028, 305, 1028, 304, 1028, 303, 1029, 302, 1028, 301, 1026, 300, 1026, 299, 1026, 298, 1026, 297, 1027, 
296, 1027, 295, 1027, 294, 1027, 293, 1027, 292, 1027, 291, 1028, 290, 1028, 289, 1028, 288, 1024, 287, 1021, 286, 1020, 285, 1020, 284, 1020, 283, 1018, 282, 1017, 281, 1017, 280, 1016, 279, 1016, 278, 1014, 277, 1014, 276, 1013, 275, 1013, 274, 1013, 273, 1013, 272, 1013, 271, 1013, 270, 1013, 269, 1013, 268, 1011, 267, 1010, 266, 1010, 265, 1010, 264, 1009, 263, 1009, 262, 1009, 261, 1009, 260, 1009, 259, 1009, 258, 1010, 257, 993, 256, 992, 255, 991, 254, 991, 253, 992, 252, 997, 251, 989, 250, 
987, 249, 987, 248, 986, 247, 985, 246, 984, 245, 983, 244, 982, 243, 981, 242, 981, 241, 980, 240, 980, 239, 980, 238, 979, 237, 977, 236, 976, 235, 975, 234, 974, 233, 974, 232, 974, 231, 975, 230, 975, 229, 974, 228, 974, 227, 974, 226, 969, 225, 968, 224, 967, 223, 968, 222, 966, 221, 964, 220, 963, 219, 962, 218, 962, 217, 963, 216, 968, 215, 969, 214, 973, 213, 973, 212, 961, 211, 961, 210, 956, 209, 956, 208, 954, 207, 945, 206, 943, 205, 940, 204, 938, 203, 937, 202, 936, 201, 936, 200, 936, 
199, 936, 198, 936, 197, 936, 196, 937, 195, 937, 194, 938, 193, 936, 192, 932, 191, 928, 190, 927, 189, 926, 188, 926, 187, 922, 186, 921, 185, 920, 184, 920, 183, 920, 182, 920, 181, 920, 180, 920, 179, 920, 178, 920, 177, 920, 176, 920, 175, 920, 174, 920, 173, 920, 172, 919, 171, 919, 170, 919, 169, 919, 168, 919, 167, 919, 166, 919, 165, 919, 164, 919, 163, 919, 162, 919, 161, 919, 160, 919, 159, 919, 158, 919, 157, 871, 156, 869, 155, 868, 154, 868, 153, 868, 152, 868, 151, 868, 150, 868, 149, 
868, 148, 868, 147, 866, 146, 864, 145, 862, 144, 862, 143, 859, 142, 858, 141, 858, 140, 857, 139, 857, 138, 856, 137, 856, 136, 854, 135, 854, 134, 854, 133, 853, 132, 852, 131, 841, 130, 838, 129, 835, 128, 834, 127, 829, 126, 828, 125, 827, 124, 818, 123, 815, 122, 815, 121, 807, 120, 805, 119, 804, 118, 803, 117, 803, 116, 798, 115, 795, 114, 793, 113, 792, 112, 792, 111, 790, 110, 776, 109, 748, 108, 746, 107, 745, 106, 743, 105, 741, 104, 716, 103, 715, 102, 715, 101, 707, 100, 705, 99, 702, 
98, 677, 97, 674, 96, 674, 95, 669, 94, 666, 93, 665, 92, 622, 91, 621, 90, 615, 89, 611, 88, 554, 87, 554, 86, 554, 85, 554, 84, 554, 83, 554, 82, 554, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 
42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 556, 13], [495, 11, 497, 12, 554, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 
554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 554, 81, 554, 82, 554, 83, 554, 84, 554, 85, 554, 86, 554, 87, 470, 88, 469, 89, 467, 90, 463, 91, 
432, 92, 431, 93, 429, 94, 420, 95, 415, 96, 414, 97, 412, 98, 394, 99, 393, 100, 393, 101, 392, 102, 391, 103, 389, 104, 389, 105, 387, 106, 386, 107, 384, 108, 379, 109, 376, 110, 373, 111, 369, 112, 367, 113, 364, 114, 338, 115, 331, 116, 324, 117, 323, 118, 323, 119, 324, 120, 324, 121, 323, 122, 323, 123, 322, 124, 319, 125, 316, 126, 307, 127, 308, 128, 308, 129, 308, 130, 308, 131, 314, 132, 307, 133, 306, 134, 305, 135, 304, 136, 300, 137, 298, 138, 296, 139, 289, 140, 285, 141, 277, 142, 
275, 143, 274, 144, 274, 145, 274, 146, 272, 147, 222, 148, 222, 149, 222, 150, 222, 151, 222, 152, 222, 153, 222, 154, 222, 155, 222, 156, 222, 157, 222, 158, 222, 159, 222, 160, 222, 161, 222, 162, 222, 163, 222, 164, 222, 165, 222, 166, 221, 167, 222, 168, 222, 169, 222, 170, 222, 171, 222, 172, 222, 173, 222, 174, 222, 175, 222, 176, 220, 177, 219, 178, 207, 179, 207, 180, 207, 181, 205, 182, 203, 183, 202, 184, 201, 185, 198, 186, 189, 187, 189, 188, 189, 189, 188, 190, 187, 191, 186, 192, 184, 
193, 183, 194, 183, 195, 183, 196, 183, 197, 183, 198, 183, 199, 182, 200, 181, 201, 178, 202, 178, 203, 170, 204, 170, 205, 169, 206, 169, 207, 170, 208, 170, 209, 170, 210, 170, 211, 170, 212, 168, 213, 165, 214, 165, 215, 163, 216, 147, 217, 146, 218, 146, 219, 146, 220, 146, 221, 146, 222, 146, 223, 145, 224, 145, 225, 143, 226, 144, 227, 145, 228, 145, 229, 144, 230, 143, 231, 141, 232, 141, 233, 140, 234, 140, 235, 137, 236, 132, 237, 127, 238, 128, 239, 128, 240, 128, 241, 128, 242, 128, 243, 
128, 244, 128, 245, 128, 246, 128, 247, 126, 248, 126, 249, 125, 250, 125, 251, 124, 252, 124, 253, 125, 254, 125, 255, 125, 256, 125, 257, 125, 258, 125, 259, 125, 260, 124, 261, 123, 262, 122, 263, 120, 264, 116, 265, 117, 266, 118, 267, 119, 268, 119, 269, 119, 270, 119, 271, 119, 272, 119, 273, 119, 274, 119, 275, 118, 276, 116, 277, 116, 278, 115, 279, 115, 280, 114, 281, 114, 282, 113, 283, 113, 284, 112, 285, 112, 286, 111, 287, 109, 288, 105, 289, 105, 290, 105, 291, 104, 292, 103, 293, 103, 
294, 103, 295, 104, 296, 104, 297, 103, 298, 102, 299, 102, 300, 101, 301, 101, 302, 100, 303, 95, 304, 95, 305, 95, 306, 95, 307, 95, 308, 96, 309, 97, 310, 97, 311, 98, 312, 98, 313, 98, 314, 97, 315, 97, 316, 97, 317, 97, 318, 97, 319, 96, 320, 96, 321, 94, 322, 92, 323, 91, 324, 90, 325, 90, 326, 90, 327, 90, 328, 90, 329, 90, 330, 90, 331, 89, 332, 89, 333, 87, 334, 86, 335, 85, 336, 86, 337, 86, 338, 86, 339, 86, 340, 86, 341, 27, 341, 27, 340, 27, 339, 27, 338, 27, 337, 27, 336, 27, 335, 27, 
334, 28, 333, 28, 332, 29, 331, 30, 330, 30, 329, 31, 328, 32, 327, 33, 326, 33, 325, 33, 324, 33, 323, 33, 322, 33, 321, 34, 320, 34, 319, 34, 318, 34, 317, 34, 316, 34, 315, 34, 314, 34, 313, 34, 312, 34, 311, 34, 310, 34, 309, 35, 308, 35, 307, 35, 306, 34, 305, 32, 304, 31, 303, 30, 302, 30, 301, 29, 300, 31, 299, 34, 298, 40, 297, 39, 296, 38, 295, 38, 294, 37, 293, 36, 292, 36, 291, 35, 290, 34, 289, 34, 288, 34, 287, 33, 286, 33, 285, 33, 284, 33, 283, 33, 282, 43, 281, 43, 280, 43, 279, 43, 
278, 43, 277, 43, 276, 44, 275, 44, 274, 45, 273, 45, 272, 46, 271, 47, 270, 47, 269, 47, 268, 48, 267, 48, 266, 48, 265, 49, 264, 49, 263, 50, 262, 50, 261, 51, 260, 51, 259, 52, 258, 52, 257, 52, 256, 53, 255, 53, 254, 54, 253, 54, 252, 55, 251, 56, 250, 56, 249, 57, 248, 58, 247, 58, 246, 58, 245, 59, 244, 59, 243, 60, 242, 61, 241, 62, 240, 63, 239, 63, 238, 63, 237, 63, 236, 63, 235, 63, 234, 63, 233, 63, 232, 64, 231, 64, 230, 64, 229, 65, 228, 65, 227, 66, 226, 66, 225, 67, 224, 68, 223, 69, 
222, 70, 221, 71, 220, 73, 219, 74, 218, 75, 217, 76, 216, 76, 215, 77, 214, 78, 213, 79, 212, 80, 211, 82, 210, 83, 209, 83, 208, 84, 207, 84, 206, 85, 205, 85, 204, 85, 203, 85, 202, 86, 201, 86, 200, 86, 199, 87, 198, 87, 197, 87, 196, 87, 195, 88, 194, 88, 193, 89, 192, 89, 191, 90, 190, 90, 189, 91, 188, 92, 187, 93, 186, 94, 185, 96, 184, 97, 183, 98, 182, 99, 181, 99, 180, 100, 179, 101, 178, 102, 177, 103, 176, 104, 175, 105, 174, 107, 173, 108, 172, 108, 171, 108, 170, 109, 169, 110, 168, 
111, 167, 112, 166, 113, 165, 114, 164, 116, 163, 116, 162, 117, 161, 117, 160, 118, 159, 118, 158, 119, 157, 120, 156, 121, 155, 122, 154, 123, 153, 124, 152, 125, 151, 126, 150, 127, 149, 128, 148, 130, 147, 132, 146, 134, 145, 136, 144, 136, 143, 136, 142, 137, 141, 138, 140, 138, 139, 139, 138, 140, 137, 141, 136, 142, 135, 144, 134, 146, 133, 148, 132, 149, 131, 149, 130, 150, 129, 150, 128, 151, 127, 152, 126, 152, 125, 154, 124, 156, 123, 162, 122, 164, 121, 165, 120, 165, 119, 166, 118, 166, 
117, 167, 116, 167, 115, 168, 114, 169, 113, 169, 112, 171, 111, 173, 110, 173, 109, 174, 108, 175, 107, 177, 106, 178, 105, 179, 104, 181, 103, 182, 102, 184, 101, 185, 100, 186, 99, 188, 98, 189, 97, 214, 96, 215, 95, 216, 94, 216, 93, 217, 92, 218, 91, 218, 90, 219, 89, 220, 88, 220, 87, 221, 86, 222, 85, 223, 84, 223, 83, 224, 82, 225, 81, 226, 80, 228, 79, 228, 78, 228, 77, 228, 76, 229, 75, 230, 74, 232, 73, 234, 72, 236, 71, 237, 70, 239, 69, 240, 68, 242, 67, 255, 66, 260, 65, 264, 64, 266, 
63, 268, 62, 268, 61, 268, 60, 269, 59, 270, 58, 271, 57, 272, 56, 274, 55, 277, 54, 291, 53, 293, 52, 301, 51, 303, 50, 307, 49, 308, 48, 310, 47, 311, 46, 313, 45, 314, 44, 316, 43, 318, 42, 324, 41, 332, 40, 334, 39, 335, 38, 337, 37, 343, 36, 345, 35, 347, 34, 348, 33, 350, 32, 352, 31, 371, 30, 372, 29, 374, 28, 383, 27, 386, 26, 387, 25, 389, 24, 391, 23, 394, 22, 396, 21, 401, 20, 416, 19, 418, 18, 424, 17, 441, 16, 441, 15, 443, 14, 444, 13, 448, 12, 480, 11, 495, 11], [1101, 342, 1101, 343, 
1100, 344, 1100, 345, 1099, 346, 1099, 347, 1098, 348, 1098, 349, 1097, 350, 1096, 351, 1095, 352, 1094, 353, 1094, 354, 1094, 355, 1093, 356, 1093, 357, 1093, 358, 1092, 359, 1091, 360, 1091, 361, 1092, 362, 1093, 363, 1095, 364, 1098, 365, 1098, 366, 1097, 367, 1096, 368, 1092, 369, 1092, 370, 1092, 371, 1092, 372, 1092, 373, 1092, 374, 1093, 375, 1093, 376, 1093, 377, 1093, 378, 1093, 379, 1093, 380, 1093, 381, 1093, 382, 1094, 383, 1094, 384, 1095, 385, 1095, 386, 1096, 387, 1097, 388, 1098, 
389, 1098, 390, 1099, 391, 1099, 392, 1099, 393, 1099, 394, 1099, 395, 1099, 396, 1099, 397, 1099, 398, 1099, 399, 1099, 400, 1099, 401, 1099, 402, 1099, 403, 1098, 404, 1098, 405, 1096, 406, 1096, 407, 1093, 408, 1093, 409, 1093, 410, 1092, 411, 1092, 412, 1091, 413, 1090, 414, 1089, 415, 1088, 416, 1087, 417, 1086, 418, 1085, 419, 1084, 420, 1084, 421, 1084, 422, 1084, 423, 1083, 424, 1084, 425, 1085, 426, 1085, 427, 1086, 428, 1086, 429, 1086, 430, 1086, 431, 1086, 432, 1086, 433, 1084, 434, 1084, 
435, 1084, 436, 1084, 437, 1083, 438, 1082, 439, 1081, 440, 1082, 441, 1082, 442, 1082, 443, 1083, 444, 1082, 445, 1082, 446, 1082, 447, 1081, 448, 1079, 449, 1080, 450, 1079, 451, 1079, 452, 1078, 453, 1078, 454, 1078, 455, 1078, 456, 1078, 457, 1079, 458, 1080, 459, 1080, 460, 1080, 461, 1080, 462, 1080, 463, 1080, 464, 1079, 465, 1079, 466, 1078, 467, 1078, 468, 1077, 469, 1075, 470, 1074, 471, 1074, 472, 1073, 473, 1073, 474, 1072, 475, 1072, 476, 1071, 477, 1070, 478, 1068, 479, 1068, 480, 1066, 
481, 1062, 482, 1062, 483, 1063, 484, 1064, 485, 1064, 486, 1065, 487, 1066, 488, 1066, 489, 1066, 490, 1067, 491, 1067, 492, 1068, 493, 1068, 494, 1068, 495, 1067, 496, 1067, 497, 1067, 498, 1066, 499, 1066, 500, 1065, 501, 1065, 502, 1064, 503, 1063, 504, 1063, 505, 1063, 506, 1063, 507, 1062, 508, 1061, 509, 1060, 510, 1060, 511, 1060, 512, 1059, 513, 1057, 514, 1057, 515, 1056, 516, 1055, 517, 1054, 518, 1053, 519, 1045, 520, 1045, 521, 1046, 522, 1048, 523, 1048, 524, 1049, 525, 1049, 526, 1049, 
527, 1049, 528, 1049, 529, 1049, 530, 1048, 531, 1043, 532, 1043, 533, 1040, 534, 1034, 535, 1032, 536, 1031, 537, 1025, 538, 1024, 539, 1023, 540, 1020, 541, 1020, 542, 1020, 543, 1021, 544, 1021, 545, 1021, 546, 1021, 547, 1021, 548, 1021, 549, 1020, 550, 1020, 551, 1020, 552, 1020, 553, 1020, 554, 1021, 555, 1021, 556, 1021, 557, 1021, 558, 1021, 559, 1021, 560, 1019, 561, 1019, 562, 1016, 563, 1016, 564, 1016, 565, 1015, 566, 1015, 567, 1015, 568, 1015, 569, 1015, 570, 1014, 571, 1012, 572, 1011, 
573, 1009, 574, 1003, 575, 1003, 576, 1003, 577, 1001, 578, 998, 579, 998, 580, 997, 581, 994, 582, 990, 583, 990, 584, 990, 585, 990, 586, 990, 587, 990, 588, 990, 589, 990, 590, 990, 591, 990, 592, 990, 593, 990, 594, 990, 595, 989, 596, 938, 597, 938, 598, 938, 599, 938, 600, 938, 601, 938, 602, 938, 603, 938, 604, 938, 605, 938, 606, 938, 607, 938, 608, 938, 609, 938, 610, 938, 611, 938, 612, 938, 613, 938, 614, 938, 615, 938, 616, 938, 617, 939, 618, 939, 619, 939, 620, 938, 621, 938, 622, 938, 
623, 938, 624, 938, 625, 937, 626, 935, 627, 914, 628, 913, 629, 911, 630, 910, 631, 908, 632, 914, 633, 914, 634, 914, 635, 914, 636, 913, 637, 896, 638, 888, 639, 888, 640, 888, 641, 888, 642, 889, 643, 889, 644, 888, 645, 887, 646, 885, 647, 880, 648, 880, 649, 880, 650, 879, 651, 878, 652, 877, 653, 874, 654, 873, 655, 870, 656, 868, 657, 867, 658, 859, 659, 858, 660, 857, 661, 859, 662, 860, 663, 860, 664, 860, 665, 860, 666, 859, 667, 858, 668, 831, 669, 829, 670, 826, 671, 823, 672, 820, 673, 
815, 674, 810, 675, 821, 676, 821, 677, 821, 678, 821, 679, 820, 680, 811, 681, 795, 682, 790, 683, 785, 684, 776, 685, 776, 686, 775, 687, 774, 688, 766, 689, 757, 690, 756, 691, 755, 692, 754, 693, 749, 694, 749, 695, 744, 696, 740, 697, 732, 698, 729, 699, 723, 700, 722, 701, 710, 702, 707, 703, 724, 704, 725, 705, 726, 706, 726, 707, 726, 708, 725, 709, 724, 710, 723, 711, 680, 712, 679, 713, 678, 714, 678, 715, 676, 716, 670, 717, 667, 718, 622, 719, 621, 720, 608, 721, 607, 722, 603, 722, 599, 
721, 577, 720, 565, 719, 563, 718, 564, 717, 564, 716, 575, 715, 600, 714, 556, 713, 554, 712, 554, 711, 554, 710, 554, 709, 554, 708, 554, 707, 554, 706, 554, 705, 554, 704, 554, 703, 554, 702, 554, 701, 554, 700, 554, 699, 554, 698, 554, 697, 554, 696, 554, 695, 554, 694, 554, 693, 554, 692, 554, 691, 554, 690, 554, 689, 554, 688, 554, 687, 554, 686, 554, 685, 554, 684, 554, 683, 554, 682, 554, 681, 554, 680, 554, 679, 554, 678, 554, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 
554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 554, 634, 554, 633, 554, 632, 554, 631, 554, 630, 554, 629, 563, 628, 583, 627, 584, 626, 662, 625, 663, 624, 665, 623, 667, 622, 670, 621, 674, 
620, 690, 619, 693, 618, 695, 617, 701, 616, 731, 615, 731, 614, 732, 613, 733, 612, 733, 611, 734, 610, 735, 609, 737, 608, 746, 607, 750, 606, 760, 605, 761, 604, 765, 603, 768, 602, 769, 601, 770, 600, 772, 599, 773, 598, 774, 597, 776, 596, 778, 595, 782, 594, 804, 593, 805, 592, 806, 591, 808, 590, 816, 589, 817, 588, 819, 587, 820, 586, 821, 585, 823, 584, 825, 583, 830, 582, 830, 581, 831, 580, 832, 579, 833, 578, 835, 577, 837, 576, 848, 575, 854, 574, 857, 573, 866, 572, 867, 571, 868, 570, 
869, 569, 871, 568, 883, 567, 884, 566, 885, 565, 885, 564, 886, 563, 886, 562, 887, 561, 888, 560, 888, 559, 889, 558, 890, 557, 891, 556, 892, 555, 894, 554, 896, 553, 897, 552, 899, 551, 900, 550, 901, 549, 903, 548, 904, 547, 905, 546, 907, 545, 929, 544, 931, 543, 932, 542, 932, 541, 933, 540, 934, 539, 935, 538, 935, 537, 936, 536, 937, 535, 937, 534, 938, 533, 939, 532, 939, 531, 940, 530, 940, 529, 941, 528, 941, 527, 943, 526, 944, 525, 945, 524, 947, 523, 948, 522, 950, 521, 951, 520, 953, 
519, 954, 518, 955, 517, 957, 516, 958, 515, 960, 514, 964, 513, 965, 512, 965, 511, 966, 510, 966, 509, 967, 508, 968, 507, 968, 506, 969, 505, 969, 504, 970, 503, 970, 502, 971, 501, 971, 500, 972, 499, 972, 498, 973, 497, 975, 496, 978, 495, 980, 494, 981, 493, 981, 492, 982, 491, 983, 490, 984, 489, 985, 488, 986, 487, 986, 486, 986, 485, 986, 484, 987, 483, 987, 482, 988, 481, 988, 480, 989, 479, 990, 478, 990, 477, 991, 476, 992, 475, 993, 474, 994, 473, 995, 472, 995, 471, 996, 470, 996, 469, 
997, 468, 997, 467, 997, 466, 997, 465, 997, 464, 997, 463, 997, 462, 997, 461, 998, 460, 998, 459, 999, 458, 1E3, 457, 1001, 456, 1003, 455, 1004, 454, 1005, 453, 1005, 452, 1006, 451, 1006, 450, 1007, 449, 1007, 448, 1008, 447, 1009, 446, 1009, 445, 1010, 444, 1010, 443, 1011, 442, 1011, 441, 1012, 440, 1012, 439, 1012, 438, 1013, 437, 1013, 436, 1013, 435, 1014, 434, 1014, 433, 1014, 432, 1014, 431, 1014, 430, 1014, 429, 1015, 428, 1015, 427, 1015, 426, 1015, 425, 1016, 424, 1016, 423, 1017, 422, 
1017, 421, 1018, 420, 1019, 419, 1020, 418, 1020, 417, 1020, 416, 1020, 415, 1020, 414, 1020, 413, 1020, 412, 1021, 411, 1021, 410, 1022, 409, 1023, 408, 1023, 407, 1023, 406, 1023, 405, 1023, 404, 1024, 403, 1024, 402, 1024, 401, 1025, 400, 1025, 399, 1025, 398, 1025, 397, 1026, 396, 1027, 395, 1027, 394, 1029, 393, 1030, 392, 1031, 391, 1031, 390, 1031, 389, 1031, 388, 1031, 387, 1031, 386, 1031, 385, 1031, 384, 1031, 383, 1031, 382, 1031, 381, 1031, 380, 1032, 379, 1032, 378, 1033, 377, 1034, 
376, 1035, 375, 1035, 374, 1036, 373, 1036, 372, 1036, 371, 1036, 370, 1036, 369, 1036, 368, 1036, 367, 1037, 366, 1037, 365, 1037, 364, 1038, 363, 1038, 362, 1039, 361, 1039, 360, 1040, 359, 1040, 358, 1040, 357, 1040, 356, 1040, 355, 1040, 354, 1039, 353, 1039, 352, 1039, 351, 1039, 350, 1039, 349, 1039, 348, 1039, 347, 1039, 346, 1039, 345, 1039, 344, 1039, 343, 1038, 342, 1101, 342], [86, 342, 86, 343, 86, 344, 86, 345, 86, 346, 85, 347, 85, 348, 85, 349, 85, 350, 85, 351, 86, 352, 86, 353, 86, 
354, 85, 355, 85, 356, 85, 357, 85, 358, 85, 359, 85, 360, 85, 361, 85, 362, 85, 363, 85, 364, 85, 365, 86, 366, 86, 367, 87, 368, 87, 369, 88, 370, 89, 371, 89, 372, 90, 373, 90, 374, 91, 375, 91, 376, 92, 377, 92, 378, 92, 379, 92, 380, 92, 381, 92, 382, 92, 383, 92, 384, 92, 385, 92, 386, 92, 387, 93, 388, 93, 389, 94, 390, 95, 391, 95, 392, 96, 393, 96, 394, 96, 395, 276, 396, 276, 397, 96, 398, 96, 399, 96, 400, 97, 401, 97, 402, 97, 403, 97, 404, 97, 405, 97, 406, 97, 407, 97, 408, 96, 409, 
96, 410, 96, 411, 97, 412, 98, 413, 98, 414, 99, 415, 100, 416, 100, 417, 101, 418, 101, 419, 102, 420, 105, 421, 106, 422, 108, 423, 109, 424, 110, 425, 110, 426, 111, 427, 112, 428, 113, 429, 113, 430, 114, 431, 115, 432, 116, 433, 116, 434, 116, 435, 117, 436, 117, 437, 117, 438, 117, 439, 116, 440, 117, 441, 117, 442, 118, 443, 119, 444, 119, 445, 120, 446, 120, 447, 121, 448, 122, 449, 122, 450, 123, 451, 124, 452, 124, 453, 125, 454, 128, 455, 130, 456, 131, 457, 132, 458, 133, 459, 133, 460, 
134, 461, 135, 462, 136, 463, 137, 464, 138, 465, 139, 466, 140, 467, 140, 468, 141, 469, 141, 470, 142, 471, 142, 472, 142, 473, 142, 474, 142, 475, 143, 476, 143, 477, 145, 478, 145, 479, 146, 480, 147, 481, 147, 482, 147, 483, 147, 484, 147, 485, 148, 486, 148, 487, 149, 488, 149, 489, 149, 490, 150, 491, 150, 492, 151, 493, 151, 494, 152, 495, 153, 496, 153, 497, 154, 498, 155, 499, 158, 500, 159, 501, 161, 502, 166, 503, 168, 504, 169, 505, 169, 506, 170, 507, 171, 508, 172, 509, 173, 510, 175, 
511, 176, 512, 177, 513, 178, 514, 179, 515, 180, 516, 180, 517, 181, 518, 182, 519, 183, 520, 185, 521, 185, 522, 186, 523, 187, 524, 187, 525, 188, 526, 189, 527, 189, 528, 190, 529, 190, 530, 191, 531, 192, 532, 192, 533, 193, 534, 193, 535, 194, 536, 195, 537, 195, 538, 196, 539, 222, 540, 224, 541, 226, 542, 227, 543, 228, 544, 229, 545, 231, 546, 232, 547, 233, 548, 235, 549, 237, 550, 238, 551, 239, 552, 240, 553, 240, 554, 241, 555, 242, 556, 243, 557, 244, 558, 246, 559, 252, 560, 253, 561, 
255, 562, 255, 563, 257, 564, 269, 565, 273, 566, 274, 567, 275, 568, 276, 569, 282, 570, 287, 571, 288, 572, 295, 573, 299, 574, 300, 575, 301, 576, 302, 577, 303, 578, 303, 579, 304, 580, 305, 581, 306, 582, 307, 583, 308, 584, 309, 585, 310, 586, 310, 587, 311, 588, 322, 589, 324, 590, 325, 591, 327, 592, 328, 593, 329, 594, 329, 595, 331, 596, 332, 597, 333, 598, 340, 599, 357, 600, 360, 601, 361, 602, 371, 603, 372, 604, 374, 605, 374, 606, 383, 607, 385, 608, 386, 609, 395, 610, 399, 611, 415, 
612, 418, 613, 419, 614, 433, 615, 435, 616, 450, 617, 452, 618, 455, 619, 458, 620, 475, 621, 476, 622, 477, 623, 481, 624, 484, 625, 550, 626, 553, 627, 554, 628, 554, 629, 554, 630, 554, 631, 554, 632, 554, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 
554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 554, 677, 554, 678, 554, 679, 554, 680, 554, 681, 554, 682, 554, 683, 554, 684, 554, 685, 554, 686, 554, 687, 554, 688, 554, 689, 554, 690, 554, 691, 554, 692, 554, 693, 554, 694, 554, 695, 554, 696, 554, 697, 554, 698, 554, 699, 554, 700, 554, 701, 554, 702, 554, 703, 554, 704, 554, 705, 554, 706, 554, 707, 554, 708, 554, 709, 554, 710, 549, 711, 548, 712, 547, 
713, 527, 713, 469, 712, 467, 711, 467, 710, 468, 709, 468, 708, 469, 707, 477, 706, 476, 705, 471, 704, 453, 703, 386, 702, 383, 701, 373, 700, 373, 699, 374, 698, 381, 697, 382, 696, 385, 695, 374, 694, 369, 693, 363, 692, 361, 691, 356, 690, 355, 689, 344, 688, 343, 687, 336, 686, 332, 685, 330, 684, 328, 683, 317, 682, 317, 681, 308, 680, 306, 679, 306, 678, 306, 677, 307, 676, 315, 675, 313, 674, 311, 673, 311, 672, 307, 671, 305, 670, 305, 669, 304, 668, 284, 667, 277, 666, 275, 665, 274, 664, 
271, 663, 270, 662, 268, 661, 268, 660, 267, 659, 268, 658, 268, 657, 255, 656, 254, 655, 224, 654, 222, 653, 222, 652, 222, 651, 222, 650, 223, 649, 224, 648, 224, 647, 226, 646, 236, 645, 236, 644, 241, 643, 241, 642, 240, 641, 211, 640, 209, 639, 208, 638, 203, 637, 201, 636, 200, 635, 199, 634, 198, 633, 197, 632, 196, 631, 195, 630, 195, 629, 195, 628, 196, 627, 196, 626, 197, 625, 197, 624, 192, 623, 190, 622, 189, 621, 189, 620, 189, 619, 189, 618, 189, 617, 189, 616, 189, 615, 189, 614, 189, 
613, 189, 612, 189, 611, 189, 610, 189, 609, 189, 608, 189, 607, 189, 606, 189, 605, 189, 604, 189, 603, 189, 602, 189, 601, 189, 600, 189, 599, 189, 598, 189, 597, 189, 596, 189, 595, 189, 594, 189, 593, 140, 592, 139, 591, 138, 590, 138, 589, 138, 588, 138, 587, 135, 586, 136, 585, 135, 584, 131, 583, 130, 582, 128, 581, 126, 580, 125, 579, 125, 578, 125, 577, 123, 576, 122, 575, 121, 574, 120, 573, 120, 572, 119, 571, 119, 570, 118, 569, 118, 568, 119, 567, 119, 566, 111, 565, 109, 564, 107, 563, 
107, 562, 105, 561, 104, 560, 102, 559, 100, 558, 99, 557, 98, 556, 97, 555, 97, 554, 97, 553, 95, 552, 94, 551, 94, 550, 93, 549, 93, 548, 92, 547, 92, 546, 92, 545, 90, 544, 85, 543, 84, 542, 84, 541, 84, 540, 81, 539, 81, 538, 81, 537, 81, 536, 81, 535, 80, 534, 78, 533, 77, 532, 77, 531, 76, 530, 76, 529, 76, 528, 70, 527, 69, 526, 69, 525, 69, 524, 76, 523, 67, 522, 65, 521, 64, 520, 64, 519, 64, 518, 65, 517, 72, 516, 71, 515, 65, 514, 65, 513, 62, 512, 57, 511, 56, 510, 55, 509, 54, 508, 53, 
507, 52, 506, 51, 505, 49, 504, 48, 503, 48, 502, 48, 501, 46, 500, 46, 499, 46, 498, 46, 497, 44, 496, 43, 495, 43, 494, 42, 493, 42, 492, 41, 491, 41, 490, 41, 489, 40, 488, 41, 487, 40, 486, 39, 485, 39, 484, 38, 483, 38, 482, 38, 481, 39, 480, 39, 479, 38, 478, 38, 477, 38, 476, 38, 475, 38, 474, 38, 473, 38, 472, 37, 471, 36, 470, 35, 469, 35, 468, 35, 467, 35, 466, 35, 465, 35, 464, 36, 463, 36, 462, 36, 461, 36, 460, 37, 459, 38, 458, 39, 457, 39, 456, 38, 455, 38, 454, 37, 453, 37, 452, 37, 
451, 38, 450, 38, 449, 37, 448, 35, 447, 35, 446, 35, 445, 35, 444, 35, 443, 35, 442, 35, 441, 35, 440, 35, 439, 26, 438, 24, 437, 22, 436, 15, 435, 15, 434, 14, 433, 14, 432, 14, 431, 14, 430, 14, 429, 14, 428, 13, 427, 12, 426, 11, 425, 11, 424, 11, 423, 11, 422, 11, 421, 11, 420, 10, 419, 10, 418, 11, 417, 11, 416, 10, 415, 9, 414, 9, 413, 9, 412, 9, 411, 9, 410, 9, 409, 9, 408, 10, 407, 10, 406, 10, 405, 10, 404, 11, 403, 11, 402, 11, 401, 12, 400, 13, 399, 14, 398, 15, 397, 16, 396, 18, 395, 
19, 394, 20, 393, 21, 392, 22, 391, 23, 390, 23, 389, 24, 388, 27, 387, 27, 386, 26, 385, 26, 384, 26, 383, 26, 382, 26, 381, 26, 380, 26, 379, 25, 378, 18, 377, 18, 376, 18, 375, 18, 374, 18, 373, 19, 372, 24, 371, 24, 370, 23, 369, 23, 368, 26, 367, 26, 366, 27, 365, 27, 364, 28, 363, 29, 362, 30, 361, 30, 360, 30, 359, 29, 358, 28, 357, 27, 356, 27, 355, 26, 354, 25, 353, 24, 352, 23, 351, 23, 350, 22, 349, 22, 348, 22, 347, 22, 346, 21, 345, 21, 344, 27, 343, 27, 342, 86, 342]], 33:[[622, 4, 
633, 5, 654, 6, 655, 7, 665, 8, 666, 9, 666, 10, 687, 11, 688, 12, 688, 13, 697, 14, 698, 15, 698, 16, 708, 17, 709, 18, 729, 19, 730, 20, 740, 21, 741, 22, 741, 23, 742, 24, 761, 25, 762, 26, 762, 27, 763, 28, 780, 29, 781, 30, 781, 31, 782, 32, 782, 33, 782, 34, 783, 35, 856, 36, 856, 37, 857, 38, 857, 39, 858, 40, 859, 41, 859, 42, 861, 43, 863, 44, 864, 45, 866, 46, 868, 47, 870, 48, 871, 49, 873, 50, 875, 51, 876, 52, 878, 53, 880, 54, 881, 55, 883, 56, 884, 57, 886, 58, 888, 59, 890, 60, 893, 
61, 897, 62, 899, 63, 901, 64, 902, 65, 904, 66, 907, 67, 909, 68, 910, 69, 913, 70, 915, 71, 917, 72, 919, 73, 921, 74, 923, 75, 926, 76, 928, 77, 930, 78, 932, 79, 933, 80, 934, 81, 934, 82, 935, 83, 937, 84, 937, 85, 938, 86, 939, 87, 941, 88, 948, 89, 949, 90, 951, 91, 953, 92, 955, 93, 957, 94, 957, 95, 956, 96, 956, 97, 956, 98, 956, 99, 955, 100, 955, 101, 955, 102, 955, 103, 955, 104, 955, 105, 955, 106, 955, 107, 955, 108, 955, 109, 955, 110, 955, 111, 955, 112, 956, 113, 956, 114, 955, 
115, 954, 116, 953, 117, 952, 118, 951, 119, 946, 120, 947, 121, 947, 122, 948, 123, 948, 124, 948, 125, 949, 126, 953, 127, 954, 128, 954, 129, 955, 130, 955, 131, 955, 132, 962, 133, 963, 134, 963, 135, 964, 136, 964, 137, 964, 138, 965, 139, 965, 140, 966, 141, 966, 142, 967, 143, 967, 144, 968, 145, 968, 146, 969, 147, 969, 148, 969, 149, 970, 150, 975, 151, 976, 152, 976, 153, 977, 154, 977, 155, 977, 156, 978, 157, 983, 158, 984, 159, 984, 160, 985, 161, 985, 162, 985, 163, 986, 164, 986, 165, 
987, 166, 987, 167, 991, 168, 992, 169, 992, 170, 993, 171, 993, 172, 993, 173, 994, 174, 994, 175, 996, 176, 997, 177, 997, 178, 998, 179, 998, 180, 998, 181, 1004, 182, 1005, 183, 1005, 184, 1006, 185, 1006, 186, 1006, 187, 1007, 188, 1007, 189, 1008, 190, 1008, 191, 1012, 192, 1013, 193, 1013, 194, 1014, 195, 1014, 196, 1014, 197, 1015, 198, 1015, 199, 1016, 200, 1016, 201, 1019, 202, 1020, 203, 1020, 204, 1021, 205, 1021, 206, 1021, 207, 1022, 208, 1022, 209, 1023, 210, 1023, 211, 1024, 212, 
1024, 213, 1024, 214, 1024, 215, 1024, 216, 1024, 217, 1024, 218, 1028, 219, 1029, 220, 1029, 221, 1030, 222, 1030, 223, 1030, 224, 1031, 225, 1031, 226, 1036, 227, 1037, 228, 1037, 229, 1038, 230, 1038, 231, 1038, 232, 1039, 233, 1039, 234, 1040, 235, 1042, 236, 1043, 237, 1043, 238, 1044, 239, 1044, 240, 1044, 241, 1045, 242, 1045, 243, 1046, 244, 1046, 245, 1047, 246, 1047, 247, 1048, 248, 1048, 249, 1049, 250, 1049, 251, 1049, 252, 1050, 253, 1050, 254, 1051, 255, 1051, 256, 1052, 257, 1052, 
258, 1052, 259, 1052, 260, 1052, 261, 1052, 262, 1052, 263, 1052, 264, 1052, 265, 1052, 266, 1053, 267, 1053, 268, 1053, 269, 1053, 270, 1054, 271, 1054, 272, 1055, 273, 1055, 274, 1056, 275, 1056, 276, 1056, 277, 1056, 278, 1056, 279, 1056, 280, 1056, 281, 1057, 282, 1057, 283, 1057, 284, 1058, 285, 1058, 286, 1059, 287, 1059, 288, 1060, 289, 1060, 290, 1060, 291, 1060, 292, 1060, 293, 1060, 294, 1060, 295, 1060, 296, 1060, 297, 1060, 298, 1060, 299, 1060, 300, 1061, 301, 1061, 302, 1061, 303, 1061, 
304, 1060, 305, 1060, 306, 1060, 307, 1060, 308, 1060, 309, 1060, 310, 1060, 311, 1060, 312, 1060, 313, 1060, 314, 1060, 315, 1060, 316, 1060, 317, 1060, 318, 1060, 319, 1060, 320, 1060, 321, 1060, 322, 1060, 323, 1060, 324, 1060, 325, 1060, 326, 1060, 327, 1060, 328, 1060, 329, 1060, 330, 1060, 331, 1060, 332, 1060, 333, 1060, 334, 1060, 335, 1060, 336, 1060, 337, 1060, 338, 1061, 339, 1061, 340, 1040, 340, 1040, 339, 1039, 338, 1038, 337, 1037, 336, 1037, 335, 1037, 334, 1037, 333, 1037, 332, 1037, 
331, 1037, 330, 1037, 329, 1037, 328, 1037, 327, 1037, 326, 1036, 325, 1036, 324, 1036, 323, 1036, 322, 1036, 321, 1037, 320, 1037, 319, 1036, 318, 1035, 317, 1034, 316, 1034, 315, 1034, 314, 1034, 313, 1034, 312, 1034, 311, 1031, 310, 1030, 309, 1029, 308, 1028, 307, 1028, 306, 1028, 305, 1028, 304, 1028, 303, 1023, 302, 1022, 301, 1021, 300, 1020, 299, 1020, 298, 1020, 297, 1017, 296, 1016, 295, 1015, 294, 1014, 293, 1014, 292, 1014, 291, 1014, 290, 1014, 289, 1014, 288, 1014, 287, 1014, 286, 1014, 
285, 1013, 284, 1012, 283, 1011, 282, 1011, 281, 1011, 280, 1011, 279, 1011, 278, 1011, 277, 1011, 276, 1007, 275, 1006, 274, 1005, 273, 1004, 272, 1004, 271, 1004, 270, 1004, 269, 1004, 268, 1004, 267, 1004, 266, 999, 265, 998, 264, 997, 263, 996, 262, 996, 261, 996, 260, 991, 259, 990, 258, 989, 257, 988, 256, 988, 255, 988, 254, 988, 253, 988, 252, 986, 251, 985, 250, 984, 249, 983, 248, 983, 247, 983, 246, 983, 245, 983, 244, 983, 243, 983, 242, 978, 241, 977, 240, 976, 239, 975, 238, 975, 237, 
975, 236, 975, 235, 970, 234, 969, 233, 968, 232, 967, 231, 967, 230, 967, 229, 967, 228, 962, 227, 961, 226, 960, 225, 959, 224, 959, 223, 959, 222, 959, 221, 959, 220, 959, 219, 959, 218, 959, 217, 957, 216, 956, 215, 955, 214, 954, 213, 954, 212, 954, 211, 948, 210, 947, 209, 946, 208, 945, 207, 945, 206, 945, 205, 945, 204, 941, 203, 940, 202, 939, 201, 938, 200, 931, 199, 928, 198, 927, 197, 926, 196, 925, 195, 925, 194, 925, 193, 925, 192, 925, 191, 925, 190, 925, 189, 925, 188, 925, 187, 925, 
186, 925, 185, 925, 184, 925, 183, 924, 182, 924, 181, 924, 180, 923, 179, 923, 178, 923, 177, 923, 176, 923, 175, 923, 174, 924, 173, 925, 172, 925, 171, 925, 170, 925, 169, 925, 168, 925, 167, 925, 166, 925, 165, 925, 164, 925, 163, 925, 162, 925, 161, 925, 160, 925, 159, 925, 158, 925, 157, 925, 156, 925, 155, 925, 154, 925, 153, 925, 152, 850, 151, 847, 150, 846, 149, 845, 148, 844, 147, 844, 146, 844, 145, 839, 144, 838, 143, 837, 142, 836, 141, 831, 140, 830, 139, 829, 138, 828, 137, 821, 136, 
820, 135, 819, 134, 818, 133, 818, 132, 818, 131, 818, 130, 818, 129, 811, 128, 810, 127, 809, 126, 808, 125, 800, 124, 799, 123, 798, 122, 797, 121, 797, 120, 782, 119, 781, 118, 780, 117, 779, 116, 779, 115, 779, 114, 779, 113, 766, 112, 765, 111, 764, 110, 763, 109, 745, 108, 744, 107, 743, 106, 742, 105, 735, 104, 714, 103, 713, 102, 712, 101, 703, 100, 702, 99, 701, 98, 692, 97, 691, 96, 690, 95, 671, 94, 670, 93, 669, 92, 660, 91, 659, 90, 576, 89, 575, 88, 555, 87, 554, 86, 554, 85, 554, 84, 
554, 83, 554, 82, 554, 81, 554, 80, 554, 79, 554, 78, 554, 77, 554, 76, 554, 75, 554, 74, 554, 73, 554, 72, 554, 71, 554, 70, 554, 69, 554, 68, 554, 67, 554, 66, 554, 65, 554, 64, 554, 63, 554, 62, 554, 61, 554, 60, 554, 59, 554, 58, 554, 57, 554, 56, 554, 55, 554, 54, 554, 53, 554, 52, 554, 51, 554, 50, 554, 49, 554, 48, 554, 47, 554, 46, 554, 45, 554, 44, 554, 43, 554, 42, 554, 41, 554, 40, 554, 39, 554, 38, 554, 37, 554, 36, 554, 35, 554, 34, 554, 33, 554, 32, 554, 31, 554, 30, 554, 29, 554, 28, 
554, 27, 554, 26, 554, 25, 554, 24, 554, 23, 554, 22, 554, 21, 554, 20, 554, 19, 554, 18, 554, 17, 554, 16, 554, 15, 554, 14, 554, 13, 554, 12, 554, 11, 554, 10, 555, 9, 555, 8, 556, 7, 556, 6, 557, 5, 557, 4, 622, 4], [540, 4, 541, 5, 550, 6, 551, 7, 551, 8, 552, 9, 552, 10, 552, 11, 553, 12, 553, 13, 554, 14, 554, 15, 554, 16, 554, 17, 554, 18, 554, 19, 554, 20, 554, 21, 554, 22, 554, 23, 554, 24, 554, 25, 554, 26, 554, 27, 554, 28, 554, 29, 554, 30, 554, 31, 554, 32, 554, 33, 554, 34, 554, 35, 
554, 36, 554, 37, 554, 38, 554, 39, 554, 40, 554, 41, 554, 42, 554, 43, 554, 44, 554, 45, 554, 46, 554, 47, 554, 48, 554, 49, 554, 50, 554, 51, 554, 52, 554, 53, 554, 54, 554, 55, 554, 56, 554, 57, 554, 58, 554, 59, 554, 60, 554, 61, 554, 62, 554, 63, 554, 64, 554, 65, 554, 66, 554, 67, 554, 68, 554, 69, 554, 70, 554, 71, 554, 72, 554, 73, 554, 74, 554, 75, 554, 76, 554, 77, 554, 78, 554, 79, 554, 80, 554, 81, 554, 82, 554, 83, 554, 84, 554, 85, 554, 86, 554, 87, 553, 88, 551, 89, 469, 90, 467, 91, 
460, 92, 459, 93, 457, 94, 440, 95, 439, 96, 437, 97, 428, 98, 427, 99, 425, 100, 419, 101, 418, 102, 416, 103, 396, 104, 390, 105, 389, 106, 388, 107, 386, 108, 370, 109, 369, 110, 368, 111, 366, 112, 351, 113, 351, 114, 351, 115, 351, 116, 350, 117, 349, 118, 347, 119, 333, 120, 333, 121, 332, 122, 331, 123, 329, 124, 324, 125, 323, 126, 322, 127, 320, 128, 314, 129, 314, 130, 314, 131, 314, 132, 314, 133, 313, 134, 312, 135, 310, 136, 304, 137, 303, 138, 302, 139, 300, 140, 296, 141, 296, 142, 
296, 143, 296, 144, 295, 145, 295, 146, 294, 147, 292, 148, 289, 149, 220, 150, 220, 151, 220, 152, 220, 153, 220, 154, 220, 155, 220, 156, 220, 157, 220, 158, 220, 159, 220, 160, 220, 161, 220, 162, 220, 163, 220, 164, 220, 165, 221, 166, 221, 167, 222, 168, 222, 169, 222, 170, 222, 171, 222, 172, 222, 173, 222, 174, 221, 175, 221, 176, 220, 177, 220, 178, 220, 179, 220, 180, 220, 181, 220, 182, 220, 183, 220, 184, 220, 185, 220, 186, 220, 187, 220, 188, 219, 189, 219, 190, 218, 191, 216, 192, 213, 
193, 204, 194, 203, 195, 202, 196, 200, 197, 194, 198, 194, 199, 193, 200, 192, 201, 190, 202, 186, 203, 186, 204, 186, 205, 186, 206, 185, 207, 184, 208, 182, 209, 178, 210, 178, 211, 178, 212, 177, 213, 177, 214, 176, 215, 174, 216, 172, 217, 172, 218, 172, 219, 172, 220, 172, 221, 171, 222, 170, 223, 168, 224, 165, 225, 165, 226, 165, 227, 164, 228, 163, 229, 161, 230, 158, 231, 158, 232, 158, 233, 158, 234, 157, 235, 156, 236, 154, 237, 153, 238, 153, 239, 153, 240, 152, 241, 152, 242, 151, 243, 
149, 244, 146, 245, 146, 246, 145, 247, 144, 248, 142, 249, 139, 250, 139, 251, 139, 252, 139, 253, 139, 254, 139, 255, 138, 256, 137, 257, 135, 258, 134, 259, 133, 260, 132, 261, 130, 262, 127, 263, 127, 264, 127, 265, 127, 266, 127, 267, 127, 268, 126, 269, 125, 270, 123, 271, 119, 272, 119, 273, 119, 274, 119, 275, 119, 276, 118, 277, 117, 278, 115, 279, 113, 280, 113, 281, 113, 282, 113, 283, 113, 284, 113, 285, 112, 286, 111, 287, 109, 288, 106, 289, 106, 290, 106, 291, 106, 292, 106, 293, 106, 
294, 106, 295, 105, 296, 104, 297, 102, 298, 100, 299, 100, 300, 100, 301, 100, 302, 100, 303, 100, 304, 99, 305, 98, 306, 96, 307, 96, 308, 96, 309, 96, 310, 96, 311, 96, 312, 96, 313, 96, 314, 95, 315, 95, 316, 94, 317, 92, 318, 91, 319, 91, 320, 91, 321, 91, 322, 91, 323, 91, 324, 91, 325, 90, 326, 89, 327, 88, 328, 88, 329, 88, 330, 88, 331, 88, 332, 88, 333, 87, 334, 87, 335, 86, 336, 85, 337, 85, 338, 85, 339, 85, 340, 61, 340, 61, 339, 62, 338, 62, 337, 62, 336, 62, 335, 62, 334, 62, 333, 
62, 332, 62, 331, 62, 330, 62, 329, 63, 328, 63, 327, 64, 326, 63, 325, 63, 324, 63, 323, 63, 322, 63, 321, 63, 320, 64, 319, 64, 318, 64, 317, 64, 316, 64, 315, 64, 314, 64, 313, 64, 312, 64, 311, 64, 310, 65, 309, 65, 308, 66, 307, 66, 306, 67, 305, 67, 304, 68, 303, 68, 302, 68, 301, 68, 300, 69, 299, 69, 298, 69, 297, 69, 296, 70, 295, 70, 294, 70, 293, 70, 292, 70, 291, 70, 290, 70, 289, 70, 288, 70, 287, 70, 286, 70, 285, 70, 284, 71, 283, 71, 282, 72, 281, 72, 280, 72, 279, 72, 278, 72, 277, 
72, 276, 72, 275, 72, 274, 73, 273, 73, 272, 74, 271, 74, 270, 75, 269, 75, 268, 75, 267, 75, 266, 75, 265, 75, 264, 76, 263, 76, 262, 77, 261, 77, 260, 78, 259, 78, 258, 78, 257, 78, 256, 78, 255, 79, 254, 79, 253, 80, 252, 80, 251, 81, 250, 81, 249, 82, 248, 82, 247, 83, 246, 83, 245, 84, 244, 84, 243, 85, 242, 85, 241, 86, 240, 86, 239, 87, 238, 87, 237, 87, 236, 87, 235, 87, 234, 88, 233, 88, 232, 89, 231, 89, 230, 90, 229, 90, 228, 91, 227, 91, 226, 92, 225, 92, 224, 94, 223, 95, 222, 95, 221, 
96, 220, 96, 219, 97, 218, 97, 217, 98, 216, 98, 215, 101, 214, 101, 213, 102, 212, 102, 211, 103, 210, 103, 209, 104, 208, 104, 207, 105, 206, 105, 205, 107, 204, 108, 203, 108, 202, 109, 201, 109, 200, 110, 199, 110, 198, 111, 197, 111, 196, 116, 195, 116, 194, 117, 193, 117, 192, 118, 191, 118, 190, 119, 189, 119, 188, 122, 187, 123, 186, 123, 185, 124, 184, 124, 183, 125, 182, 125, 181, 126, 180, 126, 179, 130, 178, 130, 177, 131, 176, 131, 175, 134, 174, 135, 173, 135, 172, 136, 171, 136, 170, 
137, 169, 137, 168, 138, 167, 138, 166, 143, 165, 144, 164, 144, 163, 145, 162, 145, 161, 147, 160, 148, 159, 148, 158, 149, 157, 149, 156, 150, 155, 150, 154, 154, 153, 155, 152, 155, 151, 156, 150, 156, 149, 157, 148, 157, 147, 162, 146, 162, 145, 163, 144, 163, 143, 164, 142, 164, 141, 167, 140, 167, 139, 168, 138, 168, 137, 169, 136, 169, 135, 170, 134, 170, 133, 175, 132, 176, 131, 176, 130, 177, 129, 177, 128, 178, 127, 178, 126, 183, 125, 184, 124, 184, 123, 185, 122, 185, 121, 186, 120, 186, 
119, 194, 118, 195, 117, 192, 116, 191, 115, 190, 114, 189, 113, 188, 112, 187, 111, 186, 110, 187, 109, 187, 108, 187, 107, 187, 106, 187, 105, 187, 104, 187, 103, 187, 102, 187, 101, 187, 100, 187, 99, 187, 98, 187, 97, 187, 96, 187, 95, 186, 94, 186, 93, 186, 92, 186, 91, 186, 90, 189, 89, 191, 88, 193, 87, 194, 86, 201, 85, 203, 84, 204, 83, 205, 82, 206, 81, 207, 80, 208, 79, 208, 78, 209, 77, 210, 76, 211, 75, 214, 74, 216, 73, 218, 72, 221, 71, 223, 70, 225, 69, 227, 68, 229, 67, 231, 66, 
233, 65, 235, 64, 237, 63, 239, 62, 241, 61, 243, 60, 245, 59, 248, 58, 252, 57, 254, 56, 256, 55, 258, 54, 259, 53, 260, 52, 262, 51, 264, 50, 266, 49, 267, 48, 269, 47, 271, 46, 272, 45, 274, 44, 276, 43, 277, 42, 279, 41, 281, 40, 282, 39, 283, 38, 283, 37, 284, 36, 285, 35, 285, 34, 349, 33, 350, 32, 350, 31, 351, 30, 351, 29, 371, 28, 371, 27, 372, 26, 372, 25, 391, 24, 391, 23, 392, 22, 392, 21, 402, 20, 402, 19, 421, 18, 421, 17, 432, 16, 433, 15, 433, 14, 442, 13, 443, 12, 443, 11, 462, 10, 
463, 9, 463, 8, 473, 7, 473, 6, 495, 5, 495, 4, 540, 4], [1061, 341, 1061, 342, 1061, 343, 1061, 344, 1061, 345, 1061, 346, 1061, 347, 1061, 348, 1061, 349, 1060, 350, 1060, 351, 1060, 352, 1060, 353, 1060, 354, 1060, 355, 1060, 356, 1060, 357, 1060, 358, 1060, 359, 1060, 360, 1060, 361, 1060, 362, 1060, 363, 1060, 364, 1061, 365, 1061, 366, 1061, 367, 1061, 368, 1061, 369, 1061, 370, 1061, 371, 1061, 372, 1061, 373, 1061, 374, 1061, 375, 1061, 376, 1061, 377, 1061, 378, 1061, 379, 1062, 380, 1062, 
381, 1062, 382, 1062, 383, 1061, 384, 1061, 385, 1061, 386, 1061, 387, 1061, 388, 1061, 389, 1061, 390, 1061, 391, 1061, 392, 1061, 393, 1061, 394, 1061, 395, 1061, 396, 1061, 397, 1061, 398, 1061, 399, 1061, 400, 1061, 401, 1061, 402, 1061, 403, 1061, 404, 1061, 405, 1061, 406, 1061, 407, 1061, 408, 1061, 409, 1061, 410, 1061, 411, 1061, 412, 1061, 413, 1061, 414, 1061, 415, 1061, 416, 1061, 417, 1061, 418, 1061, 419, 1061, 420, 1061, 421, 1061, 422, 1062, 423, 1062, 424, 1062, 425, 1062, 426, 1062, 
427, 1062, 428, 1061, 429, 1061, 430, 1061, 431, 1061, 432, 1061, 433, 1061, 434, 1061, 435, 1061, 436, 1061, 437, 1061, 438, 1060, 439, 1059, 440, 1057, 441, 1057, 442, 1057, 443, 1057, 444, 1057, 445, 1057, 446, 1057, 447, 1056, 448, 1055, 449, 1053, 450, 1052, 451, 1052, 452, 1052, 453, 1052, 454, 1051, 455, 1051, 456, 1050, 457, 1048, 458, 1047, 459, 1047, 460, 1047, 461, 1047, 462, 1047, 463, 1046, 464, 1046, 465, 1045, 466, 1043, 467, 1041, 468, 1041, 469, 1041, 470, 1041, 471, 1041, 472, 1041, 
473, 1041, 474, 1041, 475, 1040, 476, 1039, 477, 1037, 478, 1033, 479, 1033, 480, 1033, 481, 1033, 482, 1033, 483, 1033, 484, 1032, 485, 1031, 486, 1029, 487, 1029, 488, 1029, 489, 1029, 490, 1029, 491, 1029, 492, 1029, 493, 1029, 494, 1028, 495, 1027, 496, 1025, 497, 1021, 498, 1021, 499, 1021, 500, 1021, 501, 1021, 502, 1020, 503, 1019, 504, 1017, 505, 1014, 506, 1014, 507, 1014, 508, 1014, 509, 1013, 510, 1013, 511, 1012, 512, 1010, 513, 1006, 514, 1006, 515, 1006, 516, 1005, 517, 1005, 518, 1004, 
519, 1002, 520, 998, 521, 998, 522, 998, 523, 998, 524, 998, 525, 997, 526, 996, 527, 994, 528, 991, 529, 991, 530, 991, 531, 991, 532, 991, 533, 991, 534, 990, 535, 989, 536, 987, 537, 986, 538, 986, 539, 986, 540, 985, 541, 984, 542, 982, 543, 978, 544, 978, 545, 978, 546, 977, 547, 977, 548, 976, 549, 974, 550, 969, 551, 969, 552, 968, 553, 967, 554, 965, 555, 961, 556, 961, 557, 961, 558, 961, 559, 961, 560, 960, 561, 959, 562, 957, 563, 953, 564, 953, 565, 953, 566, 952, 567, 952, 568, 951, 
569, 949, 570, 946, 571, 876, 572, 876, 573, 876, 574, 876, 575, 876, 576, 876, 577, 876, 578, 876, 579, 876, 580, 876, 581, 876, 582, 876, 583, 876, 584, 876, 585, 876, 586, 876, 587, 876, 588, 876, 589, 876, 590, 876, 591, 876, 592, 877, 593, 877, 594, 878, 595, 878, 596, 878, 597, 878, 598, 878, 599, 878, 600, 878, 601, 877, 602, 877, 603, 876, 604, 876, 605, 876, 606, 876, 607, 876, 608, 876, 609, 876, 610, 876, 611, 876, 612, 876, 613, 876, 614, 876, 615, 875, 616, 875, 617, 874, 618, 872, 619, 
869, 620, 858, 621, 856, 622, 850, 623, 849, 624, 848, 625, 846, 626, 841, 627, 840, 628, 839, 629, 837, 630, 831, 631, 830, 632, 830, 633, 829, 634, 827, 635, 820, 636, 819, 637, 818, 638, 816, 639, 807, 640, 805, 641, 799, 642, 798, 643, 797, 644, 795, 645, 786, 646, 784, 647, 775, 648, 773, 649, 766, 650, 765, 651, 764, 652, 762, 653, 752, 654, 744, 655, 743, 656, 741, 657, 730, 658, 722, 659, 722, 660, 721, 661, 719, 662, 712, 663, 711, 664, 709, 665, 691, 666, 690, 667, 688, 668, 680, 669, 679, 
670, 677, 671, 659, 672, 657, 673, 617, 674, 615, 675, 578, 676, 576, 677, 570, 677, 554, 676, 554, 675, 554, 674, 554, 673, 554, 672, 554, 671, 554, 670, 554, 669, 554, 668, 554, 667, 554, 666, 554, 665, 554, 664, 554, 663, 554, 662, 554, 661, 554, 660, 554, 659, 554, 658, 554, 657, 554, 656, 554, 655, 554, 654, 554, 653, 554, 652, 554, 651, 554, 650, 554, 649, 554, 648, 554, 647, 554, 646, 554, 645, 554, 644, 554, 643, 554, 642, 554, 641, 554, 640, 554, 639, 554, 638, 554, 637, 554, 636, 554, 635, 
554, 634, 554, 633, 554, 632, 554, 631, 554, 630, 554, 629, 554, 628, 554, 627, 554, 626, 554, 625, 554, 624, 554, 623, 554, 622, 554, 621, 554, 620, 554, 619, 554, 618, 554, 617, 554, 616, 554, 615, 554, 614, 554, 613, 554, 612, 554, 611, 554, 610, 554, 609, 554, 608, 554, 607, 554, 606, 554, 605, 554, 604, 554, 603, 554, 602, 554, 601, 554, 600, 554, 599, 554, 598, 554, 597, 554, 596, 554, 595, 554, 594, 562, 593, 562, 592, 582, 591, 582, 590, 633, 589, 643, 588, 683, 587, 684, 586, 684, 585, 693, 
584, 694, 583, 694, 582, 714, 581, 715, 580, 715, 579, 725, 578, 725, 577, 726, 576, 726, 575, 737, 574, 747, 573, 748, 572, 748, 571, 758, 570, 768, 569, 768, 568, 769, 567, 769, 566, 780, 565, 780, 564, 791, 563, 791, 562, 800, 561, 800, 560, 801, 559, 801, 558, 812, 557, 812, 556, 822, 555, 822, 554, 823, 553, 823, 552, 831, 551, 832, 550, 832, 549, 833, 548, 833, 547, 841, 546, 841, 545, 842, 544, 842, 543, 851, 542, 851, 541, 852, 540, 852, 539, 854, 538, 855, 537, 855, 536, 856, 535, 856, 534, 
856, 533, 856, 532, 856, 531, 856, 530, 856, 529, 856, 528, 856, 527, 856, 526, 856, 525, 856, 524, 856, 523, 856, 522, 856, 521, 856, 520, 856, 519, 857, 518, 857, 517, 858, 516, 859, 515, 860, 514, 860, 513, 861, 512, 861, 511, 862, 510, 862, 509, 863, 508, 863, 507, 864, 506, 865, 505, 865, 504, 933, 503, 933, 502, 933, 501, 933, 500, 933, 499, 933, 498, 933, 497, 933, 496, 933, 495, 933, 494, 933, 493, 933, 492, 933, 491, 933, 490, 933, 489, 933, 488, 933, 487, 933, 486, 933, 485, 933, 484, 933, 
483, 933, 482, 933, 481, 933, 480, 933, 479, 933, 478, 933, 477, 933, 476, 933, 475, 933, 474, 933, 473, 933, 472, 933, 471, 934, 470, 934, 469, 935, 468, 936, 467, 937, 466, 937, 465, 938, 464, 938, 463, 939, 462, 939, 461, 940, 460, 940, 459, 941, 458, 942, 457, 942, 456, 983, 455, 983, 454, 986, 453, 987, 452, 987, 451, 988, 450, 988, 449, 989, 448, 989, 447, 990, 446, 990, 445, 995, 444, 995, 443, 996, 442, 996, 441, 997, 440, 997, 439, 998, 438, 998, 437, 1003, 436, 1004, 435, 1004, 434, 1005, 
433, 1005, 432, 1006, 431, 1006, 430, 1010, 429, 1010, 428, 1011, 427, 1011, 426, 1012, 425, 1012, 424, 1013, 423, 1013, 422, 1018, 421, 1018, 420, 1019, 419, 1019, 418, 1020, 417, 1020, 416, 1020, 415, 1020, 414, 1021, 413, 1021, 412, 1022, 411, 1022, 410, 1023, 409, 1023, 408, 1024, 407, 1024, 406, 1025, 405, 1025, 404, 1029, 403, 1030, 402, 1030, 401, 1031, 400, 1031, 399, 1032, 398, 1032, 397, 1033, 396, 1033, 395, 1034, 394, 1035, 393, 1035, 392, 1036, 391, 1036, 390, 1037, 389, 1037, 388, 1038, 
387, 1038, 386, 1039, 385, 1039, 384, 1040, 383, 1041, 382, 1041, 381, 1041, 380, 1041, 379, 1041, 378, 1040, 377, 1040, 376, 1040, 375, 1040, 374, 1040, 373, 1041, 372, 1041, 371, 1041, 370, 1041, 369, 1041, 368, 1041, 367, 1041, 366, 1041, 365, 1041, 364, 1040, 363, 1040, 362, 1040, 361, 1040, 360, 1041, 359, 1041, 358, 1041, 357, 1041, 356, 1041, 355, 1041, 354, 1041, 353, 1041, 352, 1041, 351, 1041, 350, 1041, 349, 1041, 348, 1041, 347, 1041, 346, 1041, 345, 1041, 344, 1041, 343, 1040, 342, 1040, 
341, 1061, 341], [85, 341, 85, 342, 85, 343, 85, 344, 85, 345, 85, 346, 85, 347, 86, 348, 86, 349, 86, 350, 86, 351, 86, 352, 86, 353, 85, 354, 85, 355, 85, 356, 85, 357, 85, 358, 85, 359, 85, 360, 85, 361, 85, 362, 85, 363, 84, 364, 83, 365, 82, 366, 82, 367, 82, 368, 82, 369, 82, 370, 82, 371, 83, 372, 83, 373, 83, 374, 83, 375, 83, 376, 84, 377, 84, 378, 84, 379, 84, 380, 84, 381, 84, 382, 84, 383, 84, 384, 84, 385, 84, 386, 84, 387, 84, 388, 85, 389, 85, 390, 85, 391, 86, 392, 86, 393, 87, 394, 
87, 395, 87, 396, 87, 397, 88, 398, 88, 399, 88, 400, 89, 401, 89, 402, 90, 403, 90, 404, 92, 405, 93, 406, 93, 407, 94, 408, 94, 409, 94, 410, 95, 411, 95, 412, 98, 413, 99, 414, 99, 415, 100, 416, 100, 417, 100, 418, 101, 419, 101, 420, 102, 421, 105, 422, 106, 423, 106, 424, 107, 425, 107, 426, 107, 427, 108, 428, 108, 429, 112, 430, 113, 431, 113, 432, 114, 433, 114, 434, 114, 435, 115, 436, 119, 437, 120, 438, 120, 439, 121, 440, 121, 441, 121, 442, 122, 443, 122, 444, 126, 445, 127, 446, 127, 
447, 128, 448, 128, 449, 128, 450, 129, 451, 129, 452, 130, 453, 132, 454, 171, 455, 172, 456, 172, 457, 173, 458, 174, 459, 174, 460, 175, 461, 175, 462, 176, 463, 177, 464, 177, 465, 178, 466, 178, 467, 179, 468, 179, 469, 180, 470, 180, 471, 180, 472, 180, 473, 180, 474, 180, 475, 180, 476, 180, 477, 181, 478, 180, 479, 180, 480, 180, 481, 180, 482, 180, 483, 180, 484, 180, 485, 181, 486, 181, 487, 182, 488, 182, 489, 182, 490, 182, 491, 181, 492, 181, 493, 180, 494, 180, 495, 180, 496, 180, 497, 
180, 498, 180, 499, 181, 500, 181, 501, 181, 502, 181, 503, 180, 504, 180, 505, 246, 506, 247, 507, 247, 508, 248, 509, 249, 510, 249, 511, 250, 512, 250, 513, 251, 514, 252, 515, 252, 516, 253, 517, 253, 518, 254, 519, 254, 520, 255, 521, 255, 522, 255, 523, 255, 524, 255, 525, 255, 526, 255, 527, 255, 528, 256, 529, 256, 530, 255, 531, 255, 532, 255, 533, 255, 534, 255, 535, 255, 536, 256, 537, 257, 538, 259, 539, 260, 540, 260, 541, 261, 542, 261, 543, 261, 544, 268, 545, 269, 546, 269, 547, 290, 
548, 291, 549, 291, 550, 292, 551, 300, 552, 301, 553, 311, 554, 312, 555, 312, 556, 313, 557, 313, 558, 313, 559, 321, 560, 322, 561, 332, 562, 333, 563, 333, 564, 342, 565, 343, 566, 343, 567, 353, 568, 354, 569, 364, 570, 365, 571, 365, 572, 366, 573, 383, 574, 384, 575, 384, 576, 385, 577, 404, 578, 405, 579, 405, 580, 406, 581, 415, 582, 416, 583, 416, 584, 448, 585, 449, 586, 449, 587, 479, 588, 512, 589, 513, 590, 513, 591, 522, 592, 554, 593, 554, 594, 554, 595, 554, 596, 554, 597, 554, 598, 
554, 599, 554, 600, 554, 601, 554, 602, 554, 603, 554, 604, 554, 605, 554, 606, 554, 607, 554, 608, 554, 609, 554, 610, 554, 611, 554, 612, 554, 613, 554, 614, 554, 615, 554, 616, 554, 617, 554, 618, 554, 619, 554, 620, 554, 621, 554, 622, 554, 623, 554, 624, 554, 625, 554, 626, 554, 627, 554, 628, 554, 629, 554, 630, 554, 631, 554, 632, 554, 633, 554, 634, 554, 635, 554, 636, 554, 637, 554, 638, 554, 639, 554, 640, 554, 641, 554, 642, 554, 643, 554, 644, 554, 645, 554, 646, 554, 647, 554, 648, 554, 
649, 554, 650, 554, 651, 554, 652, 554, 653, 554, 654, 554, 655, 554, 656, 554, 657, 554, 658, 554, 659, 554, 660, 554, 661, 554, 662, 554, 663, 554, 664, 554, 665, 554, 666, 554, 667, 554, 668, 554, 669, 554, 670, 554, 671, 554, 672, 554, 673, 554, 674, 554, 675, 554, 676, 545, 677, 539, 677, 528, 676, 496, 675, 485, 674, 484, 673, 453, 672, 452, 671, 451, 670, 432, 669, 421, 668, 420, 667, 419, 666, 410, 665, 409, 664, 408, 663, 407, 662, 388, 661, 387, 660, 386, 659, 385, 658, 367, 657, 366, 656, 
365, 655, 364, 654, 359, 653, 358, 652, 348, 651, 347, 650, 346, 649, 337, 648, 336, 647, 335, 646, 327, 645, 326, 644, 316, 643, 315, 642, 314, 641, 313, 640, 313, 639, 313, 638, 306, 637, 305, 636, 295, 635, 294, 634, 293, 633, 292, 632, 274, 631, 273, 630, 272, 629, 263, 628, 262, 627, 261, 626, 260, 625, 260, 624, 260, 623, 241, 622, 238, 621, 237, 620, 236, 619, 235, 618, 235, 617, 235, 616, 235, 615, 235, 614, 235, 613, 235, 612, 235, 611, 235, 610, 235, 609, 235, 608, 235, 607, 235, 606, 234, 
605, 234, 604, 234, 603, 233, 602, 233, 601, 233, 600, 233, 599, 233, 598, 233, 597, 234, 596, 235, 595, 235, 594, 235, 593, 235, 592, 235, 591, 235, 590, 235, 589, 235, 588, 235, 587, 235, 586, 235, 585, 235, 584, 235, 583, 235, 582, 235, 581, 235, 580, 235, 579, 235, 578, 235, 577, 235, 576, 235, 575, 235, 574, 235, 573, 235, 572, 166, 571, 163, 570, 162, 569, 161, 568, 160, 567, 160, 566, 160, 565, 160, 564, 157, 563, 156, 562, 155, 561, 154, 560, 154, 559, 154, 558, 154, 557, 154, 556, 151, 555, 
150, 554, 149, 553, 148, 552, 148, 551, 143, 550, 142, 549, 141, 548, 140, 547, 140, 546, 140, 545, 140, 544, 135, 543, 134, 542, 133, 541, 132, 540, 132, 539, 132, 538, 127, 537, 126, 536, 125, 535, 124, 534, 124, 533, 124, 532, 124, 531, 124, 530, 124, 529, 121, 528, 120, 527, 119, 526, 118, 525, 118, 524, 118, 523, 118, 522, 118, 521, 114, 520, 113, 519, 112, 518, 111, 517, 111, 516, 111, 515, 111, 514, 107, 513, 106, 512, 105, 511, 104, 510, 104, 509, 104, 508, 104, 507, 104, 506, 100, 505, 99, 
504, 98, 503, 97, 502, 97, 501, 97, 500, 97, 499, 97, 498, 97, 497, 93, 496, 92, 495, 91, 494, 90, 493, 90, 492, 90, 491, 90, 490, 90, 489, 87, 488, 86, 487, 85, 486, 84, 485, 84, 484, 84, 483, 84, 482, 84, 481, 84, 480, 84, 479, 81, 478, 80, 477, 79, 476, 78, 475, 78, 474, 78, 473, 78, 472, 78, 471, 78, 470, 78, 469, 78, 468, 77, 467, 76, 466, 75, 465, 74, 464, 74, 463, 74, 462, 74, 461, 74, 460, 74, 459, 72, 458, 71, 457, 70, 456, 69, 455, 69, 454, 69, 453, 69, 452, 69, 451, 69, 450, 69, 449, 69, 
448, 69, 447, 69, 446, 69, 445, 68, 444, 68, 443, 68, 442, 68, 441, 68, 440, 67, 439, 66, 438, 66, 437, 66, 436, 66, 435, 66, 434, 66, 433, 66, 432, 66, 431, 66, 430, 66, 429, 66, 428, 65, 427, 65, 426, 65, 425, 65, 424, 64, 423, 64, 422, 64, 421, 64, 420, 64, 419, 64, 418, 64, 417, 64, 416, 64, 415, 64, 414, 64, 413, 63, 412, 63, 411, 63, 410, 63, 409, 63, 408, 64, 407, 64, 406, 64, 405, 64, 404, 64, 403, 64, 402, 64, 401, 63, 400, 62, 399, 62, 398, 62, 397, 62, 396, 62, 395, 62, 394, 62, 393, 62, 
392, 62, 391, 62, 390, 62, 389, 61, 388, 61, 387, 61, 386, 61, 385, 61, 384, 62, 383, 62, 382, 62, 381, 62, 380, 62, 379, 62, 378, 62, 377, 62, 376, 62, 375, 61, 374, 61, 373, 61, 372, 61, 371, 62, 370, 62, 369, 62, 368, 62, 367, 62, 366, 62, 365, 62, 364, 62, 363, 62, 362, 62, 361, 62, 360, 62, 359, 62, 358, 62, 357, 62, 356, 62, 355, 62, 354, 62, 353, 62, 352, 62, 351, 62, 350, 62, 349, 62, 348, 62, 347, 62, 346, 62, 345, 61, 344, 61, 343, 61, 342, 61, 341, 85, 341]], 34:[85, 5, 86, 6, 87, 7, 87, 
8, 87, 9, 87, 10, 87, 11, 88, 12, 88, 13, 88, 14, 88, 15, 88, 16, 88, 17, 89, 18, 89, 19, 90, 20, 91, 21, 103, 22, 105, 23, 106, 24, 106, 25, 106, 26, 106, 27, 106, 28, 106, 29, 106, 30, 106, 31, 106, 32, 106, 33, 106, 34, 106, 35, 106, 36, 106, 37, 106, 38, 106, 39, 106, 40, 106, 41, 106, 42, 107, 43, 107, 44, 108, 45, 109, 46, 109, 47, 109, 48, 107, 49, 106, 50, 106, 51, 106, 52, 106, 53, 106, 54, 106, 55, 107, 56, 107, 57, 107, 58, 107, 59, 107, 60, 107, 61, 107, 62, 107, 63, 107, 64, 107, 65, 
108, 66, 108, 67, 110, 68, 111, 69, 113, 70, 115, 71, 116, 72, 118, 73, 119, 74, 121, 75, 122, 76, 124, 77, 125, 78, 125, 79, 124, 80, 124, 81, 124, 82, 123, 83, 121, 84, 120, 85, 120, 86, 120, 87, 120, 88, 119, 89, 119, 90, 119, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 121, 97, 121, 98, 122, 99, 122, 100, 122, 101, 122, 102, 122, 103, 122, 104, 122, 105, 122, 106, 122, 107, 122, 108, 122, 109, 120, 110, 118, 111, 118, 112, 116, 113, 110, 114, 104, 115, 103, 116, 104, 117, 104, 118, 103, 
119, 102, 120, 102, 121, 103, 122, 102, 123, 100, 124, 61, 127, 63, 128, 64, 129, 65, 130, 64, 131, 67, 132, 67, 133, 67, 134, 67, 135, 61, 136, 59, 137, 57, 138, 53, 138, 51, 137, 50, 136, 49, 135, 49, 134, 49, 133, 48, 132, 48, 131, 49, 130, 51, 129, 53, 128, 55, 127, 96, 124, 94, 123, 72, 122, 71, 121, 65, 120, 39, 119, 28, 118, 27, 117, 19, 116, 18, 115, 17, 114, 15, 113, 15, 112, 15, 111, 15, 110, 15, 109, 18, 108, 18, 107, 17, 106, 17, 105, 17, 104, 17, 103, 17, 102, 17, 101, 17, 100, 17, 99, 
17, 98, 17, 97, 19, 96, 21, 95, 21, 94, 21, 93, 21, 92, 22, 91, 23, 90, 25, 89, 35, 88, 35, 87, 35, 86, 33, 85, 32, 84, 31, 83, 31, 82, 31, 81, 32, 80, 34, 79, 36, 78, 37, 77, 38, 76, 40, 75, 42, 74, 43, 73, 43, 72, 43, 71, 43, 70, 43, 69, 43, 68, 43, 67, 43, 66, 43, 65, 43, 64, 43, 63, 43, 62, 43, 61, 43, 60, 43, 59, 43, 58, 43, 57, 43, 56, 36, 55, 34, 54, 33, 53, 34, 52, 35, 51, 36, 50, 35, 49, 36, 48, 37, 47, 38, 46, 39, 45, 39, 44, 39, 43, 41, 42, 42, 41, 42, 40, 42, 39, 43, 38, 44, 37, 45, 36, 
46, 35, 46, 34, 47, 33, 48, 32, 49, 31, 48, 30, 49, 29, 50, 28, 50, 27, 50, 26, 50, 25, 50, 24, 50, 23, 51, 22, 51, 21, 50, 20, 50, 19, 50, 18, 51, 17, 51, 16, 53, 15, 78, 14, 78, 13, 79, 12, 79, 11, 78, 10, 78, 9, 78, 8, 78, 7, 79, 6, 80, 5, 85, 5], 35:[79, 10, 80, 11, 81, 12, 81, 13, 81, 14, 81, 15, 82, 16, 81, 17, 82, 18, 82, 19, 82, 20, 82, 21, 82, 22, 82, 23, 82, 24, 83, 25, 83, 26, 83, 27, 83, 28, 83, 29, 83, 30, 104, 31, 105, 32, 105, 33, 105, 34, 105, 35, 104, 36, 104, 37, 104, 38, 104, 39, 
104, 40, 104, 41, 104, 42, 104, 43, 104, 44, 104, 45, 104, 46, 104, 47, 104, 48, 104, 49, 104, 50, 104, 51, 104, 52, 104, 53, 104, 54, 104, 55, 104, 56, 105, 57, 109, 58, 110, 59, 110, 60, 110, 61, 110, 62, 110, 63, 110, 64, 110, 65, 110, 66, 110, 67, 113, 68, 113, 69, 113, 70, 113, 71, 113, 72, 113, 73, 113, 74, 113, 75, 113, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 120, 83, 120, 84, 120, 85, 120, 86, 120, 87, 120, 88, 120, 89, 120, 90, 120, 91, 120, 92, 120, 93, 122, 94, 123, 95, 
125, 96, 125, 97, 125, 98, 124, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 123, 110, 123, 111, 123, 112, 127, 113, 127, 114, 128, 115, 128, 116, 127, 117, 126, 118, 125, 119, 125, 120, 125, 121, 121, 122, 120, 123, 121, 124, 121, 125, 122, 126, 122, 127, 122, 128, 118, 129, 116, 130, 115, 131, 113, 132, 112, 133, 112, 134, 111, 135, 99, 136, 99, 137, 98, 138, 98, 139, 95, 140, 93, 140, 90, 139, 90, 138, 90, 137, 83, 136, 68, 135, 56, 134, 
54, 133, 54, 132, 54, 131, 48, 130, 46, 129, 45, 128, 38, 127, 35, 126, 34, 125, 33, 124, 33, 123, 32, 122, 32, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 30, 110, 30, 109, 29, 108, 27, 107, 27, 106, 28, 105, 28, 104, 26, 103, 26, 102, 26, 101, 26, 100, 30, 99, 30, 98, 30, 97, 30, 96, 30, 95, 30, 94, 30, 93, 30, 92, 30, 91, 30, 90, 30, 89, 30, 88, 29, 87, 27, 86, 26, 85, 26, 84, 25, 83, 26, 82, 29, 81, 34, 80, 36, 79, 40, 78, 39, 77, 38, 76, 38, 
75, 38, 74, 38, 73, 38, 72, 38, 71, 38, 70, 38, 69, 38, 68, 38, 67, 38, 66, 38, 65, 38, 64, 38, 63, 38, 62, 38, 61, 38, 60, 38, 59, 38, 58, 38, 57, 38, 56, 39, 55, 41, 54, 43, 53, 44, 52, 44, 51, 45, 50, 45, 49, 46, 48, 47, 47, 48, 46, 49, 45, 50, 44, 51, 43, 52, 42, 53, 41, 55, 40, 58, 39, 59, 38, 62, 37, 62, 36, 62, 35, 62, 34, 63, 33, 63, 32, 63, 31, 63, 30, 63, 29, 64, 28, 64, 27, 64, 26, 64, 25, 64, 24, 64, 23, 65, 22, 65, 21, 65, 20, 65, 19, 65, 18, 66, 17, 66, 16, 66, 15, 66, 14, 66, 13, 66, 
12, 67, 11, 69, 10, 79, 10], 36:[63, 22, 65, 23, 65, 24, 66, 25, 66, 26, 66, 27, 66, 28, 66, 29, 67, 30, 67, 31, 67, 32, 67, 33, 67, 34, 67, 35, 104, 36, 106, 37, 112, 38, 113, 39, 114, 40, 115, 41, 115, 42, 116, 43, 118, 44, 118, 45, 118, 46, 118, 47, 118, 48, 118, 49, 118, 50, 118, 51, 118, 52, 118, 53, 123, 54, 123, 55, 123, 56, 123, 57, 125, 58, 125, 59, 126, 60, 127, 61, 126, 62, 127, 63, 127, 64, 127, 65, 127, 66, 128, 67, 127, 68, 128, 69, 128, 70, 128, 71, 127, 72, 128, 73, 127, 74, 128, 
75, 128, 76, 127, 77, 127, 78, 126, 79, 126, 80, 124, 81, 124, 82, 124, 83, 121, 84, 120, 85, 119, 86, 116, 87, 121, 88, 123, 89, 125, 90, 127, 91, 128, 92, 129, 93, 129, 94, 130, 95, 130, 96, 134, 97, 135, 98, 135, 99, 135, 100, 134, 101, 130, 102, 130, 103, 129, 104, 129, 105, 128, 106, 128, 107, 127, 108, 127, 109, 127, 110, 127, 111, 127, 112, 127, 113, 127, 114, 127, 115, 127, 116, 127, 117, 127, 118, 127, 119, 127, 120, 127, 121, 126, 122, 126, 123, 126, 124, 126, 125, 126, 126, 126, 127, 127, 
128, 129, 129, 130, 130, 130, 131, 127, 132, 126, 133, 112, 134, 112, 135, 112, 136, 112, 137, 111, 138, 110, 139, 108, 140, 98, 140, 95, 139, 94, 138, 93, 137, 68, 136, 67, 135, 64, 134, 56, 133, 54, 132, 53, 131, 50, 130, 48, 129, 49, 128, 48, 127, 48, 126, 51, 125, 52, 124, 56, 123, 53, 122, 49, 121, 44, 120, 40, 119, 39, 118, 35, 117, 34, 116, 33, 115, 31, 114, 26, 113, 25, 112, 24, 111, 24, 110, 23, 109, 23, 108, 23, 107, 22, 106, 22, 105, 25, 104, 29, 103, 32, 102, 32, 101, 32, 100, 32, 99, 
32, 98, 32, 97, 32, 96, 11, 95, 10, 94, 9, 93, 8, 92, 8, 91, 7, 90, 7, 89, 6, 88, 6, 87, 6, 86, 7, 85, 7, 84, 8, 83, 8, 82, 10, 81, 10, 80, 10, 79, 11, 78, 11, 77, 12, 76, 13, 75, 15, 74, 17, 73, 17, 72, 17, 71, 18, 70, 17, 69, 18, 68, 24, 67, 25, 66, 26, 65, 26, 64, 27, 63, 28, 62, 29, 61, 30, 60, 31, 59, 33, 58, 34, 57, 35, 56, 35, 55, 36, 54, 37, 53, 37, 52, 37, 51, 38, 50, 38, 49, 38, 48, 38, 47, 38, 46, 38, 45, 39, 44, 38, 43, 38, 42, 38, 41, 38, 40, 39, 39, 40, 38, 41, 37, 41, 36, 42, 35, 43, 
34, 46, 33, 51, 32, 51, 31, 51, 30, 51, 29, 52, 28, 52, 27, 52, 26, 52, 25, 53, 24, 53, 23, 54, 22, 63, 22], 38:[88, 33, 88, 34, 89, 35, 89, 36, 90, 37, 91, 38, 91, 39, 92, 40, 92, 41, 93, 42, 94, 43, 94, 44, 95, 45, 95, 46, 96, 47, 109, 48, 109, 49, 110, 50, 111, 51, 111, 52, 112, 53, 113, 54, 113, 55, 114, 56, 115, 57, 115, 58, 116, 59, 117, 60, 117, 61, 119, 62, 120, 63, 120, 64, 120, 65, 121, 66, 121, 67, 122, 68, 123, 69, 124, 70, 124, 71, 125, 72, 126, 73, 127, 74, 128, 75, 128, 76, 128, 77, 
128, 78, 128, 79, 126, 80, 126, 81, 126, 82, 126, 83, 126, 84, 126, 85, 125, 86, 125, 87, 125, 88, 125, 89, 125, 90, 125, 91, 125, 92, 125, 93, 125, 94, 125, 95, 125, 96, 125, 97, 125, 98, 125, 99, 127, 100, 128, 101, 130, 102, 130, 103, 129, 104, 127, 105, 127, 106, 126, 107, 124, 108, 124, 109, 124, 110, 124, 111, 124, 112, 124, 113, 124, 114, 124, 115, 124, 116, 124, 117, 124, 118, 124, 119, 124, 120, 124, 121, 124, 122, 124, 123, 124, 124, 124, 125, 124, 126, 124, 127, 124, 128, 124, 129, 124, 
130, 123, 131, 92, 132, 78, 133, 76, 134, 74, 135, 62, 136, 60, 137, 51, 137, 47, 136, 46, 135, 45, 134, 42, 133, 37, 132, 35, 131, 34, 130, 33, 129, 33, 128, 34, 127, 34, 126, 35, 125, 35, 124, 35, 123, 35, 122, 35, 121, 35, 120, 35, 119, 35, 118, 35, 117, 35, 116, 35, 115, 35, 114, 35, 113, 34, 112, 28, 111, 27, 110, 25, 109, 19, 108, 19, 107, 18, 106, 17, 105, 17, 104, 16, 103, 16, 102, 17, 101, 20, 100, 20, 99, 20, 98, 20, 97, 20, 96, 20, 95, 20, 94, 20, 93, 20, 92, 20, 91, 20, 90, 20, 89, 20, 
88, 20, 87, 20, 86, 20, 85, 20, 84, 20, 83, 20, 82, 20, 81, 20, 80, 20, 79, 20, 78, 20, 77, 20, 76, 20, 75, 20, 74, 20, 73, 20, 72, 20, 71, 17, 70, 16, 69, 15, 68, 16, 67, 17, 66, 18, 65, 19, 64, 20, 63, 21, 62, 23, 61, 24, 60, 25, 59, 26, 58, 27, 57, 28, 56, 29, 55, 31, 54, 32, 53, 33, 52, 33, 51, 33, 50, 34, 49, 36, 48, 44, 47, 49, 46, 51, 45, 52, 44, 56, 43, 62, 42, 63, 41, 64, 40, 66, 39, 72, 38, 74, 37, 78, 36, 80, 35, 81, 34, 84, 33, 88, 33], 39:[75, 9, 76, 10, 77, 11, 78, 12, 79, 13, 80, 14, 
82, 15, 83, 16, 84, 17, 86, 18, 88, 19, 91, 20, 94, 21, 96, 22, 98, 23, 100, 24, 101, 25, 103, 26, 104, 27, 104, 28, 105, 29, 106, 30, 106, 31, 106, 32, 107, 33, 107, 34, 107, 35, 106, 36, 106, 37, 106, 38, 105, 39, 104, 40, 103, 41, 103, 42, 101, 43, 101, 44, 101, 45, 101, 46, 101, 47, 101, 48, 101, 49, 101, 50, 101, 51, 110, 52, 113, 53, 114, 54, 114, 55, 113, 56, 113, 57, 113, 58, 112, 59, 111, 60, 108, 61, 106, 62, 105, 63, 105, 64, 104, 65, 103, 66, 102, 67, 102, 68, 101, 69, 101, 70, 101, 71, 
101, 72, 106, 73, 108, 74, 109, 75, 111, 76, 111, 77, 112, 78, 112, 79, 112, 80, 111, 81, 110, 82, 110, 83, 110, 84, 110, 85, 110, 86, 112, 87, 114, 88, 115, 89, 116, 90, 117, 91, 118, 92, 118, 93, 119, 94, 119, 95, 119, 96, 119, 97, 119, 98, 119, 99, 119, 100, 119, 101, 118, 102, 118, 103, 118, 104, 118, 105, 118, 106, 118, 107, 118, 108, 119, 109, 121, 110, 122, 111, 123, 112, 124, 113, 123, 114, 124, 115, 123, 116, 123, 117, 123, 118, 122, 119, 121, 120, 121, 121, 120, 122, 120, 123, 119, 124, 
120, 125, 119, 126, 116, 127, 116, 128, 115, 129, 112, 130, 108, 131, 98, 132, 97, 133, 97, 134, 91, 135, 86, 135, 85, 134, 46, 133, 43, 132, 41, 131, 39, 130, 38, 129, 37, 128, 38, 127, 38, 126, 39, 125, 38, 124, 34, 123, 33, 122, 32, 121, 31, 120, 31, 119, 32, 118, 36, 117, 35, 116, 34, 115, 33, 114, 33, 113, 33, 112, 34, 111, 36, 110, 38, 109, 40, 108, 31, 107, 29, 106, 29, 105, 28, 104, 28, 103, 29, 102, 29, 101, 29, 100, 27, 99, 27, 98, 26, 97, 26, 96, 27, 95, 28, 94, 33, 93, 33, 92, 33, 91, 
33, 90, 33, 89, 34, 88, 33, 87, 32, 86, 31, 85, 32, 84, 33, 83, 34, 82, 35, 81, 36, 80, 37, 79, 37, 78, 38, 77, 39, 76, 40, 75, 41, 74, 42, 73, 39, 72, 38, 71, 38, 70, 38, 69, 38, 68, 39, 67, 39, 66, 38, 65, 37, 64, 37, 63, 37, 62, 37, 61, 37, 60, 36, 59, 34, 58, 33, 57, 33, 56, 33, 55, 33, 54, 33, 53, 33, 52, 35, 51, 37, 50, 41, 49, 41, 48, 41, 47, 41, 46, 42, 45, 42, 44, 42, 43, 41, 42, 39, 41, 39, 40, 38, 39, 38, 38, 38, 37, 37, 36, 37, 35, 37, 34, 37, 33, 37, 32, 38, 31, 38, 30, 39, 29, 39, 28, 
40, 27, 41, 26, 43, 25, 44, 24, 46, 23, 48, 22, 50, 21, 53, 20, 55, 19, 57, 18, 59, 17, 61, 16, 63, 15, 64, 14, 65, 13, 66, 12, 67, 11, 69, 10, 70, 9, 75, 9], 40:[302, 99, 305, 100, 307, 101, 310, 102, 312, 103, 313, 104, 315, 105, 316, 106, 316, 107, 316, 108, 317, 109, 318, 110, 318, 111, 318, 112, 318, 113, 317, 114, 316, 115, 315, 116, 314, 117, 313, 118, 317, 119, 342, 120, 343, 121, 345, 122, 351, 123, 353, 124, 353, 125, 358, 126, 359, 127, 359, 128, 361, 129, 362, 130, 384, 131, 386, 132, 
389, 133, 391, 134, 391, 135, 392, 136, 392, 137, 393, 138, 394, 139, 394, 140, 394, 141, 394, 142, 393, 143, 393, 144, 390, 145, 389, 146, 390, 147, 390, 148, 391, 149, 392, 150, 392, 151, 392, 152, 393, 153, 393, 154, 392, 155, 391, 156, 391, 157, 395, 158, 396, 159, 397, 160, 397, 161, 398, 162, 399, 163, 401, 164, 410, 165, 414, 166, 420, 167, 422, 168, 423, 169, 424, 170, 424, 171, 424, 172, 429, 173, 431, 174, 433, 175, 437, 176, 436, 177, 436, 178, 437, 179, 437, 180, 438, 181, 439, 182, 441, 
183, 440, 184, 440, 185, 440, 186, 441, 187, 442, 188, 442, 189, 445, 190, 444, 191, 444, 192, 443, 193, 443, 194, 442, 195, 442, 196, 444, 197, 446, 198, 444, 199, 444, 200, 446, 201, 447, 202, 448, 203, 447, 204, 447, 205, 448, 206, 449, 207, 449, 208, 449, 209, 450, 210, 450, 211, 456, 212, 456, 213, 458, 214, 458, 215, 458, 216, 462, 217, 463, 218, 464, 219, 465, 220, 464, 221, 464, 222, 464, 223, 464, 224, 464, 225, 466, 226, 467, 227, 467, 228, 467, 229, 467, 230, 467, 231, 468, 232, 468, 233, 
469, 234, 469, 235, 468, 236, 466, 237, 465, 238, 463, 239, 462, 240, 434, 241, 433, 242, 433, 243, 402, 244, 406, 245, 412, 246, 412, 247, 413, 248, 402, 249, 402, 250, 402, 251, 400, 252, 399, 253, 398, 254, 397, 255, 396, 256, 394, 257, 393, 258, 392, 259, 391, 260, 389, 261, 388, 262, 387, 263, 385, 264, 384, 265, 382, 266, 381, 267, 381, 268, 382, 269, 382, 270, 383, 271, 383, 272, 384, 273, 385, 274, 386, 275, 386, 276, 387, 277, 387, 278, 387, 279, 388, 280, 388, 281, 388, 282, 388, 283, 389, 
284, 389, 285, 389, 286, 390, 287, 390, 288, 391, 289, 391, 290, 392, 291, 393, 292, 394, 293, 395, 294, 395, 295, 396, 296, 397, 297, 398, 298, 399, 299, 399, 300, 400, 301, 400, 302, 401, 303, 401, 304, 401, 305, 401, 306, 401, 307, 401, 308, 401, 309, 401, 310, 402, 311, 403, 312, 404, 313, 405, 314, 406, 315, 408, 316, 408, 317, 409, 318, 409, 319, 409, 320, 409, 321, 409, 322, 409, 323, 409, 324, 409, 325, 408, 326, 408, 327, 407, 328, 406, 329, 406, 330, 406, 331, 405, 332, 405, 333, 404, 334, 
403, 335, 402, 336, 402, 337, 403, 338, 403, 339, 404, 340, 404, 341, 404, 342, 405, 343, 404, 344, 408, 345, 412, 346, 414, 347, 414, 348, 414, 349, 414, 350, 414, 351, 415, 352, 415, 353, 415, 354, 416, 355, 415, 356, 415, 357, 414, 358, 413, 359, 411, 360, 410, 361, 410, 362, 410, 363, 410, 364, 412, 365, 412, 366, 412, 367, 414, 368, 415, 369, 415, 370, 415, 371, 415, 372, 415, 373, 415, 374, 416, 375, 415, 376, 415, 377, 414, 378, 414, 379, 413, 380, 412, 381, 412, 382, 410, 383, 409, 384, 407, 
385, 406, 386, 404, 387, 397, 388, 397, 389, 397, 390, 397, 391, 396, 392, 395, 393, 394, 394, 393, 395, 390, 396, 390, 397, 390, 398, 390, 399, 390, 400, 389, 401, 389, 402, 388, 403, 388, 404, 388, 405, 388, 406, 387, 407, 386, 408, 385, 409, 384, 410, 379, 411, 361, 412, 355, 413, 352, 414, 350, 415, 347, 416, 311, 417, 302, 418, 312, 419, 312, 420, 301, 421, 300, 422, 295, 423, 293, 424, 292, 425, 283, 426, 283, 427, 279, 428, 278, 429, 271, 430, 270, 431, 258, 432, 252, 433, 249, 434, 233, 435, 
238, 436, 237, 437, 221, 437, 218, 436, 215, 435, 211, 434, 204, 433, 195, 432, 189, 431, 185, 430, 179, 429, 177, 428, 172, 427, 170, 426, 169, 425, 169, 424, 169, 423, 155, 422, 151, 421, 147, 420, 144, 419, 143, 418, 135, 417, 132, 416, 130, 415, 125, 414, 123, 413, 118, 412, 116, 411, 115, 410, 114, 409, 114, 408, 113, 407, 110, 406, 108, 405, 108, 404, 104, 403, 102, 402, 100, 401, 98, 400, 95, 399, 92, 398, 82, 397, 81, 396, 80, 395, 80, 394, 70, 393, 70, 392, 70, 391, 70, 390, 71, 389, 68, 
388, 68, 387, 68, 386, 66, 385, 66, 384, 49, 383, 49, 382, 49, 381, 49, 380, 47, 379, 47, 378, 48, 377, 46, 376, 40, 375, 41, 374, 33, 373, 33, 372, 34, 371, 30, 370, 27, 369, 27, 368, 28, 367, 27, 366, 28, 365, 27, 364, 21, 363, 22, 362, 22, 361, 22, 360, 22, 359, 19, 358, 19, 357, 20, 356, 20, 355, 19, 354, 19, 353, 18, 352, 18, 351, 18, 350, 14, 349, 13, 348, 12, 347, 12, 346, 12, 345, 12, 344, 12, 343, 11, 342, 11, 341, 9, 340, 9, 339, 10, 338, 8, 337, 7, 336, 9, 335, 8, 334, 7, 333, 8, 332, 
7, 331, 6, 330, 6, 329, 6, 328, 7, 327, 8, 326, 8, 325, 9, 324, 9, 323, 12, 322, 7, 321, 7, 320, 6, 319, 7, 318, 6, 317, 7, 316, 7, 315, 6, 314, 8, 313, 8, 312, 9, 311, 10, 310, 10, 309, 11, 308, 9, 307, 9, 306, 10, 305, 11, 304, 11, 303, 12, 302, 10, 301, 11, 300, 12, 299, 12, 298, 13, 297, 10, 296, 11, 295, 13, 294, 11, 293, 11, 292, 12, 291, 13, 290, 13, 289, 13, 288, 15, 287, 16, 286, 16, 285, 15, 284, 16, 283, 17, 282, 17, 281, 18, 280, 20, 279, 20, 278, 18, 277, 20, 276, 19, 275, 19, 274, 19, 
273, 20, 272, 21, 271, 21, 270, 21, 269, 22, 268, 22, 267, 25, 266, 25, 265, 24, 264, 24, 263, 28, 262, 28, 261, 29, 260, 29, 259, 31, 258, 32, 257, 35, 256, 34, 255, 39, 254, 39, 253, 40, 252, 41, 251, 42, 250, 43, 249, 46, 248, 44, 247, 42, 246, 41, 245, 41, 244, 41, 243, 40, 242, 40, 241, 41, 240, 41, 239, 39, 238, 38, 237, 38, 236, 37, 235, 37, 234, 38, 233, 38, 232, 36, 231, 36, 230, 35, 229, 35, 228, 35, 227, 35, 226, 36, 225, 35, 224, 36, 223, 37, 222, 41, 221, 41, 220, 41, 219, 48, 218, 49, 
217, 50, 216, 51, 215, 53, 214, 73, 213, 72, 212, 73, 211, 72, 210, 73, 209, 76, 208, 80, 207, 81, 206, 82, 205, 83, 204, 83, 203, 82, 202, 81, 201, 86, 200, 86, 199, 85, 198, 84, 197, 91, 196, 91, 195, 92, 194, 91, 193, 94, 192, 94, 191, 95, 190, 96, 189, 96, 188, 96, 187, 98, 186, 98, 185, 97, 184, 98, 183, 98, 182, 99, 181, 98, 180, 97, 179, 97, 178, 97, 177, 97, 176, 97, 175, 97, 174, 97, 173, 97, 172, 97, 171, 97, 170, 97, 169, 97, 168, 98, 167, 98, 166, 100, 165, 101, 164, 102, 163, 105, 162, 
105, 161, 106, 160, 107, 159, 114, 158, 114, 157, 114, 156, 115, 155, 115, 154, 116, 153, 153, 152, 158, 151, 158, 150, 158, 149, 163, 148, 171, 147, 173, 146, 174, 145, 174, 144, 175, 143, 176, 142, 177, 141, 179, 140, 181, 139, 182, 138, 184, 137, 185, 136, 184, 135, 184, 134, 185, 133, 185, 132, 187, 131, 189, 130, 193, 129, 199, 128, 200, 127, 204, 126, 208, 125, 210, 124, 213, 123, 231, 122, 231, 121, 231, 120, 240, 119, 238, 118, 237, 117, 237, 116, 236, 115, 236, 114, 236, 113, 236, 112, 237, 
111, 238, 110, 238, 109, 238, 108, 242, 107, 243, 106, 245, 105, 249, 104, 289, 103, 291, 102, 292, 101, 296, 100, 299, 99, 302, 99], 41:[78, 44, 80, 45, 80, 46, 80, 47, 80, 48, 80, 49, 81, 50, 81, 51, 82, 52, 82, 53, 83, 54, 83, 55, 84, 56, 85, 57, 85, 58, 86, 59, 86, 60, 86, 61, 86, 62, 84, 63, 78, 64, 78, 65, 80, 66, 81, 67, 81, 68, 108, 69, 123, 70, 124, 71, 125, 72, 125, 73, 125, 74, 126, 75, 125, 76, 125, 77, 125, 78, 125, 79, 125, 80, 125, 81, 125, 82, 126, 83, 127, 84, 122, 85, 122, 86, 121, 
87, 121, 88, 121, 89, 121, 90, 122, 91, 122, 92, 122, 93, 121, 94, 118, 95, 119, 96, 119, 97, 119, 98, 119, 99, 119, 100, 120, 101, 125, 102, 128, 103, 129, 104, 130, 105, 131, 106, 131, 107, 132, 108, 131, 109, 131, 110, 131, 111, 131, 112, 132, 113, 133, 114, 133, 115, 134, 116, 134, 117, 135, 118, 135, 119, 135, 120, 134, 121, 134, 122, 124, 123, 133, 124, 136, 125, 136, 126, 98, 127, 99, 128, 101, 129, 100, 130, 100, 131, 101, 132, 100, 133, 101, 134, 97, 135, 78, 136, 78, 137, 79, 138, 66, 139, 
68, 140, 53, 141, 50, 141, 50, 140, 52, 139, 51, 138, 52, 137, 54, 136, 54, 135, 37, 134, 36, 133, 28, 132, 29, 131, 28, 130, 29, 129, 29, 128, 27, 127, 29, 126, 28, 125, 20, 124, 20, 123, 32, 122, 31, 121, 33, 120, 34, 119, 35, 118, 35, 117, 34, 116, 16, 115, 17, 114, 18, 113, 21, 112, 21, 111, 20, 110, 21, 109, 22, 108, 24, 107, 26, 106, 25, 105, 25, 104, 25, 103, 24, 102, 25, 101, 25, 100, 17, 99, 10, 98, 8, 97, 10, 96, 11, 95, 16, 94, 11, 93, 11, 92, 11, 91, 11, 90, 11, 89, 9, 88, 9, 87, 10, 
86, 11, 85, 11, 84, 11, 83, 11, 82, 11, 81, 12, 80, 12, 79, 13, 78, 14, 77, 15, 76, 59, 75, 60, 74, 60, 73, 64, 72, 63, 71, 63, 70, 63, 69, 63, 68, 64, 67, 65, 66, 64, 65, 65, 64, 65, 63, 66, 62, 66, 61, 67, 60, 67, 59, 67, 58, 68, 57, 68, 56, 68, 55, 68, 54, 68, 53, 68, 52, 69, 51, 69, 50, 69, 49, 70, 48, 71, 47, 72, 46, 72, 45, 73, 44, 78, 44], 42:[214, 182, 348, 122, 522, 98, 754, 108, 986, 192, 1138, 344, 1162, 378, 1160, 622, 988, 752, 766, 850, 574, 862, 252, 822, 70, 704, 6, 592, 10, 370, 
100, 250, 180, 200, 220, 240, 130, 316, 56, 428, 64, 586, 152, 682, 308, 776, 494, 808, 680, 810, 858, 768, 950, 714, 1074, 594, 1104, 508, 1078, 360, 974, 266, 852, 186, 640, 146, 468, 152, 336, 176, 262, 222], 43:[[169, 664, 170, 583, 203, 563, 212, 567, 213, 570, 213, 600, 215, 602, 227, 595, 257, 607, 308, 624, 386, 642, 461, 652, 509, 655, 524, 654, 527, 648, 542, 647, 572, 648, 576, 654, 579, 655, 639, 652, 717, 641, 780, 627, 858, 601, 876, 593, 879, 593, 888, 599, 891, 599, 891, 566, 893, 
563, 899, 560, 929, 576, 934, 581, 934, 668, 926, 674, 922, 667, 921, 657, 918, 655, 917, 652, 911, 652, 902, 649, 881, 660, 878, 663, 872, 664, 848, 676, 839, 677, 833, 681, 826, 681, 824, 684, 800, 690, 797, 692, 797, 704, 791, 706, 785, 706, 782, 703, 781, 697, 778, 697, 760, 703, 754, 703, 751, 705, 733, 708, 724, 707, 712, 712, 703, 712, 697, 715, 691, 714, 685, 716, 682, 715, 679, 717, 661, 719, 658, 718, 634, 723, 631, 721, 628, 723, 613, 724, 613, 733, 611, 736, 602, 736, 597, 725, 555, 727, 
501, 725, 499, 734, 497, 736, 488, 736, 486, 724, 462, 723, 459, 721, 441, 718, 438, 719, 417, 715, 405, 715, 390, 711, 384, 712, 378, 710, 376, 707, 364, 708, 355, 705, 340, 703, 319, 696, 318, 702, 315, 705, 312, 707, 309, 705, 306, 706, 303, 704, 301, 692, 298, 690, 274, 683, 274, 680, 267, 681, 261, 677, 255, 677, 246, 674, 240, 671, 238, 668, 223, 663, 202, 651, 187, 655, 186, 658, 183, 660, 183, 666, 180, 669, 175, 669], [1, 390, 4, 429, 9, 444, 15, 442, 21, 444, 22, 447, 16, 462, 19, 471, 
25, 471, 27, 469, 30, 470, 41, 500, 50, 518, 48, 530, 50, 539, 52, 542, 55, 543, 58, 542, 60, 536, 63, 537, 83, 564, 92, 570, 100, 579, 99, 618, 101, 624, 105, 624, 108, 626, 114, 624, 116, 621, 117, 609, 120, 610, 129, 607, 131, 604, 134, 604, 137, 601, 140, 602, 140, 599, 143, 598, 143, 525, 135, 521, 126, 524, 123, 523, 114, 517, 105, 508, 102, 507, 80, 478, 72, 464, 68, 461, 52, 424, 44, 397, 42, 382, 45, 381, 47, 378, 47, 357, 41, 354, 50, 327, 55, 321, 70, 294, 86, 271, 89, 270, 123, 236, 140, 
222, 164, 206, 170, 204, 188, 191, 188, 185, 190, 182, 196, 179, 197, 113, 195, 110, 162, 91, 156, 96, 154, 99, 155, 129, 153, 141, 132, 153, 96, 181, 72, 205, 60, 220, 44, 244, 33, 268, 26, 289, 19, 319, 13, 322, 3, 346], [225, 125, 226, 59, 234, 52, 246, 58, 270, 74, 273, 74, 336, 51, 372, 42, 450, 29, 516, 23, 582, 23, 594, 25, 612, 25, 678, 33, 735, 44, 762, 51, 810, 67, 846, 83, 868, 69, 869, 71, 871, 68, 880, 63, 889, 69, 890, 78, 889, 138, 880, 143, 877, 142, 876, 145, 862, 154, 856, 156, 
847, 151, 841, 152, 826, 143, 823, 143, 817, 138, 781, 127, 736, 117, 719, 115, 713, 112, 707, 112, 703, 109, 696, 110, 684, 106, 666, 105, 660, 102, 645, 102, 633, 100, 627, 97, 620, 99, 583, 97, 574, 101, 526, 101, 517, 97, 499, 97, 487, 99, 484, 96, 481, 98, 469, 97, 463, 100, 445, 103, 438, 102, 435, 104, 414, 106, 408, 109, 321, 126, 273, 142, 267, 141, 261, 144, 252, 142, 246, 137, 243, 137, 238, 131, 232, 130, 226, 126], [917, 130, 919, 139, 920, 190, 923, 192, 924, 190, 928, 194, 927, 200, 
929, 203, 933, 202, 934, 205, 946, 212, 952, 218, 955, 218, 956, 221, 960, 222, 963, 224, 964, 227, 973, 232, 993, 253, 1008, 266, 1009, 269, 1015, 273, 1016, 276, 1025, 285, 1025, 288, 1048, 321, 1054, 336, 1054, 326, 1056, 325, 1059, 337, 1059, 343, 1056, 343, 1059, 353, 1052, 358, 1052, 376, 1057, 384, 1055, 396, 1056, 402, 1053, 405, 1054, 408, 1051, 417, 1048, 420, 1043, 436, 1036, 451, 1023, 474, 1001, 502, 992, 511, 980, 521, 968, 518, 962, 521, 961, 524, 961, 593, 968, 601, 970, 598, 972, 
601, 971, 603, 975, 604, 977, 601, 982, 607, 988, 604, 990, 605, 992, 621, 995, 623, 1001, 623, 1004, 621, 1005, 576, 1039, 537, 1043, 543, 1046, 543, 1050, 538, 1052, 532, 1050, 517, 1061, 496, 1069, 472, 1071, 469, 1074, 471, 1080, 471, 1082, 468, 1083, 462, 1078, 444, 1090, 444, 1092, 442, 1092, 436, 1096, 427, 1099, 397, 1099, 352, 1088, 325, 1080, 318, 1074, 291, 1068, 273, 1052, 237, 1042, 222, 1024, 201, 1003, 181, 961, 149, 960, 107, 954, 102, 951, 103, 918, 122, 918, 128]], 44:[79, 10, 80, 
11, 81, 12, 81, 13, 81, 14, 81, 15, 82, 16, 81, 17, 82, 18, 82, 19, 82, 20, 82, 21, 82, 22, 82, 23, 82, 24, 83, 25, 83, 26, 83, 27, 83, 28, 83, 29, 83, 30, 104, 31, 105, 32, 105, 33, 105, 34, 105, 35, 104, 36, 104, 37, 104, 38, 104, 39, 104, 40, 104, 41, 104, 42, 104, 43, 104, 44, 104, 45, 104, 46, 104, 47, 104, 48, 104, 49, 104, 50, 104, 51, 104, 52, 104, 53, 104, 54, 104, 55, 104, 56, 105, 57, 109, 58, 110, 59, 110, 60, 110, 61, 110, 62, 110, 63, 110, 64, 110, 65, 110, 66, 110, 67, 113, 68, 113, 
69, 113, 70, 113, 71, 113, 72, 113, 73, 113, 74, 113, 75, 113, 76, 119, 77, 120, 78, 120, 79, 120, 80, 120, 81, 120, 82, 120, 83, 120, 84, 120, 85, 120, 86, 120, 87, 120, 88, 120, 89, 120, 90, 120, 91, 120, 92, 120, 93, 122, 94, 123, 95, 125, 96, 125, 97, 125, 98, 124, 99, 123, 100, 123, 101, 123, 102, 123, 103, 123, 104, 123, 105, 123, 106, 123, 107, 123, 108, 123, 109, 123, 110, 123, 111, 123, 112, 127, 113, 127, 114, 128, 115, 128, 116, 127, 117, 126, 118, 125, 119, 125, 120, 125, 121, 121, 122, 
120, 123, 121, 124, 121, 125, 122, 126, 122, 127, 122, 128, 118, 129, 116, 130, 115, 131, 113, 132, 112, 133, 112, 134, 111, 135, 99, 136, 99, 137, 98, 138, 98, 139, 95, 140, 93, 140, 90, 139, 90, 138, 90, 137, 83, 136, 68, 135, 56, 134, 54, 133, 54, 132, 54, 131, 48, 130, 46, 129, 45, 128, 38, 127, 35, 126, 34, 125, 33, 124, 33, 123, 32, 122, 32, 121, 31, 120, 31, 119, 31, 118, 31, 117, 31, 116, 31, 115, 31, 114, 31, 113, 31, 112, 31, 111, 30, 110, 30, 109, 29, 108, 27, 107, 27, 106, 28, 105, 28, 
104, 26, 103, 26, 102, 26, 101, 26, 100, 30, 99, 30, 98, 30, 97, 30, 96, 30, 95, 30, 94, 30, 93, 30, 92, 30, 91, 30, 90, 30, 89, 30, 88, 29, 87, 27, 86, 26, 85, 26, 84, 25, 83, 26, 82, 29, 81, 34, 80, 36, 79, 40, 78, 39, 77, 38, 76, 38, 75, 38, 74, 38, 73, 38, 72, 38, 71, 38, 70, 38, 69, 38, 68, 38, 67, 38, 66, 38, 65, 38, 64, 38, 63, 38, 62, 38, 61, 38, 60, 38, 59, 38, 58, 38, 57, 38, 56, 39, 55, 41, 54, 43, 53, 44, 52, 44, 51, 45, 50, 45, 49, 46, 48, 47, 47, 48, 46, 49, 45, 50, 44, 51, 43, 52, 
42, 53, 41, 55, 40, 58, 39, 59, 38, 62, 37, 62, 36, 62, 35, 62, 34, 63, 33, 63, 32, 63, 31, 63, 30, 63, 29, 64, 28, 64, 27, 64, 26, 64, 25, 64, 24, 64, 23, 65, 22, 65, 21, 65, 20, 65, 19, 65, 18, 66, 17, 66, 16, 66, 15, 66, 14, 66, 13, 66, 12, 67, 11, 69, 10, 79, 10], 45:[79, 20, 82, 21, 84, 22, 86, 23, 87, 24, 89, 25, 90, 26, 91, 27, 92, 28, 93, 29, 94, 30, 94, 31, 95, 32, 96, 33, 96, 34, 97, 35, 97, 36, 98, 37, 98, 38, 99, 39, 99, 40, 99, 41, 99, 42, 100, 43, 100, 44, 100, 45, 100, 46, 100, 47, 
101, 48, 101, 49, 101, 50, 101, 51, 102, 52, 103, 53, 104, 54, 104, 55, 104, 56, 113, 57, 114, 58, 115, 59, 115, 60, 115, 61, 115, 62, 115, 63, 115, 64, 115, 65, 115, 66, 115, 67, 115, 68, 115, 69, 115, 70, 115, 71, 115, 72, 115, 73, 115, 74, 115, 75, 115, 76, 115, 77, 114, 78, 114, 79, 114, 80, 114, 81, 114, 82, 114, 83, 114, 84, 114, 85, 114, 86, 114, 87, 114, 88, 114, 89, 114, 90, 118, 91, 119, 92, 119, 93, 119, 94, 119, 95, 119, 96, 119, 97, 120, 98, 121, 99, 122, 100, 123, 101, 123, 102, 123, 
103, 123, 104, 123, 105, 123, 106, 122, 107, 121, 108, 121, 109, 122, 110, 123, 111, 124, 112, 124, 113, 125, 114, 125, 115, 125, 116, 124, 117, 123, 118, 123, 119, 123, 120, 123, 121, 125, 122, 124, 123, 122, 124, 121, 125, 120, 126, 120, 127, 120, 128, 119, 129, 119, 130, 119, 131, 116, 132, 115, 133, 107, 134, 69, 134, 66, 133, 64, 132, 64, 131, 64, 130, 65, 129, 66, 128, 58, 127, 54, 126, 35, 125, 31, 124, 31, 123, 31, 122, 32, 121, 33, 120, 33, 119, 34, 118, 34, 117, 34, 116, 34, 115, 34, 114, 
33, 113, 32, 112, 31, 111, 31, 110, 30, 109, 29, 108, 29, 107, 29, 106, 28, 105, 24, 104, 22, 103, 22, 102, 22, 101, 23, 100, 24, 99, 25, 98, 25, 97, 25, 96, 25, 95, 25, 94, 25, 93, 25, 92, 25, 91, 25, 90, 25, 89, 26, 88, 26, 87, 28, 86, 39, 85, 39, 84, 39, 83, 39, 82, 39, 81, 39, 80, 39, 79, 39, 78, 39, 77, 39, 76, 40, 75, 41, 74, 41, 73, 41, 72, 41, 71, 41, 70, 41, 69, 41, 68, 42, 67, 41, 66, 41, 65, 41, 64, 41, 63, 41, 62, 41, 61, 41, 60, 41, 59, 41, 58, 41, 57, 41, 56, 41, 55, 41, 54, 41, 53, 
42, 52, 42, 51, 42, 50, 42, 49, 42, 48, 42, 47, 43, 46, 43, 45, 43, 44, 43, 43, 44, 42, 44, 41, 44, 40, 45, 39, 45, 38, 45, 37, 46, 36, 46, 35, 47, 34, 47, 33, 48, 32, 49, 31, 50, 30, 51, 29, 52, 28, 53, 27, 54, 26, 55, 25, 56, 24, 58, 23, 60, 22, 62, 21, 64, 20, 79, 20]};
config.village.buildingPoly[0] = {19:[231, 252, 300, 289, 315, 317, 357, 345, 313, 395, 295, 356, 214, 350, 163, 317], 20:[368, 407, 424, 434, 510, 434, 516, 457, 452, 482, 381, 539, 329, 516, 318, 455], 21:[157, 340, 203, 366, 280, 376, 299, 407, 281, 441, 189, 451, 135, 442], 22:[136, 461, 193, 469, 278, 462, 285, 517, 255, 516, 154, 562], 23:[377, 388, 413, 347, 467, 329, 499, 350, 511, 382, 527, 395, 512, 423, 435, 423], 24:[298, 243, 415, 207, 455, 244, 482, 264, 491, 282, 436, 297, 387, 321, 
349, 298, 339, 266], 25:[434, 203, 578, 190, 580, 220, 559, 241, 488, 250, 463, 221], 26:[605, 194, 721, 216, 706, 299, 621, 274, 514, 282, 506, 261, 568, 254, 597, 229], 27:[533, 312, 601, 305, 677, 321, 686, 361, 666, 383, 629, 366, 566, 378, 538, 347], 28:[743, 220, 849, 268, 779, 287, 739, 317, 721, 310, 733, 261, 730, 229], 29:[881, 297, 925, 348, 850, 380, 812, 385, 787, 348, 768, 336, 799, 316, 848, 308], 30:[936, 365, 968, 440, 824, 442, 819, 402, 872, 390], 31:[964, 455, 937, 532, 860, 489, 
817, 489, 827, 456, 884, 461], 32:[703, 394, 748, 360, 778, 400, 788, 454, 770, 490, 707, 532, 664, 501, 706, 483, 728, 442, 723, 414], 33:[520, 115, 335, 132, 197, 179, 90, 260, 39, 341, 29, 448, 41, 571, 120, 655, 246, 747, 358, 794, 545, 810, 664, 810, 847, 766, 997, 679, 1104, 593, 1116, 455, 1081, 344, 993, 246, 843, 181, 709, 136, 525, 115, 524, 169, 701, 182, 877, 237, 1001, 326, 1050, 418, 1053, 524, 992, 627, 846, 722, 703, 764, 556, 765, 386, 757, 261, 711, 145, 626, 89, 553, 77, 418, 117, 
329, 199, 246, 280, 200, 421, 166, 521, 169], 34:[920, 547, 829, 614, 777, 568, 741, 553, 780, 531, 808, 508, 847, 506, 878, 528], 35:[539, 484, 572, 498, 616, 502, 666, 549, 607, 553, 509, 571, 431, 555, 469, 532, 487, 507], 36:[295, 534, 356, 570, 342, 597, 300, 615, 265, 640, 211, 659, 146, 599, 186, 567, 249, 542], 37:[259, 682, 331, 652, 341, 634, 386, 615, 396, 582, 438, 597, 442, 650, 467, 697, 456, 738, 399, 749], 38:[594, 589, 663, 583, 713, 569, 726, 579, 722, 616, 690, 652, 632, 660, 598, 
632], 39:[748, 593, 815, 658, 855, 672, 725, 740, 703, 714, 684, 668, 713, 665, 742, 635], 40:[461, 599, 513, 607, 569, 597, 577, 641, 608, 671, 656, 677, 680, 710, 491, 731, 490, 687, 465, 644], 42:[1116, 755, 1150, 788, 1150, 794, 1151, 802, 1054, 828, 1001, 754, 1065, 746], 43:[975, 760, 1035, 840, 1002, 849, 928, 850, 900, 835, 885, 812, 910, 786]};
config.village.resPoly = {11115:{1:[276, 329, 282, 320, 291, 313, 295, 307, 301, 303, 328, 297, 333, 285, 339, 281, 345, 280, 357, 270, 378, 264, 396, 264, 408, 268, 414, 272, 435, 290, 439, 305, 433, 329, 426, 347, 430, 356, 427, 365, 416, 380, 407, 386, 405, 389, 399, 392, 388, 381, 383, 378, 380, 379, 379, 374, 376, 372, 367, 378, 361, 378, 355, 372, 354, 369, 345, 361, 333, 343, 327, 340, 318, 348, 318, 351, 310, 363, 303, 368, 301, 362, 296, 356, 287, 353, 284, 350, 278, 338, 277, 332], 10:[687, 
410, 695, 434, 707, 446, 709, 452, 721, 462, 763, 475, 784, 476, 787, 474, 790, 476, 796, 475, 808, 468, 813, 453, 819, 449, 827, 440, 829, 428, 841, 423, 853, 414, 856, 414, 859, 412, 862, 406, 858, 400, 834, 392, 822, 392, 810, 387, 792, 384, 780, 380, 774, 381, 753, 379, 729, 391, 723, 392, 708, 401, 690, 406, 688, 409], 11:[809, 455, 810, 458, 825, 458, 846, 467, 852, 472, 857, 484, 869, 489, 884, 487, 899, 492, 941, 492, 953, 500, 962, 500, 968, 502, 977, 508, 992, 511, 1004, 508, 1013, 502, 
1019, 500, 1023, 494, 1026, 493, 1039, 472, 1034, 463, 1040, 442, 1038, 430, 1027, 420, 1023, 414, 1023, 408, 997, 384, 991, 383, 973, 375, 967, 376, 958, 372, 952, 372, 943, 368, 937, 368, 919, 361, 907, 360, 898, 354, 892, 353, 883, 357, 879, 366, 876, 369, 874, 381, 875, 384, 872, 393, 860, 403, 859, 409, 847, 415, 843, 420, 828, 427, 826, 430, 826, 436, 818, 448, 812, 452], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 
323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 
441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[522, 581, 523, 575, 530, 566, 536, 562, 554, 555, 560, 556, 575, 553, 593, 556, 605, 555, 620, 560, 626, 565, 638, 570, 659, 585, 659, 591, 669, 606, 666, 624, 650, 645, 644, 649, 608, 648, 599, 645, 593, 645, 575, 649, 566, 655, 560, 653, 548, 643, 540, 625, 529, 615, 527, 606, 529, 600, 524, 591, 523, 582], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 
519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 
693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 
484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[538, 675, 541, 693, 552, 704, 557, 713, 563, 719, 581, 727, 611, 735, 629, 735, 638, 731, 640, 719, 637, 710, 643, 706, 655, 705, 664, 698, 670, 699, 676, 697, 680, 688, 689, 683, 691, 680, 691, 674, 689, 671, 677, 664, 
668, 656, 653, 650, 641, 646, 614, 647, 596, 643, 569, 650, 561, 658, 549, 662, 543, 666, 540, 672], 18:[614, 559, 623, 557, 659, 558, 695, 570, 701, 570, 710, 574, 719, 574, 737, 581, 763, 604, 765, 607, 764, 610, 767, 613, 779, 616, 788, 623, 792, 632, 805, 647, 806, 653, 804, 659, 793, 670, 790, 671, 773, 689, 764, 694, 743, 695, 737, 697, 722, 697, 710, 694, 695, 698, 686, 698, 683, 696, 680, 697, 677, 695, 677, 692, 680, 687, 689, 681, 688, 672, 682, 667, 676, 665, 667, 656, 649, 651, 646, 649, 
645, 646, 650, 642, 650, 639, 659, 632, 665, 623, 664, 620, 667, 608, 665, 602, 658, 593, 658, 587, 637, 571, 625, 566, 616, 560], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 
486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245], 3:[602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 
696, 384, 705, 380, 706, 383, 714, 379, 717, 380, 717, 383, 720, 384, 721, 381, 731, 372, 729, 366, 731, 360, 738, 352, 741, 351, 743, 357, 740, 363, 746, 365, 745, 368, 747, 370, 750, 368, 751, 365, 756, 362, 760, 356, 768, 351, 768, 348, 765, 346, 772, 340, 769, 331, 770, 328, 773, 329, 778, 323, 781, 322, 783, 319, 778, 313, 779, 310, 782, 310, 787, 302, 793, 298, 794, 295, 791, 292, 782, 287, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 790, 280, 791, 283, 794, 284, 804, 276, 804, 273, 796, 
265, 797, 261, 795, 258, 786, 253, 785, 250, 776, 243, 779, 241, 780, 238, 786, 234, 787, 231, 778, 225, 775, 225, 769, 229, 766, 235, 757, 232, 752, 224, 747, 229, 744, 228, 743, 225, 737, 221, 731, 221, 725, 224, 721, 233, 721, 237, 713, 243, 713, 240, 717, 235, 714, 226, 711, 225, 710, 228, 707, 230, 698, 227, 695, 229, 692, 235, 686, 233, 683, 234, 675, 241, 672, 238, 677, 233, 675, 230, 677, 227, 676, 224, 667, 222, 664, 225, 664, 231, 661, 233, 652, 232, 649, 235, 648, 238, 651, 239, 650, 241, 
641, 237, 635, 237, 633, 231, 639, 232, 641, 235, 651, 228, 650, 225, 644, 220, 638, 220, 632, 224, 628, 236, 625, 237, 616, 234, 613, 232, 611, 226, 609, 227, 605, 236, 610, 244, 616, 246, 617, 249, 620, 250, 621, 247, 630, 244, 631, 247, 634, 249, 625, 250, 620, 255, 620, 258, 611, 258, 605, 262, 607, 268, 613, 271, 614, 274, 617, 274, 618, 271, 624, 268, 626, 270, 623, 276, 615, 283, 603, 287], 4:[173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 
220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 
421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404], 5:[456, 322, 460, 
334, 456, 346, 459, 358, 470, 369, 479, 390, 488, 397, 509, 406, 521, 406, 527, 404, 539, 406, 563, 401, 564, 398, 573, 395, 575, 392, 572, 386, 551, 367, 548, 358, 544, 352, 543, 349, 545, 337, 554, 322, 552, 316, 546, 311, 528, 305, 522, 305, 513, 302, 507, 304, 501, 303, 492, 305, 480, 305, 474, 307, 462, 315, 457, 321], 6:[541, 346, 542, 352, 551, 370, 572, 389, 572, 392, 563, 397, 562, 400, 564, 403, 570, 405, 609, 402, 618, 399, 624, 395, 640, 378, 643, 377, 649, 371, 655, 359, 653, 353, 640, 
338, 636, 329, 627, 323, 615, 321, 606, 313, 597, 311, 591, 307, 570, 307, 567, 305, 561, 305, 543, 309, 543, 312, 551, 319, 550, 325, 544, 334, 543, 343], 7:[755, 379, 769, 367, 775, 364, 776, 358, 773, 355, 774, 352, 772, 346, 774, 340, 788, 329, 809, 321, 836, 325, 857, 332, 863, 336, 893, 346, 898, 351, 897, 354, 888, 355, 882, 360, 876, 378, 876, 390, 871, 396, 862, 402, 835, 393, 823, 392, 805, 386, 796, 386, 781, 382, 757, 380], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 
277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 
412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 3339:{1:[276, 332, 277, 344, 280, 350, 285, 356, 291, 357, 306, 369, 312, 372, 327, 372, 339, 377, 360, 378, 369, 383, 372, 383, 378, 389, 390, 394, 411, 384, 419, 376, 419, 373, 429, 361, 429, 355, 425, 349, 434, 325, 438, 301, 434, 289, 431, 288, 421, 277, 418, 276, 412, 270, 400, 265, 
379, 263, 373, 267, 361, 268, 347, 279, 338, 281, 333, 286, 330, 295, 324, 298, 303, 302, 297, 305, 277, 328, 277, 331], 10:[663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 
857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 
876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 
1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 
291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 
444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 
515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 
547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 
584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 
696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 
384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 
621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 
736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 
570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 
229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245], 3:[602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 632, 311, 637, 316, 643, 317, 652, 324, 659, 318, 657, 315, 658, 312, 661, 312, 667, 317, 670, 322, 669, 328, 671, 
331, 677, 333, 677, 336, 680, 338, 676, 341, 678, 347, 676, 350, 669, 346, 657, 349, 658, 358, 656, 364, 660, 369, 663, 369, 659, 374, 653, 375, 647, 379, 646, 382, 657, 399, 660, 398, 660, 395, 666, 395, 669, 393, 673, 387, 673, 382, 678, 385, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 707, 383, 715, 378, 720, 369, 726, 365, 740, 351, 755, 363, 766, 348, 766, 344, 772, 340, 769, 331, 770, 328, 773, 329, 783, 319, 778, 313, 779, 310, 782, 310, 
783, 307, 787, 302, 793, 298, 794, 295, 782, 287, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 790, 280, 791, 283, 794, 284, 804, 276, 804, 273, 796, 265, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 
234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 607, 229, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 
604, 287], 4:[198, 369, 202, 381, 198, 393, 201, 405, 213, 416, 222, 437, 228, 443, 255, 453, 270, 450, 279, 452, 297, 448, 309, 450, 330, 450, 360, 445, 366, 441, 381, 424, 387, 421, 394, 413, 396, 404, 396, 401, 388, 392, 379, 389, 361, 377, 340, 377, 322, 370, 304, 370, 295, 368, 271, 352, 265, 350, 244, 349, 238, 351, 223, 351, 214, 354, 205, 360, 199, 368], 5:[443, 329, 449, 320, 461, 312, 470, 309, 497, 308, 500, 306, 512, 310, 518, 310, 527, 314, 539, 311, 566, 311, 575, 315, 579, 321, 578, 
324, 570, 331, 561, 334, 555, 346, 546, 351, 538, 360, 537, 363, 542, 372, 543, 381, 549, 390, 549, 393, 544, 405, 529, 410, 517, 408, 499, 411, 493, 409, 475, 402, 466, 393, 461, 381, 456, 384, 451, 380, 450, 374, 453, 372, 454, 369, 448, 365, 444, 353, 448, 341, 445, 332], 6:[543, 362, 547, 368, 553, 368, 558, 373, 549, 380, 550, 383, 553, 385, 574, 387, 586, 395, 595, 398, 604, 396, 625, 396, 631, 394, 636, 390, 635, 384, 646, 374, 650, 362, 665, 351, 668, 345, 666, 342, 669, 339, 669, 336, 663, 
331, 645, 326, 585, 325, 579, 327, 567, 335, 570, 340, 568, 346, 559, 348, 550, 353, 547, 355, 544, 361], 7:[708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 
299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 
513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 33546:{11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 
876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 
1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 
497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 
632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 
494, 544]}, 3447:{1:[231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 293, 351, 293, 357, 299, 360, 308, 360, 308, 365, 317, 370, 331, 366, 331, 363, 337, 362, 339, 357, 342, 359, 357, 361, 369, 365, 372, 363, 381, 362, 387, 365, 387, 368, 390, 369, 399, 367, 402, 368, 407, 373, 416, 373, 419, 372, 420, 369, 429, 369, 424, 361, 433, 361, 439, 353, 445, 358, 448, 358, 450, 352, 462, 353, 465, 350, 465, 347, 477, 343, 479, 340, 
473, 339, 474, 330, 471, 328, 472, 326, 481, 329, 483, 323, 480, 320, 474, 318, 469, 312, 472, 308, 470, 305, 452, 289, 446, 288, 437, 294, 434, 293, 428, 287, 405, 251, 399, 249, 391, 257, 388, 258, 382, 267, 379, 268, 370, 256, 358, 244, 349, 238, 346, 239, 327, 256, 327, 259, 318, 270, 312, 270, 307, 276, 304, 276, 295, 291, 289, 294, 288, 297, 282, 301, 279, 299, 270, 307, 267, 307, 258, 313, 252, 315, 246, 324, 234, 331], 10:[663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 
702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 
362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 
486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 
411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 
635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[492, 546, 494, 552, 
500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 
649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 
524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 
835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 
518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 
527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 
708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 
517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 
766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 587, 297, 588, 300, 
582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246], 3:[597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 709, 345, 691, 350, 
679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229], 4:[179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 
299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 
473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 
290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412], 5:[464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 
538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376], 6:[523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 
526, 329], 7:[708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 
762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 
515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 3456:{1:[225, 350, 231, 349, 229, 358, 231, 360, 237, 359, 243, 354, 248, 345, 257, 339, 263, 333, 264, 330, 273, 327, 276, 328, 278, 331, 278, 337, 284, 
349, 287, 352, 296, 355, 304, 366, 310, 362, 316, 353, 317, 347, 328, 338, 339, 350, 343, 359, 360, 377, 363, 378, 371, 372, 377, 372, 383, 376, 402, 396, 408, 396, 414, 400, 413, 397, 422, 396, 425, 393, 431, 392, 432, 390, 426, 388, 429, 386, 427, 383, 428, 380, 425, 378, 426, 376, 432, 379, 435, 378, 436, 372, 430, 368, 427, 368, 422, 362, 423, 359, 426, 358, 423, 356, 422, 353, 434, 357, 438, 349, 441, 348, 443, 354, 446, 356, 449, 355, 449, 346, 452, 344, 457, 350, 460, 351, 468, 346, 469, 340, 
472, 342, 478, 342, 477, 336, 471, 332, 467, 323, 467, 317, 473, 317, 472, 311, 478, 310, 470, 303, 476, 301, 464, 299, 458, 294, 452, 292, 443, 286, 439, 280, 438, 274, 429, 262, 414, 250, 409, 241, 403, 235, 381, 220, 372, 226, 370, 232, 364, 241, 358, 246, 348, 264, 342, 270, 339, 276, 330, 281, 322, 290, 319, 299, 295, 282, 290, 288, 287, 289, 286, 292, 277, 299, 272, 308, 260, 320, 251, 323, 241, 338, 238, 338, 234, 344, 228, 348], 10:[663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 
696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 
367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 
487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 
408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 
639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[492, 546, 
494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 
651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 
527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 
841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 
520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 
518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 
705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 
518, 701, 517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 
770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 
505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245], 3:[602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 
682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 
232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 
630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287], 4:[173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 
273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 
396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404], 5:[464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 
357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376], 6:[523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329], 7:[708, 
386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 
741, 352, 738, 353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 
524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 3546:{1:[231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 292, 354, 293, 357, 299, 360, 301, 363, 298, 
366, 310, 366, 319, 371, 331, 371, 334, 368, 343, 367, 338, 358, 344, 358, 350, 361, 356, 361, 368, 365, 371, 363, 380, 362, 386, 364, 386, 367, 389, 369, 401, 367, 406, 372, 418, 373, 422, 369, 428, 369, 429, 367, 423, 362, 426, 360, 435, 360, 438, 354, 447, 359, 449, 353, 452, 351, 455, 353, 461, 353, 464, 351, 464, 348, 479, 341, 474, 340, 474, 331, 471, 326, 480, 329, 482, 327, 482, 324, 481, 321, 475, 319, 472, 316, 470, 310, 473, 309, 468, 303, 450, 288, 447, 287, 435, 294, 426, 285, 406, 252, 
400, 248, 380, 268, 374, 263, 368, 254, 359, 245, 347, 238, 328, 255, 326, 261, 319, 269, 313, 270, 308, 275, 305, 276, 298, 284, 296, 290, 293, 293, 290, 293, 286, 299, 283, 301, 277, 301, 262, 311, 253, 314, 247, 323, 235, 331], 10:[663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 
800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 
405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 
487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 
411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 
341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 
528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 
576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 
560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 
652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 
446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 
582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 
715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 
569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 
224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245], 3:[602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 
312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 
772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 
230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 
612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287], 4:[190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 
225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406], 5:[464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376], 6:[523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 
382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329], 7:[708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 
378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 
562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 
469, 279, 467, 255, 468, 249, 466]}, 3547:{4:[190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 
429, 200, 426, 204, 420, 204, 414, 192, 406]}, 4347:{1:[231, 333, 240, 334, 255, 339, 264, 345, 270, 344, 276, 346, 276, 349, 279, 351, 284, 347, 287, 348, 298, 343, 298, 346, 293, 351, 293, 357, 299, 360, 308, 360, 308, 365, 317, 370, 331, 366, 331, 363, 337, 362, 339, 357, 342, 359, 357, 361, 369, 365, 372, 363, 381, 362, 387, 365, 387, 368, 390, 369, 399, 367, 402, 368, 407, 373, 416, 373, 419, 372, 420, 369, 429, 369, 424, 361, 433, 361, 439, 353, 445, 358, 448, 358, 450, 352, 462, 353, 465, 
350, 465, 347, 477, 343, 479, 340, 473, 339, 474, 330, 471, 328, 472, 326, 481, 329, 483, 323, 480, 320, 474, 318, 469, 312, 472, 308, 470, 305, 452, 289, 446, 288, 437, 294, 434, 293, 428, 287, 405, 251, 399, 249, 391, 257, 388, 258, 382, 267, 379, 268, 370, 256, 358, 244, 349, 238, 346, 239, 327, 256, 327, 259, 318, 270, 312, 270, 307, 276, 304, 276, 295, 291, 289, 294, 288, 297, 282, 301, 279, 299, 270, 307, 267, 307, 258, 313, 252, 315, 246, 324, 234, 331], 10:[663, 428, 666, 430, 669, 429, 672, 
438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 
816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 
878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 
419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 
285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 
305, 540], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 
566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 
555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 
515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 
671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 
684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 
622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 
705, 525, 705, 524, 702, 518, 701, 517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 
647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 
285, 581, 291, 587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246], 3:[597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 
337, 724, 337, 709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229], 4:[179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 
451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 
411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 
364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412], 5:[452, 410, 454, 407, 463, 401, 469, 400, 469, 397, 478, 391, 476, 388, 473, 
389, 472, 392, 469, 391, 458, 384, 458, 381, 462, 375, 462, 369, 456, 366, 454, 363, 460, 354, 463, 352, 469, 354, 472, 352, 465, 344, 465, 341, 474, 335, 472, 329, 473, 326, 476, 324, 477, 315, 483, 310, 495, 313, 501, 310, 503, 304, 507, 299, 510, 302, 512, 311, 515, 311, 518, 302, 524, 301, 530, 304, 531, 307, 529, 310, 531, 313, 529, 316, 526, 317, 526, 320, 532, 323, 535, 320, 540, 321, 540, 318, 534, 316, 534, 313, 537, 307, 543, 304, 552, 309, 558, 308, 564, 310, 570, 315, 568, 321, 562, 324, 
572, 339, 563, 345, 559, 351, 556, 351, 555, 357, 552, 360, 556, 366, 555, 372, 561, 377, 562, 380, 556, 388, 565, 385, 574, 391, 577, 391, 589, 383, 595, 382, 598, 383, 606, 391, 601, 396, 598, 396, 597, 401, 589, 406, 588, 409, 585, 410, 581, 407, 578, 407, 576, 409, 576, 412, 574, 413, 571, 413, 569, 404, 554, 409, 554, 412, 551, 412, 550, 409, 544, 407, 540, 401, 537, 401, 536, 407, 533, 407, 533, 402, 527, 401, 525, 398, 526, 395, 523, 394, 521, 396, 521, 402, 519, 405, 510, 409, 509, 412, 506, 
411, 505, 408, 499, 407, 496, 408, 494, 414, 491, 413, 488, 407, 482, 406, 477, 415, 480, 421, 478, 424, 472, 427, 463, 419, 462, 416, 456, 414, 453, 411], 6:[546, 359, 548, 365, 557, 372, 556, 375, 553, 376, 551, 379, 551, 382, 554, 384, 560, 386, 575, 386, 584, 392, 590, 394, 605, 396, 626, 396, 635, 393, 636, 390, 634, 384, 645, 375, 648, 363, 665, 351, 667, 348, 665, 342, 667, 336, 659, 329, 650, 327, 635, 325, 587, 325, 581, 327, 570, 335, 571, 344, 553, 352, 547, 358], 7:[708, 386, 711, 387, 
721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 
353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 
306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 4356:{1:[225, 350, 231, 346, 238, 337, 241, 337, 248, 325, 260, 320, 274, 305, 274, 302, 286, 292, 287, 289, 295, 282, 316, 298, 319, 297, 319, 294, 326, 285, 332, 279, 338, 276, 341, 270, 
347, 264, 358, 246, 370, 232, 374, 223, 377, 223, 382, 219, 409, 240, 416, 252, 434, 267, 438, 273, 441, 282, 444, 285, 447, 286, 453, 292, 465, 298, 474, 300, 473, 303, 470, 304, 479, 308, 478, 310, 475, 311, 475, 314, 473, 316, 467, 319, 469, 328, 476, 336, 476, 342, 470, 340, 468, 342, 469, 345, 463, 348, 451, 344, 451, 353, 448, 355, 445, 355, 442, 349, 439, 348, 436, 354, 433, 355, 427, 355, 424, 352, 422, 353, 426, 359, 423, 360, 423, 363, 435, 371, 436, 377, 430, 379, 424, 376, 428, 380, 427, 
383, 430, 389, 433, 390, 432, 392, 423, 396, 423, 399, 417, 397, 417, 400, 414, 401, 408, 396, 399, 392, 378, 372, 372, 371, 363, 378, 360, 377, 343, 360, 341, 354, 332, 342, 326, 339, 322, 344, 319, 345, 317, 351, 306, 365, 303, 365, 302, 362, 296, 356, 287, 353, 284, 350, 279, 341, 277, 329, 274, 327, 265, 330, 258, 339, 249, 345, 244, 354, 238, 359, 232, 360, 229, 355, 231, 352, 229, 350, 226, 351], 10:[661, 425, 663, 422, 669, 419, 702, 408, 709, 400, 721, 396, 726, 391, 732, 390, 768, 389, 771, 
387, 777, 390, 789, 388, 816, 391, 837, 396, 846, 403, 844, 421, 827, 434, 820, 455, 818, 458, 812, 460, 811, 472, 805, 473, 802, 476, 772, 478, 751, 474, 742, 477, 727, 477, 712, 472, 709, 469, 703, 473, 697, 472, 691, 469, 689, 466, 697, 466, 698, 463, 695, 460, 680, 455, 672, 447, 677, 438, 677, 435, 671, 430, 662, 426], 11:[834, 468, 836, 474, 842, 479, 848, 480, 854, 486, 860, 486, 875, 493, 881, 491, 887, 492, 893, 489, 920, 493, 935, 491, 959, 484, 1001, 479, 1008, 470, 1035, 458, 1050, 448, 
1050, 445, 1048, 442, 1042, 440, 1027, 438, 1024, 426, 1017, 418, 1008, 417, 1002, 413, 996, 413, 990, 407, 978, 409, 969, 408, 966, 406, 961, 397, 952, 393, 940, 393, 931, 396, 919, 396, 913, 394, 907, 397, 889, 396, 883, 398, 874, 410, 872, 422, 864, 430, 858, 434, 855, 434, 844, 442, 842, 457, 835, 466], 12:[166, 611, 166, 620, 169, 621, 181, 620, 184, 622, 187, 621, 196, 623, 201, 619, 204, 619, 205, 622, 203, 625, 206, 627, 215, 625, 224, 630, 233, 630, 235, 628, 244, 627, 246, 625, 237, 618, 
238, 615, 247, 617, 259, 616, 264, 625, 270, 627, 279, 621, 282, 615, 297, 619, 306, 617, 318, 619, 319, 617, 313, 614, 307, 608, 308, 602, 310, 600, 322, 598, 328, 600, 328, 597, 319, 591, 319, 585, 324, 580, 333, 582, 344, 577, 336, 569, 321, 564, 312, 555, 306, 552, 297, 544, 291, 548, 276, 538, 267, 526, 259, 511, 256, 508, 253, 508, 235, 524, 220, 531, 212, 539, 209, 545, 204, 566, 198, 575, 195, 577, 193, 583, 187, 592, 177, 603, 171, 606, 169, 609], 13:[332, 540, 338, 531, 341, 531, 352, 525, 
351, 519, 357, 514, 360, 509, 366, 505, 375, 507, 379, 501, 391, 495, 392, 489, 395, 487, 395, 481, 383, 490, 374, 487, 371, 481, 377, 476, 386, 474, 387, 472, 385, 469, 391, 464, 394, 466, 396, 472, 402, 474, 407, 471, 409, 474, 411, 480, 408, 486, 412, 492, 411, 495, 408, 496, 412, 502, 418, 501, 424, 503, 436, 497, 439, 491, 433, 487, 436, 481, 435, 472, 430, 467, 433, 458, 436, 455, 439, 455, 447, 467, 443, 472, 451, 484, 451, 487, 456, 492, 465, 491, 468, 494, 469, 503, 464, 508, 467, 509, 469, 
506, 472, 507, 475, 516, 470, 521, 464, 517, 458, 519, 456, 522, 447, 527, 447, 533, 450, 536, 456, 533, 462, 537, 471, 532, 480, 531, 481, 528, 490, 523, 493, 523, 499, 516, 505, 517, 508, 519, 513, 531, 518, 537, 519, 543, 522, 545, 528, 554, 522, 560, 516, 562, 515, 559, 512, 558, 510, 555, 513, 550, 504, 553, 502, 556, 496, 555, 487, 562, 483, 557, 477, 555, 471, 557, 462, 550, 460, 553, 457, 554, 456, 560, 450, 563, 444, 558, 447, 549, 446, 546, 443, 548, 440, 547, 437, 553, 428, 558, 422, 557, 
414, 564, 412, 567, 412, 573, 406, 575, 406, 578, 404, 580, 389, 584, 382, 577, 384, 574, 393, 568, 396, 570, 399, 569, 399, 563, 396, 562, 384, 571, 381, 569, 378, 570, 376, 573, 367, 577, 365, 580, 360, 576, 357, 576, 349, 583, 346, 583, 340, 578, 342, 569, 344, 566, 347, 565, 353, 570, 356, 568, 357, 562, 351, 562, 345, 557, 344, 554, 352, 547, 364, 552, 367, 550, 364, 547, 364, 541, 358, 539, 349, 543, 347, 546, 344, 547, 341, 552, 338, 550, 337, 544, 334, 543], 14:[522, 581, 523, 575, 530, 566, 
536, 562, 554, 555, 560, 556, 575, 553, 593, 556, 605, 555, 620, 560, 626, 565, 638, 570, 659, 585, 659, 591, 669, 606, 666, 624, 650, 645, 644, 649, 608, 648, 599, 645, 593, 645, 575, 649, 566, 655, 560, 653, 548, 643, 540, 625, 529, 615, 527, 606, 529, 600, 524, 591, 523, 582], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 
808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 
420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 
601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[538, 675, 541, 693, 552, 704, 557, 713, 563, 719, 581, 727, 611, 735, 629, 735, 638, 731, 640, 719, 637, 710, 643, 706, 655, 705, 664, 698, 670, 699, 676, 697, 680, 688, 689, 683, 691, 680, 691, 674, 689, 671, 677, 664, 668, 656, 653, 650, 641, 646, 614, 647, 596, 643, 569, 650, 561, 658, 549, 662, 543, 666, 540, 672], 18:[614, 559, 623, 557, 659, 558, 695, 570, 701, 570, 710, 574, 719, 574, 
737, 581, 763, 604, 765, 607, 764, 610, 767, 613, 779, 616, 788, 623, 792, 632, 805, 647, 806, 653, 804, 659, 793, 670, 790, 671, 773, 689, 764, 694, 743, 695, 737, 697, 722, 697, 710, 694, 695, 698, 686, 698, 683, 696, 680, 697, 677, 695, 677, 692, 680, 687, 689, 681, 688, 672, 682, 667, 676, 665, 667, 656, 649, 651, 646, 649, 645, 646, 650, 642, 650, 639, 659, 632, 665, 623, 664, 620, 667, 608, 665, 602, 658, 593, 658, 587, 637, 571, 625, 566, 616, 560], 2:[451, 228, 463, 242, 469, 246, 472, 247, 
481, 241, 482, 244, 474, 251, 480, 255, 483, 261, 483, 264, 480, 267, 478, 273, 475, 276, 466, 272, 460, 274, 455, 279, 456, 282, 461, 286, 458, 292, 461, 294, 473, 293, 476, 295, 482, 291, 488, 292, 489, 298, 500, 304, 502, 298, 508, 294, 511, 294, 517, 298, 526, 296, 535, 300, 538, 299, 543, 295, 536, 283, 541, 278, 539, 275, 541, 272, 538, 266, 547, 269, 550, 272, 552, 281, 544, 288, 548, 294, 554, 297, 557, 294, 569, 292, 578, 297, 587, 293, 593, 293, 611, 299, 623, 294, 626, 292, 626, 289, 629, 
289, 633, 294, 638, 290, 639, 287, 642, 286, 642, 283, 637, 277, 631, 273, 633, 270, 629, 255, 617, 247, 605, 249, 603, 246, 616, 236, 616, 227, 613, 224, 607, 224, 603, 230, 589, 238, 586, 238, 583, 236, 583, 233, 589, 230, 589, 227, 586, 224, 577, 221, 568, 228, 559, 226, 553, 214, 550, 217, 546, 229, 552, 233, 549, 235, 543, 234, 537, 238, 534, 233, 528, 228, 522, 227, 514, 234, 511, 243, 496, 238, 498, 232, 490, 225, 484, 222, 472, 226, 469, 223, 460, 221, 452, 227], 3:[649, 283, 652, 280, 673, 
272, 688, 262, 697, 259, 706, 261, 712, 257, 730, 256, 760, 262, 770, 277, 772, 283, 781, 290, 782, 302, 776, 311, 767, 317, 755, 319, 754, 322, 769, 335, 769, 341, 754, 347, 727, 347, 703, 341, 688, 335, 676, 328, 656, 301, 650, 286], 4:[173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 214, 425, 217, 425, 218, 421, 224, 416, 236, 425, 254, 446, 257, 446, 263, 437, 269, 434, 270, 431, 276, 427, 282, 432, 292, 447, 294, 453, 303, 455, 309, 452, 315, 453, 319, 
447, 322, 446, 313, 443, 312, 441, 315, 441, 319, 438, 325, 438, 326, 441, 332, 442, 344, 442, 350, 438, 356, 437, 355, 434, 347, 426, 368, 433, 380, 432, 382, 435, 385, 433, 394, 432, 397, 434, 403, 433, 402, 431, 399, 430, 399, 427, 402, 426, 399, 425, 398, 422, 404, 422, 413, 425, 416, 423, 419, 424, 422, 423, 423, 420, 421, 414, 427, 413, 422, 408, 418, 412, 416, 409, 417, 407, 420, 407, 410, 398, 401, 394, 390, 382, 378, 372, 372, 371, 363, 378, 360, 376, 343, 359, 341, 353, 329, 338, 318, 346, 
317, 352, 304, 366, 295, 354, 289, 353, 283, 348, 281, 342, 278, 339, 276, 327, 273, 326, 264, 330, 260, 336, 248, 345, 241, 357, 229, 360, 221, 371, 215, 374, 209, 382, 200, 387, 191, 395, 188, 394, 185, 396, 180, 402, 177, 400, 174, 402], 5:[438, 372, 440, 369, 446, 366, 455, 365, 455, 359, 450, 354, 450, 351, 452, 348, 461, 344, 467, 347, 473, 346, 476, 348, 481, 354, 480, 357, 482, 366, 485, 367, 488, 364, 491, 364, 491, 358, 500, 352, 500, 346, 502, 343, 497, 340, 499, 334, 498, 331, 500, 328, 
495, 323, 495, 314, 489, 315, 480, 307, 481, 304, 487, 300, 493, 298, 499, 300, 501, 297, 507, 294, 513, 294, 519, 297, 525, 295, 534, 299, 546, 296, 558, 303, 561, 302, 570, 309, 570, 312, 567, 312, 562, 317, 562, 323, 556, 326, 569, 344, 569, 347, 566, 349, 570, 355, 566, 361, 566, 367, 563, 373, 575, 389, 568, 399, 565, 397, 562, 398, 560, 401, 552, 398, 551, 400, 559, 412, 550, 421, 543, 414, 546, 408, 543, 405, 537, 405, 533, 400, 524, 405, 524, 411, 521, 414, 512, 411, 511, 417, 508, 416, 507, 
413, 489, 405, 484, 409, 478, 405, 484, 393, 484, 390, 481, 387, 478, 387, 476, 390, 477, 393, 471, 403, 468, 400, 468, 397, 465, 398, 462, 395, 465, 390, 464, 387, 461, 386, 459, 383, 450, 381, 441, 375], 6:[554, 326, 568, 344, 567, 347, 564, 349, 568, 355, 562, 373, 565, 379, 573, 387, 573, 393, 568, 399, 566, 405, 566, 411, 569, 414, 575, 412, 576, 409, 573, 403, 575, 401, 578, 402, 580, 405, 583, 405, 585, 402, 588, 401, 590, 403, 589, 406, 597, 414, 600, 414, 601, 408, 604, 406, 604, 397, 598, 
393, 595, 395, 592, 394, 584, 387, 599, 380, 608, 388, 607, 394, 613, 396, 619, 401, 633, 390, 633, 387, 638, 382, 637, 379, 639, 376, 642, 378, 645, 376, 646, 385, 652, 387, 654, 390, 652, 396, 657, 400, 660, 402, 661, 399, 667, 396, 668, 393, 661, 384, 655, 381, 654, 375, 663, 372, 663, 381, 666, 381, 668, 383, 668, 386, 671, 387, 676, 379, 677, 370, 673, 364, 675, 358, 681, 353, 681, 350, 678, 341, 676, 338, 673, 337, 672, 340, 666, 345, 663, 345, 667, 339, 658, 334, 653, 325, 653, 322, 650, 319, 
646, 324, 644, 330, 641, 326, 641, 320, 635, 317, 632, 318, 631, 315, 622, 309, 615, 309, 612, 310, 605, 318, 596, 322, 595, 325, 597, 331, 600, 330, 609, 332, 608, 329, 610, 326, 613, 325, 619, 330, 622, 330, 627, 338, 632, 336, 631, 333, 628, 331, 630, 325, 629, 322, 620, 325, 611, 318, 611, 315, 616, 310, 617, 304, 611, 299, 602, 299, 590, 291, 578, 297, 566, 291, 557, 296, 556, 299, 571, 309, 571, 312, 565, 312, 562, 314, 561, 323, 555, 325], 7:[781, 336, 784, 354, 804, 378, 828, 388, 846, 393, 
876, 394, 882, 389, 883, 377, 880, 371, 882, 368, 888, 366, 900, 366, 901, 375, 904, 378, 913, 382, 934, 387, 952, 387, 958, 385, 961, 383, 964, 374, 959, 362, 947, 354, 920, 353, 922, 347, 914, 338, 896, 324, 894, 315, 889, 306, 883, 300, 877, 297, 859, 292, 832, 290, 811, 294, 802, 298, 799, 301, 798, 307, 799, 310, 805, 315, 804, 318, 786, 326, 782, 335], 8:[144, 491, 151, 482, 160, 478, 165, 472, 170, 469, 180, 454, 186, 451, 187, 448, 193, 448, 199, 442, 204, 433, 213, 426, 223, 415, 241, 429, 
252, 444, 255, 446, 261, 445, 263, 451, 262, 463, 252, 472, 251, 478, 245, 487, 243, 493, 249, 511, 236, 524, 221, 532, 212, 540, 210, 543, 207, 561, 200, 573, 194, 579, 193, 585, 190, 586, 187, 580, 181, 579, 189, 570, 187, 567, 187, 561, 172, 560, 171, 557, 174, 555, 174, 552, 168, 550, 162, 551, 160, 549, 163, 547, 169, 538, 190, 525, 190, 520, 192, 517, 190, 515, 184, 515, 178, 511, 174, 505, 168, 506, 168, 503, 156, 502, 153, 500, 154, 497, 152, 494, 146, 493], 9:[242, 493, 248, 508, 257, 509, 
269, 530, 272, 533, 278, 533, 281, 531, 284, 534, 279, 539, 280, 541, 292, 544, 295, 543, 298, 538, 301, 538, 304, 541, 319, 536, 322, 534, 322, 531, 324, 529, 336, 530, 339, 529, 339, 526, 345, 527, 345, 524, 353, 519, 350, 517, 348, 511, 369, 511, 372, 508, 375, 509, 375, 506, 361, 492, 361, 489, 364, 487, 365, 481, 368, 479, 380, 479, 383, 477, 392, 476, 390, 473, 384, 471, 383, 468, 386, 469, 386, 466, 371, 458, 365, 449, 356, 440, 350, 437, 345, 442, 324, 451, 314, 462, 305, 465, 302, 463, 294, 
451, 284, 433, 275, 427, 261, 440, 260, 443, 263, 452, 263, 461, 252, 472, 244, 490]}, 4437:{1:[267, 340, 269, 337, 278, 331, 277, 328, 271, 326, 272, 323, 278, 319, 278, 316, 273, 312, 277, 300, 280, 301, 282, 307, 285, 307, 287, 301, 293, 298, 295, 295, 294, 292, 296, 289, 305, 285, 308, 286, 311, 280, 314, 279, 316, 282, 325, 283, 331, 282, 333, 279, 330, 278, 327, 281, 324, 280, 323, 275, 320, 276, 317, 273, 320, 268, 319, 265, 322, 262, 325, 260, 331, 262, 333, 265, 342, 269, 344, 267, 350, 
266, 356, 270, 358, 268, 349, 262, 350, 259, 356, 255, 362, 254, 371, 260, 380, 263, 385, 252, 388, 250, 392, 255, 394, 252, 397, 252, 394, 247, 400, 242, 409, 246, 407, 251, 408, 254, 411, 255, 412, 249, 418, 245, 430, 245, 427, 243, 433, 237, 439, 238, 441, 240, 440, 246, 442, 249, 448, 250, 455, 245, 459, 254, 458, 257, 452, 262, 449, 262, 448, 265, 451, 266, 460, 263, 466, 267, 468, 270, 467, 273, 470, 282, 482, 290, 471, 301, 472, 304, 478, 310, 476, 313, 470, 316, 467, 321, 467, 324, 464, 326, 
470, 327, 476, 332, 476, 335, 475, 338, 469, 340, 472, 349, 471, 361, 466, 366, 460, 369, 461, 372, 464, 370, 469, 382, 465, 387, 464, 393, 457, 399, 469, 407, 468, 410, 458, 418, 456, 415, 450, 412, 447, 406, 444, 407, 441, 405, 435, 407, 435, 413, 432, 411, 428, 403, 425, 404, 418, 397, 413, 397, 414, 402, 417, 403, 415, 397, 410, 395, 409, 392, 403, 392, 400, 390, 395, 382, 386, 378, 380, 372, 374, 370, 365, 374, 359, 373, 357, 363, 354, 363, 349, 357, 346, 359, 340, 359, 337, 358, 332, 352, 320, 
350, 299, 357, 291, 351, 293, 345, 292, 342, 280, 346, 279, 349, 276, 348, 275, 345, 272, 345, 270, 343], 10:[663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 
457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 
420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 
1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 12:[181, 560, 181, 566, 195, 587, 194, 590, 199, 602, 217, 611, 217, 614, 214, 617, 217, 620, 226, 620, 229, 
619, 229, 616, 232, 615, 241, 617, 243, 623, 242, 626, 247, 635, 256, 638, 271, 636, 286, 630, 313, 613, 316, 613, 320, 617, 327, 606, 342, 596, 364, 575, 363, 569, 357, 564, 348, 563, 339, 557, 333, 557, 321, 547, 309, 545, 304, 539, 283, 541, 262, 540, 247, 549, 238, 549, 226, 553, 217, 558, 196, 555, 184, 558], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 
553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 
636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 
580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 
852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 
450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 
611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 676, 529, 665, 528, 660, 525, 661, 522, 658, 525, 655, 525, 649, 528, 647, 532, 638, 542, 633, 544, 635, 547, 634, 556, 640, 559, 640, 561, 646, 567, 647, 571, 652, 572, 650, 570, 647, 573, 644, 576, 643, 579, 646, 588, 641, 586, 638, 590, 633, 605, 633, 607, 630, 612, 642, 617, 637, 622, 649, 617, 654, 611, 652, 616, 658, 616, 661, 610, 663, 607, 669, 604, 671, 610, 677, 610, 683, 607, 689, 608, 692, 617, 693, 623, 698, 623, 701, 617, 
704, 616, 707, 613, 708, 613, 705, 608, 708, 605, 708, 604, 710, 610, 710, 616, 715, 614, 721, 611, 722, 608, 726, 598, 719, 597, 713, 595, 715, 596, 718, 588, 719, 587, 722, 584, 722, 582, 719, 576, 719, 569, 725, 566, 731, 560, 733, 560, 736, 557, 737, 547, 729, 546, 723, 543, 722, 537, 724, 537, 727, 534, 726, 535, 723, 529, 721, 530, 718, 533, 716, 531, 713, 534, 703, 531, 702, 528, 703, 527, 706, 524, 705, 524, 702, 518, 701, 516, 695, 525, 689, 531, 690, 537, 687, 533, 681, 530, 682, 529, 685, 
526, 685, 525, 682, 519, 679], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 
785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 542, 218, 566, 223, 590, 225, 614, 233, 623, 240, 629, 252, 625, 261, 631, 279, 625, 284, 624, 287, 621, 287, 617, 281, 608, 279, 584, 278, 581, 279, 583, 282, 582, 285, 579, 285, 574, 280, 571, 282, 572, 285, 581, 291, 
587, 297, 588, 300, 582, 306, 573, 308, 540, 307, 507, 296, 506, 302, 503, 302, 501, 296, 489, 285, 487, 279, 478, 271, 475, 271, 473, 274, 470, 268, 473, 267, 474, 264, 473, 258, 468, 246], 3:[597, 227, 612, 225, 621, 219, 633, 215, 636, 216, 663, 214, 675, 216, 684, 215, 690, 217, 726, 217, 744, 219, 774, 230, 780, 230, 786, 233, 798, 233, 810, 239, 816, 240, 825, 247, 829, 253, 844, 265, 844, 271, 839, 276, 821, 280, 806, 280, 770, 312, 761, 317, 753, 328, 750, 327, 748, 324, 727, 337, 724, 337, 
709, 345, 691, 350, 679, 346, 672, 328, 666, 323, 660, 322, 663, 328, 662, 331, 659, 333, 650, 332, 647, 329, 653, 320, 651, 317, 636, 311, 627, 302, 624, 293, 625, 284, 631, 279, 630, 273, 624, 261, 628, 255, 626, 246, 623, 240, 614, 233, 599, 229], 4:[179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 
292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 
472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 
305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412], 5:[464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 
527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376], 6:[523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 
547, 323, 541, 323, 526, 329], 7:[708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 
779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 
497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 4446:{1:[271, 323, 271, 326, 274, 326, 277, 329, 278, 338, 283, 344, 292, 341, 293, 347, 291, 350, 301, 359, 304, 359, 305, 356, 317, 
350, 317, 347, 328, 338, 342, 353, 343, 359, 349, 357, 354, 363, 357, 363, 359, 365, 356, 369, 358, 371, 367, 374, 370, 373, 372, 370, 378, 372, 387, 380, 390, 381, 401, 393, 407, 395, 415, 402, 421, 401, 430, 404, 434, 413, 436, 411, 435, 408, 440, 405, 448, 408, 449, 411, 455, 414, 458, 418, 468, 410, 468, 407, 465, 404, 456, 399, 458, 396, 464, 393, 465, 387, 469, 382, 464, 370, 463, 373, 460, 373, 460, 370, 465, 367, 466, 364, 472, 358, 469, 340, 475, 338, 476, 332, 464, 326, 467, 324, 469, 316, 
477, 312, 477, 309, 471, 303, 475, 295, 481, 293, 482, 290, 470, 282, 467, 273, 468, 270, 463, 265, 460, 263, 451, 266, 448, 265, 449, 262, 455, 260, 459, 255, 454, 243, 452, 249, 449, 251, 446, 249, 443, 250, 438, 245, 441, 244, 442, 241, 439, 238, 433, 237, 428, 242, 430, 245, 427, 247, 421, 245, 415, 247, 412, 250, 411, 256, 408, 257, 407, 251, 409, 246, 400, 242, 395, 247, 396, 250, 399, 251, 393, 254, 390, 254, 388, 251, 385, 253, 383, 262, 381, 264, 372, 261, 363, 254, 351, 258, 349, 261, 351, 
264, 360, 268, 355, 271, 350, 266, 347, 268, 344, 267, 342, 269, 328, 261, 322, 262, 319, 265, 321, 270, 318, 271, 318, 274, 324, 276, 322, 279, 325, 281, 331, 279, 331, 282, 316, 283, 315, 280, 312, 279, 310, 285, 304, 285, 295, 290, 294, 293, 297, 295, 298, 298, 292, 298, 286, 302, 285, 308, 282, 307, 279, 301, 277, 302, 273, 311, 278, 318, 276, 321, 273, 322], 10:[662, 422, 668, 417, 677, 415, 680, 409, 686, 407, 690, 398, 695, 392, 706, 385, 712, 388, 722, 400, 717, 405, 720, 408, 720, 414, 726, 
418, 729, 416, 731, 410, 740, 408, 748, 400, 757, 396, 769, 387, 775, 381, 778, 375, 784, 371, 785, 368, 791, 363, 800, 369, 817, 399, 825, 408, 831, 411, 840, 419, 849, 421, 858, 427, 873, 427, 873, 433, 874, 436, 877, 438, 877, 441, 872, 456, 863, 457, 857, 460, 842, 459, 842, 462, 836, 467, 832, 473, 826, 475, 814, 473, 811, 479, 808, 480, 793, 476, 802, 470, 799, 468, 793, 470, 781, 470, 780, 464, 777, 465, 775, 463, 780, 458, 778, 456, 766, 464, 745, 471, 739, 471, 737, 467, 731, 465, 728, 462, 
722, 466, 710, 464, 709, 459, 706, 458, 710, 452, 708, 450, 702, 451, 693, 445, 693, 442, 689, 437, 680, 439, 677, 437, 674, 438, 669, 436, 671, 432, 669, 429, 666, 430, 663, 428, 663, 425], 11:[845, 415, 851, 411, 860, 409, 865, 403, 886, 389, 889, 389, 898, 383, 904, 377, 913, 362, 931, 348, 943, 362, 943, 368, 945, 371, 948, 373, 951, 370, 954, 372, 968, 396, 977, 405, 983, 407, 989, 412, 995, 408, 1001, 414, 1010, 419, 1021, 430, 1036, 434, 1039, 437, 1036, 442, 1030, 444, 1024, 442, 1016, 448, 
1016, 454, 1022, 459, 1022, 461, 1013, 464, 1007, 462, 1005, 464, 1011, 473, 1008, 476, 1014, 480, 1012, 482, 1003, 479, 1E3, 479, 998, 482, 995, 482, 986, 478, 980, 478, 977, 481, 978, 484, 967, 491, 961, 487, 959, 481, 956, 479, 947, 480, 941, 477, 935, 479, 929, 478, 927, 476, 927, 472, 925, 469, 922, 466, 916, 465, 914, 468, 923, 480, 911, 480, 905, 484, 899, 483, 894, 487, 888, 485, 879, 486, 877, 483, 874, 485, 865, 485, 863, 479, 857, 481, 854, 479, 848, 480, 858, 472, 879, 462, 880, 459, 
878, 457, 878, 448, 881, 445, 882, 439, 877, 434, 877, 428, 883, 423, 886, 423, 886, 420, 877, 421, 877, 418, 875, 416, 857, 415, 848, 417], 12:[181, 560, 181, 566, 195, 587, 194, 590, 199, 602, 217, 611, 217, 614, 214, 617, 217, 620, 226, 620, 229, 619, 229, 616, 232, 615, 241, 617, 243, 623, 242, 626, 247, 635, 256, 638, 271, 636, 286, 630, 313, 613, 316, 613, 320, 617, 327, 606, 342, 596, 364, 575, 363, 569, 357, 564, 348, 563, 339, 557, 333, 557, 321, 547, 309, 545, 304, 539, 283, 541, 262, 540, 
247, 549, 238, 549, 226, 553, 217, 558, 196, 555, 184, 558], 13:[304, 539, 328, 523, 344, 508, 353, 508, 356, 506, 374, 512, 383, 512, 395, 509, 407, 511, 413, 508, 422, 508, 440, 513, 444, 519, 440, 528, 443, 531, 445, 537, 440, 549, 419, 560, 392, 568, 377, 568, 365, 575, 364, 569, 358, 564, 346, 561, 340, 557, 334, 557, 320, 546, 311, 546, 305, 540], 14:[492, 546, 494, 552, 500, 553, 500, 556, 503, 557, 504, 554, 510, 552, 509, 555, 512, 557, 506, 559, 497, 565, 497, 568, 503, 572, 506, 572, 505, 
576, 507, 578, 507, 584, 513, 588, 513, 591, 519, 592, 522, 590, 527, 593, 527, 596, 523, 599, 528, 603, 526, 610, 522, 610, 522, 603, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 506, 626, 510, 632, 513, 632, 512, 636, 515, 636, 519, 633, 522, 635, 522, 638, 519, 640, 522, 646, 528, 647, 532, 638, 547, 633, 552, 638, 560, 641, 561, 647, 567, 647, 568, 650, 571, 652, 572, 650, 570, 648, 572, 645, 575, 643, 581, 646, 587, 642, 588, 639, 586, 637, 589, 634, 601, 632, 
604, 633, 607, 631, 609, 634, 618, 629, 618, 626, 624, 623, 626, 620, 622, 614, 622, 605, 618, 600, 623, 596, 617, 590, 623, 585, 613, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 559, 610, 556, 617, 550, 617, 547, 608, 540, 599, 546, 598, 549, 600, 552, 598, 553, 594, 554, 590, 548, 581, 545, 576, 550, 577, 553, 575, 555, 569, 552, 563, 555, 560, 558, 560, 561, 565, 564, 566, 567, 563, 566, 557, 569, 554, 569, 554, 563, 551, 561, 545, 561, 537, 550, 532, 558, 530, 560, 527, 560, 524, 559, 522, 
556, 524, 553, 521, 550, 512, 550, 513, 547, 511, 544, 505, 540, 496, 542, 494, 545], 15:[695, 524, 695, 533, 698, 542, 703, 548, 706, 548, 706, 551, 709, 553, 733, 560, 735, 563, 737, 560, 740, 561, 741, 564, 746, 560, 752, 560, 791, 573, 800, 578, 811, 587, 817, 589, 826, 589, 838, 597, 853, 597, 871, 590, 884, 579, 896, 561, 891, 552, 897, 534, 894, 516, 868, 494, 853, 490, 844, 491, 835, 489, 832, 492, 814, 492, 781, 500, 772, 504, 757, 504, 751, 502, 730, 503, 718, 501, 703, 506, 703, 518, 697, 
522], 16:[323, 635, 335, 635, 338, 637, 341, 646, 340, 649, 331, 653, 332, 655, 344, 656, 347, 659, 359, 664, 360, 667, 351, 670, 347, 673, 363, 671, 378, 679, 381, 679, 387, 683, 399, 687, 402, 690, 420, 695, 420, 698, 417, 700, 417, 703, 429, 699, 450, 700, 455, 703, 455, 709, 491, 705, 497, 702, 508, 691, 511, 691, 520, 683, 529, 679, 531, 676, 527, 670, 518, 667, 520, 661, 511, 659, 512, 653, 518, 650, 510, 645, 503, 636, 510, 627, 511, 624, 509, 615, 512, 609, 518, 604, 520, 598, 519, 595, 513, 
594, 504, 589, 492, 578, 490, 572, 484, 567, 475, 565, 463, 559, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 434, 569, 428, 572, 419, 582, 419, 585, 417, 587, 405, 589, 399, 594, 395, 600, 392, 600, 383, 608, 380, 605, 375, 610, 369, 612, 361, 620, 337, 624, 333, 629, 327, 632], 17:[516, 676, 529, 665, 528, 660, 525, 661, 522, 658, 525, 655, 525, 649, 528, 647, 532, 638, 542, 633, 544, 635, 547, 634, 556, 640, 559, 640, 561, 646, 567, 647, 571, 652, 572, 650, 570, 647, 573, 644, 576, 643, 579, 
646, 588, 641, 586, 638, 590, 633, 605, 633, 607, 630, 612, 642, 617, 637, 622, 649, 617, 654, 611, 652, 616, 658, 616, 661, 610, 663, 607, 669, 604, 671, 610, 677, 610, 683, 607, 689, 608, 692, 617, 693, 623, 698, 623, 701, 617, 704, 616, 707, 613, 708, 613, 705, 608, 708, 605, 708, 604, 710, 610, 710, 616, 715, 614, 721, 611, 722, 608, 726, 598, 719, 597, 713, 595, 715, 596, 718, 588, 719, 587, 722, 584, 722, 582, 719, 576, 719, 569, 725, 566, 731, 560, 733, 560, 736, 557, 737, 547, 729, 546, 723, 
543, 722, 537, 724, 537, 727, 534, 726, 535, 723, 529, 721, 530, 718, 533, 716, 531, 713, 534, 703, 531, 702, 528, 703, 527, 706, 524, 705, 524, 702, 518, 701, 516, 695, 525, 689, 531, 690, 537, 687, 533, 681, 530, 682, 529, 685, 526, 685, 525, 682, 519, 679], 18:[611, 685, 617, 683, 617, 668, 620, 665, 626, 663, 631, 657, 627, 633, 627, 621, 623, 612, 623, 603, 629, 595, 630, 586, 632, 583, 640, 578, 639, 575, 636, 573, 624, 571, 623, 568, 625, 565, 623, 562, 629, 559, 631, 556, 630, 550, 633, 547, 
642, 549, 660, 557, 696, 562, 708, 569, 717, 572, 722, 578, 725, 579, 727, 585, 732, 590, 738, 592, 747, 592, 771, 601, 773, 604, 769, 610, 771, 616, 780, 618, 792, 618, 793, 621, 784, 625, 783, 628, 786, 634, 789, 636, 790, 645, 787, 650, 784, 650, 772, 658, 765, 667, 756, 670, 729, 687, 727, 690, 718, 692, 712, 697, 700, 701, 682, 703, 679, 705, 664, 704, 652, 699, 631, 699, 619, 691, 616, 692, 613, 690, 613, 687], 2:[468, 243, 489, 235, 495, 225, 492, 224, 489, 228, 492, 233, 500, 228, 515, 222, 
524, 224, 533, 219, 551, 219, 560, 222, 572, 223, 578, 226, 577, 229, 583, 234, 587, 240, 587, 243, 599, 254, 599, 263, 591, 274, 579, 280, 582, 281, 581, 284, 579, 285, 574, 280, 571, 281, 573, 287, 579, 290, 587, 298, 588, 301, 574, 308, 541, 307, 507, 296, 505, 297, 505, 301, 503, 300, 500, 294, 491, 286, 485, 277, 476, 270, 474, 272, 472, 271, 471, 268, 474, 267, 475, 264, 469, 246], 3:[602, 289, 606, 295, 609, 295, 616, 301, 618, 307, 626, 314, 628, 311, 637, 311, 637, 315, 640, 315, 649, 320, 
652, 323, 652, 326, 655, 327, 646, 333, 645, 336, 653, 342, 653, 347, 657, 351, 657, 354, 663, 362, 663, 368, 659, 374, 653, 375, 647, 379, 646, 382, 649, 385, 653, 394, 656, 395, 656, 398, 659, 399, 659, 396, 665, 395, 671, 390, 673, 387, 671, 384, 673, 382, 678, 385, 678, 391, 684, 392, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 380, 705, 380, 707, 383, 708, 381, 714, 379, 719, 373, 719, 370, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 771, 341, 769, 329, 775, 328, 775, 
325, 783, 319, 778, 313, 779, 310, 782, 310, 783, 305, 793, 298, 794, 295, 788, 290, 782, 288, 779, 289, 777, 286, 782, 283, 780, 280, 781, 278, 787, 279, 790, 281, 791, 284, 794, 284, 797, 279, 803, 277, 804, 274, 796, 265, 797, 262, 795, 259, 786, 253, 780, 246, 774, 243, 768, 246, 768, 243, 771, 238, 774, 238, 778, 242, 779, 239, 785, 236, 787, 233, 786, 230, 777, 225, 768, 230, 767, 236, 761, 232, 755, 231, 753, 225, 745, 230, 743, 225, 734, 220, 725, 225, 721, 233, 721, 237, 713, 244, 712, 242, 
716, 237, 713, 225, 706, 230, 703, 228, 697, 228, 692, 236, 686, 233, 683, 234, 675, 242, 672, 239, 673, 236, 676, 234, 675, 228, 677, 226, 674, 223, 668, 222, 662, 227, 665, 229, 663, 232, 654, 232, 648, 236, 651, 241, 648, 241, 642, 237, 636, 238, 634, 229, 641, 235, 651, 228, 646, 222, 640, 220, 631, 225, 627, 237, 624, 237, 618, 233, 615, 235, 611, 227, 609, 228, 605, 237, 611, 245, 617, 247, 619, 250, 620, 248, 629, 243, 635, 251, 626, 249, 621, 254, 621, 258, 615, 257, 606, 262, 604, 265, 613, 
271, 613, 274, 617, 274, 617, 271, 626, 269, 624, 275, 616, 283, 607, 285, 604, 288], 4:[173, 404, 175, 407, 187, 406, 188, 409, 195, 414, 194, 417, 188, 421, 199, 421, 198, 427, 201, 429, 204, 430, 219, 426, 219, 429, 212, 434, 222, 433, 224, 435, 222, 439, 229, 439, 238, 435, 238, 438, 231, 443, 239, 442, 241, 445, 250, 450, 253, 448, 257, 454, 266, 454, 272, 456, 273, 459, 276, 461, 279, 461, 282, 457, 294, 455, 297, 453, 303, 455, 306, 452, 315, 453, 316, 450, 322, 446, 310, 442, 316, 440, 317, 
437, 332, 442, 338, 440, 344, 442, 350, 438, 356, 438, 358, 436, 347, 427, 349, 426, 364, 433, 379, 433, 382, 435, 385, 433, 388, 434, 394, 432, 397, 434, 403, 433, 402, 431, 399, 430, 400, 427, 403, 428, 402, 422, 396, 422, 399, 425, 406, 422, 409, 424, 418, 424, 421, 423, 423, 420, 418, 411, 415, 409, 416, 407, 419, 407, 421, 405, 409, 397, 403, 396, 380, 373, 374, 371, 368, 373, 363, 378, 360, 376, 342, 359, 341, 353, 329, 338, 318, 346, 315, 355, 304, 366, 294, 354, 285, 351, 281, 342, 278, 339, 
277, 330, 275, 327, 265, 330, 261, 336, 249, 344, 242, 356, 227, 362, 224, 368, 215, 374, 210, 382, 201, 386, 193, 394, 187, 395, 179, 403, 176, 400, 174, 403], 5:[465, 372, 467, 378, 479, 383, 488, 391, 497, 391, 512, 396, 521, 405, 530, 411, 536, 409, 548, 409, 563, 403, 578, 403, 602, 393, 611, 393, 641, 383, 617, 383, 608, 381, 572, 382, 548, 374, 538, 362, 538, 347, 534, 341, 528, 338, 522, 332, 522, 329, 510, 335, 492, 340, 489, 339, 483, 343, 480, 346, 479, 355, 474, 361, 468, 365, 466, 371], 
6:[523, 330, 527, 336, 536, 342, 538, 345, 539, 348, 537, 351, 537, 357, 541, 366, 550, 374, 556, 375, 562, 379, 568, 381, 604, 380, 616, 383, 634, 381, 640, 383, 655, 379, 658, 376, 658, 370, 654, 361, 656, 355, 644, 345, 642, 330, 639, 324, 633, 318, 627, 316, 615, 316, 609, 313, 600, 315, 591, 313, 576, 313, 564, 318, 558, 318, 552, 322, 534, 325, 525, 329], 7:[708, 386, 711, 387, 722, 399, 721, 402, 718, 404, 720, 407, 720, 413, 726, 418, 731, 410, 737, 409, 746, 403, 750, 398, 756, 396, 768, 
388, 774, 382, 777, 376, 785, 369, 786, 366, 792, 362, 798, 366, 820, 402, 826, 408, 838, 416, 859, 409, 867, 401, 885, 389, 888, 389, 897, 383, 903, 378, 903, 375, 893, 363, 889, 354, 886, 351, 880, 349, 876, 337, 869, 328, 854, 317, 849, 311, 847, 305, 841, 299, 835, 297, 821, 284, 810, 291, 808, 297, 798, 309, 786, 330, 780, 335, 774, 343, 771, 343, 758, 358, 758, 364, 740, 351, 730, 362, 721, 369, 711, 384], 8:[153, 487, 156, 499, 160, 505, 174, 519, 174, 522, 171, 525, 173, 543, 171, 545, 168, 
545, 168, 548, 170, 551, 174, 549, 174, 552, 179, 561, 182, 558, 194, 555, 218, 557, 227, 552, 239, 548, 248, 548, 263, 540, 281, 541, 284, 540, 284, 534, 296, 528, 299, 522, 297, 516, 290, 507, 278, 497, 278, 491, 242, 479, 233, 474, 221, 470, 212, 469, 200, 465, 188, 465, 176, 469, 170, 473, 167, 473, 161, 477, 155, 485], 9:[247, 468, 248, 474, 255, 481, 267, 487, 276, 489, 279, 492, 278, 495, 283, 501, 289, 505, 298, 517, 299, 526, 308, 525, 317, 529, 329, 522, 339, 511, 345, 508, 360, 506, 372, 
511, 384, 511, 390, 509, 408, 510, 420, 506, 419, 503, 425, 499, 431, 502, 434, 499, 432, 496, 433, 493, 430, 491, 432, 488, 431, 485, 428, 483, 407, 482, 383, 468, 359, 462, 347, 461, 344, 463, 329, 463, 317, 465, 316, 468, 310, 471, 298, 471, 295, 469, 292, 470, 277, 467, 268, 467, 265, 469, 250, 467]}, 4536:{1:[267, 340, 278, 331, 276, 328, 273, 327, 272, 324, 278, 319, 273, 312, 278, 300, 281, 303, 283, 309, 285, 307, 285, 304, 291, 299, 297, 298, 298, 296, 295, 296, 292, 293, 286, 295, 284, 
298, 281, 297, 274, 290, 274, 287, 277, 284, 286, 281, 296, 290, 302, 286, 308, 287, 311, 281, 314, 280, 317, 283, 326, 284, 332, 282, 332, 279, 321, 277, 318, 275, 320, 269, 319, 266, 321, 263, 330, 262, 342, 270, 345, 267, 351, 267, 357, 271, 360, 269, 351, 265, 349, 262, 350, 259, 362, 255, 371, 261, 380, 263, 382, 262, 385, 253, 388, 249, 391, 256, 396, 251, 394, 248, 400, 243, 409, 246, 407, 252, 410, 257, 411, 251, 414, 248, 420, 245, 429, 247, 428, 244, 432, 238, 438, 238, 441, 240, 442, 243, 
440, 246, 442, 249, 448, 251, 451, 250, 455, 244, 459, 256, 457, 259, 448, 264, 449, 267, 458, 263, 464, 266, 467, 269, 469, 281, 475, 284, 481, 290, 481, 293, 478, 296, 475, 296, 471, 304, 477, 310, 478, 316, 481, 319, 483, 325, 482, 331, 486, 340, 485, 343, 479, 345, 476, 344, 472, 339, 472, 357, 469, 363, 463, 369, 469, 381, 465, 393, 456, 399, 464, 404, 468, 410, 460, 417, 457, 417, 455, 414, 452, 414, 448, 408, 442, 406, 439, 406, 435, 412, 432, 412, 428, 415, 425, 410, 422, 410, 417, 404, 413, 
402, 411, 396, 412, 392, 418, 392, 420, 398, 419, 402, 416, 401, 414, 396, 409, 392, 406, 395, 395, 382, 389, 383, 388, 386, 377, 377, 377, 372, 374, 372, 369, 376, 360, 374, 357, 368, 359, 365, 353, 366, 355, 369, 353, 372, 350, 371, 349, 377, 346, 377, 344, 369, 338, 368, 332, 371, 330, 374, 327, 374, 318, 368, 315, 369, 303, 359, 297, 357, 295, 354, 288, 352, 291, 351, 290, 356, 285, 359, 285, 362, 282, 362, 280, 360, 281, 357, 279, 354, 276, 354, 275, 345, 269, 343], 10:[663, 428, 666, 430, 669, 
429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 
823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 
875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 
430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 
297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 
310, 546, 305, 540], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 
561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 
557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 
533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 
673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 696, 525, 689, 531, 691, 536, 686, 532, 
681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 
623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 
702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 
638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 
305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245], 3:[602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 
384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 
783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 
229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287], 4:[190, 404, 196, 399, 211, 395, 226, 388, 232, 380, 244, 375, 249, 370, 255, 368, 261, 370, 267, 367, 282, 370, 300, 376, 306, 380, 324, 378, 336, 378, 345, 380, 360, 378, 378, 
387, 387, 387, 393, 392, 397, 398, 396, 404, 399, 407, 408, 407, 414, 409, 420, 412, 421, 415, 409, 425, 388, 432, 379, 438, 372, 445, 348, 447, 336, 450, 333, 449, 327, 453, 318, 451, 303, 457, 291, 459, 273, 455, 267, 455, 264, 457, 246, 456, 225, 446, 220, 440, 208, 434, 202, 429, 200, 426, 204, 420, 204, 414, 192, 406], 5:[464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 
383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376], 6:[523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329], 7:[708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 
720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 
383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 
340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 5346:{1:[271, 324, 272, 327, 278, 329, 278, 338, 281, 341, 281, 344, 287, 342, 293, 343, 291, 352, 302, 360, 306, 356, 315, 351, 318, 346, 321, 345, 326, 339, 329, 339, 340, 351, 344, 359, 350, 358, 352, 361, 358, 364, 
357, 367, 360, 373, 366, 375, 372, 371, 378, 372, 390, 382, 401, 394, 407, 396, 416, 403, 422, 401, 424, 403, 427, 403, 430, 405, 432, 411, 435, 413, 435, 407, 441, 405, 444, 407, 447, 406, 450, 412, 456, 415, 458, 418, 468, 410, 469, 407, 457, 399, 464, 393, 465, 387, 469, 382, 464, 370, 461, 372, 460, 369, 466, 366, 471, 361, 472, 349, 469, 340, 475, 338, 476, 332, 470, 327, 464, 326, 467, 324, 467, 321, 470, 316, 476, 313, 478, 310, 472, 304, 471, 301, 482, 290, 470, 282, 467, 273, 468, 270, 466, 
267, 460, 263, 451, 266, 448, 265, 449, 262, 455, 260, 459, 254, 455, 245, 453, 245, 452, 248, 449, 250, 443, 250, 440, 244, 442, 241, 440, 238, 434, 237, 428, 241, 430, 244, 428, 246, 419, 244, 411, 251, 411, 254, 409, 255, 407, 249, 409, 247, 407, 244, 398, 244, 395, 246, 395, 249, 398, 251, 393, 254, 390, 254, 388, 251, 386, 251, 381, 263, 372, 261, 363, 254, 357, 254, 349, 261, 351, 264, 357, 267, 357, 270, 351, 266, 345, 266, 343, 269, 334, 266, 332, 263, 323, 261, 320, 264, 320, 270, 317, 272, 
319, 275, 324, 277, 323, 280, 326, 281, 332, 278, 332, 281, 326, 283, 317, 282, 312, 279, 309, 285, 303, 285, 294, 291, 294, 297, 285, 303, 285, 306, 283, 308, 278, 299, 274, 308, 274, 314, 277, 315, 278, 318, 276, 321, 273, 322], 10:[663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 
800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 
405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 
487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 
411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 
341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 
528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 
576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 
560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 328, 635, 331, 637, 337, 636, 341, 648, 332, 
652, 331, 655, 343, 656, 358, 664, 359, 667, 347, 672, 348, 674, 360, 671, 396, 686, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 417, 703, 426, 700, 450, 700, 453, 701, 455, 704, 454, 707, 456, 710, 489, 706, 498, 702, 507, 693, 530, 679, 532, 676, 531, 673, 528, 671, 519, 668, 518, 665, 520, 662, 518, 660, 512, 659, 511, 656, 517, 649, 514, 648, 504, 636, 511, 624, 509, 615, 519, 603, 520, 597, 506, 590, 492, 577, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 
446, 568, 437, 568, 431, 570, 425, 574, 418, 582, 419, 585, 417, 587, 408, 587, 402, 590, 395, 599, 389, 601, 384, 607, 381, 605, 378, 606, 377, 609, 368, 611, 361, 619, 337, 623, 334, 628, 328, 632, 325, 632], 17:[516, 696, 525, 689, 531, 691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 
582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 
715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 
569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 
224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245], 3:[602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 
312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 
772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 
230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 
612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287], 4:[173, 406, 188, 407, 193, 412, 194, 418, 190, 421, 198, 421, 197, 427, 200, 429, 209, 429, 218, 426, 220, 427, 215, 432, 224, 434, 224, 439, 230, 439, 239, 436, 230, 443, 238, 443, 244, 447, 253, 449, 258, 454, 273, 456, 274, 459, 277, 461, 280, 460, 281, 457, 293, 455, 296, 453, 302, 455, 308, 452, 314, 453, 318, 448, 321, 447, 320, 445, 311, 442, 317, 440, 318, 437, 324, 437, 325, 440, 331, 442, 343, 442, 349, 438, 
355, 438, 356, 435, 347, 427, 349, 425, 364, 433, 376, 433, 379, 431, 381, 434, 393, 432, 399, 434, 402, 433, 403, 431, 398, 428, 401, 427, 397, 423, 400, 422, 409, 424, 421, 424, 423, 421, 420, 415, 426, 414, 426, 411, 423, 408, 420, 410, 419, 413, 416, 407, 419, 407, 417, 403, 414, 402, 408, 396, 402, 395, 379, 372, 373, 370, 364, 377, 361, 377, 344, 360, 340, 351, 330, 339, 327, 338, 317, 348, 317, 351, 308, 363, 305, 365, 303, 364, 296, 355, 287, 352, 284, 349, 282, 343, 279, 340, 277, 328, 274, 
325, 271, 328, 265, 329, 258, 338, 249, 344, 242, 356, 227, 361, 227, 364, 222, 370, 213, 375, 207, 384, 201, 386, 192, 395, 186, 395, 181, 401, 175, 401, 174, 404], 5:[452, 410, 454, 407, 463, 401, 469, 400, 469, 397, 478, 391, 476, 388, 473, 389, 472, 392, 469, 391, 458, 384, 458, 381, 462, 375, 462, 369, 456, 366, 454, 363, 460, 354, 463, 352, 469, 354, 472, 352, 465, 344, 465, 341, 474, 335, 472, 329, 473, 326, 476, 324, 477, 315, 483, 310, 495, 313, 501, 310, 503, 304, 507, 299, 510, 302, 512, 
311, 515, 311, 518, 302, 524, 301, 530, 304, 531, 307, 529, 310, 531, 313, 529, 316, 526, 317, 526, 320, 532, 323, 535, 320, 540, 321, 540, 318, 534, 316, 534, 313, 537, 307, 543, 304, 552, 309, 558, 308, 564, 310, 570, 315, 568, 321, 562, 324, 572, 339, 563, 345, 559, 351, 556, 351, 555, 357, 552, 360, 556, 366, 555, 372, 561, 377, 562, 380, 556, 388, 565, 385, 574, 391, 577, 391, 589, 383, 595, 382, 598, 383, 606, 391, 601, 396, 598, 396, 597, 401, 589, 406, 588, 409, 585, 410, 581, 407, 578, 407, 
576, 409, 576, 412, 574, 413, 571, 413, 569, 404, 554, 409, 554, 412, 551, 412, 550, 409, 544, 407, 540, 401, 537, 401, 536, 407, 533, 407, 533, 402, 527, 401, 525, 398, 526, 395, 523, 394, 521, 396, 521, 402, 519, 405, 510, 409, 509, 412, 506, 411, 505, 408, 499, 407, 496, 408, 494, 414, 491, 413, 488, 407, 482, 406, 477, 415, 480, 421, 478, 424, 472, 427, 463, 419, 462, 416, 456, 414, 453, 411], 6:[546, 359, 548, 365, 557, 372, 556, 375, 553, 376, 551, 379, 551, 382, 554, 384, 560, 386, 575, 386, 
584, 392, 590, 394, 605, 396, 626, 396, 635, 393, 636, 390, 634, 384, 645, 375, 648, 363, 665, 351, 667, 348, 665, 342, 667, 336, 659, 329, 650, 327, 635, 325, 587, 325, 581, 327, 570, 335, 571, 344, 553, 352, 547, 358], 7:[708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 
891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 
182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 
306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}, 5436:{1:[267, 340, 269, 337, 278, 331, 277, 328, 271, 326, 272, 323, 278, 319, 278, 316, 273, 312, 277, 300, 280, 301, 282, 307, 285, 307, 287, 301, 293, 298, 295, 295, 294, 292, 296, 289, 305, 285, 308, 286, 311, 280, 314, 279, 316, 282, 325, 283, 331, 282, 333, 279, 330, 278, 327, 281, 324, 280, 323, 275, 320, 276, 317, 273, 320, 268, 319, 265, 322, 262, 325, 260, 331, 262, 333, 265, 342, 269, 344, 267, 350, 266, 356, 270, 358, 268, 349, 262, 
350, 259, 356, 255, 362, 254, 371, 260, 380, 263, 385, 252, 388, 250, 392, 255, 394, 252, 397, 252, 394, 247, 400, 242, 409, 246, 407, 251, 408, 254, 411, 255, 412, 249, 418, 245, 430, 245, 427, 243, 433, 237, 439, 238, 441, 240, 440, 246, 442, 249, 448, 250, 455, 245, 459, 254, 458, 257, 452, 262, 449, 262, 448, 265, 451, 266, 460, 263, 466, 267, 468, 270, 467, 273, 470, 282, 482, 290, 471, 301, 472, 304, 478, 310, 476, 313, 470, 316, 467, 321, 467, 324, 464, 326, 470, 327, 476, 332, 476, 335, 475, 
338, 469, 340, 472, 349, 471, 361, 466, 366, 460, 369, 461, 372, 464, 370, 469, 382, 465, 387, 464, 393, 457, 399, 469, 407, 468, 410, 458, 418, 456, 415, 450, 412, 447, 406, 444, 407, 441, 405, 435, 407, 435, 413, 432, 411, 428, 403, 425, 404, 418, 397, 413, 397, 414, 402, 417, 403, 415, 397, 410, 395, 409, 392, 403, 392, 400, 390, 395, 382, 386, 378, 380, 372, 374, 370, 365, 374, 359, 373, 357, 363, 354, 363, 349, 357, 346, 359, 340, 359, 337, 358, 332, 352, 320, 350, 299, 357, 291, 351, 293, 345, 
292, 342, 280, 346, 279, 349, 276, 348, 275, 345, 272, 345, 270, 343], 10:[663, 428, 666, 430, 669, 429, 672, 438, 681, 439, 687, 436, 696, 447, 702, 451, 708, 450, 707, 459, 709, 461, 709, 464, 721, 466, 727, 462, 730, 465, 736, 467, 740, 471, 746, 471, 755, 466, 764, 465, 773, 458, 779, 457, 773, 466, 780, 464, 781, 470, 784, 471, 799, 469, 800, 471, 794, 475, 795, 477, 801, 477, 807, 480, 810, 479, 813, 474, 828, 474, 834, 472, 835, 469, 845, 459, 857, 460, 863, 457, 872, 456, 874, 453, 874, 447, 
877, 442, 877, 439, 872, 434, 874, 428, 871, 426, 865, 428, 856, 426, 850, 421, 841, 419, 832, 411, 823, 406, 816, 397, 809, 382, 799, 367, 790, 362, 783, 371, 780, 372, 775, 381, 769, 387, 763, 390, 758, 395, 749, 399, 744, 405, 738, 409, 732, 410, 726, 417, 720, 414, 720, 408, 717, 405, 722, 401, 721, 398, 710, 386, 704, 385, 691, 396, 687, 405, 685, 407, 682, 407, 675, 416, 669, 416, 666, 419], 11:[845, 415, 847, 417, 859, 415, 874, 416, 877, 417, 876, 420, 885, 420, 887, 422, 878, 426, 877, 429, 
878, 435, 881, 438, 881, 444, 877, 450, 880, 459, 872, 466, 854, 474, 849, 480, 861, 480, 866, 484, 875, 484, 878, 486, 887, 485, 890, 487, 896, 486, 901, 483, 904, 484, 912, 479, 924, 479, 921, 477, 920, 471, 917, 471, 914, 468, 915, 466, 921, 466, 930, 478, 933, 479, 939, 477, 948, 480, 957, 479, 960, 482, 959, 485, 961, 488, 967, 491, 972, 487, 978, 485, 976, 482, 982, 478, 994, 482, 1E3, 480, 1009, 480, 1015, 482, 1018, 481, 1010, 477, 1011, 471, 1006, 465, 1008, 463, 1014, 464, 1017, 462, 1026, 
462, 1017, 454, 1015, 451, 1016, 448, 1021, 443, 1030, 444, 1036, 442, 1039, 437, 1033, 432, 1021, 430, 1010, 419, 1004, 416, 995, 408, 989, 411, 975, 403, 969, 397, 959, 382, 959, 379, 955, 373, 952, 371, 946, 371, 943, 368, 943, 362, 931, 348, 919, 358, 916, 358, 902, 379, 896, 384, 890, 388, 884, 389, 878, 395, 866, 402, 864, 405, 855, 411, 846, 414], 12:[180, 563, 183, 558, 192, 555, 216, 558, 240, 548, 249, 548, 261, 540, 285, 540, 288, 538, 291, 540, 306, 540, 311, 546, 323, 548, 332, 556, 
359, 565, 364, 571, 364, 574, 361, 580, 349, 589, 344, 595, 326, 607, 324, 613, 319, 618, 315, 612, 297, 625, 285, 631, 261, 639, 255, 639, 246, 635, 240, 617, 231, 615, 230, 618, 227, 620, 218, 620, 215, 618, 215, 615, 218, 612, 212, 608, 203, 605, 197, 600, 194, 591, 195, 588, 189, 576, 181, 567, 181, 564], 13:[304, 539, 318, 528, 327, 524, 341, 509, 359, 506, 371, 511, 386, 511, 392, 509, 407, 510, 416, 507, 422, 507, 425, 509, 437, 511, 443, 516, 444, 519, 441, 528, 446, 537, 441, 549, 435, 553, 
432, 553, 417, 561, 399, 567, 375, 569, 366, 575, 364, 573, 364, 570, 358, 565, 334, 557, 322, 548, 310, 546, 305, 540], 14:[492, 546, 494, 552, 500, 554, 501, 557, 504, 556, 505, 553, 511, 552, 507, 559, 498, 564, 497, 567, 499, 570, 505, 572, 507, 577, 506, 583, 512, 586, 516, 592, 522, 590, 525, 592, 526, 595, 523, 597, 524, 600, 527, 601, 528, 608, 525, 610, 525, 605, 522, 602, 516, 601, 513, 603, 510, 609, 511, 612, 514, 612, 516, 614, 514, 617, 515, 620, 509, 623, 507, 626, 507, 629, 514, 636, 
519, 633, 522, 635, 522, 638, 519, 639, 521, 645, 527, 647, 531, 639, 546, 633, 557, 641, 560, 641, 561, 647, 566, 646, 570, 652, 573, 651, 570, 649, 574, 643, 580, 646, 586, 643, 589, 640, 586, 638, 591, 633, 614, 632, 620, 625, 626, 621, 623, 615, 623, 609, 621, 606, 622, 603, 619, 601, 620, 598, 623, 597, 618, 591, 622, 586, 622, 583, 614, 576, 614, 573, 623, 568, 622, 565, 616, 560, 610, 558, 610, 555, 616, 552, 618, 549, 613, 543, 607, 541, 598, 547, 597, 550, 594, 552, 592, 549, 586, 546, 580, 
546, 575, 551, 575, 554, 569, 552, 563, 554, 559, 560, 561, 566, 555, 570, 555, 564, 543, 560, 543, 557, 540, 555, 537, 549, 530, 560, 527, 560, 524, 559, 524, 553, 522, 550, 513, 548, 512, 545, 506, 541, 500, 540, 494, 544], 15:[692, 513, 696, 517, 700, 511, 703, 513, 702, 519, 696, 522, 695, 534, 700, 546, 703, 549, 706, 549, 711, 554, 729, 560, 732, 559, 734, 562, 740, 562, 741, 565, 745, 560, 751, 560, 757, 563, 769, 565, 781, 571, 796, 576, 808, 584, 810, 587, 825, 589, 831, 594, 840, 598, 852, 
598, 858, 596, 870, 591, 879, 584, 882, 589, 885, 588, 886, 585, 882, 581, 896, 560, 891, 551, 898, 533, 893, 515, 871, 496, 859, 491, 841, 489, 835, 489, 832, 491, 817, 491, 790, 497, 775, 503, 754, 503, 748, 501, 730, 503, 718, 501, 706, 503, 703, 505, 702, 508, 696, 508, 693, 510], 16:[322, 635, 337, 636, 341, 645, 341, 648, 330, 655, 345, 657, 360, 666, 345, 673, 351, 674, 360, 671, 372, 675, 402, 690, 417, 694, 420, 696, 419, 699, 416, 701, 418, 703, 436, 699, 454, 701, 454, 707, 456, 710, 483, 
707, 495, 703, 501, 699, 509, 691, 512, 691, 520, 684, 529, 680, 532, 674, 518, 666, 519, 660, 510, 658, 513, 652, 517, 649, 514, 648, 503, 636, 511, 624, 509, 618, 510, 612, 519, 603, 520, 597, 503, 588, 491, 577, 492, 574, 490, 571, 484, 567, 478, 566, 463, 558, 460, 560, 457, 566, 454, 567, 448, 565, 446, 568, 437, 568, 431, 570, 425, 574, 417, 587, 405, 589, 395, 599, 392, 599, 384, 607, 381, 606, 376, 609, 373, 608, 359, 620, 338, 623, 335, 625, 335, 628, 326, 632], 17:[516, 696, 525, 689, 531, 
691, 536, 686, 532, 681, 527, 684, 519, 679, 517, 676, 518, 673, 527, 667, 529, 661, 523, 659, 525, 653, 524, 650, 527, 648, 529, 642, 534, 637, 546, 633, 555, 639, 558, 639, 561, 642, 561, 645, 567, 647, 568, 650, 571, 652, 570, 649, 574, 643, 577, 643, 579, 646, 582, 645, 587, 640, 586, 637, 592, 632, 598, 633, 601, 631, 604, 632, 608, 630, 611, 640, 614, 641, 617, 637, 621, 649, 620, 652, 617, 654, 614, 652, 613, 654, 617, 660, 614, 663, 611, 663, 608, 669, 605, 671, 610, 678, 610, 684, 606, 690, 
609, 693, 618, 693, 623, 699, 622, 702, 614, 708, 613, 705, 608, 708, 605, 708, 606, 710, 615, 713, 619, 718, 621, 715, 630, 716, 630, 727, 627, 729, 626, 735, 623, 734, 621, 729, 615, 727, 619, 722, 616, 719, 610, 723, 609, 726, 606, 726, 605, 723, 599, 721, 597, 715, 595, 714, 594, 719, 588, 719, 584, 723, 583, 720, 577, 718, 569, 725, 566, 731, 560, 734, 559, 737, 556, 736, 548, 730, 546, 727, 547, 724, 541, 722, 538, 723, 538, 726, 535, 726, 534, 723, 529, 721, 529, 718, 532, 716, 531, 713, 534, 
704, 532, 702, 529, 702, 528, 705, 525, 705, 524, 702, 518, 701, 517, 698], 18:[609, 686, 617, 681, 616, 669, 618, 666, 627, 662, 631, 656, 629, 650, 629, 641, 626, 632, 627, 620, 623, 611, 623, 602, 630, 593, 631, 584, 640, 579, 640, 576, 637, 574, 625, 572, 623, 569, 623, 563, 625, 560, 628, 559, 630, 556, 630, 550, 635, 546, 647, 552, 665, 558, 686, 560, 701, 564, 713, 570, 725, 579, 727, 585, 733, 590, 745, 591, 751, 595, 763, 597, 772, 602, 773, 605, 769, 611, 770, 614, 773, 616, 794, 619, 784, 
626, 785, 632, 790, 638, 790, 647, 788, 650, 785, 650, 770, 660, 766, 666, 760, 668, 739, 682, 730, 686, 725, 691, 719, 692, 710, 698, 677, 705, 662, 704, 656, 700, 650, 699, 635, 700, 629, 698, 623, 693, 614, 691, 612, 688], 2:[467, 243, 488, 235, 488, 229, 491, 224, 494, 225, 494, 230, 497, 230, 515, 221, 521, 224, 530, 219, 551, 219, 566, 223, 575, 223, 578, 226, 578, 229, 588, 241, 588, 244, 597, 251, 600, 260, 594, 272, 581, 280, 583, 283, 581, 286, 576, 281, 570, 283, 579, 289, 588, 298, 588, 
301, 585, 302, 584, 305, 575, 308, 545, 308, 506, 297, 505, 303, 502, 301, 500, 295, 491, 287, 486, 278, 477, 270, 472, 273, 471, 267, 474, 266, 474, 263, 468, 245], 3:[602, 288, 605, 294, 611, 295, 617, 303, 617, 306, 623, 311, 624, 314, 627, 313, 629, 310, 638, 312, 638, 315, 650, 321, 652, 324, 652, 327, 654, 328, 645, 334, 645, 337, 651, 341, 654, 350, 657, 351, 656, 354, 661, 359, 663, 368, 660, 373, 654, 374, 646, 381, 647, 384, 650, 386, 651, 392, 656, 398, 659, 399, 659, 396, 665, 395, 673, 
388, 672, 382, 678, 384, 677, 388, 680, 392, 683, 391, 682, 388, 684, 386, 690, 391, 696, 387, 696, 384, 702, 381, 705, 380, 706, 383, 709, 382, 714, 379, 719, 373, 719, 370, 725, 366, 739, 352, 742, 352, 754, 362, 757, 361, 765, 349, 765, 344, 768, 344, 771, 341, 772, 338, 769, 329, 772, 329, 783, 320, 778, 314, 778, 311, 781, 310, 786, 302, 792, 299, 794, 296, 786, 289, 780, 289, 777, 287, 778, 284, 781, 284, 780, 278, 789, 280, 793, 284, 796, 283, 797, 280, 800, 280, 804, 274, 797, 266, 798, 263, 
796, 259, 790, 256, 783, 248, 777, 244, 779, 239, 787, 232, 779, 225, 770, 228, 767, 234, 764, 234, 755, 231, 753, 225, 750, 226, 748, 229, 745, 229, 744, 226, 738, 222, 732, 221, 723, 226, 724, 229, 721, 232, 722, 237, 714, 243, 712, 241, 717, 236, 712, 224, 708, 230, 699, 227, 696, 228, 693, 234, 684, 233, 676, 240, 673, 239, 673, 236, 676, 234, 677, 225, 668, 222, 662, 227, 665, 230, 659, 233, 653, 232, 648, 237, 651, 241, 648, 241, 642, 237, 636, 238, 634, 232, 635, 230, 638, 232, 639, 235, 643, 
234, 644, 231, 650, 229, 651, 226, 645, 221, 639, 220, 630, 226, 631, 229, 626, 237, 614, 233, 612, 227, 609, 226, 605, 238, 612, 246, 615, 246, 619, 250, 620, 248, 629, 243, 630, 246, 633, 248, 632, 250, 626, 249, 623, 251, 621, 257, 615, 257, 606, 261, 604, 264, 612, 271, 613, 274, 616, 274, 620, 270, 626, 269, 624, 275, 616, 283, 604, 287], 4:[179, 414, 184, 420, 187, 420, 191, 424, 192, 421, 202, 414, 208, 417, 208, 420, 203, 423, 209, 425, 211, 431, 219, 435, 219, 438, 223, 444, 229, 445, 230, 
448, 238, 442, 244, 444, 246, 447, 252, 448, 257, 453, 256, 456, 262, 459, 274, 451, 283, 453, 292, 447, 293, 450, 299, 451, 304, 446, 303, 440, 309, 442, 310, 445, 316, 446, 315, 452, 318, 453, 320, 451, 320, 448, 323, 447, 324, 445, 321, 442, 322, 440, 325, 439, 325, 436, 328, 435, 331, 435, 338, 443, 346, 447, 349, 447, 357, 441, 356, 435, 353, 433, 354, 431, 357, 431, 359, 433, 361, 442, 368, 448, 379, 442, 382, 442, 382, 439, 385, 437, 391, 437, 406, 447, 412, 443, 412, 449, 400, 456, 388, 450, 
379, 457, 382, 463, 388, 464, 388, 467, 391, 467, 392, 464, 401, 458, 409, 463, 411, 469, 414, 472, 417, 471, 419, 473, 418, 476, 421, 478, 423, 476, 423, 473, 428, 468, 426, 465, 430, 457, 442, 453, 442, 447, 445, 445, 445, 439, 447, 436, 440, 430, 446, 429, 450, 424, 442, 417, 436, 417, 430, 421, 429, 424, 430, 427, 436, 431, 434, 433, 428, 430, 426, 427, 415, 420, 416, 417, 423, 412, 421, 409, 422, 403, 413, 397, 407, 397, 406, 394, 393, 380, 387, 378, 378, 370, 372, 370, 360, 376, 358, 374, 360, 
368, 351, 363, 345, 364, 340, 359, 337, 359, 334, 356, 322, 357, 314, 364, 308, 364, 308, 361, 305, 358, 293, 356, 290, 354, 289, 352, 292, 350, 291, 347, 285, 344, 280, 349, 277, 350, 265, 346, 256, 346, 255, 343, 251, 341, 248, 350, 245, 352, 233, 349, 224, 355, 225, 361, 223, 364, 214, 364, 205, 369, 205, 372, 217, 380, 219, 377, 228, 373, 233, 378, 234, 384, 232, 390, 224, 381, 222, 381, 219, 387, 217, 389, 214, 388, 207, 397, 209, 400, 212, 400, 213, 403, 199, 412, 190, 407, 184, 409, 181, 412], 
5:[464, 373, 469, 364, 478, 357, 481, 345, 484, 342, 505, 335, 511, 335, 520, 330, 523, 330, 527, 336, 536, 342, 538, 345, 537, 357, 539, 363, 550, 374, 568, 381, 610, 381, 616, 383, 634, 381, 639, 384, 609, 394, 603, 393, 576, 404, 564, 403, 558, 404, 546, 410, 531, 411, 525, 409, 513, 397, 498, 392, 489, 392, 483, 386, 477, 382, 468, 379, 466, 376], 6:[523, 330, 524, 333, 538, 346, 538, 361, 542, 367, 551, 375, 575, 382, 608, 381, 617, 383, 641, 383, 656, 379, 659, 376, 659, 370, 654, 361, 656, 
355, 645, 345, 641, 327, 637, 321, 631, 317, 616, 316, 607, 312, 601, 315, 592, 313, 577, 313, 547, 323, 541, 323, 526, 329], 7:[708, 386, 711, 387, 721, 399, 721, 402, 718, 404, 720, 407, 719, 410, 720, 413, 726, 418, 732, 410, 741, 407, 749, 399, 758, 395, 763, 390, 766, 390, 778, 375, 784, 371, 791, 362, 800, 369, 815, 393, 817, 399, 826, 408, 838, 416, 844, 416, 850, 412, 859, 409, 867, 401, 885, 389, 891, 388, 903, 378, 903, 375, 893, 363, 889, 354, 880, 349, 876, 337, 872, 331, 866, 325, 854, 
317, 847, 305, 841, 299, 838, 299, 820, 283, 811, 290, 805, 302, 796, 311, 789, 326, 780, 335, 779, 338, 770, 344, 762, 353, 756, 364, 741, 352, 738, 353, 719, 371, 719, 374, 711, 383], 8:[153, 488, 155, 482, 169, 472, 190, 464, 220, 469, 241, 478, 277, 490, 280, 499, 289, 505, 298, 517, 298, 526, 295, 529, 286, 533, 284, 536, 286, 539, 284, 541, 260, 541, 251, 547, 245, 549, 236, 549, 218, 557, 194, 555, 182, 558, 179, 562, 174, 553, 174, 550, 169, 552, 169, 549, 166, 546, 169, 544, 172, 545, 173, 
542, 173, 518, 167, 513, 155, 498, 154, 489], 9:[246, 468, 249, 477, 257, 484, 278, 491, 279, 497, 290, 506, 297, 515, 299, 521, 298, 524, 300, 527, 306, 525, 318, 529, 336, 516, 340, 510, 352, 508, 355, 506, 373, 512, 382, 512, 391, 509, 409, 510, 412, 508, 418, 508, 423, 500, 426, 499, 431, 504, 434, 500, 434, 494, 431, 485, 428, 482, 407, 482, 383, 468, 365, 464, 362, 462, 332, 462, 317, 465, 315, 468, 306, 471, 282, 469, 279, 467, 255, 468, 249, 466]}};
config.village.imageSizes = [[117, 88], [0, 0], [0, 0], [0, 0], [0, 0], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], null, [151, 145], [151, 145], [151, 145], [156, 186], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [151, 145], [974, 668], [974, 668], [974, 668], [151, 145], [151, 145], [151, 145], null, [151, 145], [151, 145], [472, 444], [151, 145], 
[0, 0], [950, 682], [151, 145], [151, 145]];
config.village.animationOffset = {tribe1:{building13:{10:[73, -17], 20:[76, -8], 999:[79, -19]}}, tribe2:{building13:{10:[72, -20], 20:[81, -8], 999:[81, -20]}}, tribe3:{building13:{10:[65, -19], 20:[79, -5], 999:[79, -17]}}};
config.village.svg = {location1_11115:[{paths:["M 276, 329 L 282, 320 L 291, 313 L 295, 307 L 301, 303 L 328, 297 L 333, 285 L 339, 281 L 345, 280 L 357, 270 L 378, 264 L 396, 264 L 408, 268 L 414, 272 L 435, 290 L 439, 305 L 433, 329 L 426, 347 L 430, 356 L 427, 365 L 416, 380 L 407, 386 L 405, 389 L 399, 392 L 388, 381 L 383, 378 L 380, 379 L 379, 374 L 376, 372 L 367, 378 L 361, 378 L 355, 372 L 354, 369 L 345, 361 L 333, 343 L 327, 340 L 318, 348 L 318, 351 L 310, 363 L 303, 368 L 301, 362 L 296, 356 L 287, 353 L 284, 350 L 278, 338 L 277, 332 z"]}], 
location10_11115:[{paths:["M 687, 410 L 695, 434 L 707, 446 L 709, 452 L 721, 462 L 763, 475 L 784, 476 L 787, 474 L 790, 476 L 796, 475 L 808, 468 L 813, 453 L 819, 449 L 827, 440 L 829, 428 L 841, 423 L 853, 414 L 856, 414 L 859, 412 L 862, 406 L 858, 400 L 834, 392 L 822, 392 L 810, 387 L 792, 384 L 780, 380 L 774, 381 L 753, 379 L 729, 391 L 723, 392 L 708, 401 L 690, 406 L 688, 409 z"]}], location11_11115:[{paths:["M 809, 455 L 810, 458 L 825, 458 L 846, 467 L 852, 472 L 857, 484 L 869, 489 L 884, 487 L 899, 492 L 941, 492 L 953, 500 L 962, 500 L 968, 502 L 977, 508 L 992, 511 L 1004, 508 L 1013, 502 L 1019, 500 L 1023, 494 L 1026, 493 L 1039, 472 L 1034, 463 L 1040, 442 L 1038, 430 L 1027, 420 L 1023, 414 L 1023, 408 L 997, 384 L 991, 383 L 973, 375 L 967, 376 L 958, 372 L 952, 372 L 943, 368 L 937, 368 L 919, 361 L 907, 360 L 898, 354 L 892, 353 L 883, 357 L 879, 366 L 876, 369 L 874, 381 L 875, 384 L 872, 393 L 860, 403 L 859, 409 L 847, 415 L 843, 420 L 828, 427 L 826, 430 L 826, 436 L 818, 448 L 812, 452 z"]}], 
location12_11115:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_11115:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_11115:[{paths:["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]}], 
location15_11115:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_11115:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_11115:[{paths:["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]}], location18_11115:[{paths:["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]}], 
location2_11115:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}], 
location3_11115:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 705, 380 L 706, 383 L 714, 379 L 717, 380 L 717, 383 L 720, 384 L 721, 381 L 731, 372 L 729, 366 L 731, 360 L 738, 352 L 741, 351 L 743, 357 L 740, 363 L 746, 365 L 745, 368 L 747, 370 L 750, 368 L 751, 365 L 756, 362 L 760, 356 L 768, 351 L 768, 348 L 765, 346 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 778, 323 L 781, 322 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 787, 302 L 793, 298 L 794, 295 L 791, 292 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 797, 261 L 795, 258 L 786, 253 L 785, 250 L 776, 243 L 779, 241 L 780, 238 L 786, 234 L 787, 231 L 778, 225 L 775, 225 L 769, 229 L 766, 235 L 757, 232 L 752, 224 L 747, 229 L 744, 228 L 743, 225 L 737, 221 L 731, 221 L 725, 224 L 721, 233 L 721, 237 L 713, 243 L 713, 240 L 717, 235 L 714, 226 L 711, 225 L 710, 228 L 707, 230 L 698, 227 L 695, 229 L 692, 235 L 686, 233 L 683, 234 L 675, 241 L 672, 238 L 677, 233 L 675, 230 L 677, 227 L 676, 224 L 667, 222 L 664, 225 L 664, 231 L 661, 233 L 652, 232 L 649, 235 L 648, 238 L 651, 239 L 650, 241 L 641, 237 L 635, 237 L 633, 231 L 639, 232 L 641, 235 L 651, 228 L 650, 225 L 644, 220 L 638, 220 L 632, 224 L 628, 236 L 625, 237 L 616, 234 L 613, 232 L 611, 226 L 609, 227 L 605, 236 L 610, 244 L 616, 246 L 617, 249 L 620, 250 L 621, 247 L 630, 244 L 631, 247 L 634, 249 L 625, 250 L 620, 255 L 620, 258 L 611, 258 L 605, 262 L 607, 268 L 613, 271 L 614, 274 L 617, 274 L 618, 271 L 624, 268 L 626, 270 L 623, 276 L 615, 283 L 603, 287 z"]}], 
location4_11115:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]}], 
location5_11115:[{paths:["M 456, 322 L 460, 334 L 456, 346 L 459, 358 L 470, 369 L 479, 390 L 488, 397 L 509, 406 L 521, 406 L 527, 404 L 539, 406 L 563, 401 L 564, 398 L 573, 395 L 575, 392 L 572, 386 L 551, 367 L 548, 358 L 544, 352 L 543, 349 L 545, 337 L 554, 322 L 552, 316 L 546, 311 L 528, 305 L 522, 305 L 513, 302 L 507, 304 L 501, 303 L 492, 305 L 480, 305 L 474, 307 L 462, 315 L 457, 321 z"]}], location6_11115:[{paths:["M 541, 346 L 542, 352 L 551, 370 L 572, 389 L 572, 392 L 563, 397 L 562, 400 L 564, 403 L 570, 405 L 609, 402 L 618, 399 L 624, 395 L 640, 378 L 643, 377 L 649, 371 L 655, 359 L 653, 353 L 640, 338 L 636, 329 L 627, 323 L 615, 321 L 606, 313 L 597, 311 L 591, 307 L 570, 307 L 567, 305 L 561, 305 L 543, 309 L 543, 312 L 551, 319 L 550, 325 L 544, 334 L 543, 343 z"]}], 
location7_11115:[{paths:["M 755, 379 L 769, 367 L 775, 364 L 776, 358 L 773, 355 L 774, 352 L 772, 346 L 774, 340 L 788, 329 L 809, 321 L 836, 325 L 857, 332 L 863, 336 L 893, 346 L 898, 351 L 897, 354 L 888, 355 L 882, 360 L 876, 378 L 876, 390 L 871, 396 L 862, 402 L 835, 393 L 823, 392 L 805, 386 L 796, 386 L 781, 382 L 757, 380 z"]}], location8_11115:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], 
location9_11115:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], location1_3339:[{paths:["M 276,332 L277,344 L280,350 L285,356 L291,357 L306,369 L312,372 L327,372 L339,377 L360,378 L369,383 L372,383 L378,389 L390,394 L411,384 L419,376 L419,373 L429,361 L429,355 L425,349 L434,325 L438,301 L434,289 L431,288 L421,277 L418,276 L412,270 L400,265 L379,263 L373,267 L361,268 L347,279 L338,281 L333,286 L330,295 L324,298 L303,302 L297,305 L277,328 L277,331 z"]}], 
location10_3339:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_3339:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_3339:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_3339:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_3339:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_3339:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_3339:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_3339:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_3339:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_3339:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}], 
location3_3339:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 632, 311 L 637, 316 L 643, 317 L 652, 324 L 659, 318 L 657, 315 L 658, 312 L 661, 312 L 667, 317 L 670, 322 L 669, 328 L 671, 331 L 677, 333 L 677, 336 L 680, 338 L 676, 341 L 678, 347 L 676, 350 L 669, 346 L 657, 349 L 658, 358 L 656, 364 L 660, 369 L 663, 369 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 657, 399 L 660, 398 L 660, 395 L 666, 395 L 669, 393 L 673, 387 L 673, 382 L 678, 385 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 707, 383 L 715, 378 L 720, 369 L 726, 365 L 740, 351 L 755, 363 L 766, 348 L 766, 344 L 772, 340 L 769, 331 L 770, 328 L 773, 329 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 307 L 787, 302 L 793, 298 L 794, 295 L 782, 287 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 790, 280 L 791, 283 L 794, 284 L 804, 276 L 804, 273 L 796, 265 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 607, 229 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}], 
location4_3339:[{paths:["M 198, 369 L 202, 381 L 198, 393 L 201, 405 L 213, 416 L 222, 437 L 228, 443 L 255, 453 L 270, 450 L 279, 452 L 297, 448 L 309, 450 L 330, 450 L 360, 445 L 366, 441 L 381, 424 L 387, 421 L 394, 413 L 396, 404 L 396, 401 L 388, 392 L 379, 389 L 361, 377 L 340, 377 L 322, 370 L 304, 370 L 295, 368 L 271, 352 L 265, 350 L 244, 349 L 238, 351 L 223, 351 L 214, 354 L 205, 360 L 199, 368 z"]}], location5_3339:[{paths:["M 443, 329 L 449, 320 L 461, 312 L 470, 309 L 497, 308 L 500, 306 L 512, 310 L 518, 310 L 527, 314 L 539, 311 L 566, 311 L 575, 315 L 579, 321 L 578, 324 L 570, 331 L 561, 334 L 555, 346 L 546, 351 L 538, 360 L 537, 363 L 542, 372 L 543, 381 L 549, 390 L 549, 393 L 544, 405 L 529, 410 L 517, 408 L 499, 411 L 493, 409 L 475, 402 L 466, 393 L 461, 381 L 456, 384 L 451, 380 L 450, 374 L 453, 372 L 454, 369 L 448, 365 L 444, 353 L 448, 341 L 445, 332 z"]}], 
location6_3339:[{paths:["M 543, 362 L 547, 368 L 553, 368 L 558, 373 L 549, 380 L 550, 383 L 553, 385 L 574, 387 L 586, 395 L 595, 398 L 604, 396 L 625, 396 L 631, 394 L 636, 390 L 635, 384 L 646, 374 L 650, 362 L 665, 351 L 668, 345 L 666, 342 L 669, 339 L 669, 336 L 663, 331 L 645, 326 L 585, 325 L 579, 327 L 567, 335 L 570, 340 L 568, 346 L 559, 348 L 550, 353 L 547, 355 L 544, 361 z"]}], location7_3339:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_3339:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_3339:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location11_33546:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location14_33546:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location1_3447:[{paths:["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]}], 
location10_3447:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_3447:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_3447:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_3447:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_3447:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_3447:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_3447:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_3447:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_3447:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_3447:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]}], 
location3_3447:[{paths:["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]}], 
location4_3447:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}], 
location5_3447:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}], location6_3447:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}], 
location7_3447:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_3447:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_3447:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location1_3456:[{paths:["M 225, 350 L 231, 349 L 229, 358 L 231, 360 L 237, 359 L 243, 354 L 248, 345 L 257, 339 L 263, 333 L 264, 330 L 273, 327 L 276, 328 L 278, 331 L 278, 337 L 284, 349 L 287, 352 L 296, 355 L 304, 366 L 310, 362 L 316, 353 L 317, 347 L 328, 338 L 339, 350 L 343, 359 L 360, 377 L 363, 378 L 371, 372 L 377, 372 L 383, 376 L 402, 396 L 408, 396 L 414, 400 L 413, 397 L 422, 396 L 425, 393 L 431, 392 L 432, 390 L 426, 388 L 429, 386 L 427, 383 L 428, 380 L 425, 378 L 426, 376 L 432, 379 L 435, 378 L 436, 372 L 430, 368 L 427, 368 L 422, 362 L 423, 359 L 426, 358 L 423, 356 L 422, 353 L 434, 357 L 438, 349 L 441, 348 L 443, 354 L 446, 356 L 449, 355 L 449, 346 L 452, 344 L 457, 350 L 460, 351 L 468, 346 L 469, 340 L 472, 342 L 478, 342 L 477, 336 L 471, 332 L 467, 323 L 467, 317 L 473, 317 L 472, 311 L 478, 310 L 470, 303 L 476, 301 L 464, 299 L 458, 294 L 452, 292 L 443, 286 L 439, 280 L 438, 274 L 429, 262 L 414, 250 L 409, 241 L 403, 235 L 381, 220 L 372, 226 L 370, 232 L 364, 241 L 358, 246 L 348, 264 L 342, 270 L 339, 276 L 330, 281 L 322, 290 L 319, 299 L 295, 282 L 290, 288 L 287, 289 L 286, 292 L 277, 299 L 272, 308 L 260, 320 L 251, 323 L 241, 338 L 238, 338 L 234, 344 L 228, 348 z"]}], 
location10_3456:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_3456:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_3456:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_3456:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_3456:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_3456:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_3456:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_3456:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_3456:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_3456:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}], 
location3_3456:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}], 
location4_3456:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]}], 
location5_3456:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}], location6_3456:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}], 
location7_3456:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_3456:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_3456:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location1_3546:[{paths:["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 292, 354 L 293, 357 L 299, 360 L 301, 363 L 298, 366 L 310, 366 L 319, 371 L 331, 371 L 334, 368 L 343, 367 L 338, 358 L 344, 358 L 350, 361 L 356, 361 L 368, 365 L 371, 363 L 380, 362 L 386, 364 L 386, 367 L 389, 369 L 401, 367 L 406, 372 L 418, 373 L 422, 369 L 428, 369 L 429, 367 L 423, 362 L 426, 360 L 435, 360 L 438, 354 L 447, 359 L 449, 353 L 452, 351 L 455, 353 L 461, 353 L 464, 351 L 464, 348 L 479, 341 L 474, 340 L 474, 331 L 471, 326 L 480, 329 L 482, 327 L 482, 324 L 481, 321 L 475, 319 L 472, 316 L 470, 310 L 473, 309 L 468, 303 L 450, 288 L 447, 287 L 435, 294 L 426, 285 L 406, 252 L 400, 248 L 380, 268 L 374, 263 L 368, 254 L 359, 245 L 347, 238 L 328, 255 L 326, 261 L 319, 269 L 313, 270 L 308, 275 L 305, 276 L 298, 284 L 296, 290 L 293, 293 L 290, 293 L 286, 299 L 283, 301 L 277, 301 L 262, 311 L 253, 314 L 247, 323 L 235, 331 z"]}], 
location10_3546:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_3546:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_3546:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_3546:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_3546:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_3546:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_3546:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_3546:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_3546:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_3546:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}], 
location3_3546:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}], 
location4_3546:[{paths:["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]}], 
location5_3546:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}], location6_3546:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}], 
location7_3546:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_3546:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_3546:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location4_3547:[{paths:["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]}], 
location1_4347:[{paths:["M 231, 333 L 240, 334 L 255, 339 L 264, 345 L 270, 344 L 276, 346 L 276, 349 L 279, 351 L 284, 347 L 287, 348 L 298, 343 L 298, 346 L 293, 351 L 293, 357 L 299, 360 L 308, 360 L 308, 365 L 317, 370 L 331, 366 L 331, 363 L 337, 362 L 339, 357 L 342, 359 L 357, 361 L 369, 365 L 372, 363 L 381, 362 L 387, 365 L 387, 368 L 390, 369 L 399, 367 L 402, 368 L 407, 373 L 416, 373 L 419, 372 L 420, 369 L 429, 369 L 424, 361 L 433, 361 L 439, 353 L 445, 358 L 448, 358 L 450, 352 L 462, 353 L 465, 350 L 465, 347 L 477, 343 L 479, 340 L 473, 339 L 474, 330 L 471, 328 L 472, 326 L 481, 329 L 483, 323 L 480, 320 L 474, 318 L 469, 312 L 472, 308 L 470, 305 L 452, 289 L 446, 288 L 437, 294 L 434, 293 L 428, 287 L 405, 251 L 399, 249 L 391, 257 L 388, 258 L 382, 267 L 379, 268 L 370, 256 L 358, 244 L 349, 238 L 346, 239 L 327, 256 L 327, 259 L 318, 270 L 312, 270 L 307, 276 L 304, 276 L 295, 291 L 289, 294 L 288, 297 L 282, 301 L 279, 299 L 270, 307 L 267, 307 L 258, 313 L 252, 315 L 246, 324 L 234, 331 z"]}], 
location10_4347:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_4347:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_4347:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_4347:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_4347:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_4347:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_4347:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_4347:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_4347:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_4347:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]}], 
location3_4347:[{paths:["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]}], 
location4_4347:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}], 
location5_4347:[{paths:["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]}], 
location6_4347:[{paths:["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]}], location7_4347:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_4347:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_4347:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location1_4356:[{paths:["M 225, 350 L 231, 346 L 238, 337 L 241, 337 L 248, 325 L 260, 320 L 274, 305 L 274, 302 L 286, 292 L 287, 289 L 295, 282 L 316, 298 L 319, 297 L 319, 294 L 326, 285 L 332, 279 L 338, 276 L 341, 270 L 347, 264 L 358, 246 L 370, 232 L 374, 223 L 377, 223 L 382, 219 L 409, 240 L 416, 252 L 434, 267 L 438, 273 L 441, 282 L 444, 285 L 447, 286 L 453, 292 L 465, 298 L 474, 300 L 473, 303 L 470, 304 L 479, 308 L 478, 310 L 475, 311 L 475, 314 L 473, 316 L 467, 319 L 469, 328 L 476, 336 L 476, 342 L 470, 340 L 468, 342 L 469, 345 L 463, 348 L 451, 344 L 451, 353 L 448, 355 L 445, 355 L 442, 349 L 439, 348 L 436, 354 L 433, 355 L 427, 355 L 424, 352 L 422, 353 L 426, 359 L 423, 360 L 423, 363 L 435, 371 L 436, 377 L 430, 379 L 424, 376 L 428, 380 L 427, 383 L 430, 389 L 433, 390 L 432, 392 L 423, 396 L 423, 399 L 417, 397 L 417, 400 L 414, 401 L 408, 396 L 399, 392 L 378, 372 L 372, 371 L 363, 378 L 360, 377 L 343, 360 L 341, 354 L 332, 342 L 326, 339 L 322, 344 L 319, 345 L 317, 351 L 306, 365 L 303, 365 L 302, 362 L 296, 356 L 287, 353 L 284, 350 L 279, 341 L 277, 329 L 274, 327 L 265, 330 L 258, 339 L 249, 345 L 244, 354 L 238, 359 L 232, 360 L 229, 355 L 231, 352 L 229, 350 L 226, 351 z"]}], 
location10_4356:[{paths:["M 661, 425 L 663, 422 L 669, 419 L 702, 408 L 709, 400 L 721, 396 L 726, 391 L 732, 390 L 768, 389 L 771, 387 L 777, 390 L 789, 388 L 816, 391 L 837, 396 L 846, 403 L 844, 421 L 827, 434 L 820, 455 L 818, 458 L 812, 460 L 811, 472 L 805, 473 L 802, 476 L 772, 478 L 751, 474 L 742, 477 L 727, 477 L 712, 472 L 709, 469 L 703, 473 L 697, 472 L 691, 469 L 689, 466 L 697, 466 L 698, 463 L 695, 460 L 680, 455 L 672, 447 L 677, 438 L 677, 435 L 671, 430 L 662, 426 z"]}], location11_4356:[{paths:["M 834, 468 L 836, 474 L 842, 479 L 848, 480 L 854, 486 L 860, 486 L 875, 493 L 881, 491 L 887, 492 L 893, 489 L 920, 493 L 935, 491 L 959, 484 L 1001, 479 L 1008, 470 L 1035, 458 L 1050, 448 L 1050, 445 L 1048, 442 L 1042, 440 L 1027, 438 L 1024, 426 L 1017, 418 L 1008, 417 L 1002, 413 L 996, 413 L 990, 407 L 978, 409 L 969, 408 L 966, 406 L 961, 397 L 952, 393 L 940, 393 L 931, 396 L 919, 396 L 913, 394 L 907, 397 L 889, 396 L 883, 398 L 874, 410 L 872, 422 L 864, 430 L 858, 434 L 855, 434 L 844, 442 L 842, 457 L 835, 466 z"]}], 
location12_4356:[{paths:["M 166, 611 L 166, 620 L 169, 621 L 181, 620 L 184, 622 L 187, 621 L 196, 623 L 201, 619 L 204, 619 L 205, 622 L 203, 625 L 206, 627 L 215, 625 L 224, 630 L 233, 630 L 235, 628 L 244, 627 L 246, 625 L 237, 618 L 238, 615 L 247, 617 L 259, 616 L 264, 625 L 270, 627 L 279, 621 L 282, 615 L 297, 619 L 306, 617 L 318, 619 L 319, 617 L 313, 614 L 307, 608 L 308, 602 L 310, 600 L 322, 598 L 328, 600 L 328, 597 L 319, 591 L 319, 585 L 324, 580 L 333, 582 L 344, 577 L 336, 569 L 321, 564 L 312, 555 L 306, 552 L 297, 544 L 291, 548 L 276, 538 L 267, 526 L 259, 511 L 256, 508 L 253, 508 L 235, 524 L 220, 531 L 212, 539 L 209, 545 L 204, 566 L 198, 575 L 195, 577 L 193, 583 L 187, 592 L 177, 603 L 171, 606 L 169, 609 z"]}], 
location13_4356:[{paths:["M 332, 540 L 338, 531 L 341, 531 L 352, 525 L 351, 519 L 357, 514 L 360, 509 L 366, 505 L 375, 507 L 379, 501 L 391, 495 L 392, 489 L 395, 487 L 395, 481 L 383, 490 L 374, 487 L 371, 481 L 377, 476 L 386, 474 L 387, 472 L 385, 469 L 391, 464 L 394, 466 L 396, 472 L 402, 474 L 407, 471 L 409, 474 L 411, 480 L 408, 486 L 412, 492 L 411, 495 L 408, 496 L 412, 502 L 418, 501 L 424, 503 L 436, 497 L 439, 491 L 433, 487 L 436, 481 L 435, 472 L 430, 467 L 433, 458 L 436, 455 L 439, 455 L 447, 467 L 443, 472 L 451, 484 L 451, 487 L 456, 492 L 465, 491 L 468, 494 L 469, 503 L 464, 508 L 467, 509 L 469, 506 L 472, 507 L 475, 516 L 470, 521 L 464, 517 L 458, 519 L 456, 522 L 447, 527 L 447, 533 L 450, 536 L 456, 533 L 462, 537 L 471, 532 L 480, 531 L 481, 528 L 490, 523 L 493, 523 L 499, 516 L 505, 517 L 508, 519 L 513, 531 L 518, 537 L 519, 543 L 522, 545 L 528, 554 L 522, 560 L 516, 562 L 515, 559 L 512, 558 L 510, 555 L 513, 550 L 504, 553 L 502, 556 L 496, 555 L 487, 562 L 483, 557 L 477, 555 L 471, 557 L 462, 550 L 460, 553 L 457, 554 L 456, 560 L 450, 563 L 444, 558 L 447, 549 L 446, 546 L 443, 548 L 440, 547 L 437, 553 L 428, 558 L 422, 557 L 414, 564 L 412, 567 L 412, 573 L 406, 575 L 406, 578 L 404, 580 L 389, 584 L 382, 577 L 384, 574 L 393, 568 L 396, 570 L 399, 569 L 399, 563 L 396, 562 L 384, 571 L 381, 569 L 378, 570 L 376, 573 L 367, 577 L 365, 580 L 360, 576 L 357, 576 L 349, 583 L 346, 583 L 340, 578 L 342, 569 L 344, 566 L 347, 565 L 353, 570 L 356, 568 L 357, 562 L 351, 562 L 345, 557 L 344, 554 L 352, 547 L 364, 552 L 367, 550 L 364, 547 L 364, 541 L 358, 539 L 349, 543 L 347, 546 L 344, 547 L 341, 552 L 338, 550 L 337, 544 L 334, 543 z"]}], 
location14_4356:[{paths:["M 522, 581 L 523, 575 L 530, 566 L 536, 562 L 554, 555 L 560, 556 L 575, 553 L 593, 556 L 605, 555 L 620, 560 L 626, 565 L 638, 570 L 659, 585 L 659, 591 L 669, 606 L 666, 624 L 650, 645 L 644, 649 L 608, 648 L 599, 645 L 593, 645 L 575, 649 L 566, 655 L 560, 653 L 548, 643 L 540, 625 L 529, 615 L 527, 606 L 529, 600 L 524, 591 L 523, 582 z"]}], location15_4356:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_4356:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_4356:[{paths:["M 538, 675 L 541, 693 L 552, 704 L 557, 713 L 563, 719 L 581, 727 L 611, 735 L 629, 735 L 638, 731 L 640, 719 L 637, 710 L 643, 706 L 655, 705 L 664, 698 L 670, 699 L 676, 697 L 680, 688 L 689, 683 L 691, 680 L 691, 674 L 689, 671 L 677, 664 L 668, 656 L 653, 650 L 641, 646 L 614, 647 L 596, 643 L 569, 650 L 561, 658 L 549, 662 L 543, 666 L 540, 672 z"]}], location18_4356:[{paths:["M 614, 559 L 623, 557 L 659, 558 L 695, 570 L 701, 570 L 710, 574 L 719, 574 L 737, 581 L 763, 604 L 765, 607 L 764, 610 L 767, 613 L 779, 616 L 788, 623 L 792, 632 L 805, 647 L 806, 653 L 804, 659 L 793, 670 L 790, 671 L 773, 689 L 764, 694 L 743, 695 L 737, 697 L 722, 697 L 710, 694 L 695, 698 L 686, 698 L 683, 696 L 680, 697 L 677, 695 L 677, 692 L 680, 687 L 689, 681 L 688, 672 L 682, 667 L 676, 665 L 667, 656 L 649, 651 L 646, 649 L 645, 646 L 650, 642 L 650, 639 L 659, 632 L 665, 623 L 664, 620 L 667, 608 L 665, 602 L 658, 593 L 658, 587 L 637, 571 L 625, 566 L 616, 560 z"]}], 
location2_4356:[{paths:["M 451, 228 L 463, 242 L 469, 246 L 472, 247 L 481, 241 L 482, 244 L 474, 251 L 480, 255 L 483, 261 L 483, 264 L 480, 267 L 478, 273 L 475, 276 L 466, 272 L 460, 274 L 455, 279 L 456, 282 L 461, 286 L 458, 292 L 461, 294 L 473, 293 L 476, 295 L 482, 291 L 488, 292 L 489, 298 L 500, 304 L 502, 298 L 508, 294 L 511, 294 L 517, 298 L 526, 296 L 535, 300 L 538, 299 L 543, 295 L 536, 283 L 541, 278 L 539, 275 L 541, 272 L 538, 266 L 547, 269 L 550, 272 L 552, 281 L 544, 288 L 548, 294 L 554, 297 L 557, 294 L 569, 292 L 578, 297 L 587, 293 L 593, 293 L 611, 299 L 623, 294 L 626, 292 L 626, 289 L 629, 289 L 633, 294 L 638, 290 L 639, 287 L 642, 286 L 642, 283 L 637, 277 L 631, 273 L 633, 270 L 629, 255 L 617, 247 L 605, 249 L 603, 246 L 616, 236 L 616, 227 L 613, 224 L 607, 224 L 603, 230 L 589, 238 L 586, 238 L 583, 236 L 583, 233 L 589, 230 L 589, 227 L 586, 224 L 577, 221 L 568, 228 L 559, 226 L 553, 214 L 550, 217 L 546, 229 L 552, 233 L 549, 235 L 543, 234 L 537, 238 L 534, 233 L 528, 228 L 522, 227 L 514, 234 L 511, 243 L 496, 238 L 498, 232 L 490, 225 L 484, 222 L 472, 226 L 469, 223 L 460, 221 L 452, 227 z"]}], 
location3_4356:[{paths:["M 649, 283 L 652, 280 L 673, 272 L 688, 262 L 697, 259 L 706, 261 L 712, 257 L 730, 256 L 760, 262 L 770, 277 L 772, 283 L 781, 290 L 782, 302 L 776, 311 L 767, 317 L 755, 319 L 754, 322 L 769, 335 L 769, 341 L 754, 347 L 727, 347 L 703, 341 L 688, 335 L 676, 328 L 656, 301 L 650, 286 z"]}], location4_4356:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 214, 425 L 217, 425 L 218, 421 L 224, 416 L 236, 425 L 254, 446 L 257, 446 L 263, 437 L 269, 434 L 270, 431 L 276, 427 L 282, 432 L 292, 447 L 294, 453 L 303, 455 L 309, 452 L 315, 453 L 319, 447 L 322, 446 L 313, 443 L 312, 441 L 315, 441 L 319, 438 L 325, 438 L 326, 441 L 332, 442 L 344, 442 L 350, 438 L 356, 437 L 355, 434 L 347, 426 L 368, 433 L 380, 432 L 382, 435 L 385, 433 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 399, 427 L 402, 426 L 399, 425 L 398, 422 L 404, 422 L 413, 425 L 416, 423 L 419, 424 L 422, 423 L 423, 420 L 421, 414 L 427, 413 L 422, 408 L 418, 412 L 416, 409 L 417, 407 L 420, 407 L 410, 398 L 401, 394 L 390, 382 L 378, 372 L 372, 371 L 363, 378 L 360, 376 L 343, 359 L 341, 353 L 329, 338 L 318, 346 L 317, 352 L 304, 366 L 295, 354 L 289, 353 L 283, 348 L 281, 342 L 278, 339 L 276, 327 L 273, 326 L 264, 330 L 260, 336 L 248, 345 L 241, 357 L 229, 360 L 221, 371 L 215, 374 L 209, 382 L 200, 387 L 191, 395 L 188, 394 L 185, 396 L 180, 402 L 177, 400 L 174, 402 z"]}], 
location5_4356:[{paths:["M 438, 372 L 440, 369 L 446, 366 L 455, 365 L 455, 359 L 450, 354 L 450, 351 L 452, 348 L 461, 344 L 467, 347 L 473, 346 L 476, 348 L 481, 354 L 480, 357 L 482, 366 L 485, 367 L 488, 364 L 491, 364 L 491, 358 L 500, 352 L 500, 346 L 502, 343 L 497, 340 L 499, 334 L 498, 331 L 500, 328 L 495, 323 L 495, 314 L 489, 315 L 480, 307 L 481, 304 L 487, 300 L 493, 298 L 499, 300 L 501, 297 L 507, 294 L 513, 294 L 519, 297 L 525, 295 L 534, 299 L 546, 296 L 558, 303 L 561, 302 L 570, 309 L 570, 312 L 567, 312 L 562, 317 L 562, 323 L 556, 326 L 569, 344 L 569, 347 L 566, 349 L 570, 355 L 566, 361 L 566, 367 L 563, 373 L 575, 389 L 568, 399 L 565, 397 L 562, 398 L 560, 401 L 552, 398 L 551, 400 L 559, 412 L 550, 421 L 543, 414 L 546, 408 L 543, 405 L 537, 405 L 533, 400 L 524, 405 L 524, 411 L 521, 414 L 512, 411 L 511, 417 L 508, 416 L 507, 413 L 489, 405 L 484, 409 L 478, 405 L 484, 393 L 484, 390 L 481, 387 L 478, 387 L 476, 390 L 477, 393 L 471, 403 L 468, 400 L 468, 397 L 465, 398 L 462, 395 L 465, 390 L 464, 387 L 461, 386 L 459, 383 L 450, 381 L 441, 375 z"]}], 
location6_4356:[{paths:["M 554, 326 L 568, 344 L 567, 347 L 564, 349 L 568, 355 L 562, 373 L 565, 379 L 573, 387 L 573, 393 L 568, 399 L 566, 405 L 566, 411 L 569, 414 L 575, 412 L 576, 409 L 573, 403 L 575, 401 L 578, 402 L 580, 405 L 583, 405 L 585, 402 L 588, 401 L 590, 403 L 589, 406 L 597, 414 L 600, 414 L 601, 408 L 604, 406 L 604, 397 L 598, 393 L 595, 395 L 592, 394 L 584, 387 L 599, 380 L 608, 388 L 607, 394 L 613, 396 L 619, 401 L 633, 390 L 633, 387 L 638, 382 L 637, 379 L 639, 376 L 642, 378 L 645, 376 L 646, 385 L 652, 387 L 654, 390 L 652, 396 L 657, 400 L 660, 402 L 661, 399 L 667, 396 L 668, 393 L 661, 384 L 655, 381 L 654, 375 L 663, 372 L 663, 381 L 666, 381 L 668, 383 L 668, 386 L 671, 387 L 676, 379 L 677, 370 L 673, 364 L 675, 358 L 681, 353 L 681, 350 L 678, 341 L 676, 338 L 673, 337 L 672, 340 L 666, 345 L 663, 345 L 667, 339 L 658, 334 L 653, 325 L 653, 322 L 650, 319 L 646, 324 L 644, 330 L 641, 326 L 641, 320 L 635, 317 L 632, 318 L 631, 315 L 622, 309 L 615, 309 L 612, 310 L 605, 318 L 596, 322 L 595, 325 L 597, 331 L 600, 330 L 609, 332 L 608, 329 L 610, 326 L 613, 325 L 619, 330 L 622, 330 L 627, 338 L 632, 336 L 631, 333 L 628, 331 L 630, 325 L 629, 322 L 620, 325 L 611, 318 L 611, 315 L 616, 310 L 617, 304 L 611, 299 L 602, 299 L 590, 291 L 578, 297 L 566, 291 L 557, 296 L 556, 299 L 571, 309 L 571, 312 L 565, 312 L 562, 314 L 561, 323 L 555, 325 z"]}], 
location7_4356:[{paths:["M 781, 336 L 784, 354 L 804, 378 L 828, 388 L 846, 393 L 876, 394 L 882, 389 L 883, 377 L 880, 371 L 882, 368 L 888, 366 L 900, 366 L 901, 375 L 904, 378 L 913, 382 L 934, 387 L 952, 387 L 958, 385 L 961, 383 L 964, 374 L 959, 362 L 947, 354 L 920, 353 L 922, 347 L 914, 338 L 896, 324 L 894, 315 L 889, 306 L 883, 300 L 877, 297 L 859, 292 L 832, 290 L 811, 294 L 802, 298 L 799, 301 L 798, 307 L 799, 310 L 805, 315 L 804, 318 L 786, 326 L 782, 335 z"]}], location8_4356:[{paths:["M 144, 491 L 151, 482 L 160, 478 L 165, 472 L 170, 469 L 180, 454 L 186, 451 L 187, 448 L 193, 448 L 199, 442 L 204, 433 L 213, 426 L 223, 415 L 241, 429 L 252, 444 L 255, 446 L 261, 445 L 263, 451 L 262, 463 L 252, 472 L 251, 478 L 245, 487 L 243, 493 L 249, 511 L 236, 524 L 221, 532 L 212, 540 L 210, 543 L 207, 561 L 200, 573 L 194, 579 L 193, 585 L 190, 586 L 187, 580 L 181, 579 L 189, 570 L 187, 567 L 187, 561 L 172, 560 L 171, 557 L 174, 555 L 174, 552 L 168, 550 L 162, 551 L 160, 549 L 163, 547 L 169, 538 L 190, 525 L 190, 520 L 192, 517 L 190, 515 L 184, 515 L 178, 511 L 174, 505 L 168, 506 L 168, 503 L 156, 502 L 153, 500 L 154, 497 L 152, 494 L 146, 493 z"]}], 
location9_4356:[{paths:["M 242, 493 L 248, 508 L 257, 509 L 269, 530 L 272, 533 L 278, 533 L 281, 531 L 284, 534 L 279, 539 L 280, 541 L 292, 544 L 295, 543 L 298, 538 L 301, 538 L 304, 541 L 319, 536 L 322, 534 L 322, 531 L 324, 529 L 336, 530 L 339, 529 L 339, 526 L 345, 527 L 345, 524 L 353, 519 L 350, 517 L 348, 511 L 369, 511 L 372, 508 L 375, 509 L 375, 506 L 361, 492 L 361, 489 L 364, 487 L 365, 481 L 368, 479 L 380, 479 L 383, 477 L 392, 476 L 390, 473 L 384, 471 L 383, 468 L 386, 469 L 386, 466 L 371, 458 L 365, 449 L 356, 440 L 350, 437 L 345, 442 L 324, 451 L 314, 462 L 305, 465 L 302, 463 L 294, 451 L 284, 433 L 275, 427 L 261, 440 L 260, 443 L 263, 452 L 263, 461 L 252, 472 L 244, 490 z"]}], 
location1_4437:[{paths:["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]}], 
location10_4437:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_4437:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_4437:[{paths:["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]}], location13_4437:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], 
location14_4437:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_4437:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_4437:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_4437:[{paths:["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]}], 
location18_4437:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_4437:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 542, 218 L 566, 223 L 590, 225 L 614, 233 L 623, 240 L 629, 252 L 625, 261 L 631, 279 L 625, 284 L 624, 287 L 621, 287 L 617, 281 L 608, 279 L 584, 278 L 581, 279 L 583, 282 L 582, 285 L 579, 285 L 574, 280 L 571, 282 L 572, 285 L 581, 291 L 587, 297 L 588, 300 L 582, 306 L 573, 308 L 540, 307 L 507, 296 L 506, 302 L 503, 302 L 501, 296 L 489, 285 L 487, 279 L 478, 271 L 475, 271 L 473, 274 L 470, 268 L 473, 267 L 474, 264 L 473, 258 L 468, 246 z"]}], 
location3_4437:[{paths:["M 597, 227 L 612, 225 L 621, 219 L 633, 215 L 636, 216 L 663, 214 L 675, 216 L 684, 215 L 690, 217 L 726, 217 L 744, 219 L 774, 230 L 780, 230 L 786, 233 L 798, 233 L 810, 239 L 816, 240 L 825, 247 L 829, 253 L 844, 265 L 844, 271 L 839, 276 L 821, 280 L 806, 280 L 770, 312 L 761, 317 L 753, 328 L 750, 327 L 748, 324 L 727, 337 L 724, 337 L 709, 345 L 691, 350 L 679, 346 L 672, 328 L 666, 323 L 660, 322 L 663, 328 L 662, 331 L 659, 333 L 650, 332 L 647, 329 L 653, 320 L 651, 317 L 636, 311 L 627, 302 L 624, 293 L 625, 284 L 631, 279 L 630, 273 L 624, 261 L 628, 255 L 626, 246 L 623, 240 L 614, 233 L 599, 229 z"]}], 
location4_4437:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}], 
location5_4437:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}], location6_4437:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}], 
location7_4437:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_4437:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_4437:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location1_4446:[{paths:["M 271, 323 L 271, 326 L 274, 326 L 277, 329 L 278, 338 L 283, 344 L 292, 341 L 293, 347 L 291, 350 L 301, 359 L 304, 359 L 305, 356 L 317, 350 L 317, 347 L 328, 338 L 342, 353 L 343, 359 L 349, 357 L 354, 363 L 357, 363 L 359, 365 L 356, 369 L 358, 371 L 367, 374 L 370, 373 L 372, 370 L 378, 372 L 387, 380 L 390, 381 L 401, 393 L 407, 395 L 415, 402 L 421, 401 L 430, 404 L 434, 413 L 436, 411 L 435, 408 L 440, 405 L 448, 408 L 449, 411 L 455, 414 L 458, 418 L 468, 410 L 468, 407 L 465, 404 L 456, 399 L 458, 396 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 463, 373 L 460, 373 L 460, 370 L 465, 367 L 466, 364 L 472, 358 L 469, 340 L 475, 338 L 476, 332 L 464, 326 L 467, 324 L 469, 316 L 477, 312 L 477, 309 L 471, 303 L 475, 295 L 481, 293 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 463, 265 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 255 L 454, 243 L 452, 249 L 449, 251 L 446, 249 L 443, 250 L 438, 245 L 441, 244 L 442, 241 L 439, 238 L 433, 237 L 428, 242 L 430, 245 L 427, 247 L 421, 245 L 415, 247 L 412, 250 L 411, 256 L 408, 257 L 407, 251 L 409, 246 L 400, 242 L 395, 247 L 396, 250 L 399, 251 L 393, 254 L 390, 254 L 388, 251 L 385, 253 L 383, 262 L 381, 264 L 372, 261 L 363, 254 L 351, 258 L 349, 261 L 351, 264 L 360, 268 L 355, 271 L 350, 266 L 347, 268 L 344, 267 L 342, 269 L 328, 261 L 322, 262 L 319, 265 L 321, 270 L 318, 271 L 318, 274 L 324, 276 L 322, 279 L 325, 281 L 331, 279 L 331, 282 L 316, 283 L 315, 280 L 312, 279 L 310, 285 L 304, 285 L 295, 290 L 294, 293 L 297, 295 L 298, 298 L 292, 298 L 286, 302 L 285, 308 L 282, 307 L 279, 301 L 277, 302 L 273, 311 L 278, 318 L 276, 321 L 273, 322 z"]}], 
location10_4446:[{paths:["M 662, 422 L 668, 417 L 677, 415 L 680, 409 L 686, 407 L 690, 398 L 695, 392 L 706, 385 L 712, 388 L 722, 400 L 717, 405 L 720, 408 L 720, 414 L 726, 418 L 729, 416 L 731, 410 L 740, 408 L 748, 400 L 757, 396 L 769, 387 L 775, 381 L 778, 375 L 784, 371 L 785, 368 L 791, 363 L 800, 369 L 817, 399 L 825, 408 L 831, 411 L 840, 419 L 849, 421 L 858, 427 L 873, 427 L 873, 433 L 874, 436 L 877, 438 L 877, 441 L 872, 456 L 863, 457 L 857, 460 L 842, 459 L 842, 462 L 836, 467 L 832, 473 L 826, 475 L 814, 473 L 811, 479 L 808, 480 L 793, 476 L 802, 470 L 799, 468 L 793, 470 L 781, 470 L 780, 464 L 777, 465 L 775, 463 L 780, 458 L 778, 456 L 766, 464 L 745, 471 L 739, 471 L 737, 467 L 731, 465 L 728, 462 L 722, 466 L 710, 464 L 709, 459 L 706, 458 L 710, 452 L 708, 450 L 702, 451 L 693, 445 L 693, 442 L 689, 437 L 680, 439 L 677, 437 L 674, 438 L 669, 436 L 671, 432 L 669, 429 L 666, 430 L 663, 428 L 663, 425 z"]}], 
location11_4446:[{paths:["M 845, 415 L 851, 411 L 860, 409 L 865, 403 L 886, 389 L 889, 389 L 898, 383 L 904, 377 L 913, 362 L 931, 348 L 943, 362 L 943, 368 L 945, 371 L 948, 373 L 951, 370 L 954, 372 L 968, 396 L 977, 405 L 983, 407 L 989, 412 L 995, 408 L 1001, 414 L 1010, 419 L 1021, 430 L 1036, 434 L 1039, 437 L 1036, 442 L 1030, 444 L 1024, 442 L 1016, 448 L 1016, 454 L 1022, 459 L 1022, 461 L 1013, 464 L 1007, 462 L 1005, 464 L 1011, 473 L 1008, 476 L 1014, 480 L 1012, 482 L 1003, 479 L 1000, 479 L 998, 482 L 995, 482 L 986, 478 L 980, 478 L 977, 481 L 978, 484 L 967, 491 L 961, 487 L 959, 481 L 956, 479 L 947, 480 L 941, 477 L 935, 479 L 929, 478 L 927, 476 L 927, 472 L 925, 469 L 922, 466 L 916, 465 L 914, 468 L 923, 480 L 911, 480 L 905, 484 L 899, 483 L 894, 487 L 888, 485 L 879, 486 L 877, 483 L 874, 485 L 865, 485 L 863, 479 L 857, 481 L 854, 479 L 848, 480 L 858, 472 L 879, 462 L 880, 459 L 878, 457 L 878, 448 L 881, 445 L 882, 439 L 877, 434 L 877, 428 L 883, 423 L 886, 423 L 886, 420 L 877, 421 L 877, 418 L 875, 416 L 857, 415 L 848, 417 z"]}], 
location12_4446:[{paths:["M 181, 560 L 181, 566 L 195, 587 L 194, 590 L 199, 602 L 217, 611 L 217, 614 L 214, 617 L 217, 620 L 226, 620 L 229, 619 L 229, 616 L 232, 615 L 241, 617 L 243, 623 L 242, 626 L 247, 635 L 256, 638 L 271, 636 L 286, 630 L 313, 613 L 316, 613 L 320, 617 L 327, 606 L 342, 596 L 364, 575 L 363, 569 L 357, 564 L 348, 563 L 339, 557 L 333, 557 L 321, 547 L 309, 545 L 304, 539 L 283, 541 L 262, 540 L 247, 549 L 238, 549 L 226, 553 L 217, 558 L 196, 555 L 184, 558 z"]}], location13_4446:[{paths:["M 304, 539 L 328, 523 L 344, 508 L 353, 508 L 356, 506 L 374, 512 L 383, 512 L 395, 509 L 407, 511 L 413, 508 L 422, 508 L 440, 513 L 444, 519 L 440, 528 L 443, 531 L 445, 537 L 440, 549 L 419, 560 L 392, 568 L 377, 568 L 365, 575 L 364, 569 L 358, 564 L 346, 561 L 340, 557 L 334, 557 L 320, 546 L 311, 546 L 305, 540 z"]}], 
location14_4446:[{paths:["M 492, 546 L 494, 552 L 500, 553 L 500, 556 L 503, 557 L 504, 554 L 510, 552 L 509, 555 L 512, 557 L 506, 559 L 497, 565 L 497, 568 L 503, 572 L 506, 572 L 505, 576 L 507, 578 L 507, 584 L 513, 588 L 513, 591 L 519, 592 L 522, 590 L 527, 593 L 527, 596 L 523, 599 L 528, 603 L 526, 610 L 522, 610 L 522, 603 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 506, 626 L 510, 632 L 513, 632 L 512, 636 L 515, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 640 L 522, 646 L 528, 647 L 532, 638 L 547, 633 L 552, 638 L 560, 641 L 561, 647 L 567, 647 L 568, 650 L 571, 652 L 572, 650 L 570, 648 L 572, 645 L 575, 643 L 581, 646 L 587, 642 L 588, 639 L 586, 637 L 589, 634 L 601, 632 L 604, 633 L 607, 631 L 609, 634 L 618, 629 L 618, 626 L 624, 623 L 626, 620 L 622, 614 L 622, 605 L 618, 600 L 623, 596 L 617, 590 L 623, 585 L 613, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 559 L 610, 556 L 617, 550 L 617, 547 L 608, 540 L 599, 546 L 598, 549 L 600, 552 L 598, 553 L 594, 554 L 590, 548 L 581, 545 L 576, 550 L 577, 553 L 575, 555 L 569, 552 L 563, 555 L 560, 558 L 560, 561 L 565, 564 L 566, 567 L 563, 566 L 557, 569 L 554, 569 L 554, 563 L 551, 561 L 545, 561 L 537, 550 L 532, 558 L 530, 560 L 527, 560 L 524, 559 L 522, 556 L 524, 553 L 521, 550 L 512, 550 L 513, 547 L 511, 544 L 505, 540 L 496, 542 L 494, 545 z"]}], 
location15_4446:[{paths:["M 695, 524 L 695, 533 L 698, 542 L 703, 548 L 706, 548 L 706, 551 L 709, 553 L 733, 560 L 735, 563 L 737, 560 L 740, 561 L 741, 564 L 746, 560 L 752, 560 L 791, 573 L 800, 578 L 811, 587 L 817, 589 L 826, 589 L 838, 597 L 853, 597 L 871, 590 L 884, 579 L 896, 561 L 891, 552 L 897, 534 L 894, 516 L 868, 494 L 853, 490 L 844, 491 L 835, 489 L 832, 492 L 814, 492 L 781, 500 L 772, 504 L 757, 504 L 751, 502 L 730, 503 L 718, 501 L 703, 506 L 703, 518 L 697, 522 z"]}], location16_4446:[{paths:["M 323, 635 L 335, 635 L 338, 637 L 341, 646 L 340, 649 L 331, 653 L 332, 655 L 344, 656 L 347, 659 L 359, 664 L 360, 667 L 351, 670 L 347, 673 L 363, 671 L 378, 679 L 381, 679 L 387, 683 L 399, 687 L 402, 690 L 420, 695 L 420, 698 L 417, 700 L 417, 703 L 429, 699 L 450, 700 L 455, 703 L 455, 709 L 491, 705 L 497, 702 L 508, 691 L 511, 691 L 520, 683 L 529, 679 L 531, 676 L 527, 670 L 518, 667 L 520, 661 L 511, 659 L 512, 653 L 518, 650 L 510, 645 L 503, 636 L 510, 627 L 511, 624 L 509, 615 L 512, 609 L 518, 604 L 520, 598 L 519, 595 L 513, 594 L 504, 589 L 492, 578 L 490, 572 L 484, 567 L 475, 565 L 463, 559 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 434, 569 L 428, 572 L 419, 582 L 419, 585 L 417, 587 L 405, 589 L 399, 594 L 395, 600 L 392, 600 L 383, 608 L 380, 605 L 375, 610 L 369, 612 L 361, 620 L 337, 624 L 333, 629 L 327, 632 z"]}], 
location17_4446:[{paths:["M 516, 676 L 529, 665 L 528, 660 L 525, 661 L 522, 658 L 525, 655 L 525, 649 L 528, 647 L 532, 638 L 542, 633 L 544, 635 L 547, 634 L 556, 640 L 559, 640 L 561, 646 L 567, 647 L 571, 652 L 572, 650 L 570, 647 L 573, 644 L 576, 643 L 579, 646 L 588, 641 L 586, 638 L 590, 633 L 605, 633 L 607, 630 L 612, 642 L 617, 637 L 622, 649 L 617, 654 L 611, 652 L 616, 658 L 616, 661 L 610, 663 L 607, 669 L 604, 671 L 610, 677 L 610, 683 L 607, 689 L 608, 692 L 617, 693 L 623, 698 L 623, 701 L 617, 704 L 616, 707 L 613, 708 L 613, 705 L 608, 708 L 605, 708 L 604, 710 L 610, 710 L 616, 715 L 614, 721 L 611, 722 L 608, 726 L 598, 719 L 597, 713 L 595, 715 L 596, 718 L 588, 719 L 587, 722 L 584, 722 L 582, 719 L 576, 719 L 569, 725 L 566, 731 L 560, 733 L 560, 736 L 557, 737 L 547, 729 L 546, 723 L 543, 722 L 537, 724 L 537, 727 L 534, 726 L 535, 723 L 529, 721 L 530, 718 L 533, 716 L 531, 713 L 534, 703 L 531, 702 L 528, 703 L 527, 706 L 524, 705 L 524, 702 L 518, 701 L 516, 695 L 525, 689 L 531, 690 L 537, 687 L 533, 681 L 530, 682 L 529, 685 L 526, 685 L 525, 682 L 519, 679 z"]}], 
location18_4446:[{paths:["M 611, 685 L 617, 683 L 617, 668 L 620, 665 L 626, 663 L 631, 657 L 627, 633 L 627, 621 L 623, 612 L 623, 603 L 629, 595 L 630, 586 L 632, 583 L 640, 578 L 639, 575 L 636, 573 L 624, 571 L 623, 568 L 625, 565 L 623, 562 L 629, 559 L 631, 556 L 630, 550 L 633, 547 L 642, 549 L 660, 557 L 696, 562 L 708, 569 L 717, 572 L 722, 578 L 725, 579 L 727, 585 L 732, 590 L 738, 592 L 747, 592 L 771, 601 L 773, 604 L 769, 610 L 771, 616 L 780, 618 L 792, 618 L 793, 621 L 784, 625 L 783, 628 L 786, 634 L 789, 636 L 790, 645 L 787, 650 L 784, 650 L 772, 658 L 765, 667 L 756, 670 L 729, 687 L 727, 690 L 718, 692 L 712, 697 L 700, 701 L 682, 703 L 679, 705 L 664, 704 L 652, 699 L 631, 699 L 619, 691 L 616, 692 L 613, 690 L 613, 687 z"]}], 
location2_4446:[{paths:["M 468, 243 L 489, 235 L 495, 225 L 492, 224 L 489, 228 L 492, 233 L 500, 228 L 515, 222 L 524, 224 L 533, 219 L 551, 219 L 560, 222 L 572, 223 L 578, 226 L 577, 229 L 583, 234 L 587, 240 L 587, 243 L 599, 254 L 599, 263 L 591, 274 L 579, 280 L 582, 281 L 581, 284 L 579, 285 L 574, 280 L 571, 281 L 573, 287 L 579, 290 L 587, 298 L 588, 301 L 574, 308 L 541, 307 L 507, 296 L 505, 297 L 505, 301 L 503, 300 L 500, 294 L 491, 286 L 485, 277 L 476, 270 L 474, 272 L 472, 271 L 471, 268 L 474, 267 L 475, 264 L 469, 246 z"]}], 
location3_4446:[{paths:["M 602, 289 L 606, 295 L 609, 295 L 616, 301 L 618, 307 L 626, 314 L 628, 311 L 637, 311 L 637, 315 L 640, 315 L 649, 320 L 652, 323 L 652, 326 L 655, 327 L 646, 333 L 645, 336 L 653, 342 L 653, 347 L 657, 351 L 657, 354 L 663, 362 L 663, 368 L 659, 374 L 653, 375 L 647, 379 L 646, 382 L 649, 385 L 653, 394 L 656, 395 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 671, 390 L 673, 387 L 671, 384 L 673, 382 L 678, 385 L 678, 391 L 684, 392 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 380 L 705, 380 L 707, 383 L 708, 381 L 714, 379 L 719, 373 L 719, 370 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 771, 341 L 769, 329 L 775, 328 L 775, 325 L 783, 319 L 778, 313 L 779, 310 L 782, 310 L 783, 305 L 793, 298 L 794, 295 L 788, 290 L 782, 288 L 779, 289 L 777, 286 L 782, 283 L 780, 280 L 781, 278 L 787, 279 L 790, 281 L 791, 284 L 794, 284 L 797, 279 L 803, 277 L 804, 274 L 796, 265 L 797, 262 L 795, 259 L 786, 253 L 780, 246 L 774, 243 L 768, 246 L 768, 243 L 771, 238 L 774, 238 L 778, 242 L 779, 239 L 785, 236 L 787, 233 L 786, 230 L 777, 225 L 768, 230 L 767, 236 L 761, 232 L 755, 231 L 753, 225 L 745, 230 L 743, 225 L 734, 220 L 725, 225 L 721, 233 L 721, 237 L 713, 244 L 712, 242 L 716, 237 L 713, 225 L 706, 230 L 703, 228 L 697, 228 L 692, 236 L 686, 233 L 683, 234 L 675, 242 L 672, 239 L 673, 236 L 676, 234 L 675, 228 L 677, 226 L 674, 223 L 668, 222 L 662, 227 L 665, 229 L 663, 232 L 654, 232 L 648, 236 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 229 L 641, 235 L 651, 228 L 646, 222 L 640, 220 L 631, 225 L 627, 237 L 624, 237 L 618, 233 L 615, 235 L 611, 227 L 609, 228 L 605, 237 L 611, 245 L 617, 247 L 619, 250 L 620, 248 L 629, 243 L 635, 251 L 626, 249 L 621, 254 L 621, 258 L 615, 257 L 606, 262 L 604, 265 L 613, 271 L 613, 274 L 617, 274 L 617, 271 L 626, 269 L 624, 275 L 616, 283 L 607, 285 L 604, 288 z"]}], 
location4_4446:[{paths:["M 173, 404 L 175, 407 L 187, 406 L 188, 409 L 195, 414 L 194, 417 L 188, 421 L 199, 421 L 198, 427 L 201, 429 L 204, 430 L 219, 426 L 219, 429 L 212, 434 L 222, 433 L 224, 435 L 222, 439 L 229, 439 L 238, 435 L 238, 438 L 231, 443 L 239, 442 L 241, 445 L 250, 450 L 253, 448 L 257, 454 L 266, 454 L 272, 456 L 273, 459 L 276, 461 L 279, 461 L 282, 457 L 294, 455 L 297, 453 L 303, 455 L 306, 452 L 315, 453 L 316, 450 L 322, 446 L 310, 442 L 316, 440 L 317, 437 L 332, 442 L 338, 440 L 344, 442 L 350, 438 L 356, 438 L 358, 436 L 347, 427 L 349, 426 L 364, 433 L 379, 433 L 382, 435 L 385, 433 L 388, 434 L 394, 432 L 397, 434 L 403, 433 L 402, 431 L 399, 430 L 400, 427 L 403, 428 L 402, 422 L 396, 422 L 399, 425 L 406, 422 L 409, 424 L 418, 424 L 421, 423 L 423, 420 L 418, 411 L 415, 409 L 416, 407 L 419, 407 L 421, 405 L 409, 397 L 403, 396 L 380, 373 L 374, 371 L 368, 373 L 363, 378 L 360, 376 L 342, 359 L 341, 353 L 329, 338 L 318, 346 L 315, 355 L 304, 366 L 294, 354 L 285, 351 L 281, 342 L 278, 339 L 277, 330 L 275, 327 L 265, 330 L 261, 336 L 249, 344 L 242, 356 L 227, 362 L 224, 368 L 215, 374 L 210, 382 L 201, 386 L 193, 394 L 187, 395 L 179, 403 L 176, 400 L 174, 403 z"]}], 
location5_4446:[{paths:["M 465, 372 L 467, 378 L 479, 383 L 488, 391 L 497, 391 L 512, 396 L 521, 405 L 530, 411 L 536, 409 L 548, 409 L 563, 403 L 578, 403 L 602, 393 L 611, 393 L 641, 383 L 617, 383 L 608, 381 L 572, 382 L 548, 374 L 538, 362 L 538, 347 L 534, 341 L 528, 338 L 522, 332 L 522, 329 L 510, 335 L 492, 340 L 489, 339 L 483, 343 L 480, 346 L 479, 355 L 474, 361 L 468, 365 L 466, 371 z"]}], location6_4446:[{paths:["M 523, 330 L 527, 336 L 536, 342 L 538, 345 L 539, 348 L 537, 351 L 537, 357 L 541, 366 L 550, 374 L 556, 375 L 562, 379 L 568, 381 L 604, 380 L 616, 383 L 634, 381 L 640, 383 L 655, 379 L 658, 376 L 658, 370 L 654, 361 L 656, 355 L 644, 345 L 642, 330 L 639, 324 L 633, 318 L 627, 316 L 615, 316 L 609, 313 L 600, 315 L 591, 313 L 576, 313 L 564, 318 L 558, 318 L 552, 322 L 534, 325 L 525, 329 z"]}], 
location7_4446:[{paths:["M 708, 386 L 711, 387 L 722, 399 L 721, 402 L 718, 404 L 720, 407 L 720, 413 L 726, 418 L 731, 410 L 737, 409 L 746, 403 L 750, 398 L 756, 396 L 768, 388 L 774, 382 L 777, 376 L 785, 369 L 786, 366 L 792, 362 L 798, 366 L 820, 402 L 826, 408 L 838, 416 L 859, 409 L 867, 401 L 885, 389 L 888, 389 L 897, 383 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 886, 351 L 880, 349 L 876, 337 L 869, 328 L 854, 317 L 849, 311 L 847, 305 L 841, 299 L 835, 297 L 821, 284 L 810, 291 L 808, 297 L 798, 309 L 786, 330 L 780, 335 L 774, 343 L 771, 343 L 758, 358 L 758, 364 L 740, 351 L 730, 362 L 721, 369 L 711, 384 z"]}], 
location8_4446:[{paths:["M 153, 487 L 156, 499 L 160, 505 L 174, 519 L 174, 522 L 171, 525 L 173, 543 L 171, 545 L 168, 545 L 168, 548 L 170, 551 L 174, 549 L 174, 552 L 179, 561 L 182, 558 L 194, 555 L 218, 557 L 227, 552 L 239, 548 L 248, 548 L 263, 540 L 281, 541 L 284, 540 L 284, 534 L 296, 528 L 299, 522 L 297, 516 L 290, 507 L 278, 497 L 278, 491 L 242, 479 L 233, 474 L 221, 470 L 212, 469 L 200, 465 L 188, 465 L 176, 469 L 170, 473 L 167, 473 L 161, 477 L 155, 485 z"]}], location9_4446:[{paths:["M 247, 468 L 248, 474 L 255, 481 L 267, 487 L 276, 489 L 279, 492 L 278, 495 L 283, 501 L 289, 505 L 298, 517 L 299, 526 L 308, 525 L 317, 529 L 329, 522 L 339, 511 L 345, 508 L 360, 506 L 372, 511 L 384, 511 L 390, 509 L 408, 510 L 420, 506 L 419, 503 L 425, 499 L 431, 502 L 434, 499 L 432, 496 L 433, 493 L 430, 491 L 432, 488 L 431, 485 L 428, 483 L 407, 482 L 383, 468 L 359, 462 L 347, 461 L 344, 463 L 329, 463 L 317, 465 L 316, 468 L 310, 471 L 298, 471 L 295, 469 L 292, 470 L 277, 467 L 268, 467 L 265, 469 L 250, 467 z"]}], 
location1_4536:[{paths:["M 267, 340 L 278, 331 L 276, 328 L 273, 327 L 272, 324 L 278, 319 L 273, 312 L 278, 300 L 281, 303 L 283, 309 L 285, 307 L 285, 304 L 291, 299 L 297, 298 L 298, 296 L 295, 296 L 292, 293 L 286, 295 L 284, 298 L 281, 297 L 274, 290 L 274, 287 L 277, 284 L 286, 281 L 296, 290 L 302, 286 L 308, 287 L 311, 281 L 314, 280 L 317, 283 L 326, 284 L 332, 282 L 332, 279 L 321, 277 L 318, 275 L 320, 269 L 319, 266 L 321, 263 L 330, 262 L 342, 270 L 345, 267 L 351, 267 L 357, 271 L 360, 269 L 351, 265 L 349, 262 L 350, 259 L 362, 255 L 371, 261 L 380, 263 L 382, 262 L 385, 253 L 388, 249 L 391, 256 L 396, 251 L 394, 248 L 400, 243 L 409, 246 L 407, 252 L 410, 257 L 411, 251 L 414, 248 L 420, 245 L 429, 247 L 428, 244 L 432, 238 L 438, 238 L 441, 240 L 442, 243 L 440, 246 L 442, 249 L 448, 251 L 451, 250 L 455, 244 L 459, 256 L 457, 259 L 448, 264 L 449, 267 L 458, 263 L 464, 266 L 467, 269 L 469, 281 L 475, 284 L 481, 290 L 481, 293 L 478, 296 L 475, 296 L 471, 304 L 477, 310 L 478, 316 L 481, 319 L 483, 325 L 482, 331 L 486, 340 L 485, 343 L 479, 345 L 476, 344 L 472, 339 L 472, 357 L 469, 363 L 463, 369 L 469, 381 L 465, 393 L 456, 399 L 464, 404 L 468, 410 L 460, 417 L 457, 417 L 455, 414 L 452, 414 L 448, 408 L 442, 406 L 439, 406 L 435, 412 L 432, 412 L 428, 415 L 425, 410 L 422, 410 L 417, 404 L 413, 402 L 411, 396 L 412, 392 L 418, 392 L 420, 398 L 419, 402 L 416, 401 L 414, 396 L 409, 392 L 406, 395 L 395, 382 L 389, 383 L 388, 386 L 377, 377 L 377, 372 L 374, 372 L 369, 376 L 360, 374 L 357, 368 L 359, 365 L 353, 366 L 355, 369 L 353, 372 L 350, 371 L 349, 377 L 346, 377 L 344, 369 L 338, 368 L 332, 371 L 330, 374 L 327, 374 L 318, 368 L 315, 369 L 303, 359 L 297, 357 L 295, 354 L 288, 352 L 291, 351 L 290, 356 L 285, 359 L 285, 362 L 282, 362 L 280, 360 L 281, 357 L 279, 354 L 276, 354 L 275, 345 L 269, 343 z"]}], 
location10_4536:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_4536:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_4536:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_4536:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_4536:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_4536:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_4536:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_4536:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_4536:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_4536:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}], 
location3_4536:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}], 
location4_4536:[{paths:["M 190, 404 L 196, 399 L 211, 395 L 226, 388 L 232, 380 L 244, 375 L 249, 370 L 255, 368 L 261, 370 L 267, 367 L 282, 370 L 300, 376 L 306, 380 L 324, 378 L 336, 378 L 345, 380 L 360, 378 L 378, 387 L 387, 387 L 393, 392 L 397, 398 L 396, 404 L 399, 407 L 408, 407 L 414, 409 L 420, 412 L 421, 415 L 409, 425 L 388, 432 L 379, 438 L 372, 445 L 348, 447 L 336, 450 L 333, 449 L 327, 453 L 318, 451 L 303, 457 L 291, 459 L 273, 455 L 267, 455 L 264, 457 L 246, 456 L 225, 446 L 220, 440 L 208, 434 L 202, 429 L 200, 426 L 204, 420 L 204, 414 L 192, 406 z"]}], 
location5_4536:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}], location6_4536:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}], 
location7_4536:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_4536:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_4536:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location1_5346:[{paths:["M 271, 324 L 272, 327 L 278, 329 L 278, 338 L 281, 341 L 281, 344 L 287, 342 L 293, 343 L 291, 352 L 302, 360 L 306, 356 L 315, 351 L 318, 346 L 321, 345 L 326, 339 L 329, 339 L 340, 351 L 344, 359 L 350, 358 L 352, 361 L 358, 364 L 357, 367 L 360, 373 L 366, 375 L 372, 371 L 378, 372 L 390, 382 L 401, 394 L 407, 396 L 416, 403 L 422, 401 L 424, 403 L 427, 403 L 430, 405 L 432, 411 L 435, 413 L 435, 407 L 441, 405 L 444, 407 L 447, 406 L 450, 412 L 456, 415 L 458, 418 L 468, 410 L 469, 407 L 457, 399 L 464, 393 L 465, 387 L 469, 382 L 464, 370 L 461, 372 L 460, 369 L 466, 366 L 471, 361 L 472, 349 L 469, 340 L 475, 338 L 476, 332 L 470, 327 L 464, 326 L 467, 324 L 467, 321 L 470, 316 L 476, 313 L 478, 310 L 472, 304 L 471, 301 L 482, 290 L 470, 282 L 467, 273 L 468, 270 L 466, 267 L 460, 263 L 451, 266 L 448, 265 L 449, 262 L 455, 260 L 459, 254 L 455, 245 L 453, 245 L 452, 248 L 449, 250 L 443, 250 L 440, 244 L 442, 241 L 440, 238 L 434, 237 L 428, 241 L 430, 244 L 428, 246 L 419, 244 L 411, 251 L 411, 254 L 409, 255 L 407, 249 L 409, 247 L 407, 244 L 398, 244 L 395, 246 L 395, 249 L 398, 251 L 393, 254 L 390, 254 L 388, 251 L 386, 251 L 381, 263 L 372, 261 L 363, 254 L 357, 254 L 349, 261 L 351, 264 L 357, 267 L 357, 270 L 351, 266 L 345, 266 L 343, 269 L 334, 266 L 332, 263 L 323, 261 L 320, 264 L 320, 270 L 317, 272 L 319, 275 L 324, 277 L 323, 280 L 326, 281 L 332, 278 L 332, 281 L 326, 283 L 317, 282 L 312, 279 L 309, 285 L 303, 285 L 294, 291 L 294, 297 L 285, 303 L 285, 306 L 283, 308 L 278, 299 L 274, 308 L 274, 314 L 277, 315 L 278, 318 L 276, 321 L 273, 322 z"]}], 
location10_5346:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_5346:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_5346:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_5346:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_5346:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_5346:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_5346:[{paths:["M 322, 635 L 328, 635 L 331, 637 L 337, 636 L 341, 648 L 332, 652 L 331, 655 L 343, 656 L 358, 664 L 359, 667 L 347, 672 L 348, 674 L 360, 671 L 396, 686 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 417, 703 L 426, 700 L 450, 700 L 453, 701 L 455, 704 L 454, 707 L 456, 710 L 489, 706 L 498, 702 L 507, 693 L 530, 679 L 532, 676 L 531, 673 L 528, 671 L 519, 668 L 518, 665 L 520, 662 L 518, 660 L 512, 659 L 511, 656 L 517, 649 L 514, 648 L 504, 636 L 511, 624 L 509, 615 L 519, 603 L 520, 597 L 506, 590 L 492, 577 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 418, 582 L 419, 585 L 417, 587 L 408, 587 L 402, 590 L 395, 599 L 389, 601 L 384, 607 L 381, 605 L 378, 606 L 377, 609 L 368, 611 L 361, 619 L 337, 623 L 334, 628 L 328, 632 L 325, 632 z"]}], 
location17_5346:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_5346:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_5346:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}], 
location3_5346:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}], 
location4_5346:[{paths:["M 173, 406 L 188, 407 L 193, 412 L 194, 418 L 190, 421 L 198, 421 L 197, 427 L 200, 429 L 209, 429 L 218, 426 L 220, 427 L 215, 432 L 224, 434 L 224, 439 L 230, 439 L 239, 436 L 230, 443 L 238, 443 L 244, 447 L 253, 449 L 258, 454 L 273, 456 L 274, 459 L 277, 461 L 280, 460 L 281, 457 L 293, 455 L 296, 453 L 302, 455 L 308, 452 L 314, 453 L 318, 448 L 321, 447 L 320, 445 L 311, 442 L 317, 440 L 318, 437 L 324, 437 L 325, 440 L 331, 442 L 343, 442 L 349, 438 L 355, 438 L 356, 435 L 347, 427 L 349, 425 L 364, 433 L 376, 433 L 379, 431 L 381, 434 L 393, 432 L 399, 434 L 402, 433 L 403, 431 L 398, 428 L 401, 427 L 397, 423 L 400, 422 L 409, 424 L 421, 424 L 423, 421 L 420, 415 L 426, 414 L 426, 411 L 423, 408 L 420, 410 L 419, 413 L 416, 407 L 419, 407 L 417, 403 L 414, 402 L 408, 396 L 402, 395 L 379, 372 L 373, 370 L 364, 377 L 361, 377 L 344, 360 L 340, 351 L 330, 339 L 327, 338 L 317, 348 L 317, 351 L 308, 363 L 305, 365 L 303, 364 L 296, 355 L 287, 352 L 284, 349 L 282, 343 L 279, 340 L 277, 328 L 274, 325 L 271, 328 L 265, 329 L 258, 338 L 249, 344 L 242, 356 L 227, 361 L 227, 364 L 222, 370 L 213, 375 L 207, 384 L 201, 386 L 192, 395 L 186, 395 L 181, 401 L 175, 401 L 174, 404 z"]}], 
location5_5346:[{paths:["M 452, 410 L 454, 407 L 463, 401 L 469, 400 L 469, 397 L 478, 391 L 476, 388 L 473, 389 L 472, 392 L 469, 391 L 458, 384 L 458, 381 L 462, 375 L 462, 369 L 456, 366 L 454, 363 L 460, 354 L 463, 352 L 469, 354 L 472, 352 L 465, 344 L 465, 341 L 474, 335 L 472, 329 L 473, 326 L 476, 324 L 477, 315 L 483, 310 L 495, 313 L 501, 310 L 503, 304 L 507, 299 L 510, 302 L 512, 311 L 515, 311 L 518, 302 L 524, 301 L 530, 304 L 531, 307 L 529, 310 L 531, 313 L 529, 316 L 526, 317 L 526, 320 L 532, 323 L 535, 320 L 540, 321 L 540, 318 L 534, 316 L 534, 313 L 537, 307 L 543, 304 L 552, 309 L 558, 308 L 564, 310 L 570, 315 L 568, 321 L 562, 324 L 572, 339 L 563, 345 L 559, 351 L 556, 351 L 555, 357 L 552, 360 L 556, 366 L 555, 372 L 561, 377 L 562, 380 L 556, 388 L 565, 385 L 574, 391 L 577, 391 L 589, 383 L 595, 382 L 598, 383 L 606, 391 L 601, 396 L 598, 396 L 597, 401 L 589, 406 L 588, 409 L 585, 410 L 581, 407 L 578, 407 L 576, 409 L 576, 412 L 574, 413 L 571, 413 L 569, 404 L 554, 409 L 554, 412 L 551, 412 L 550, 409 L 544, 407 L 540, 401 L 537, 401 L 536, 407 L 533, 407 L 533, 402 L 527, 401 L 525, 398 L 526, 395 L 523, 394 L 521, 396 L 521, 402 L 519, 405 L 510, 409 L 509, 412 L 506, 411 L 505, 408 L 499, 407 L 496, 408 L 494, 414 L 491, 413 L 488, 407 L 482, 406 L 477, 415 L 480, 421 L 478, 424 L 472, 427 L 463, 419 L 462, 416 L 456, 414 L 453, 411 z"]}], 
location6_5346:[{paths:["M 546, 359 L 548, 365 L 557, 372 L 556, 375 L 553, 376 L 551, 379 L 551, 382 L 554, 384 L 560, 386 L 575, 386 L 584, 392 L 590, 394 L 605, 396 L 626, 396 L 635, 393 L 636, 390 L 634, 384 L 645, 375 L 648, 363 L 665, 351 L 667, 348 L 665, 342 L 667, 336 L 659, 329 L 650, 327 L 635, 325 L 587, 325 L 581, 327 L 570, 335 L 571, 344 L 553, 352 L 547, 358 z"]}], location7_5346:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_5346:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_5346:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location1_5436:[{paths:["M 267, 340 L 269, 337 L 278, 331 L 277, 328 L 271, 326 L 272, 323 L 278, 319 L 278, 316 L 273, 312 L 277, 300 L 280, 301 L 282, 307 L 285, 307 L 287, 301 L 293, 298 L 295, 295 L 294, 292 L 296, 289 L 305, 285 L 308, 286 L 311, 280 L 314, 279 L 316, 282 L 325, 283 L 331, 282 L 333, 279 L 330, 278 L 327, 281 L 324, 280 L 323, 275 L 320, 276 L 317, 273 L 320, 268 L 319, 265 L 322, 262 L 325, 260 L 331, 262 L 333, 265 L 342, 269 L 344, 267 L 350, 266 L 356, 270 L 358, 268 L 349, 262 L 350, 259 L 356, 255 L 362, 254 L 371, 260 L 380, 263 L 385, 252 L 388, 250 L 392, 255 L 394, 252 L 397, 252 L 394, 247 L 400, 242 L 409, 246 L 407, 251 L 408, 254 L 411, 255 L 412, 249 L 418, 245 L 430, 245 L 427, 243 L 433, 237 L 439, 238 L 441, 240 L 440, 246 L 442, 249 L 448, 250 L 455, 245 L 459, 254 L 458, 257 L 452, 262 L 449, 262 L 448, 265 L 451, 266 L 460, 263 L 466, 267 L 468, 270 L 467, 273 L 470, 282 L 482, 290 L 471, 301 L 472, 304 L 478, 310 L 476, 313 L 470, 316 L 467, 321 L 467, 324 L 464, 326 L 470, 327 L 476, 332 L 476, 335 L 475, 338 L 469, 340 L 472, 349 L 471, 361 L 466, 366 L 460, 369 L 461, 372 L 464, 370 L 469, 382 L 465, 387 L 464, 393 L 457, 399 L 469, 407 L 468, 410 L 458, 418 L 456, 415 L 450, 412 L 447, 406 L 444, 407 L 441, 405 L 435, 407 L 435, 413 L 432, 411 L 428, 403 L 425, 404 L 418, 397 L 413, 397 L 414, 402 L 417, 403 L 415, 397 L 410, 395 L 409, 392 L 403, 392 L 400, 390 L 395, 382 L 386, 378 L 380, 372 L 374, 370 L 365, 374 L 359, 373 L 357, 363 L 354, 363 L 349, 357 L 346, 359 L 340, 359 L 337, 358 L 332, 352 L 320, 350 L 299, 357 L 291, 351 L 293, 345 L 292, 342 L 280, 346 L 279, 349 L 276, 348 L 275, 345 L 272, 345 L 270, 343 z"]}], 
location10_5436:[{paths:["M 663, 428 L 666, 430 L 669, 429 L 672, 438 L 681, 439 L 687, 436 L 696, 447 L 702, 451 L 708, 450 L 707, 459 L 709, 461 L 709, 464 L 721, 466 L 727, 462 L 730, 465 L 736, 467 L 740, 471 L 746, 471 L 755, 466 L 764, 465 L 773, 458 L 779, 457 L 773, 466 L 780, 464 L 781, 470 L 784, 471 L 799, 469 L 800, 471 L 794, 475 L 795, 477 L 801, 477 L 807, 480 L 810, 479 L 813, 474 L 828, 474 L 834, 472 L 835, 469 L 845, 459 L 857, 460 L 863, 457 L 872, 456 L 874, 453 L 874, 447 L 877, 442 L 877, 439 L 872, 434 L 874, 428 L 871, 426 L 865, 428 L 856, 426 L 850, 421 L 841, 419 L 832, 411 L 823, 406 L 816, 397 L 809, 382 L 799, 367 L 790, 362 L 783, 371 L 780, 372 L 775, 381 L 769, 387 L 763, 390 L 758, 395 L 749, 399 L 744, 405 L 738, 409 L 732, 410 L 726, 417 L 720, 414 L 720, 408 L 717, 405 L 722, 401 L 721, 398 L 710, 386 L 704, 385 L 691, 396 L 687, 405 L 685, 407 L 682, 407 L 675, 416 L 669, 416 L 666, 419 z"]}], 
location11_5436:[{paths:["M 845, 415 L 847, 417 L 859, 415 L 874, 416 L 877, 417 L 876, 420 L 885, 420 L 887, 422 L 878, 426 L 877, 429 L 878, 435 L 881, 438 L 881, 444 L 877, 450 L 880, 459 L 872, 466 L 854, 474 L 849, 480 L 861, 480 L 866, 484 L 875, 484 L 878, 486 L 887, 485 L 890, 487 L 896, 486 L 901, 483 L 904, 484 L 912, 479 L 924, 479 L 921, 477 L 920, 471 L 917, 471 L 914, 468 L 915, 466 L 921, 466 L 930, 478 L 933, 479 L 939, 477 L 948, 480 L 957, 479 L 960, 482 L 959, 485 L 961, 488 L 967, 491 L 972, 487 L 978, 485 L 976, 482 L 982, 478 L 994, 482 L 1000, 480 L 1009, 480 L 1015, 482 L 1018, 481 L 1010, 477 L 1011, 471 L 1006, 465 L 1008, 463 L 1014, 464 L 1017, 462 L 1026, 462 L 1017, 454 L 1015, 451 L 1016, 448 L 1021, 443 L 1030, 444 L 1036, 442 L 1039, 437 L 1033, 432 L 1021, 430 L 1010, 419 L 1004, 416 L 995, 408 L 989, 411 L 975, 403 L 969, 397 L 959, 382 L 959, 379 L 955, 373 L 952, 371 L 946, 371 L 943, 368 L 943, 362 L 931, 348 L 919, 358 L 916, 358 L 902, 379 L 896, 384 L 890, 388 L 884, 389 L 878, 395 L 866, 402 L 864, 405 L 855, 411 L 846, 414 z"]}], 
location12_5436:[{paths:["M 180, 563 L 183, 558 L 192, 555 L 216, 558 L 240, 548 L 249, 548 L 261, 540 L 285, 540 L 288, 538 L 291, 540 L 306, 540 L 311, 546 L 323, 548 L 332, 556 L 359, 565 L 364, 571 L 364, 574 L 361, 580 L 349, 589 L 344, 595 L 326, 607 L 324, 613 L 319, 618 L 315, 612 L 297, 625 L 285, 631 L 261, 639 L 255, 639 L 246, 635 L 240, 617 L 231, 615 L 230, 618 L 227, 620 L 218, 620 L 215, 618 L 215, 615 L 218, 612 L 212, 608 L 203, 605 L 197, 600 L 194, 591 L 195, 588 L 189, 576 L 181, 567 L 181, 564 z"]}], 
location13_5436:[{paths:["M 304, 539 L 318, 528 L 327, 524 L 341, 509 L 359, 506 L 371, 511 L 386, 511 L 392, 509 L 407, 510 L 416, 507 L 422, 507 L 425, 509 L 437, 511 L 443, 516 L 444, 519 L 441, 528 L 446, 537 L 441, 549 L 435, 553 L 432, 553 L 417, 561 L 399, 567 L 375, 569 L 366, 575 L 364, 573 L 364, 570 L 358, 565 L 334, 557 L 322, 548 L 310, 546 L 305, 540 z"]}], location14_5436:[{paths:["M 492, 546 L 494, 552 L 500, 554 L 501, 557 L 504, 556 L 505, 553 L 511, 552 L 507, 559 L 498, 564 L 497, 567 L 499, 570 L 505, 572 L 507, 577 L 506, 583 L 512, 586 L 516, 592 L 522, 590 L 525, 592 L 526, 595 L 523, 597 L 524, 600 L 527, 601 L 528, 608 L 525, 610 L 525, 605 L 522, 602 L 516, 601 L 513, 603 L 510, 609 L 511, 612 L 514, 612 L 516, 614 L 514, 617 L 515, 620 L 509, 623 L 507, 626 L 507, 629 L 514, 636 L 519, 633 L 522, 635 L 522, 638 L 519, 639 L 521, 645 L 527, 647 L 531, 639 L 546, 633 L 557, 641 L 560, 641 L 561, 647 L 566, 646 L 570, 652 L 573, 651 L 570, 649 L 574, 643 L 580, 646 L 586, 643 L 589, 640 L 586, 638 L 591, 633 L 614, 632 L 620, 625 L 626, 621 L 623, 615 L 623, 609 L 621, 606 L 622, 603 L 619, 601 L 620, 598 L 623, 597 L 618, 591 L 622, 586 L 622, 583 L 614, 576 L 614, 573 L 623, 568 L 622, 565 L 616, 560 L 610, 558 L 610, 555 L 616, 552 L 618, 549 L 613, 543 L 607, 541 L 598, 547 L 597, 550 L 594, 552 L 592, 549 L 586, 546 L 580, 546 L 575, 551 L 575, 554 L 569, 552 L 563, 554 L 559, 560 L 561, 566 L 555, 570 L 555, 564 L 543, 560 L 543, 557 L 540, 555 L 537, 549 L 530, 560 L 527, 560 L 524, 559 L 524, 553 L 522, 550 L 513, 548 L 512, 545 L 506, 541 L 500, 540 L 494, 544 z"]}], 
location15_5436:[{paths:["M 692, 513 L 696, 517 L 700, 511 L 703, 513 L 702, 519 L 696, 522 L 695, 534 L 700, 546 L 703, 549 L 706, 549 L 711, 554 L 729, 560 L 732, 559 L 734, 562 L 740, 562 L 741, 565 L 745, 560 L 751, 560 L 757, 563 L 769, 565 L 781, 571 L 796, 576 L 808, 584 L 810, 587 L 825, 589 L 831, 594 L 840, 598 L 852, 598 L 858, 596 L 870, 591 L 879, 584 L 882, 589 L 885, 588 L 886, 585 L 882, 581 L 896, 560 L 891, 551 L 898, 533 L 893, 515 L 871, 496 L 859, 491 L 841, 489 L 835, 489 L 832, 491 L 817, 491 L 790, 497 L 775, 503 L 754, 503 L 748, 501 L 730, 503 L 718, 501 L 706, 503 L 703, 505 L 702, 508 L 696, 508 L 693, 510 z"]}], 
location16_5436:[{paths:["M 322, 635 L 337, 636 L 341, 645 L 341, 648 L 330, 655 L 345, 657 L 360, 666 L 345, 673 L 351, 674 L 360, 671 L 372, 675 L 402, 690 L 417, 694 L 420, 696 L 419, 699 L 416, 701 L 418, 703 L 436, 699 L 454, 701 L 454, 707 L 456, 710 L 483, 707 L 495, 703 L 501, 699 L 509, 691 L 512, 691 L 520, 684 L 529, 680 L 532, 674 L 518, 666 L 519, 660 L 510, 658 L 513, 652 L 517, 649 L 514, 648 L 503, 636 L 511, 624 L 509, 618 L 510, 612 L 519, 603 L 520, 597 L 503, 588 L 491, 577 L 492, 574 L 490, 571 L 484, 567 L 478, 566 L 463, 558 L 460, 560 L 457, 566 L 454, 567 L 448, 565 L 446, 568 L 437, 568 L 431, 570 L 425, 574 L 417, 587 L 405, 589 L 395, 599 L 392, 599 L 384, 607 L 381, 606 L 376, 609 L 373, 608 L 359, 620 L 338, 623 L 335, 625 L 335, 628 L 326, 632 z"]}], 
location17_5436:[{paths:["M 516, 696 L 525, 689 L 531, 691 L 536, 686 L 532, 681 L 527, 684 L 519, 679 L 517, 676 L 518, 673 L 527, 667 L 529, 661 L 523, 659 L 525, 653 L 524, 650 L 527, 648 L 529, 642 L 534, 637 L 546, 633 L 555, 639 L 558, 639 L 561, 642 L 561, 645 L 567, 647 L 568, 650 L 571, 652 L 570, 649 L 574, 643 L 577, 643 L 579, 646 L 582, 645 L 587, 640 L 586, 637 L 592, 632 L 598, 633 L 601, 631 L 604, 632 L 608, 630 L 611, 640 L 614, 641 L 617, 637 L 621, 649 L 620, 652 L 617, 654 L 614, 652 L 613, 654 L 617, 660 L 614, 663 L 611, 663 L 608, 669 L 605, 671 L 610, 678 L 610, 684 L 606, 690 L 609, 693 L 618, 693 L 623, 699 L 622, 702 L 614, 708 L 613, 705 L 608, 708 L 605, 708 L 606, 710 L 615, 713 L 619, 718 L 621, 715 L 630, 716 L 630, 727 L 627, 729 L 626, 735 L 623, 734 L 621, 729 L 615, 727 L 619, 722 L 616, 719 L 610, 723 L 609, 726 L 606, 726 L 605, 723 L 599, 721 L 597, 715 L 595, 714 L 594, 719 L 588, 719 L 584, 723 L 583, 720 L 577, 718 L 569, 725 L 566, 731 L 560, 734 L 559, 737 L 556, 736 L 548, 730 L 546, 727 L 547, 724 L 541, 722 L 538, 723 L 538, 726 L 535, 726 L 534, 723 L 529, 721 L 529, 718 L 532, 716 L 531, 713 L 534, 704 L 532, 702 L 529, 702 L 528, 705 L 525, 705 L 524, 702 L 518, 701 L 517, 698 z"]}], 
location18_5436:[{paths:["M 609, 686 L 617, 681 L 616, 669 L 618, 666 L 627, 662 L 631, 656 L 629, 650 L 629, 641 L 626, 632 L 627, 620 L 623, 611 L 623, 602 L 630, 593 L 631, 584 L 640, 579 L 640, 576 L 637, 574 L 625, 572 L 623, 569 L 623, 563 L 625, 560 L 628, 559 L 630, 556 L 630, 550 L 635, 546 L 647, 552 L 665, 558 L 686, 560 L 701, 564 L 713, 570 L 725, 579 L 727, 585 L 733, 590 L 745, 591 L 751, 595 L 763, 597 L 772, 602 L 773, 605 L 769, 611 L 770, 614 L 773, 616 L 794, 619 L 784, 626 L 785, 632 L 790, 638 L 790, 647 L 788, 650 L 785, 650 L 770, 660 L 766, 666 L 760, 668 L 739, 682 L 730, 686 L 725, 691 L 719, 692 L 710, 698 L 677, 705 L 662, 704 L 656, 700 L 650, 699 L 635, 700 L 629, 698 L 623, 693 L 614, 691 L 612, 688 z"]}], 
location2_5436:[{paths:["M 467, 243 L 488, 235 L 488, 229 L 491, 224 L 494, 225 L 494, 230 L 497, 230 L 515, 221 L 521, 224 L 530, 219 L 551, 219 L 566, 223 L 575, 223 L 578, 226 L 578, 229 L 588, 241 L 588, 244 L 597, 251 L 600, 260 L 594, 272 L 581, 280 L 583, 283 L 581, 286 L 576, 281 L 570, 283 L 579, 289 L 588, 298 L 588, 301 L 585, 302 L 584, 305 L 575, 308 L 545, 308 L 506, 297 L 505, 303 L 502, 301 L 500, 295 L 491, 287 L 486, 278 L 477, 270 L 472, 273 L 471, 267 L 474, 266 L 474, 263 L 468, 245 z"]}], 
location3_5436:[{paths:["M 602, 288 L 605, 294 L 611, 295 L 617, 303 L 617, 306 L 623, 311 L 624, 314 L 627, 313 L 629, 310 L 638, 312 L 638, 315 L 650, 321 L 652, 324 L 652, 327 L 654, 328 L 645, 334 L 645, 337 L 651, 341 L 654, 350 L 657, 351 L 656, 354 L 661, 359 L 663, 368 L 660, 373 L 654, 374 L 646, 381 L 647, 384 L 650, 386 L 651, 392 L 656, 398 L 659, 399 L 659, 396 L 665, 395 L 673, 388 L 672, 382 L 678, 384 L 677, 388 L 680, 392 L 683, 391 L 682, 388 L 684, 386 L 690, 391 L 696, 387 L 696, 384 L 702, 381 L 705, 380 L 706, 383 L 709, 382 L 714, 379 L 719, 373 L 719, 370 L 725, 366 L 739, 352 L 742, 352 L 754, 362 L 757, 361 L 765, 349 L 765, 344 L 768, 344 L 771, 341 L 772, 338 L 769, 329 L 772, 329 L 783, 320 L 778, 314 L 778, 311 L 781, 310 L 786, 302 L 792, 299 L 794, 296 L 786, 289 L 780, 289 L 777, 287 L 778, 284 L 781, 284 L 780, 278 L 789, 280 L 793, 284 L 796, 283 L 797, 280 L 800, 280 L 804, 274 L 797, 266 L 798, 263 L 796, 259 L 790, 256 L 783, 248 L 777, 244 L 779, 239 L 787, 232 L 779, 225 L 770, 228 L 767, 234 L 764, 234 L 755, 231 L 753, 225 L 750, 226 L 748, 229 L 745, 229 L 744, 226 L 738, 222 L 732, 221 L 723, 226 L 724, 229 L 721, 232 L 722, 237 L 714, 243 L 712, 241 L 717, 236 L 712, 224 L 708, 230 L 699, 227 L 696, 228 L 693, 234 L 684, 233 L 676, 240 L 673, 239 L 673, 236 L 676, 234 L 677, 225 L 668, 222 L 662, 227 L 665, 230 L 659, 233 L 653, 232 L 648, 237 L 651, 241 L 648, 241 L 642, 237 L 636, 238 L 634, 232 L 635, 230 L 638, 232 L 639, 235 L 643, 234 L 644, 231 L 650, 229 L 651, 226 L 645, 221 L 639, 220 L 630, 226 L 631, 229 L 626, 237 L 614, 233 L 612, 227 L 609, 226 L 605, 238 L 612, 246 L 615, 246 L 619, 250 L 620, 248 L 629, 243 L 630, 246 L 633, 248 L 632, 250 L 626, 249 L 623, 251 L 621, 257 L 615, 257 L 606, 261 L 604, 264 L 612, 271 L 613, 274 L 616, 274 L 620, 270 L 626, 269 L 624, 275 L 616, 283 L 604, 287 z"]}], 
location4_5436:[{paths:["M 179, 414 L 184, 420 L 187, 420 L 191, 424 L 192, 421 L 202, 414 L 208, 417 L 208, 420 L 203, 423 L 209, 425 L 211, 431 L 219, 435 L 219, 438 L 223, 444 L 229, 445 L 230, 448 L 238, 442 L 244, 444 L 246, 447 L 252, 448 L 257, 453 L 256, 456 L 262, 459 L 274, 451 L 283, 453 L 292, 447 L 293, 450 L 299, 451 L 304, 446 L 303, 440 L 309, 442 L 310, 445 L 316, 446 L 315, 452 L 318, 453 L 320, 451 L 320, 448 L 323, 447 L 324, 445 L 321, 442 L 322, 440 L 325, 439 L 325, 436 L 328, 435 L 331, 435 L 338, 443 L 346, 447 L 349, 447 L 357, 441 L 356, 435 L 353, 433 L 354, 431 L 357, 431 L 359, 433 L 361, 442 L 368, 448 L 379, 442 L 382, 442 L 382, 439 L 385, 437 L 391, 437 L 406, 447 L 412, 443 L 412, 449 L 400, 456 L 388, 450 L 379, 457 L 382, 463 L 388, 464 L 388, 467 L 391, 467 L 392, 464 L 401, 458 L 409, 463 L 411, 469 L 414, 472 L 417, 471 L 419, 473 L 418, 476 L 421, 478 L 423, 476 L 423, 473 L 428, 468 L 426, 465 L 430, 457 L 442, 453 L 442, 447 L 445, 445 L 445, 439 L 447, 436 L 440, 430 L 446, 429 L 450, 424 L 442, 417 L 436, 417 L 430, 421 L 429, 424 L 430, 427 L 436, 431 L 434, 433 L 428, 430 L 426, 427 L 415, 420 L 416, 417 L 423, 412 L 421, 409 L 422, 403 L 413, 397 L 407, 397 L 406, 394 L 393, 380 L 387, 378 L 378, 370 L 372, 370 L 360, 376 L 358, 374 L 360, 368 L 351, 363 L 345, 364 L 340, 359 L 337, 359 L 334, 356 L 322, 357 L 314, 364 L 308, 364 L 308, 361 L 305, 358 L 293, 356 L 290, 354 L 289, 352 L 292, 350 L 291, 347 L 285, 344 L 280, 349 L 277, 350 L 265, 346 L 256, 346 L 255, 343 L 251, 341 L 248, 350 L 245, 352 L 233, 349 L 224, 355 L 225, 361 L 223, 364 L 214, 364 L 205, 369 L 205, 372 L 217, 380 L 219, 377 L 228, 373 L 233, 378 L 234, 384 L 232, 390 L 224, 381 L 222, 381 L 219, 387 L 217, 389 L 214, 388 L 207, 397 L 209, 400 L 212, 400 L 213, 403 L 199, 412 L 190, 407 L 184, 409 L 181, 412 z"]}], 
location5_5436:[{paths:["M 464, 373 L 469, 364 L 478, 357 L 481, 345 L 484, 342 L 505, 335 L 511, 335 L 520, 330 L 523, 330 L 527, 336 L 536, 342 L 538, 345 L 537, 357 L 539, 363 L 550, 374 L 568, 381 L 610, 381 L 616, 383 L 634, 381 L 639, 384 L 609, 394 L 603, 393 L 576, 404 L 564, 403 L 558, 404 L 546, 410 L 531, 411 L 525, 409 L 513, 397 L 498, 392 L 489, 392 L 483, 386 L 477, 382 L 468, 379 L 466, 376 z"]}], location6_5436:[{paths:["M 523, 330 L 524, 333 L 538, 346 L 538, 361 L 542, 367 L 551, 375 L 575, 382 L 608, 381 L 617, 383 L 641, 383 L 656, 379 L 659, 376 L 659, 370 L 654, 361 L 656, 355 L 645, 345 L 641, 327 L 637, 321 L 631, 317 L 616, 316 L 607, 312 L 601, 315 L 592, 313 L 577, 313 L 547, 323 L 541, 323 L 526, 329 z"]}], 
location7_5436:[{paths:["M 708, 386 L 711, 387 L 721, 399 L 721, 402 L 718, 404 L 720, 407 L 719, 410 L 720, 413 L 726, 418 L 732, 410 L 741, 407 L 749, 399 L 758, 395 L 763, 390 L 766, 390 L 778, 375 L 784, 371 L 791, 362 L 800, 369 L 815, 393 L 817, 399 L 826, 408 L 838, 416 L 844, 416 L 850, 412 L 859, 409 L 867, 401 L 885, 389 L 891, 388 L 903, 378 L 903, 375 L 893, 363 L 889, 354 L 880, 349 L 876, 337 L 872, 331 L 866, 325 L 854, 317 L 847, 305 L 841, 299 L 838, 299 L 820, 283 L 811, 290 L 805, 302 L 796, 311 L 789, 326 L 780, 335 L 779, 338 L 770, 344 L 762, 353 L 756, 364 L 741, 352 L 738, 353 L 719, 371 L 719, 374 L 711, 383 z"]}], 
location8_5436:[{paths:["M 153, 488 L 155, 482 L 169, 472 L 190, 464 L 220, 469 L 241, 478 L 277, 490 L 280, 499 L 289, 505 L 298, 517 L 298, 526 L 295, 529 L 286, 533 L 284, 536 L 286, 539 L 284, 541 L 260, 541 L 251, 547 L 245, 549 L 236, 549 L 218, 557 L 194, 555 L 182, 558 L 179, 562 L 174, 553 L 174, 550 L 169, 552 L 169, 549 L 166, 546 L 169, 544 L 172, 545 L 173, 542 L 173, 518 L 167, 513 L 155, 498 L 154, 489 z"]}], location9_5436:[{paths:["M 246, 468 L 249, 477 L 257, 484 L 278, 491 L 279, 497 L 290, 506 L 297, 515 L 299, 521 L 298, 524 L 300, 527 L 306, 525 L 318, 529 L 336, 516 L 340, 510 L 352, 508 L 355, 506 L 373, 512 L 382, 512 L 391, 509 L 409, 510 L 412, 508 L 418, 508 L 423, 500 L 426, 499 L 431, 504 L 434, 500 L 434, 494 L 431, 485 L 428, 482 L 407, 482 L 383, 468 L 365, 464 L 362, 462 L 332, 462 L 317, 465 L 315, 468 L 306, 471 L 282, 469 L 279, 467 L 255, 468 L 249, 466 z"]}], 
location19:[{paths:["M 231, 252 L 300, 289 L 315, 317 L 357, 345 L 313, 395 L 295, 356 L 214, 350 L 163, 317 z"]}], location20:[{paths:["M 368, 407 L 424, 434 L 510, 434 L 516, 457 L 452, 482 L 381, 539 L 329, 516 L 318, 455 z"]}], location21:[{paths:["M 157, 340 L 203, 366 L 280, 376 L 299, 407 L 281, 441 L 189, 451 L 135, 442 z"]}], location22:[{paths:["M 136, 461 L 193, 469 L 278, 462 L 285, 517 L 255, 516 L 154, 562 z"]}], location23:[{paths:["M 377, 388 L 413, 347 L 467, 329 L 499, 350 L 511, 382 L 527, 395 L 512, 423 L 435, 423 z"]}], 
location24:[{paths:["M 298, 243 L 415, 207 L 455, 244 L 482, 264 L 491, 282 L 436, 297 L 387, 321 L 349, 298 L 339, 266 z"]}], location25:[{paths:["M 434, 203 L 578, 190 L 580, 220 L 559, 241 L 488, 250 L 463, 221 z"]}], location26:[{paths:["M 605, 194 L 721, 216 L 706, 299 L 621, 274 L 514, 282 L 506, 261 L 568, 254 L 597, 229 z"]}], location27:[{paths:["M 533, 312 L 601, 305 L 677, 321 L 686, 361 L 666, 383 L 629, 366 L 566, 378 L 538, 347 z"]}], location28:[{paths:["M 743, 220 L 849, 268 L 779, 287 L 739, 317 L 721, 310 L 733, 261 L 730, 229 z"]}], 
location29:[{paths:["M 881, 297 L 925, 348 L 850, 380 L 812, 385 L 787, 348 L 768, 336 L 799, 316 L 848, 308 z"]}], location30:[{paths:["M 936, 365 L 968, 440 L 824, 442 L 819, 402 L 872, 390 z"]}], location31:[{paths:["M 964, 455 L 937, 532 L 860, 489 L 817, 489 L 827, 456 L 884, 461 z"]}], location32:[{paths:["M 703, 394 L 748, 360 L 778, 400 L 788, 454 L 770, 490 L 707, 532 L 664, 501 L 706, 483 L 728, 442 L 723, 414 z"]}], location33:[{paths:["M 520, 115 L 335, 132 L 197, 179 L 90, 260 L 39, 341 L 29, 448 L 41, 571 L 120, 655 L 246, 747 L 358, 794 L 545, 810 L 664, 810 L 847, 766 L 997, 679 L 1104, 593 L 1116, 455 L 1081, 344 L 993, 246 L 843, 181 L 709, 136 L 525, 115 L 524, 169 L 701, 182 L 877, 237 L 1001, 326 L 1050, 418 L 1053, 524 L 992, 627 L 846, 722 L 703, 764 L 556, 765 L 386, 757 L 261, 711 L 145, 626 L 89, 553 L 77, 418 L 117, 329 L 199, 246 L 280, 200 L 421, 166 L 521, 169 z"]}], 
location34:[{paths:["M 920, 547 L 829, 614 L 777, 568 L 741, 553 L 780, 531 L 808, 508 L 847, 506 L 878, 528 z"]}], location35:[{paths:["M 539, 484 L 572, 498 L 616, 502 L 666, 549 L 607, 553 L 509, 571 L 431, 555 L 469, 532 L 487, 507 z"]}], location36:[{paths:["M 295, 534 L 356, 570 L 342, 597 L 300, 615 L 265, 640 L 211, 659 L 146, 599 L 186, 567 L 249, 542 z"]}], location37:[{paths:["M 259, 682 L 331, 652 L 341, 634 L 386, 615 L 396, 582 L 438, 597 L 442, 650 L 467, 697 L 456, 738 L 399, 749 z"]}], 
location38:[{paths:["M 594, 589 L 663, 583 L 713, 569 L 726, 579 L 722, 616 L 690, 652 L 632, 660 L 598, 632 z"]}], location39:[{paths:["M 748, 593 L 815, 658 L 855, 672 L 725, 740 L 703, 714 L 684, 668 L 713, 665 L 742, 635 z"]}], location40:[{paths:["M 461, 599 L 513, 607 L 569, 597 L 577, 641 L 608, 671 L 656, 677 L 680, 710 L 491, 731 L 490, 687 L 465, 644 z"]}], location42:[{paths:["M 1116, 755 L 1150, 788 L 1150, 794 L 1151, 802 L 1054, 828 L 1001, 754 L 1065, 746 z"]}], location43:[{paths:["M 975, 760 L 1035, 840 L 1002, 849 L 928, 850 L 900, 835 L 885, 812 L 910, 786 z"]}], 
g31_15_normal:[{size:{h:340, w:1108}, paths:["M 1093.4251,339.95653 1091.5,309.5 l 0,-6 -1,0 0,-5 -1,0 0,-5 -1,0 0,-4 -1,0 0,-3 -1,0 c -0.7,-3.7 -1.3,-7.3 -2,-11 l -1,0 c -0.3,-3 -0.7,-6 -1,-9 l -1,0 0,-3 -1,0 0,-2 -1,0 c -0.7,-3 -1.3,-6 -2,-9 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 0,-3 -1,0 c -0.7,-2 -1.3,-4 -2,-6 l -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-2 -1,0 0,-3 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 l -1,0 c -0.3,-1 -0.7,-2 -1,-3 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1 -0.7,-2 -1,-3 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -2,-1.7 -4,-3.3 -6,-5 l 0,-2 c -4.7,-4.3 -9.3,-8.7 -14,-13 -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -2.7,-3 -5.3,-6 -8,-9 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -1,-1.3 -2,-2.7 -3,-4 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 c -1,-0.7 -2,-1.3 -3,-2 l 0,-3 c 2.8,-0.7 3.6,-1.9 6,-3 -0.2,-2.6 -0.1,-3.4 -1,-5 l -1,0 0,-15 c 2,-0.6 0.9,0.1 2,-1 l 1,0 c -0.8,-3.3 -12.7,-15.2 -16,-16 -0.8,-3.2 -3.8,-6.2 -7,-7 -1.2,-4.1 -1.7,-1.8 -4,-4 -0.3,-0.7 -0.7,-1.3 -1,-2 l -1,0 0,-2 c -2.3,-1.7 -4.7,-3.3 -7,-5 -2,-2.3 -4,-4.7 -6,-7 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -1,-0.7 -2,-1.3 -3,-2 l 0,-2 -1,0 c -0.7,-1 -1.3,-2 -2,-3 l -2,0 c -0.7,-1 -1.3,-2 -2,-3 -4.8,-2.7 -14.5,-0.5 -21,-1 -1.7,-0.3 -3.3,-0.7 -5,-1 0,0 -0.7,1.5 -3,1 l 0,-1 -4,0 0,1 -3,0 c -2.1,-0.1 -2,-1 -2,-1 -3.4,-0.9 -6.7,0.6 -9,1 -0.6,2 0.1,0.9 -1,2 l 0,1 -4,0 c -0.7,1 -1.3,2 -2,3 -1.7,0.3 -3.3,0.7 -5,1 -0.7,1 -1.3,2 -2,3 l -3,0 c -3.2,0.6 -4.6,1.7 -6,4 -4.2,-0.5 -7.7,-1.4 -11,-3 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -2,0 0,-1 c -2,-0.3 -4,-0.7 -6,-1 l 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 -3,0 0,-1 c -2.3,-0.3 -4.7,-0.7 -7,-1 l 0,-1 -5,0 0,-1 -3,0 0,-1 c -2.7,-0.3 -5.3,-0.7 -8,-1 l 0,-1 -4,0 0,-1 -4,0 0,-1 -4,0 0,-1 -3,0 0,-1 c -4.3,-0.7 -8.7,-1.3 -13,-2 l 0,-1 -3,0 0,-1 c -4,-0.3 -8,-0.7 -12,-1 -8,-2.4 -18.1,-3.6 -26,-6 -4.3,-0.3 -8.7,-0.7 -13,-1 l 0,-1 c -5,-0.3 -10,-0.7 -15,-1 -5.6,-1.7 -14.4,-2.3 -20,-4 l -12,0 0,-1 -14,0 0,-1 -15,0 0,-1 -19,0 0,-1 c -1.7,0.3 -3.3,0.7 -5,1 0,0 -0.6,-1.4 -3,-1 -0.2,0 -0.4,1.3 -2,1 -9.4,-1.7 -31.8,-2.6 -41,0 l -13,0 0,1 c -10,0.3 -20,0.7 -30,1 l 0,1 c -5.3,0.3 -10.7,0.7 -16,1 l 0,1 c -2.4,0.6 -2.7,-1.1 -4,-1 l 0,1 -7,0 0,1 -7,0 0,1 -7,0 0,1 -8,0 0,1 -4,0 0,1 -7,0 0,1 -6,0 0,1 -6,0 0,1 -6,0 0,1 -4,0 0,1 c -3.3,0.3 -6.7,0.7 -10,1 l 0,1 -4,0 0,1 -4,0 0,1 -4,0 0,1 c -3,0.3 -6,0.7 -9,1 l 0,1 -4,0 0,1 -6,0 0,1 -3,0 0,1 -4,0 0,1 -2,0 0,1 -5,0 0,1 -3,0 0,1 -5,0 0,1 -4,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -1.7,0.3 -3.3,0.7 -5,1 l 0,1 c -4.9,-0.4 -4.4,-1.2 -8,-3 l 0,-1 -5,0 c -0.7,-1 -1.3,-2 -2,-3 -1.7,-0.3 -3.3,-0.7 -5,-1 -0.7,-1 -1.3,-2 -2,-3 l -4,0 c -1,-1.3 -2,-2.7 -3,-4 -14.3,0.3 -28.7,0.7 -43,1 -3.1,3.7 -8.6,4.6 -10,10 -3.5,0.9 -9.3,7.4 -12,10 -0.3,0.7 -0.7,1.3 -1,2 -2.9,2.1 -4.9,1.9 -6,6 -4.2,1.1 -5.4,4.4 -8,7 -4.4,4.4 -9,8.1 -13,13 -1,0.3 -2,0.7 -3,1 -1.8,1.3 -3.4,4.3 -4,7 2.7,0.7 2.3,1.4 5,2 l 0,13 c -1,0.3 -2,0.7 -3,1 0.2,5.1 1.5,5.3 5,7 l 0,3 c -5.7,3 -11.3,6 -17,9 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -1,1.3 -2,2.7 -3,4 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -0.7,1 -1.3,2 -2,3 l -2,0 c -1,1.3 -2,2.7 -3,4 -1,0.3 -2,0.7 -3,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.7 -2.7,3.3 -4,5 l -2,0 c -3,3.3 -6,6.7 -9,10 -7,7 -14.1,12.9 -20,21 -2.3,2 -4.7,4 -7,6 l 0,2 c -1.7,1.3 -3.3,2.7 -5,4 l 0,2 c -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -1,0.7 -2,1.3 -3,2 -0.3,1.3 -0.7,2.7 -1,4 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 -2,2 0,2 -1,0 0,2 -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,2 -1,0 c -0.3,1.3 -0.7,2.7 -1,4 l -1,0 0,3 -1,0 0,2 -1,0 0,2 -1,0 c -0.7,2 -1.3,4 -2,6 l -1,0 c -0.3,2 -0.7,4 -1,6 l -1,0 0,2 -1,0 0,3 -1,0 0,3 -1,0 0,4 -1,0 0,4 -1,0 0,3 -1,0 c -0.3,2.3 -0.7,4.7 -1,7 l -1,0 c -0.3,2.7 -0.7,5.3 -1,8 l -1,0 0,4 -1,0 0,5 -1,0 0,5 -1,0 0,6 -1,0 0,15 c 0,0.1 -1.4,0.8 -1,3 0,0 1.5,0.9 1,3 l -1,6.34004 -1.308263,3.37077 26.509534,0.20127 c 0.3,-1.7 -0.406991,-1.89111 -0.106991,-3.59111 L 51.5,336.5 l 0,-8 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-5 c 1.3,-0.7 2.7,-1.3 4,-2 l 0,-4 1,0 0,-6 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-4 c 1,-0.7 2,-1.3 3,-2 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-3 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 2,0 c 1.7,-3 3.3,-6 5,-9 l 1,0 0,-4 3,0 0,-2 3,0 c 1.1,-2.3 1.8,-3.8 4,-5 l 0,-4 c 5.9,-1.2 12.8,-9.1 15,-14 l 2,0 0,-2 4,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 2,0 0,-3 c 4.3,-0.6 3.4,-2.1 6,-4 l 0,-1 c 1,0.3 2,0.7 3,1 0,0 2.5,-2.7 3,-3 l 0,-3 3,0 0,-2 4,0 0,-2 3,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-3 c 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 3,-6 3,0 0,-1 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 2,-0.7 3,-1 0.7,-1 1.3,-2 2,-3 1.3,-0.3 2.7,-0.7 4,-1 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 c 2.2,-1.4 1.4,0.4 3,-2 4.2,0.1 5.8,0.2 8,2 0.3,0.7 0.7,1.3 1,2 1.7,0.8 3,-1 3,-1 1,0.3 2,0.7 3,1 0.7,2.7 1.4,2.3 2,5 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 l 0,-3 c 3.3,-0.7 3.8,-1.9 8,-2 0.9,-1.1 -0.1,-0.2 1,-1 l 0,-14 c 0.6,-1.1 4.1,-1.3 5,-2 1.2,-1 0,-2.7 1,-4 l 1,0 0,-2 1,0 0,5 1,0 c 1.3,1.7 2.9,2.2 4,4 1.7,-0.3 3.3,-0.7 5,-1 l 0,-45 c -1,-0.3 -2,-0.7 -3,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1,-0.7 -2,-1.3 -3,-2 1.4,-5.4 5.6,-8.5 8,-13 l 2,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 c 0.9,2.6 -0.1,15 -1,16 l 0,6 c 0.2,0.4 5.2,3.2 6,4 1.3,1.7 2.7,3.3 4,5 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 l 0,1 c 1,0.3 2,0.7 3,1 1.1,1.1 0,0.4 2,1 0.8,-1.3 0.7,-1.2 2,-2 l 0,-13 c 2,0.3 4,0.7 6,1 l 0,2 2,0 0,3 c 4.1,-1.1 1.5,-1.9 3,-3 1,0.3 2,0.7 3,1 0.8,-3.2 2.3,-3.8 5,-5 l 0,-1 c 1,0.3 2,0.7 3,1 l 0,-9 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 3,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 0,-1 2,0 0,-1 4,0 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 l 1,0 0,-2 c 1,0.7 2,1.3 3,2 0.7,0.1 7.1,-1.5 8,-2 0.3,-0.7 0.7,-1.3 1,-2 2,-1 3.6,0.5 5,-1 0.3,-1 0.7,-2 1,-3 3.3,0.3 6.7,0.7 10,1 l 0,-1 3,0 0,-1 5,0 c 0.3,-1 0.7,-2 1,-3 1.1,-0.8 1.8,2 2,2 1,-0.3 2,-0.7 3,-1 l 0,-2 c 2,0.3 4,0.7 6,1 l 0,-1 2,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-3 c 1,0.8 1,1.2 2,2 l 0,1 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 1,0.3 2,0.7 3,1 l 0,-2 c 2,0.3 6.1,1.3 9,0 0.3,-0.7 0.7,-1.3 1,-2 l 8,0 c 6.2,-1.9 14.9,-3.2 21,-5 l 7,0 0,-1 c 4.3,-0.3 8.7,-0.7 13,-1 l 0,-1 c 0.9,0 3.6,1.9 6,1 l 0,-1 2,0 0,-1 9,0 c 0.3,-0.7 0.7,-1.3 1,-2 1.7,0.3 3.3,0.7 5,1 0.3,-0.7 0.7,-1.3 1,-2 1,-0.3 10,2.2 13,1 0.3,-0.7 0.7,-1.3 1,-2 l 1,1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 c 1.7,-0.3 1.7,0.9 2,1 l 9,0 c 6.3,-0.3 12.7,-0.7 19,-1 l 12,0 c 0.3,-1 0.7,-2 1,-3 1,0.7 2,1.3 3,2 1,-0.6 -0.9,-0.8 1,-2 l 0,2 c 2.4,-0.6 2.2,-1.1 4,-2 l 0,2 7,0 0,1 52,0 c 5.9,1.7 16,-0.7 22,1 l 0,1 8,0 c 1.9,0.2 2,1 2,1 4.3,-0.3 8.7,-0.7 13,-1 l 0,2 c 16.2,3.2 36.7,3.7 51,9 l 6,0 0,1 9,0 0,1 6,0 0,1 4,0 0,1 c 2.7,0.9 7.8,1 9,0 l 10,0 3,6 7,0 0,1 3,0 0,1 4,0 0,1 c 1.2,0.2 1.8,-1.9 4,-1 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 2,0 0,1 c 1.7,0.5 1.8,-0.9 2,-1 3.8,-0.8 3.1,1.6 4,2 l 5,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 4,0 0,1 3,0 c 4,1.6 5.8,3 12,3 l 0,2 1,0 0,-1 1,0 c 1.6,0.4 1.3,1.6 2,2 l 2,0 0,1 3,0 0,1 2,0 0,1 3,0 0,1 3,0 0,1 3,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 c 2.6,1.3 4.5,3.4 8,4 l 0,8 c 4.4,0.3 4,1.5 8,2 l 0,3 c 2,-0.6 0.9,0.1 2,-1 l 1,0 0,3 c 2.7,-0.8 3.1,-1.6 5,-3 l 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,13 c 1.7,0.3 3.3,0.7 5,1 1.1,-1.3 2.7,-1.8 4,-3 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 c 0.7,-1 1.3,-2 2,-3 l 2,0 0,-1 c 1,-0.7 2,-1.3 3,-2 l 0,-2 1,0 c 0.3,-1 0.7,-2 1,-3 l 3,0 0,-1 1,0 0,-6 -1,0 c -1.7,-5.9 0.6,-14.3 1,-19 l 3,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 0,2 c 0.7,0.3 1.3,0.7 2,1 1.4,2.1 2.5,4.3 3,7 l 1,0 c -1.8,2.9 -5.7,5.7 -9,7 l 0,45 c 1.3,0.1 4,1 4,1 l 0,-1 2,0 0,-1 c 1,-0.3 2,-0.7 3,-1 0.3,-1.3 0.7,-2.7 1,-4 3.7,1 5.1,3.4 8,5 -0.1,3.9 -1,11.8 1,14 l 0,1 c 1.4,-0.8 2,-1 4,0 l 0,1 3,0 0,1 1,0 0,3 c 1,-0.3 2,-0.7 3,-1 0.3,1 0.7,2 1,3 l 2,0 c 0.6,-2 -0.1,-0.9 1,-2 3.1,-5.1 3.3,-0.8 7,-3 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.7 2.7,-1.3 4,-2 1.6,2.4 1.1,0.6 3,2 1,1.3 2,2.7 3,4 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 0,1 c 1.3,0.3 2.7,0.7 4,1 0.3,0.7 0.7,1.3 1,2 1,0.3 2,0.7 3,1 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 2,0 c 0.7,1 1.3,2 2,3 l 2,0 0,1 6,0 0,1 1,0 c 0.7,2 1.3,4 2,6 2.6,0.5 5.6,1.3 7,3 1.4,1.8 -1,1 2,3 l 0,2 c 3.5,1 5.7,3.8 8,6 0.3,0.7 0.7,1.3 1,2 1.3,0.3 2.7,0.7 4,1 l 0,1 1,0 c 1.9,2.3 -1.1,1.8 3,3 0.6,2.4 0.3,1.9 2,3 0.6,2 -0.1,0.9 1,2 l 0,-2 c 1,0.3 2,0.7 3,1 l 0,5 c 1.7,0.3 3.3,0.7 5,1 l 0,3 1,0 0,1 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,1.7 0.7,3.3 1,5 l 1,0 c 1.3,1.7 2.7,3.3 4,5 l 3,0 0,4 c 4.9,1.3 2.8,2.7 5,6 1,0.7 2,1.3 3,2 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 c 0.3,1.7 0.7,3.3 1,5 l 1,0 0,2 1,0 0,2 1,0 c 0.7,2 1.3,4 2,6 l 1,0 0,3 1,0 0,2 1,0 0,3 1.7116,3.41569 c 0.3,1.7 0.9135,3.15768 1.2135,4.85768 l 23.1423,-4e-5 z"]}, 
{size:{h:420, w:1108}, offset:{y:340}, z:43, paths:["m 135.5,140.5 c 9,0 20.7,-0.9 28,1 3,-0.3 6,-0.7 9,-1 l 0,1 8,0 c 2.3,3.7 6,3.3 8,6 l 0,2 c 0.7,0.3 1.3,0.7 2,1 1.7,2 3.3,4 5,6 1,0.3 2,0.7 3,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 l 2,0 c 0.3,0.7 0.7,1.3 1,2 l 1,0 c 3,3.3 6,6.7 9,10 l 2,0 c 0.7,1 1.3,2 2,3 0.7,0.3 1.3,0.7 2,1 l 0,2 1,0 c 0.7,1 1.3,2 2,3 3.1,2.3 4.8,1.5 6,6 4,1 4.4,3.8 7,6 -0.3,0.6 -2,2 -2,2 l 0,15 c 3.2,0.8 2.9,1.2 3,5 -2.3,1.3 -4.7,2.7 -7,4 0.3,1 0.7,2 1,3 3.3,2 6.7,4 10,6 1.7,0.3 3.3,0.7 5,1 l 0,1 2,0 0,1 3,0 0,1 3,0 0,1 c 1.3,0.3 2.7,0.7 4,1 l 0,1 3,0 0,1 2,0 0,1 c 3.3,0.7 6.7,1.3 10,2 l 0,1 3,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 4,0 0,1 2,0 0,1 c 2,0.3 4,0.7 6,1 l 0,1 2,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 3,0 0,1 4,0 0,1 3,0 0,1 4,0 0,1 4,0 0,1 5,0 0,1 3,0 0,1 3,0 0,1 c 3,0.3 6,0.7 9,1 l 0,1 3,0 0,1 c 4.3,0.7 8.7,1.3 13,2 l 0,1 c 3,0.3 6,0.7 9,1 l 0,1 7,0 0,1 4,0 0,1 4,0 0,1 4,0 0,1 7,0 c 15.4,4.8 34.1,3.8 48,8 l 14,0 c 14.5,4.2 34,3.6 52,4 5.9,0.1 17,2.9 24,1 l 0,-1 c 3,0.3 6,0.7 9,1 l 9,0 0,-1 1,0 c 2.7,-0.3 3,1 3,1 l 13,0 0,-1 c 1,0.3 2,0.7 3,1 l 27,0 0,-1 19,0 0,-1 1,0 10,0 0,-1 10,0 0,-1 11,0 c 8.8,-2.6 20.5,-2.4 29,-5 8,-0.7 16,-1.3 24,-2 10,-3 22.2,-4.8 32,-8 3.7,-0.3 7.3,-0.7 11,-1 l 0,-1 4,0 0,-1 c 3,-0.3 6,-0.7 9,-1 l 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 3,0 0,-1 3,0 0,-1 5,0 0,-1 c 2.3,-0.3 4.7,-0.7 7,-1 l 0,-1 3,0 0,-1 3,0 0,-1 c 2.7,-0.3 5.3,-0.7 8,-1 l 0,-1 c 2,-0.3 4,-0.7 6,-1 l 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 3,-0.7 6,-1.3 9,-2 l 0,-1 2,0 0,-1 c 4.3,-1 8.7,-2 13,-3 l 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 3,0 0,-1 c 1.3,-0.3 2.7,-0.7 4,-1 l 0,-1 2,0 0,-1 9,-3 c 0.3,-0.7 0.7,-1.3 1,-2 1.3,-0.3 2.7,-0.7 4,-1 l 0,-6 c -2,-0.7 -4,-1.3 -6,-2 l 0,-5 c 1,-0.3 2,-0.7 3,-1 l 0,-14 -1,0 c -0.8,-1.5 -0.7,-1.7 -1,-4 3.7,-3.3 7.3,-6.7 11,-10 0.3,-0.7 0.7,-1.3 1,-2 l 2,0 2,-2 0,-2 1,0 c 0.7,-1 1.3,-2 2,-3 1,-0.3 2,-0.7 3,-1 4,-4.3 8,-8.7 12,-13 l 2,0 c 1,-1.7 2,-3.3 3,-5 l 2,0 c 4,-4.3 8,-8.7 12,-13 l 2,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 18,0 0,-1 7,0 0,1 1,0 0,-1 18,0 c 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 0.7,1 1.3,2 2,3 1.7,0.3 3.3,0.7 5,1 l 0,1 c 1.5,0.9 2.4,0.8 5,1 1.3,-5 6.8,-7.7 10,-11 4.3,-4.3 7.4,-9 11,-14 1,-0.7 2,-1.3 3,-2 l 0,-2 c 1.3,-1 2.7,-2 4,-3 l 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 c 1,-0.7 2,-1.3 3,-2 0.7,-2 1.3,-4 2,-6 0.7,-0.3 1.3,-0.7 2,-1 l 0,-2 2,-2 0,-2 1,0 0,-2 1,0 0,-2 1,0 0,-2 2,-2 0,-2 c 0.7,-0.3 1.3,-0.7 2,-1 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l 1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 0,-3 1,0 0,-3 1,0 0,-3 1,0 0,-4 1,0 0,-3 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l 1,0 c 0.3,-3.3 0.7,-6.7 1,-10 l 1,0 0,-9 c 0.3,-3.3 0.7712,-7.26928 1.0712,-10.56928 l -1.4982,-5.05237 c -0.3,-1.3 -1.2655,-2.13071 -1.5654,-3.43071 l 24.6441,0.0712 0.3596,3.34829 c 0.4,4.4 4.1887,12.03292 3.9887,17.63292 -0.3,1 -0.7,2 -1,3 l 1,0 c 0.3,2 0.7,4 1,6 l 1,0 0,7 -1,0 c 0.3,2.7 0.7,5.3 1,8 l -2,0 c 2.8,7.1 4,13.5 4,24 l -3,0 c 1.3,4 2.7,8 4,12 -0.3,4 -0.7,8 -1,12 -3.8,0 -6.3,0.5 -9,1 0.9,4.9 2.7,10.5 4,15 -0.3,4 -0.7,8 -1,12 l -12,0 c -0.8,1.1 0.1,0.1 -1,1 -0.7,3.3 -1.3,6.7 -2,10 l 1,0 c 1,6.7 2,13.3 3,20 -0.7,0.3 -1.3,0.7 -2,1 -0.3,1.7 -0.7,3.3 -1,5 -4.6,-0.4 -6.4,-1.9 -12,-2 -0.3,1 -0.7,2 -1,3 l -1,0 0,2 c -0.7,0.3 -1.3,0.7 -2,1 l 0,3 -1,0 0,2 -1,0 c -0.6,2.1 1,3 1,3 0.7,5 1.3,10 2,15 l -1,0 c -1,4 -4.1,4.9 -6,8 -4.1,-0.8 -5.7,-3.1 -10,-4 -1,1.3 -2,2.7 -3,4 l -2,0 c -1.3,1.1 -1.1,3.7 -2,5 -0.7,0.3 -1.3,0.7 -2,1 -3.2,3.4 -4,5 -4,12 l 1,0 0,6 -1,0 0,2 -1,0 c -1.7,2 -3.3,4 -5,6 l -2,0 0,-1 c -1.7,-0.3 -3.3,-0.7 -5,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.5 -1.3,0.5 -2,1 -7.1,1.9 -5.2,15.1 -5,24 -4.5,1.1 -7.5,4.8 -12,6 l 0,2 c -2.8,-0.7 -2.2,-0.3 -3,-3 -3.4,-0.9 -1.9,-1.3 -4,-3 -3.7,5 -2.8,-0.9 -7,0 l 0,1 c -2,0.7 -4,1.3 -6,2 l 0,1 c -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -3,0.3 -6,0.7 -9,1 l 0,-1 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2,-0.7 -4,-1.3 -6,-2 -0.3,-0.7 -0.7,-1.3 -1,-2 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.7,-1 -1.3,-2 -2,-3 -1,-0.3 -2,-0.7 -3,-1 -0.4,7.3 -1,16.3 -1,25 l 0,8 1,0 0,7 -2,0 0,1 -2,0 0,1 c -0.7,0.3 -1.3,0.7 -2,1 l 0,13 c -1.1,1.1 -0.4,0 -1,2 -1,-0.3 -2,-0.7 -3,-1 l 0,1 c -2.7,1.2 -4.2,1.8 -5,5 l -4,0 c -0.3,1 -0.7,2 -1,3 -1.3,-0.3 -2.7,-0.7 -4,-1 -0.3,-0.7 -0.7,-1.3 -1,-2 -1,0.3 -2,0.7 -3,1 -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 c -1.8,-1.4 -2,-1.6 -5,-2 -1.9,2.1 -4.6,2.4 -7,4 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -3,0 0,1 -2,0 0,1 -2,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 c -0.6,0.4 -0.8,1.3 -2,2 0.6,3.1 1,6.7 1,11 -5.1,1 -6.8,4.3 -12,5 -1.1,-2.6 -6.5,-10.5 -12,-8 -0.7,1 -1.3,2 -2,3 l -2,0 0,1 -3,0 0,1 -2,0 0,1 -3,0 0,1 -2,0 0,1 c -2,0.3 -4,0.7 -6,1 l 0,1 -5,0 0,1 c -1.3,0.3 -2.7,0.7 -4,1 l 0,1 c -2.3,0.3 -4.7,0.7 -7,1 -4.6,1.7 -9.7,4.7 -15,6 0.3,4 0.7,8 1,12 -3.1,0.7 -8.3,3.2 -10,2 -2.5,-0.7 -1.6,-0.5 -3,-2 l -1,0 0,-2 c -1.3,-1 -2.7,-2 -4,-3 -0.3,-0.7 -0.7,-1.3 -1,-2 l -3,0 c -1.1,0.9 -5.6,2.5 -8,2 l 0,-1 -4,0 c -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,1 -2,0 0,1 c -3.3,0.7 -6.7,1.3 -10,2 l 0,1 -3,0 0,1 -3,0 0,1 -4,0 0,1 c -3.7,0.3 -7.3,0.7 -11,1 l 0,1 c -4,0.3 -8,0.7 -12,1 -0.3,0.7 -0.7,1.3 -1,2 l -2,0 0,12 c -4.3,0.7 -8.7,1.3 -13,2 -0.7,-3.2 -1.5,-1.9 -2,-3 -0.3,-2.3 -0.7,-4.7 -1,-7 l -1,0 0,-1 -4,0 c -2.7,2.3 -9,0.8 -13,2 l 0,1 -7,0 0,1 -8,0 0,1 -8,0 0,1 -7,0 0,1 c -3,-0.3 -6,-0.7 -9,-1 l 0,1 -3,0 0,1 c -8,0.7 -16,1.3 -24,2 l 0,13 c -4,0.3 -8,0.7 -12,1 l 0,-1 -1,0 c -0.2,-4.9 -1.7,-6.1 -2,-11 -32.7,0.3 -65.3,0.7 -98,1 -1,3.7 -2,7.3 -3,11 l -11,0 c -0.7,-1.9 -1,-3.9 -1,-7 l -1,0 0,-6 c -6,-0.3 -12,-0.7 -18,-1 l 0,-1 c -7.7,-0.3 -15.3,-0.7 -23,-1 l 0,-1 -8,0 0,-1 -7,0 c -7.8,-2.3 -16.1,-2.9 -26,-3 -1.7,3.3 -3.3,6.7 -5,10 l -4,0 0,-1 -8,0 0,-12 -1,0 0,-1 c -6.3,-1 -12.7,-2 -19,-3 l 0,-1 -3,0 0,-1 -6,0 0,-1 c -3.3,-0.3 -6.7,-0.7 -10,-1 l 0,-1 -3,0 0,-1 -4,0 0,-1 -5,0 c -5.4,-1.7 -8.7,-3.8 -16,-4 l -6,9 -12,-3 c -0.1,-4.3 0.4,-7.9 1,-11 l -1,0 0,-1 c -5.6,-0.1 -8.1,-2.6 -12,-4 l -4,0 0,-1 -3,0 c -2.7,-1 -5.3,-2 -8,-3 -0.3,-1.7 -0.7,-3.3 -1,-5 l -3,0 c -0.7,-1 -1.3,-2 -2,-3 l -1,0 0,-2 c -0.6,-0.8 -2,-0.8 -3,-2 -1,0.3 -2,0.7 -3,1 l 0,1 -2,0 c -2.9,1.9 -0.4,3.2 -6,4 -1.5,-1.8 -2.7,-1.9 -6,-2 -2,2.3 -4,4.7 -6,7 l -5,0 c -1.4,-1.4 -5.6,-2.5 -8,-3 0.3,-4 0.7,-8 1,-12 l -1,0 0,-1 -3,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 l -2,0 0,-1 -2,0 0,-1 -2,0 0,-1 c -1.3,-0.3 -2.7,-0.7 -4,-1 l 0,-1 -2,0 0,-1 -2,0 -2,-2 -2,0 c -0.3,-0.7 -0.7,-1.3 -1,-2 -2.5,-1.7 -4.4,-2.5 -8,-3 -1.6,2 -4,3.4 -7,4 l 0,-2 -1,0 0,3 c -2.4,0.5 -3.1,1.2 -5,2 l 0,-2 c -1.1,-1.1 -0.4,0 -1,-2 -1,0.3 -2,0.7 -3,1 l 0,-1 c -1.2,-0.9 -1.3,-2.5 -2,-3 -2.7,-1 -5.3,-2 -8,-3 l 0,-13 c -5.1,-2.5 -6.2,-3.2 -6,-11 1.5,-1.7 1,-5.8 1,-9 l 0,-22 c -5,0.5 -6.6,3.2 -10,5 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 -1.3,0.3 -2.7,0.7 -4,1 -0.3,0.7 -0.7,1.3 -1,2 l -7,0 0,1 -2,0 c -3.8,1.9 -4.1,3.6 -10,4 -1.7,-2 -4.4,-3 -6,-5 -3,0.7 -6,1.3 -9,2 -1.3,1.7 -2.7,3.3 -4,5 l -1,-1 c -2.4,-1 -3.2,-1.1 -4,-4 -1,-0.3 -2,-0.7 -3,-1 l 0,-1 -2,0 0,-1 c -1,0.3 -2,0.7 -3,1 l 0,-19 c -5.2,-3 -8.7,-10.3 -15,-12 l 0,1 -9,3 c -2.3,-2.7 -4.7,-5.3 -7,-8 0.3,-4.7 0.7,-9.3 1,-14 l -1,0 0,-2 c -1,-0.7 -2,-1.3 -3,-2 l 0,-1 c -0.7,-0.3 -1.3,-0.7 -2,-1 l 0,-2 c -1.9,-2.6 -3.8,-1.7 -5,-6 -4.3,1 -8.7,2 -13,3 -1.9,-3.3 -4.9,-4.8 -6,-9 l 1,0 0,-6 1,0 c 0.7,-3.7 1.3,-7.3 2,-11 l -1,0 c -0.3,-1.3 -0.7,-2.7 -1,-4 -0.7,-0.3 -1.3,-0.7 -2,-1 -0.3,-1.7 -0.7,-3.3 -1,-5 -4.7,0.3 -9.3,0.7 -14,1 -0.8,-3.2 -4.3,-6.3 -3,-11 l 1,0 0,-5 1,0 0,-2 1,0 0,-5 1,0 0,-5 1,0 c 0.9,-3.2 -1.8,-9.7 -3,-11 -1.9,2.1 -0.5,0 -3,1 -3.9,1.5 -6.9,1.4 -9,-2 l -1,0 0,-3 -1,0 0,-3 -1,0 c 0.3,-1.7 0.7,-3.3 1,-5 l 1,0 0,-3 1,0 c 0.7,-3 1.3,-6 2,-9 -3.7,0.3 -5.5,1.5 -8,-1 -1.1,-1.1 -0.4,0 -1,-2 -3.7,-4 2.4,-17.5 3,-22 l -2,0 c -1.8,-1.2 -1.1,-8 -1,-11 l 1,0 0,-4 1,0 c 0.7,-3 1.3,-6 2,-9 -0.7,-0.3 -1.3,-0.7 -2,-1 0.3,-1 0.7,-2 1,-3 -0.4,-1.4 -1.9,-6.1 -1,-9 l 1,0 c 0.3,-2.3 0.7,-4.7 1,-7 l 1,0 c 0.3,-1.3 0.7,-2.7 1,-4 l -2,0 7.03178,-17.61653 0.647244,-3.61652 26.132415,0.40255 -1.710803,3.11334 L 49.8,2.5 c -0.3,2 0.1,4 -0.3,6 -4,10.7 -0.5,25.7 3,35 0.3,2.3 0.7,4.7 1,7 l 1,0 0,5 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,3 1,0 0,4 c 0.7,0.3 1.3,0.7 2,1 l 0,3 1,0 c 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,3 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 l 1,0 0,2 1,0 0,2 1,0 0,2 2,2 0,2 c 0.7,0.3 1.3,0.7 2,1 0.3,1.3 0.7,2.7 1,4 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 1,0 c 0.3,1 0.7,2 1,3 0.7,0.3 1.3,0.7 2,1 l 0,2 c 1,0.7 2,1.3 3,2 l 0,2 c 2.3,2 4.7,4 7,6 l 0,2 c 4.3,4 8.7,8 13,12 3.2,3.2 3.8,6.7 10,7 0.8,-1.2 0,0 1,-1 1,-1 -0.2,-0.3 1,-1 l 1,0 c 0.3,-0.7 0.7,-1.3 1,-2 l 4,0 c 0.7,-1 1.3,-2 2,-3 3.6,-2 4.4,1.5 6,-4 z"]}]};
"use strict";
Travian.Service.GlobalStateService = function(a, c, b) {
  var l = null, h = [];
  return new function() {
    this.Wc = function(g, e) {
      if("undefined" != typeof g.serial) {
        if(-1 !== h.indexOf(g.serial)) {
          return
        }
        h.push(g.serial);
        1E3 < h.length && (h = h.slice(0, 1001))
      }
      if("undefined" !== typeof g.error) {
        var m = g.error, f = m.message, n = !0;
        "Maintenance" == f && "undefined" == typeof a.windows.maintenance && (a.loggedIn = !1, a.openWindow("maintenance"));
        if(f == PlayerPunishment.TYPE_AUTO_BAN || f == PlayerPunishment.TYPE_SUSPENDED || f == PlayerPunishment.TYPE_LOCKED || f == PlayerPunishment.TYPE_ISOLATED) {
          n = m.params, n.punishment = f, "undefined" == typeof a.windows.playerLocked && a.openWindow("playerLocked", n), n = !1
        }
        "worldEnded" == f && ("undefined" == typeof a.windows.worldEnded && "undefined" == typeof a.windows.worldEndedModal && a.openWindow("worldEndedModal"), a.serverStatus = "worldEnded", n = !1);
        "actionLocked" == f.split(".")[0] && (f = Travian.translate("Error." + f.split(".")[0], {param:f.split(".")[1]}));
        n && ("undefined" != typeof m["class"] && (f += "<br/>\nClass: " + m["class"]), "undefined" != typeof m.file && (f += "<br/>\nFile: " + m.file), "undefined" != typeof m.line && (f += "<br/>\nLine: " + m.line), b.Qa(f, "error"))
      }
      "undefined" != typeof g.error && "Authentication failed" == g.error.message && a.$broadcast("forceLogout");
      "undefined" != typeof g.ignoreSerial && null != l && (l += parseInt(g.ignoreSerial));
      "undefined" != typeof g.serial && (null != l && l < g.serial - 1 && 0 != g.serial && (g.missedPackets = {from:l + 1, to:g.serial - 1}), l = g.serial);
      if("object" === typeof g && "object" === typeof g.response) {
        if("object" === typeof g.event) {
          for(m = 0;m < g.event.length;m++) {
            if(f = g.event[m], "invalidateCache" == f.name) {
              for(f = Cache.rb(f.data), n = 0;n < f.length;n++) {
                Cache.t(f[n], 1)
              }
            }else {
              a.$broadcast(f.name, f.data)
            }
          }
        }
        "object" === typeof g.cache && 0 < g.cache.length && Cache.fill(g, g.serialNo);
        "undefined" != typeof g.time && 0 < e && c.Dh(g.time, e);
        if("undefined" !== typeof g.debug) {
          for(m = 0;m < g.debug.length;m++) {
            a.$broadcast("debug", g.debug[m]), "" != g.debug[m] && b.Qa(g.debug[m], "debug")
          }
        }
        requestAngularApply()
      }
    }
  }
};
Travian.Service.GlobalStateService.$inject = ["$rootScope", "ServertimeService", "NotificationService"];
function oa() {
  var a = this;
  this.Bb = 0;
  this.collectionModel = null;
  this.Ce = 20;
  this.log = function(b, c) {
    c > a.Ce && console.log("[Cache] " + b)
  };
  this.c = {};
  this.xa = {};
  this.gc = {};
  this.Fb = {};
  this.hb = null;
  this.Ea = [];
  this.qc = function() {
    a.log("Request to Server for " + a.Ea.length + " Sets", 1);
    Travian.request("cache/get", {names:a.Ea});
    a.Ea = [];
    a.hb = null
  };
  var c = !1;
  this.get = function(b, l, h) {
    var g = b._dbString;
    1 < arguments.length && (g = b._dbString + l);
    var e = !1;
    2 < arguments.length && 0 > h && (e = !0);
    var m = (new Date).getTime();
    "undefined" != typeof a.xa[g] && a.xa[g] < m && (delete a.xa[g], c || (e = !0));
    e && (a.log("Force Get: " + g, 0), null == a.hb && (a.hb = window.setTimeout(a.qc, 10)), a.Ea.push(g), 2 < arguments.length && 0 < h && "undefined" == typeof a.xa[g] && (a.xa[g] = m + 1E3 * h));
    a.log("Getting " + g, 0);
    if("undefined" != typeof a.c[g]) {
      return a.log("Success! " + g, 2), a.c[g]
    }
    c || (null == a.hb && (a.hb = window.setTimeout(a.qc, 10)), a.Ea.push(g));
    e = new b;
    a.c[g] = e;
    a.c[g].serverId = g;
    2 < arguments.length && 0 < h && "undefined" == typeof a.xa[g] && (a.xa[g] = m + 1E3 * h);
    a.log("Cache miss! Returning " + g + " dummy.", 2);
    return e
  };
  this.Ee = function(a, c, h, g) {
    h.lastFilled = (new Date).getTime();
    h.serverId = a;
    a = h.set(c, !1, g);
    "retry" == a && (window.setTimeout(function() {
      h.set(c, !1, g)
    }, 500), a = !1);
    return a
  };
  this.fill = function(b, c) {
    if(null == b || "" == b) {
      return!1
    }
    if("undefined" != typeof b.cache) {
      a.Bb++;
      for(var h = [], g = [], e = 0;e < b.cache.length;e++) {
        var m = b.cache[e], f = m.name.split(":"), n = "Collection" == f[0], q = f[0] + ":";
        "undefined" == typeof a.Fb[q] && 2 < f.length && (q = f[0] + ":" + f[1] + ":");
        var p = a.c[m.name];
        "undefined" != typeof p ? (a.log("Updating " + m.name, 3), n || !p.Re || !c || p.Re <= c ? (c && (p.Re = c), a.Ee(m.name, m.data, p, c), h.push(p), p.filled = !0) : g.push(p)) : (a.log("Filling " + m.name, 1), "undefined" !== typeof a.Fb[q] ? (p = null, n && (p = f[1]), f = new a.Fb[q](p), !1 !== a.Ee(m.name, m.data, f) ? (a.c[m.name] = f, a.log("Classname " + q, 0), h.push(f), a.c[m.name].filled = !0) : a.log("Ignoring it. Invalid operation. " + m.name, 1)) : a.log("Unknown Class " + q, 
        1))
      }
      for(e = 0;e < h.length;e++) {
        h[e].callSubscribers()
      }
      a.Bb--;
      return h.concat(g)
    }
  };
  this.Xd = function() {
    for(var b in a.c) {
      a.A(b)
    }
  };
  this.A = function(b, c) {
    var h = b;
    "undefined" != typeof b.serverId && (h = b.serverId);
    a.xa[h] = 0;
    "undefined" != typeof a.c[h] && ("undefined" != typeof c ? delete a.c[h] : a.c[h].filled = !1);
    if("undefined" != typeof a.gc[h]) {
      for(var g = 0, e = a.gc[h].length;g < e;g++) {
        a.A(a.gc[h][g])
      }
      a.log("Deleting entry " + h, 1);
      delete a.gc[h]
    }
  };
  this.t = function(b, c) {
    ((new Date).getTime() - b.lastFilled) / 1E3 > c && a.get({_dbString:b.serverId}, "", -1)
  };
  this.Tg = function(b) {
    return"undefined" != typeof a.c[b] ? a.c[b].filled : !1
  };
  this.rb = function(b) {
    var c = b.length, h = [], g;
    for(g in a.c) {
      g.substr(0, c) == b && h.push(a.c[g])
    }
    return h
  };
  this.register = function(b, c, h) {
    b.prototype.filled = !1;
    1 < arguments.length ? (b._dbString = c, b.Md = 2 < arguments.length ? h : 0) : b._dbString = "undefined" != typeof b.name ? b.name + ":" : b.toString().match(/^function\s*([^\s(]+)/)[1] + ":";
    b.get = function() {
      for(var c = "", e = 0, m = arguments.length;e < m;e++) {
        0 < e && (c += ":"), c += arguments[e]
      }
      return a.get(b, c, b.Md)
    };
    b.getCollection = function() {
      for(var c = "", e = 0, m = arguments.length;e < m;e++) {
        0 < e && (c += ":"), c += arguments[e]
      }
      return a.get(a.collectionModel, b._dbString + c, b.Md)
    };
    b.ii = b;
    a.Fb[b._dbString] = b;
    a.Fb["Collection:" + b._dbString] = a.collectionModel;
    b.prototype.subscribe = function(a) {
      this.filled && a(this);
      "undefined" == typeof this.va && (this.va = []);
      this.va.push({fct:a});
      a = 0;
      for(var b = this.va, c = 0;c < b.length;c++) {
        null != b[c] && a++
      }
      Cache.log("(+) Subscribers to " + this.serverId + ": " + a, 4);
      return this.va.length - 1
    };
    b.prototype.callSubscribers = function() {
      if("undefined" != typeof this.va) {
        for(var a = this.va, b = 0;b < a.length;b++) {
          null != a[b] && a[b].fct(this)
        }
      }
    };
    b.prototype.unsubscribe = function(a) {
      if("undefined" == typeof this.va) {
        return!1
      }
      this.va[a] = null;
      a = 0;
      for(var b = this.va, c = 0;c < b.length;c++) {
        null != b[c] && a++
      }
      Cache.log("(-) Subscribers to " + this.serverId + ": " + a, 4)
    }
  };
  this.Ja = function(a, l) {
    c = !0;
    l = Array.prototype.slice.call(arguments, 1);
    var h = a.apply(this, l);
    c = !1;
    return h
  };
  this.cb = function(a, c) {
    for(var h = !0, g = {}, e = 0;e < a.length;e++) {
      if(a[e] instanceof AbstractModel || a[e] instanceof AbstractCollection) {
        var m = a[e].filled;
        a[e].filled = !1;
        var f = a[e].subscribe(c);
        a[e].filled = m;
        g[f] = a[e];
        h = h && m
      }
    }
    h && c();
    return function() {
      for(var a in g) {
        g[a].unsubscribe(a)
      }
    }
  }
}
window.Cache = new oa;
Travian.htmlFilters.i18ndt = '<span i18ndt="{{_?_}}" format="mediumTime"></span>';
Travian.htmlFilters.i18ndtshort = '<span i18ndt="{{_?_}}" format="short"></span>';
Travian.htmlFilters.i18ndtdate = '<span i18ndt="{{_?_}}" format="shortDate"></span>';
Travian.htmlFilters.i18ndtMediumDate = '<span i18ndt="{{_?_}}" format="mediumDate"></span>';
Travian.htmlFilters.i18ndtOffset = '<span i18ndt="{{_?_}}" format="mediumTime" fast-offset="true"></span>';
Travian.htmlFilters.countdown = '<span countdown="{{_?_}}"></span>';
Travian.htmlFilters.bold = {tag:"b"};
Travian.htmlFilters.r = "<br />";
Travian.htmlFilters.itemStart = "<li>";
Travian.htmlFilters.itemEnd = "</li>";
Travian.htmlFilters.playerLink = '<player-link class="truncated" playerId="{{_?_}}" playerName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></player-link>';
Travian.htmlFilters.villageLink = '<village-link class="truncated" villageId="{{_?_}}" villageName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></village-link>';
Travian.htmlFilters.allianceLink = '<alliance-link class="truncated" allianceId="{{_?_}}" allianceName="{{_?_}}" nolink="{{_?_}}" showMissingLink="true"></alliance-link>';
Travian.htmlFilters.troopLink = '<troop-link trooptype="{{_?_}}"></troop-link>';
Travian.htmlFilters.buildingLink = '<building-link building-type="{{_?_}}"></building-link>';
Travian.htmlFilters.icon = '<i class="icon {{_?_}}"></i>';
Travian.htmlFilters.coords = '<coordinates x="{{_?_}}" y="{{_?_}}"></coordinates>';
Travian.htmlFilters.plainCoords = '<coordinates x="{{_?_}}" y="{{_?_}}" nolink="true"></coordinates>';
Travian.htmlFilters.HHMMSS = "{{_?_|HHMMSS}}";
Travian.htmlFilters.HHMM = "{{_?_|HHMM}}";
Travian.htmlFilters.fromNow = '<span i18ndt="{{_?_}}" relative="from"></span>';
Travian.htmlFilters.truncate = '<span class="truncated">{{_?_}}</span>';
Travian.htmlFilters.percent = "{{_?_| bidiNumber:'percent':false:false}}";
Travian.htmlFilters.signedPercent = "{{_?_| bidiNumber:'percent':true:false}}";
Travian.htmlFilters.signed = "{{_?_| bidiNumber:'':true:false}}";
Travian.htmlFilters.ratio = '<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_"></span>';
Travian.htmlFilters.ratioStyled = '<span class="values" ng-bind-html="0 | bidiRatio:_?_:_?_:true"></span>';
Travian.htmlFilters.translate = '<translate options="{{::_?_}}">?</translate>';
Travian.htmlFilters["short"] = "{{::_?_|shortBigNumber:_?_}}";
Travian.datetimeFormats = {0:{fullDate:"EEEE, d. MMMM y", longDate:"d. MMMM y", medium:"dd.MM.yyyy HH:mm:ss", mediumDate:"dd.MM.yyyy", mediumTime:"HH:mm:ss", "short":"dd.MM.yy HH:mm", shortDate:"dd.MM.yy", shortTime:"HH:mm", veryShort:"dd.MM. | HH:mm"}, 1:{fullDate:"EEEE, MMMM d, y", longDate:"MMMM d, y", medium:"MM/dd/yyyy h:mm:ss a", mediumDate:"MM/dd/yyyy", mediumTime:"h:mm:ss a", "short":"M/d/yy h:mm a", shortDate:"M/d/yy", shortTime:"h:mm a", veryShort:"MM/dd | HH:mm"}, 2:{fullDate:"EEEE, d MMMM y", 
longDate:"d MMMM y", medium:"dd/MM/yyyy h:mm:ss a", mediumDate:"dd/MM/yyyy", mediumTime:"h:mm:ss a", "short":"dd/MM/yy h:mm a", shortDate:"dd/MM/yy", shortTime:"h:mm a", veryShort:"dd/MM | h:mm a"}, 3:{fullDate:"EEEE, y MMMM dd", longDate:"y MMMM d", medium:"yyyy/MM/dd HH:mm:ss", mediumDate:"yyyy/MM/dd", mediumTime:"HH:mm:ss", "short":"yyyy/MM/dd HH:mm", shortDate:"yyyy/MM/dd", shortTime:"HH:mm", veryShort:"MM/dd | HH:mm"}};
if("undefined" !== typeof document) {
  var pa = function() {
    this.nf = 8;
    this.Ac = 13;
    this.pf = 27;
    this.Ld = 38;
    this.mb = 37;
    this.ob = 39;
    this.Hd = 40;
    this.of = 46;
    this.E = 69;
    this.wf = 90;
    this.jf = this.callback = null;
    for(var a = this, c = [], b = 0;255 > b;b++) {
      c[b] = !1
    }
    this.ie = function(a) {
      a || (a = window.event);
      return("undefined" == typeof a.which || "number" == typeof a.which && 0 == a.which) && "number" == typeof a.keyCode ? a.keyCode : a.which
    };
    this.fc = function(a) {
      return c[a]
    };
    this.Qg = function(b) {
      return b == a.Ld || b == a.Hd || b == a.mb || b == a.ob
    };
    document.onkeyup = function(b) {
      b = a.ie(b);
      c[b] = !1;
      if(null != a.jf) {
        return!a.jf(b)
      }
    };
    document.onkeydown = function(b) {
      b = a.ie(b);
      return c[b] || (c[b] = !0, null == a.callback) ? null != a.callback ? !1 : !0 : !a.callback(b)
    };
    window.onblur = function() {
      for(var a = 0;255 > a;a++) {
        c[a] = !1
      }
    }
  }
}
function qa(a) {
  this.value = a.value || null;
  this.Bd = a.Bd || null;
  this.Cd = a.Cd || null;
  this.current = a.current || null;
  this.Va = a.Va || null;
  this.Hb = a.Hb || null;
  this.vd = a.vd || null;
  this.Ha = a.Ha || null;
  this.td = a.td;
  this.dc = a.dc;
  this.threshold = a.threshold;
  this.Rb = a.Rb;
  this.Ua = a.Ua;
  this.config = {Kb:"ltr", sf:"rtl", rf:"\u200f", qf:"\u200e", Bc:"\u202d", Jd:"\u202e", nb:"\u202c", Id:{il:"ltr"}};
  this.units = {percent:"%", times:"\u00d7"};
  this.ud = {positive:"+", negative:"-"};
  a = {surroundingDirection:getDirection(), numberDirection:null};
  var c = getLanguage();
  a.numberDirection = this.config.Id.hasOwnProperty(c) ? this.config.Id[c] : a.surroundingDirection;
  this.Mc = a;
  a = "";
  this.units.hasOwnProperty(this.Ha) ? a = this.units[this.Ha] : "undefined" != typeof Travian.txt[this.Ha] && (a = " " + Travian.translate(this.Ha));
  this.Vh = a;
  this.dc ? (a = this.Mc.surroundingDirection, c = "", a === this.config.Kb ? c = this.config.qf : a === this.config.sf && (c = this.config.rf), a = c) : a = "";
  this.Gb = a
}
function ra(a, c, b) {
  c = "undefined" === typeof c ? a.value : c;
  if("?" == c) {
    return c
  }
  null != c && "undefined" !== typeof c && (c = parseFloat((+c).toPrecision(12)));
  var l = "";
  0 != c && "undefined" != typeof c && (l = a.td ? 0 > c ? a.ud.negative : a.ud.positive : 0 > c ? a.ud.negative : "");
  a.Kh = l;
  c = Math.abs(c);
  "undefined" != typeof a.threshold && (null != a.threshold && !1 !== a.threshold) && (c = Travian.Filter.shortBigNumber()(c, a.threshold, a.Rb));
  "undefined" != typeof a.Ua && (null != a.Ua && !1 !== a.Ua) && (c = c.toFixed(a.Ua));
  null != b && (c = '<span class="' + b + '">' + c + "</span>");
  return a.Gb + (a.Mc.numberDirection === a.config.Kb ? a.config.Bc : a.config.Jd) + a.Kh + (a.config.Bc + c + a.config.nb) + a.Vh + a.config.nb
}
function sa(a) {
  return ra(a)
}
function ta(a) {
  var c = getDirection() == a.config.Kb ? "/" : "\\", b = a.current, l = a.Va;
  a.vd ? a.Hb && (b = '<span class="amount wrapper">' + b + "</span>", l = '<span class="capacity">' + l + "</span>") : a.Hb ? (b = ra(a, a.current, "amount wrapper"), l = ra(a, a.Va, "capacity")) : (b = ra(a, a.current), l = ra(a, a.Va));
  return a.Gb + b + c + l
}
function ua(a) {
  function c(a) {
    f.currentPage = a;
    var b = m * (f.currentPage - 1);
    for(f.items.splice(0, f.items.length);b < m || b < a * m;b++) {
      f.items.push(l[b])
    }
    !0 === C && f.setActiveItem(f.items[0]);
    for(a = 0;a < f.items.length;a++) {
      if(void 0 !== h[a]) {
        if(g[a].item == f.items[a]) {
          continue
        }else {
          g[a].scope.$destroy()
        }
      }
      f.activeItem || 0 !== a || f.setActiveItem(f.items[a]);
      b = $("<div></div>").html(v);
      b = t(b, f.items[a]);
      if("undefined" !== typeof b) {
        void 0 !== h[a] ? h[a].replaceWith(b) : s.append(b);
        var e = u.$new();
        e.item = f.items[a];
        A(b)(e);
        h[a] = b;
        g[a] = {item:f.items[a], scope:e}
      }
    }
    for(a = f.items.length;a < h.length;a++) {
      g[a].scope.$destroy(), h[a].remove()
    }
    z()
  }
  function b() {
    f.pages = [];
    n = Math.ceil(l.length / (q * e));
    for(var a = 1;a <= n;a++) {
      f.pages.push(a)
    }
  }
  var l = [], h = [], g = [], e = a.rows || 1, m = e * q, f = this, n = 0, q = a.cols || 2, p = a.Ug || null, r = a.element, s = a.Mf, v = a.template, u = a.mf, t = a.ta || w(), z = a.Df || w(), A = a.compile || function() {
    return w()
  }, C = a.zi || !1;
  r.addClass("rows_" + e);
  this.activeItem = null;
  this.items = [];
  this.currentPage = null;
  this.pages = [];
  this.setItems = function(a) {
    a && "undefined" !== typeof a || (a = []);
    l = a;
    f.setActiveItem(f.activeItem);
    b();
    if(this.currentPage) {
      return c(Math.min(this.currentPage, f.pages.length)), f
    }
    c(1);
    return f
  };
  this.addItems = function(a) {
    l = l.concat(a);
    b();
    if(this.currentPage) {
      return c(this.currentPage), f
    }
    c(1);
    return f
  };
  this.nextPage = function() {
    if(f.currentPage + 1 <= n) {
      return c(f.currentPage + 1), f
    }
    c(1);
    return f
  };
  this.previousPage = function() {
    if(0 < f.currentPage - 1) {
      return c(f.currentPage - 1), f
    }
    c(n);
    return f
  };
  this.goToPage = function(a) {
    c(a)
  };
  this.setActiveItem = function(a) {
    if(!p) {
      throw"Carousel: itemPrimaryKey is not defined!";
    }
    if(a) {
      for(var b = !1, e = 0;e < l.length;e++) {
        "undefined" != typeof l[e] && l[e][p] == a[p] && (b = !0, a = l[e])
      }
      !1 === b && (a = l[0]);
      f.activeItem = a;
      u.carouselActiveItem = a
    }
  };
  this.setRows = function(a) {
    r.removeClass("rows_" + a);
    r.addClass("rows_" + a);
    e = a;
    m = e * q;
    b();
    c(1)
  }
}
function va(a) {
  function c() {
    for(var b in g) {
      if(e[b] = null, 0 < g[b].length) {
        for(var f = {type:"askForName", query:[], nameType:b}, c = 0;c < g[b].length;c++) {
          f.query.push(parseInt(g[b][c]))
        }
        g[b] = [];
        a.emit(n, f, m.kd)
      }
    }
  }
  function b(a, b, f) {
    "undefined" == typeof l[f][a] && (l[f][a] = b);
    if("undefined" != typeof h[f][a]) {
      for(var e = 0;e < h[f][a].length;e++) {
        var c = h[f][a][e];
        c.callback(b, a);
        h[f][a].splice(e, 1);
        e--
      }
      delete h[f][a]
    }
    b = b.toString().toLowerCase();
    "undefined" == typeof l[f][b] && (l[f][b] = a);
    if("undefined" != typeof h[f][b]) {
      for(e = 0;e < h[f][b].length;e++) {
        c = h[f][b][e], c.callback(a, b), h[f][b].splice(e, 1), e--
      }
      delete h[f][b]
    }
  }
  var l = {player:[], village:[], alliance:[]}, h = {player:[], village:[], alliance:[]}, g = {player:[], village:[], alliance:[]}, e = {player:null, village:null, alliance:null}, m = this, f = {}, n = "nameService";
  m.kd = function(a) {
    if(null != a) {
      if(Array.isArray(a.id)) {
        for(var e in a.name) {
          void 0 !== a.resultType[e] && (f[a.nameType + e] = a.resultType[e]), b(e, a.name[e], a.nameType)
        }
      }else {
        b(a.id, a.name, a.nameType)
      }
    }
  };
  m.tg = function(a) {
    return"undefined" !== f["player" + a] ? f["player" + a] : "normal"
  };
  m.Og = function() {
    l.player[-2] = Travian.translate("NPCGovernor");
    l.player[-1] = Travian.translate("Robber");
    l.player[0] = Travian.translate("Tribe_4");
    l.player[1] = Travian.translate("Tribe_5")
  };
  m.getNameForId = function(a, b, f) {
    "undefined" == typeof f && (f = "player");
    if(isNaN(a) || null === a) {
      b("")
    }else {
      if("undefined" != typeof l[f][a]) {
        b(l[f][a])
      }else {
        var m = null, n = (new Date).getTime();
        "undefined" == typeof h[f][a] ? (h[f][a] = [], h[f][a].push({callback:b, timestamp:n}), m = {type:"askForName", query:a, nameType:f}) : (h[f][a].push({callback:b, timestamp:n}), h[f][a][0].timestamp < n - 3E3 && (m = {type:"askForName", query:a, nameType:f}));
        null != m && (g[f].push(a), null == e[f] && (e[f] = window.setTimeout(c, 50)))
      }
    }
  };
  m.Og()
}
var ChatCache = new oa;
ChatCache.Ce = 20;
ChatCache.qc = function() {
  "undefined" == typeof ChatCache.socket ? window.setTimeout(ChatCache.qc, 100) : (ChatCache.log("Request to CHAT Server for " + ChatCache.Ea.length + " Sets", 1), ChatCache.socket.emit("chatCache", ChatCache.Ea, ChatCache.fill), ChatCache.Ea = [], ChatCache.hb = null)
};
ChatCache.Gh = function(a) {
  ChatCache.socket = a
};
Travian.Kf = function() {
  "complete" != document.readyState && "loaded" != document.readyState ? window.setTimeout(Travian.Kf, 2E3) : "undefined" === typeof Travian || "undefined" == typeof Travian.request ? 0 > window.location.href.indexOf("nocache") && window.location.replace("/?nocache" + window.location.hash) : ("undefined" !== typeof window.Bi || document.getElementById("vitruvian")) && alert("There is malware on your PC! Run a virus scanner or a malware removal tool.")
};
function wa(a, c, b, l, h, g) {
  function e() {
    var a = Math.floor(u / 2);
    0 > s.y ? (a = Math.floor(u / 2) - Math.abs(s.y), s.y = 0) : s.y + u > z.height() && (a = Math.floor(u / 2) + Math.abs(z.height() - (s.y + u)), s.y = z.height() - u);
    a -= parseInt(y.F.css("border-top-width"));
    I.css("top", a + "px")
  }
  function m() {
    var a = Math.floor(v / 2);
    0 > s.x ? (a = Math.floor(v / 2) - Math.abs(s.x), s.x = 0) : s.x + v > z.width() && (a = Math.floor(v / 2) + Math.abs(z.width() - (s.x + v)), s.x = z.width() - v);
    a -= parseInt(y.F.css("border-" + C + "-width"));
    I.css("left", a + "px")
  }
  function f() {
    switch(b) {
      case "before":
        p = C;
        break;
      case "after":
        p = D;
        break;
      case "above":
        p = "top";
        break;
      default:
        p = "bottom"
    }
  }
  function n() {
    switch(b) {
      case "before":
        b = "after";
        break;
      case "after":
        b = "before";
        break;
      case "above":
        b = "below";
        break;
      default:
        b = "above"
    }
    f()
  }
  function q() {
    var e = a[0].getBoundingClientRect(), e = {width:e.width, height:e.height, top:e.top, x:e.left};
    (0 == e.width && 0 == e.x || 0 > e.x) && window.setTimeout(y.setPosition, 50);
    "undefined" != typeof window.pageYOffset ? (e.top += window.pageYOffset, e.x += window.pageXOffset) : (e.top += $(window).scrollTop(), e.x += $(window).scrollLeft());
    t = e;
    null == b && (0 < t.width || 0 < t.x) && (b = "below", e = $("body").height(), t.top > 0.7 * e && (b = "above"), f());
    y.F.removeClass("before after above below").addClass(b);
    I.removeClass("arrowDirectionFrom arrowDirectionTo arrowDirectionDown arrowDirectionUp");
    switch(p) {
      case "right":
        s = {y:Math.floor(t.top + t.height / 2 - u / 2), x:Math.floor(t.x + t.width) + r};
        "left" == C ? I.addClass("arrowDirectionFrom") : I.addClass("arrowDirectionTo");
        break;
      case "left":
        s = {y:Math.floor(t.top + t.height / 2 - u / 2), x:Math.floor(t.x) - r};
        "left" == C ? I.addClass("arrowDirectionTo") : I.addClass("arrowDirectionFrom");
        break;
      case "top":
        s = {y:Math.floor(t.top) - r, x:Math.floor(t.x + t.width / 2 - v / 2)};
        I.addClass("arrowDirectionDown");
        break;
      default:
        s = {y:Math.floor(t.top + t.height) + r, x:Math.floor(t.x + t.width / 2 - v / 2)}, I.addClass("arrowDirectionUp")
    }
  }
  var p = "", r = 0, s = {}, v = 0, u = 0, t = {}, z = null, A = null, C = "ltr" == getDirection() ? "left" : "right", D = "ltr" == getDirection() ? "right" : "left";
  this.F = null;
  var y = this, B = !1;
  f();
  var H = -1;
  this.setPosition = function() {
    if(0 == a.length) {
      y.hide(), a = $(a.Qe), window.setTimeout(y.setPosition, 50)
    }else {
      if(v = y.F.outerWidth(), u = y.F.outerHeight(), q(), 0 == t.top && 0 == t.height) {
        y.hide(), a = $(a.Qe), window.setTimeout(y.setPosition, 50)
      }else {
        z = z || $("body");
        switch(p) {
          case "right":
            s.x + v + 10 > z.width() && (n(), q());
            e();
            break;
          case "left":
            0 > s.x - v - 10 && (n(), q());
            e();
            break;
          case "top":
            0 > s.y - u - 10 && (n(), q());
            m();
            break;
          default:
            s.y + u + 10 > z.height() && (n(), q()), m()
        }
        var b = {};
        switch(p) {
          case "right":
            b.top = s.y + "px";
            b.left = s.x + "px";
            break;
          case "left":
            b.top = s.y + "px";
            b.right = A.width() - s.x + "px";
            break;
          case "top":
            b.bottom = A.height() - s.y + "px";
            b.left = s.x + "px";
            break;
          default:
            b.top = s.y + "px", b.left = s.x + "px"
        }
        y.F.css(b);
        h && y.show();
        u == H && y.F.outerHeight() == H || -1 == H || window.setTimeout(y.setPosition, 50);
        H = u
      }
    }
  };
  this.remove = function() {
    y.F.remove();
    B = !0
  };
  this.show = function() {
    B || (y.setPosition(), y.F.css("visibility", "visible"))
  };
  this.hide = function() {
    y.F.css("visibility", "hidden")
  };
  l = "tooltip " + l;
  "undefined" !== typeof b && (l += " " + b);
  y.F = $("<div>", {"class":l});
  var I = $("<i>");
  y.F.append(I);
  this.hide();
  y.F.append($("<div>", {"class":"tooltipContent"}).append(c));
  z = z || $("body");
  z.append(y.F);
  A = $(window);
  switch(b) {
    case "before":
      r = parseInt(y.F.css("margin-" + D));
      break;
    case "after":
      r = parseInt(y.F.css("margin-" + C));
      break;
    case "above":
      r = parseInt(y.F.css("margin-bottom"));
      break;
    default:
      r = parseInt(y.F.css("margin-top"))
  }
  r += parseInt(g) || 0;
  y.F.css("margin", "0")
}
function xa(a) {
  function c(a, b) {
    a.onload = null;
    if(void 0 !== l.Pa[b]) {
      for(var e = 0;e < l.Pa[b].length;e++) {
        l.Pa[b][e](b, a)
      }
      l.Pa[b] = []
    }
  }
  this.storage = {};
  this.Pa = {};
  this.cc = a;
  var b = {}, l = this;
  this.add = function(a) {
    if(!this.storage.hasOwnProperty(a)) {
      var b = new Image;
      b.setAttribute("crossOrigin", "anonymous");
      b.src = this.cc + a + "?v=" + config.version;
      this.storage[a] = b
    }
  };
  this.get = function(a, g) {
    if("undefined" != typeof x["iso/" + a]) {
      var e = x["iso/" + a], m = x.files[e.e];
      if("undefined" == typeof b[m.src]) {
        var f = new Image;
        f.setAttribute("crossOrigin", "anonymous");
        f.src = this.cc.substr(0, this.cc.length - 4) + m.src + "?v=" + config.version;
        f.onload = function() {
          c(f.src)
        };
        b[m.src] = f
      }
      return b[m.src].complete ? {image:b[m.src], cfg:e} : null
    }
    if(null == a) {
      return null
    }
    this.storage.hasOwnProperty(a) || (f = new Image, f.setAttribute("crossOrigin", "anonymous"), f.src = this.cc + a + "?v=" + config.version, f.onload = function() {
      c(f, a)
    }, this.storage[a] = f);
    if(!0 === this.storage[a].complete) {
      return f = this.storage[a], {image:this.storage[a], cfg:{x:0, y:0, d:f.width, a:f.height}}
    }
    void 0 !== g && (void 0 === this.Pa[a] && (this.Pa[a] = []), this.Pa[a].push(g));
    return null
  };
  this.load = function(a, b, e) {
    function c(f, m) {
      n[f] = m;
      l++;
      l >= a.length && void 0 !== b && b(n, e)
    }
    for(var f = !0, n = [], l = 0, p = 0;p < a.length;p++) {
      var r = this.get(a[p], c);
      null === r ? f = !1 : c(a[p], r.image)
    }
    return f
  }
}
function ya(a, c, b, l, h) {
  function g(a) {
    Q.Cb = Math.max(Q.Cb, a)
  }
  function e() {
    E = 0;
    O > za ? N = F : (N = Aa, PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_STRATEGIC_MAP), B.heatmap && (E = B.heatmap))
  }
  function m(a, b, f, e) {
    var c = {x:a, y:b};
    a = f.T(c.x, c.y);
    var g = !1, s = !1, n = !0;
    e == m.W.Kd ? a.y < f.renderer.j.y / 2 && (n = !1) : e == m.W.Ed ? a.y < f.renderer.V.y - 1.5 * f.renderer.j.y && (n = !1) : e == m.W.mb ? (g = !0, a.x > f.renderer.j.x / 2 && (n = !1)) : e == m.W.ob && (g = !0, a.x > f.renderer.V.x - 1.5 * f.renderer.j.x && (n = !1));
    this.uc = function(a) {
      if(s) {
        return!1
      }
      a.hasOwnProperty(c.x) || (a[c.x] = {yMin:null, yMax:null});
      if(null == a[c.x].yMax || c.y > a[c.x].yMax) {
        a[c.x].yMax = c.y
      }
      if(null == a[c.x].yMin || c.y < a[c.x].yMin) {
        a[c.x].yMin = c.y
      }
      n ? (n = !1, g ? c.x++ : c.y++) : (n = !0, g ? c.y-- : c.x++);
      a = f.T(c.x, c.y);
      if(g && a.y + f.renderer.j.y > f.renderer.V.y || !g && a.x + f.renderer.j.x > f.renderer.V.x) {
        return s = !0, !1
      }
      s = !1;
      return!0
    }
  }
  function f(a) {
    a = Q.Vc(a.x, a.y);
    return{top:a.y + "px", left:a.x + "px"}
  }
  function n(a) {
    var b = !1;
    if(a.playerId == Travian.Player.data.playerId && a.village) {
      b = !1;
      if(a.village.type == Village.TYPE_MAIN || a.village.type == Village.TYPE_MAIN_TOWN) {
        b = !0
      }
      y.villageNames[a.id] = {style:f(a), name:a.village.name, type:0, isMain:b};
      b = !0
    }
    0 > a.playerId && a.village && (y.villageNames[a.id] = {style:f(a), name:a.village.name, type:a.village.type, isMain:!1}, b = !0);
    a.village && null != a.village && (B.mainVillages && (a.village.type == Village.TYPE_MAIN || a.village.type == Village.TYPE_MAIN_TOWN)) && (y.mainVillages[a.id] = f(a), b = !0);
    0 < a.cropAmount && 1 == B.cropFinder && (y.cropFields[a.id] = {style:f(a), amount:a.cropAmount}, b = !0);
    if(1 > R.indexOf(O)) {
      var e = Q.I.ng(a.id), c = Travian.Player.data.playerId, g = Travian.Player.data.uiStatus;
      if(void 0 !== e && 0 !== e.length && 0 < c && -1 == g) {
        g = !1;
        e[0].data.isGlobal && 0 == B.fieldMarkersGlobal && (g = !0);
        e[0].data.isGlobal || 0 != B.fieldMarkersPersonal || (g = !0);
        for(c = 0;c < e.length;c++) {
          if(e[c].timeAgo = e[c].getTimeAgoString(), e[c].data.minimizedState == FieldMarkerPersonal.MINIMIZED_MINIMIZED && (g = !0), e[c].data.minimizedState == FieldMarkerPersonal.MINIMIZED_MAXIMIZED && (g = !1), e[c].data.isGlobal) {
            var m = e[c].data.text.split(" ");
            1 < m.length && (e[c].data.text = m[0], m[0] === FieldMarkerGlobal.TYPE_GOVERNOR_RELOCATE ? e[c].data.relocateCellId = m[1] : e[c].data.textPlayerId = m[1])
          }
        }
        y.fieldMarkers[a.id] = {cell:a.id, style:f(a), minimized:g, markers:e, selectedMarker:0}
      }
    }
    delete y.troopMovementSprite[a.id];
    c = a.owner == Travian.Player.data.kingdomId;
    e = 0 < Travian.Player.data.allianceId && (a.ownerAllianceId == Travian.Player.data.allianceId || PlayerAllianceMapper.ha(a.playerId) == Travian.Player.data.allianceId);
    e = u.alliance && e;
    e = !(u.kingdom && c) && !e;
    if(null != a.N && 0 < a.N[Marker.TYPE_TROOP_MOVEMENT].length) {
      g = a.N[Marker.TYPE_TROOP_MOVEMENT];
      y.troopMovementSprite[a.id] = {style:f(a), movements:[]};
      for(var s = m = !1, n = !1, l = !1, h = !1, c = 0;c < g.length;c++) {
        var v = g[c].data.moveType, r = a.playerId == Travian.Player.data.playerId, p = v == Troops.MOVEMENT_TYPE_ATTACK, q = v == Troops.MOVEMENT_TYPE_RAID && !e, v = v == Troops.MOVEMENT_TYPE_SUPPORT;
        if(r && (p || q) || !r && q) {
          g[c].data.moveData.realPlayer ? (m = !0, l = !1) : m || (l = !0)
        }
        v && (n = !0);
        !r && p && (s = !0);
        h || (Travian.Player.data.hasNoobProtection || !m) || (PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_SUPPORTING), h = !0)
      }
      m && y.troopMovementSprite[a.id].movements.push("enemyAttack");
      l && y.troopMovementSprite[a.id].movements.push("robberAttack");
      n && s ? y.troopMovementSprite[a.id].movements.push("ownAttAndDef") : (n && y.troopMovementSprite[a.id].movements.push("ownType5"), s && y.troopMovementSprite[a.id].movements.push("ownType3"))
    }
    "undefined" == typeof y.villageNames[a.id] || a.village || delete y.villageNames[a.id];
    return b
  }
  function q(a, b, e) {
    this.mc = a;
    this.src = b;
    this.data = e
  }
  function p(a, b, e, f) {
    var c = {};
    c[Marker.TYPE_PLAYER] = "playerMarker";
    c[Marker.TYPE_ALLIANCE] = "allianceMarker";
    c[Marker.TYPE_COORDINATES] = "fieldMarker";
    c[Marker.TYPE_KING_VILLAGE] = "kingMarker";
    var g = "";
    "undefined" != typeof c[f.data.type] && (g = "marker/" + c[f.data.type] + "/" + c[f.data.type] + "_" + Marker.COLORS[f.data.color].name + ".png");
    "" !== g && a.push(new q(Q.T(b, e), g))
  }
  function r(a, b, e) {
    if("undefined" != typeof b.N && null != b.N && 1 == B.markers && e in b.N && 0 < b.N[e].length) {
      if(e == Marker.TYPE_TROOP_MOVEMENT) {
        for(var f = 0;f < b.N[e].length;f++) {
          p(a, b.x, b.y, b.N[e][f])
        }
      }else {
        return p(a, b.x, b.y, b.N[e][0]), !0
      }
    }
    return!1
  }
  function s(a, b, e, f, c) {
    var g = null, m = !1, s = !1, n = !1;
    if(null !== f.village) {
      var h = C.I.$b(a);
      void 0 !== h && (s = (n = h.kingdomRole == Player.KINGDOM_ROLE_DUKE) && h.kingdomId == l.data.kingdomId, m = f.village.hasActiveTreasury)
    }
    c ? null != f.ra && a == f.owner ? g = Marker.COLORS[f.ra] : a == l.data.playerId ? g = Marker.COLOR_OWN : null != f.Jb && (g = Marker.COLORS[f.Jb]) : null !== f.Oc && n ? g = Marker.COLORS[f.Oc] : null != f.ra ? g = Marker.COLORS[f.ra] : null != f.Na && (g = Marker.COLORS[f.Na]);
    null == g && (a == l.data.kingdomId || s && m ? g = Marker.COLOR_OWN : 0 < b && e == b && !s ? g = Marker.COLOR_ALLIANCE : 0 < e && "undefined" != typeof t[Alliance.NAP] ? (g = Marker.COLOR_NEUTRAL, "undefined" != typeof t[Alliance.NAP][e] ? g = Marker.TREATY_COLOR_NAP : "undefined" != typeof t[Alliance.BND][e] ? g = Marker.TREATY_COLOR_BND : "undefined" != typeof t[Alliance.WAR][e] && (g = Marker.COLOR_ENEMY)) : g = Marker.COLOR_NEUTRAL);
    return g
  }
  function v() {
    L = !1;
    b.dg()
  }
  var u = {kingdom:!0, alliance:!0};
  this.Fh = function(a) {
    u = a
  };
  var t = {}, z = !1;
  this.renderer = c;
  this.I = a;
  var A = new function() {
    function a(e) {
      if(e == Village.TYPE_OASIS) {
        e = f - s;
        var c = b + s, g = f + s, m, n, h = [];
        for(m = b - s;m <= c;m++) {
          for(n = e;n <= g;n++) {
            h.push(new V(m, n))
          }
        }
        return h
      }
      if(e == Village.TYPE_NORMAL) {
        e = [];
        for(c = Math.floor(b - s);c <= b + s;c++) {
          for(g = Math.floor(f - s);g <= f + s;g++) {
            m = Math.sqrt((c - b) * (c - b) + (g - f) * (g - f)), m <= s && e.push(new V(c, g))
          }
        }
        return e
      }
    }
    var b, f, e, c, m, s;
    return{init:function(n, h, l) {
      b = h.x;
      f = h.y;
      e = new V(b, f);
      fa = {ei:e, Gc:{}, sa:l};
      s = l;
      m = a(n);
      c = window.setTimeout(function() {
        for(var a, b, f = 0;f < m.length;f++) {
          a = m[f].x, b = m[f].y, I.push(m[f]), fa.Gc[a + "_" + b] = m[f]
        }
        g(1)
      }, 400)
    }, remove:function() {
      null != c && (window.clearTimeout(c), c = null);
      for(var a = 0;a < m.length;a++) {
        I.push(m[a])
      }
    }}
  };
  this.Cb = 2;
  var C = this, D = 20, y = {villageNames:{}}, B = {showFilters:!1, borders:!0, kingdom:!0, markers:!0, fieldMarkersGlobal:!0, fieldMarkersPersonal:!0, heatmap:0, cropFinder:!1, mainVillages:!1}, H = {}, I = [], G = null, J = null, N = F, E = 0, R = [1, 0.5, 0.25];
  za = R[2];
  var O = 1, L = !1, X = 0, Z = 0, M = {x:1, y:1}, T = !1, da = !1, P = new V, ia = new V, K = new V, W = new V, aa = null, fa = null, ma = ["canvasMap", "tileInformationPosition", "overlayMarkers"], ba = $("html").hasClass("mobile") || 0 < window.location.href.indexOf("mobile"), Q = this;
  Settings.get(Travian.Player.data.playerId);
  this.rh = function(a) {
    t = a
  };
  this.ib = function(a, b, f) {
    B[a] = b;
    c.Db(B);
    f || (c.sd(), window.setTimeout(Q.fa, 10));
    e()
  };
  this.kh = function(a) {
    delete B[a];
    c.Db(B);
    c.sd();
    window.setTimeout(Q.fa, 10);
    e()
  };
  this.pd = function(a) {
    y = a;
    y.cropFields = {};
    y.villageNames = {};
    y.mainVillages = {};
    y.troopMovementSprite = {};
    y.fieldMarkers = {};
    y.filters = B;
    y.removeFilter = Q.kh;
    y.tiStyle = {visibility:"hidden"}
  };
  this.fb = function() {
    y.villageNames = {}
  };
  this.qd = function(a, b) {
    var f = R[a];
    y.zoomLevel = a;
    b && (f = b);
    var g = this.X({x:this.renderer.D.x / 2, y:this.renderer.D.y / 2});
    O = f;
    c.Ze(O);
    this.ga(g.x, g.y, !0, !0);
    window.setTimeout(Q.fa, 10);
    e();
    v()
  };
  this.fa = function() {
    y.cropFields = {};
    y.mainVillages = {};
    y.troopMovementSprite = {};
    H = {};
    g(2);
    K = {x:null, y:null};
    W = {x:null, y:null};
    ba ? Q.qe() : Q.re()
  };
  this.ga = function(a, b, f, e) {
    var c = this.Vc(-a, -b);
    c.x = Math.round(c.x + this.renderer.D.x / 2 - this.renderer.j.x / 2);
    c.y = Math.round(c.y + this.renderer.D.y / 2 - this.renderer.j.y / 2);
    this.pc(c.x, c.y, f);
    e || this.th(a, b)
  };
  this.th = function(a, b) {
    this.Oe();
    aa = new V(a, b);
    I.push(aa);
    this.Ub(aa.x, aa.y)
  };
  this.Oe = function() {
    if(aa) {
      var a = I.indexOf(aa);
      -1 < a && I.splice(a, 1);
      aa = null
    }
  };
  this.pc = function(a, f, e) {
    P.set(a, f);
    a = V2.tc(P, ia);
    ia = new V(P.x, P.y);
    b.Wh(this.X({x:this.renderer.D.x / 2, y:this.renderer.D.y / 2}));
    0 === a.x && 0 === a.y || e || (g(2), Math.abs(a.x) < this.renderer.D.x && Math.abs(a.y) < this.renderer.D.y && this.renderer.Jh(a));
    e = Q.X({x:128, y:68});
    e = Q.Vc(e.x, e.y);
    a = document.getElementById("overlayMarkers");
    null != a && (a.style.top = -e.y + "px", "ltr" == config.direction ? a.style.left = -e.x + "px" : a.style.right = e.x + window.innerWidth + "px")
  };
  this.Qd = function(a, b) {
    var f = Math.sqrt(Math.pow(this.renderer.sa, 2) + Math.pow(this.renderer.sa, 2)) / 2 | 0, e = f * this.renderer.j.x, f = f * this.renderer.j.y, c = this.Kc(a, b), g = new V(a, b);
    1 === c.x && (g.x = e + this.renderer.D.x / 2);
    -1 === c.x && (g.x = -e + this.renderer.D.x / 2);
    -1 === c.y && (g.y = -f + this.renderer.D.y / 2);
    1 === c.y && (g.y = f + this.renderer.D.y / 2);
    this.pc(Math.round(g.x), Math.round(g.y))
  };
  this.Kc = function(a, b) {
    var f = new V(0, 0), e = Math.sqrt(Math.pow(this.renderer.sa, 2) + Math.pow(this.renderer.sa, 2)) / 2 | 0, c = e * this.renderer.j.x, e = e * this.renderer.j.y, g = a - this.renderer.D.x / 2, m = b - this.renderer.D.y / 2, s = b - this.renderer.D.y / 2;
    c < a - this.renderer.D.x / 2 && (f.x = 1);
    -c > g && (f.x = -1);
    e < s && (f.y = 1);
    -e > m && (f.y = -1);
    return f
  };
  this.Me = function(a, b) {
    var f = this.Kc(a, b);
    if(0 === f.x && 0 === f.y) {
      return 0
    }
    f = Math.sqrt(Math.pow(this.renderer.sa, 2) + Math.pow(this.renderer.sa, 2)) / 2 | 0;
    return Math.round((new V(a, b)).$d(new V(f * this.renderer.j.x, f * this.renderer.j.y)))
  };
  this.Ag = function(a, b) {
    var f = this.Me(a, b) / 100;
    return f ? Math.round(0.5 * (f - 6)) || 1 : 1
  };
  this.Vc = function(a, b) {
    return new V(this.renderer.Y.x * (a + b), this.renderer.Y.y * (a - b))
  };
  this.T = function(a, b) {
    return new V(this.renderer.Y.x * (a + b) + P.x, this.renderer.Y.y * (a - b) + P.y)
  };
  this.X = function(a) {
    var b = a.y - P.y - this.renderer.Y.y;
    a = ((a.x - P.x - this.renderer.Y.x) * this.renderer.Y.y + this.renderer.Y.x * b) / (2 * this.renderer.Y.x * this.renderer.Y.y);
    return new V(a, a - b / this.renderer.Y.y)
  };
  this.Xb = function() {
    return this.X({x:this.renderer.D.x / 2, y:this.renderer.D.y / 2})
  };
  m.W = {Kd:1, mb:2, Ed:3, ob:4};
  this.Fg = function() {
    for(var a = {}, b = this.X(new V(this.renderer.j.x, this.renderer.j.y)).round(), f = this.X(new V(this.renderer.j.x, this.renderer.V.y - this.renderer.j.y)).round(), e = this.X(new V(this.renderer.V.x - this.renderer.j.x, this.renderer.j.y)).round(), c = new m(b.x, b.y, this, m.W.Kd), f = new m(f.x, f.y, this, m.W.Ed), b = new m(b.x, b.y, this, m.W.mb), e = new m(e.x, e.y, this, m.W.ob), g = !0, s = !0, n = !0, h = !0;g || s || n || h;) {
      g = c.uc(a), s = f.uc(a), n = b.uc(a), h = e.uc(a)
    }
    return a
  };
  this.jg = function() {
    var a = this.Fg(), b = H, f = [], e;
    for(e in a) {
      for(var c = a[e].yMin;c <= a[e].yMax;c++) {
        if("undefined" == typeof b[e] || c < b[e].yMin || c > b[e].yMax) {
          f.push({x:1 * e, y:1 * c});
          var g = this.I.P(e + "_" + c, N, E);
          g.wb = !0;
          n(g)
        }
      }
    }
    for(e in b) {
      for(c = b[e].yMin;c <= b[e].yMax;c++) {
        if("undefined" == typeof a[e] || c < a[e].yMin || c > a[e].yMax) {
          g = this.I.P(e + "_" + c, N, E), g.wb = !1, delete y.villageNames[g.id], delete y.cropFields[g.id], delete y.troopMovementSprite[g.id], delete y.mainVillages[g.id], delete y.fieldMarkers[g.id]
        }
      }
    }
    H = a;
    return f
  };
  this.Yh = function(a, f) {
    if(!U.Sb && Travian.Player.isOnMap()) {
      var e = U.M(), c = new V(e.current.x - J.left, e.current.y - J.top), e = this.X(c), g = R.indexOf(O);
      if(1 > f) {
        g < R.length - 1 && (g++, h.U(Ba))
      }else {
        if(1 <= g) {
          g--, h.U(Ca)
        }else {
          var m = this.I.P(K.x + "_" + K.y, N, E);
          if(m.playerId == Travian.Player.data.playerId && m.village) {
            var s = 0, n;
            for(n in y.windows) {
              y.windows.hasOwnProperty(n) && s++
            }
            if(0 < s) {
              return
            }
            b.If(m.id);
            h.U(Ca);
            y.openPage("resources")
          }
        }
      }
      this.qd(g);
      n = this.Xb();
      c = this.X(c);
      n.x -= c.x - e.x;
      n.y -= c.y - e.y;
      this.ga(n.x, n.y, !0, !0);
      0 < this.Me(P.x, P.y) && this.Qd(P.x, P.y)
    }
  }.bind(this);
  this.Gg = function() {
    if(!da) {
      L && v();
      var a = U.M(), a = new V(a.current.x - J.left, a.current.y - J.top), f = Q.X(new V(a.x, a.y)).round(), a = Q.I.P(f.x + "_" + f.y, N, E), f = Q.T(f.x, f.y);
      a.Vb = {};
      a.Vb.left = Math.round(f.x - c.offset.x);
      a.Vb.top = Math.round(f.y - c.offset.y);
      a.j = {};
      a.j.width = c.j.x;
      a.j.height = c.j.y;
      a.ni = O;
      L = !0;
      X = Math.round(f.x + J.left) + a.j.width / 2;
      Z = Math.round(f.y + J.top) + a.j.height / 2;
      f = a.id;
      null != a.village && null != a.village.villageId && (f = a.village.villageId);
      b.eg(a, Q.I.ke(f))
    }
  }.bind(this);
  this.rd = function(a) {
    y.tiStyle = {visibility:"visible"};
    fa && (A.remove(), fa = null);
    var b = this.I.P(a.x + "_" + a.y, N, E), f = b.owner;
    y.Village = Village;
    y.tiInfos = {};
    y.tiInfos.coords = {x:a.x, y:a.y};
    if(O > za) {
      if(f != B.kingdom) {
        for(var e in H) {
          for(a = H[e].yMin;a < H[e].yMax;a++) {
            var c = this.I.oa(e + "_" + a, N);
            0 < c && (c == B.kingdom || c == f) && I.push({x:1 * e, y:1 * a})
          }
        }
        Q.ib("kingdom", f, !0)
      }
      if(null !== b.village || null !== b.oasis) {
        if(0 < b.playerId) {
          var g = this.I.$b(b.playerId);
          "undefined" != typeof g && (y.tiInfos.playerId = b.playerId, y.tiInfos.playerName = g.name, y.tiInfos.inactive = "0" === g.active, y.tiInfos.allianceTag = g.allianceTag, y.tiInfos.kingStatus = g.kingStatus)
        }
        f = this.I.ke(b.id);
        y.tiInfos.movements = this.I.Dg(b.id);
        "undefined" != typeof f && (y.tiInfos.report = f);
        if(null !== b.oasis) {
          y.tiInfos.oasis = b.oasis;
          y.tiInfos.oasisBonus = {};
          for(var m in b.oasis.bonus) {
            0 < b.oasis.bonus[m] && (y.tiInfos.oasisBonus[Resources.STRING[m]] = b.oasis.bonus[m])
          }
          y.tiInfos.villageName = Travian.translate("Oasis.unoccupied");
          b.oasis.oasisStatus == Village.OASIS_STATUS_WILD && (f = MapDetails.get(b.id), Cache.t(f, 60), y.tiInfos.oasisDetails = f);
          if("undefined" != typeof b.oasis.kingdomInfluence && null != b.oasis.kingdomInfluence) {
            g = Travian.Player.data.kingdomId;
            f = parseInt(b.oasis.kingdomInfluence[g]);
            e = 0;
            for(var s in b.oasis.kingdomInfluence) {
              s != g && b.oasis.kingdomInfluence[s] > e && (e = b.oasis.kingdomInfluence[s])
            }
            y.tiInfos.influence = Math.floor(100 * (f / (f + e)))
          }
          if("undefined" != typeof b.oasis.playerInfluence && null != b.oasis.playerInfluence) {
            y.tiInfos.ownOasisBonus = {};
            for(m in b.oasis.ownBonus) {
              0 < b.oasis.ownBonus[m] && (y.tiInfos.ownOasisBonus[Resources.STRING[m]] = b.oasis.ownBonus[m])
            }
            y.tiInfos.ownOasisRank = "undefined" != typeof b.oasis.playerInfluence[Travian.Player.data.playerId] ? b.oasis.playerInfluence[Travian.Player.data.playerId].rank : 0;
            m = 0;
            for(var n in b.oasis.playerInfluence) {
              m++
            }
            y.tiInfos.oasisPlayerAmount = m
          }
          A.init(Village.TYPE_OASIS, b, Travian.Config.oasisConfig.usableArea)
        }else {
          if(y.tiInfos.villageName = b.village.name, y.tiInfos.population = b.village.population, y.tiInfos.isMainVillage = Village.isMainVillage(b.village.type), "undefined" != typeof b.village.influenceSize && A.init(Village.TYPE_NORMAL, b, b.village.influenceSize), -1 == b.playerId && (f = MapDetails.get(b.id), Cache.t(f, 60), y.tiInfos.robberVillageDetails = f), "undefined" != typeof b.influence && "undefined" != typeof g && !g.kingStatus) {
            m = 0;
            if(l.data.kingdomRole == Player.KINGDOM_ROLE_DUKE || l.data.kingdomRole == Player.KINGDOM_ROLE_KING) {
              m = l.data.kingdomId
            }
            s = b.influence[m] || 0;
            0 > s && (s += 9999);
            g = 0;
            for(n in b.influence) {
              f = b.influence[n], 0 > f && (f += 9999), g < f && n != m && (g = f)
            }
            y.tiInfos.influence = Math.floor(100 * (s / (s + g)))
          }
        }
      }else {
        0 != b.resType && (b = getResourceAllocation(b.resType.toString()), y.tiInfos.resDistribution = b, y.tiInfos.villageName = Travian.translate("HabitableField"))
      }
    }else {
      y.tiInfos.coordsOnly = !0
    }
    !y.$$phase && y.$digest && y.$digest()
  };
  this.re = function() {
    if(!da && J && !ba) {
      var a = U.M(), b = new V(a.current.x - J.left, a.current.y - J.top), b = this.X(new V(b.x, b.y)).round();
      if(K.x != b.x || K.y != b.y) {
        J = $(c.canvas).offset(), Q.rd(b), I.push({x:K.x, y:K.y}), K = b, I.push({x:K.x, y:K.y}), g(1)
      }
      L && (b = Math.abs(X - a.current.x), a = Math.abs(Z - a.current.y), 22500 < b * b + a * a && v())
    }
  }.bind(this);
  var ca = {x:this.renderer.D.x / 2, y:this.renderer.D.y / 2}, ea = new V;
  this.qe = function() {
    ea = this.X(ca).round();
    if(W.x !== ea.x || W.y !== ea.y) {
      Q.rd(ea), I.push({x:W.x, y:W.y}), W = ea, I.push({x:W.x, y:W.y}), g(1)
    }
  };
  this.Vd = function() {
    var a = {x:0, y:0};
    if(null == document.activeElement || "BODY" == document.activeElement.tagName || "HTML" == document.activeElement.tagName || "DIV" == document.activeElement.tagName) {
      keyboard.fc(keyboard.Ld) && (a.y += 1), keyboard.fc(keyboard.Hd) && (a.y -= 1), keyboard.fc(keyboard.mb) && (a.x += 1), keyboard.fc(keyboard.ob) && (a.x -= 1)
    }
    if(0 != a.x || 0 != a.y) {
      var b = 0, f;
      for(f in y.windows) {
        y.windows.hasOwnProperty(f) && b++
      }
      if(0 == b) {
        da = !0;
        b = Math.round(P.x + a.x * Math.abs(M.x));
        f = Math.round(P.y + a.y * Math.abs(M.y));
        var e = this.Kc(b, f);
        e.x == a.x && (a.x = 0);
        e.y == a.y && (a.y = 0);
        Q.pc(b, f);
        L && v();
        0 != a.x && (M.x += 1.1 * a.x);
        0 != a.y && (M.y += 1.1 * a.y);
        0 >= M.x * a.x && (M.x = 1);
        0 >= M.y * a.y && (M.y = 1)
      }
    }else {
      M = {x:1, y:1}
    }
    a = U.M();
    a.$ && T && (b = a.current.x - a.start.x, f = a.current.y - a.start.y, 0 !== b || 0 !== f) && (e = Q.Ag(P.x + b, P.y + f), Q.pc(Math.round(P.x + b / e), Math.round(P.y + f / e)), a.start.x = a.current.x, a.start.y = a.current.y, L && v(), da = !0);
    aa && da && this.Oe();
    a.$ || (da && Q.Qd(P.x, P.y), da = !1);
    b = V2.tc(P, ia);
    ia = new V(P.x, P.y);
    a = [];
    if(0 !== b.x || 0 !== b.y || 2 == this.Cb) {
      null == G && (G = $(c.canvas).offset(), G.left -= parseInt($(".mainContentWrapper").css("margin-left"), 0), J = G), a = this.jg()
    }
    f = !1;
    for(var m in this.I.Z[N]) {
      e = m.split("_"), e = {x:1 * e[0], y:1 * e[1]}, "undefined" != typeof H[e.x] && (e.y >= H[e.x].yMin && e.y <= H[e.x].yMax) && (I.push(e), e = this.I.P(m, N, E), f = n(e) || f, g(1))
    }
    f && requestAngularApply();
    this.I.Z[N] = {};
    if(0 !== b.x || 0 !== b.y || 0 < this.Cb) {
      this.Cb = 0;
      Q.renderer.Db(B);
      ba && Q.qe();
      m = I.slice();
      I = [];
      b = 0;
      for(f = m.length;b < f;b++) {
        this.Ub(m[b].x, m[b].y)
      }
      b = 0;
      for(f = a.length;b < f;b++) {
        this.Ub(a[b].x, a[b].y)
      }
    }
    z && window.setTimeout(Q.Vd, D)
  }.bind(this);
  this.init = function() {
    G = null;
    a.vh();
    z = !0;
    window.setTimeout(this.Vd, 20);
    for(var b = 0;b < ma.length;b++) {
      var f = $("#" + ma[b])[0];
      U.He(f, this.re);
      U.Ma(f, this.Gg);
      U.Je(f, this.Yh)
    }
    U.ca($("#map")[0], function() {
      if(!T) {
        T = !0;
        var a = U.H("up", function() {
          a();
          T = !1
        })
      }
    })
  };
  this.jh = function() {
    z = !1;
    for(var a = 0;a < ma.length;a++) {
      var b = $("#" + ma[a])[0];
      U.s(b)
    }
    U.s($("#map")[0])
  };
  this.pb = function(a, b, f, e, c) {
    var g = a.length, m = null, m = e ? c : this.I.P(b + "_" + f, N, E);
    if(!m.hasData) {
      return null
    }
    if(100 < m.landscape || e) {
      if(e || m.$c != c.$c + (m.x - c.x) || m.ad != c.ad + (m.y - c.y)) {
        if("string" === typeof m.src) {
          a.push(new q(this.T(b, f), m.src))
        }else {
          for(c = 0;c < m.src.length;c++) {
            a.push(new q(this.T(b, f), m.src[c]))
          }
        }
      }
    }
    e || (null === m.N || 1 != B.markers) || 0 < m.N[Marker.TYPE_PLAYER].length && p(a, b, f, m.N[Marker.TYPE_PLAYER][0]);
    return a.length - g
  };
  this.Ub = function(a, b) {
    try {
      var f = this.I.P(a + "_" + b, N, E, !1), e = this.T(a, b), c = this.I.$b(f.playerId), m = [], n = [], h = [];
      if(O > za) {
        r(h, f, Marker.TYPE_COORDINATES);
        if(1 == B.borders && "undefined" != typeof c && null !== f.village && (c.kingStatus && B.kingdom == f.playerId && f.owner == f.playerId || c.kingdomRole == Player.KINGDOM_ROLE_DUKE && f.village.hasActiveTreasury && B.kingdom == c.kingdomId && f.owner == c.kingdomId)) {
          var v = "kingVillage";
          c.kingdomRole == Player.KINGDOM_ROLE_DUKE && (v = "dukeVillage");
          var p = Travian.Player.data.allianceId, t = s(f.playerId, p, f.ownerAllianceId, f, !1);
          h.push(new q(this.T(a, b), v, {color:t, capital:1 == f.village.type}))
        }
        r(h, f, Marker.TYPE_TROOP_MOVEMENT);
        100 < f.landscape ? (h.push(new q(this.T(a, b), "borders")), this.pb(h, a, b, !0, f)) : (this.pb(h, a, b, !0, f), h.push(new q(this.T(a, b), "borders")));
        aa && (a == aa.x && b == aa.y) && h.push(new q(this.T(a, b), "highlight.png"));
        (a == K.x && b == K.y || a == W.x && b == W.y) && h.push(new q(this.T(a, b), "hover.png"));
        null !== f.oasis && Travian.Player.hasUiLimitationFlag(Player.UI_LIMITATIONS.SHOW_OASIS) && h.push(new q(this.T(a + 0.12, b + 0.75), "oases_v2/oasis" + f.oasis.type + ".png"));
        r(h, f, Marker.TYPE_PLAYER) || r(h, f, Marker.TYPE_ALLIANCE);
        c = [];
        if(!f.renderOthersCheck || 0 < f.renderOthers[0]) {
          c[0] = this.pb(h, a + 1, b, !1, f)
        }
        if(!f.renderOthersCheck || 0 < f.renderOthers[1]) {
          c[1] = this.pb(h, a, b - 1, !1, f)
        }
        if(!f.renderOthersCheck || 0 < f.renderOthers[2]) {
          c[2] = this.pb(h, a + 1, b - 1, !1, f)
        }
        f.renderOthersCheck || (null === c[0] || null === c[1] || null === c[2]) || (f.renderOthersCheck = !0, f.renderOthers = c)
      }
      var u = f.owner;
      if(0 < u) {
        f.ownerAllianceId = PlayerAllianceMapper.ha(u);
        var p = l.data.allianceId, m = null === f.Pd ? this.I.hg(f, a, b) : f.Pd, A = s(f.owner, p, f.ownerAllianceId, f, !1);
        f.borderColorValue = A.colorRGBValues
      }
      O <= za && null != f.village && (A = s(f.village.playerId, p, PlayerAllianceMapper.ha(f.village.playerId), f, !0), f.villageColorValue = A.colorRGBValues);
      if(null != fa && "undefined" != typeof fa.Gc[a + "_" + b]) {
        h.push(new q(this.T(a, b), "radiusBorders"));
        for(var C = new V(a, b), y = fa.Gc, p = [], u = 0;8 > u;u++) {
          p[u] = !0
        }
        "undefined" == typeof y[C.x - 1 + "_" + (C.y + 1)] && (p[0] = !1);
        "undefined" == typeof y[C.x + "_" + (C.y + 1)] && (p[1] = !1);
        "undefined" == typeof y[C.x + 1 + "_" + (C.y + 1)] && (p[2] = !1);
        "undefined" == typeof y[C.x + 1 + "_" + C.y] && (p[3] = !1);
        "undefined" == typeof y[C.x + 1 + "_" + (C.y - 1)] && (p[4] = !1);
        "undefined" == typeof y[C.x + "_" + (C.y - 1)] && (p[5] = !1);
        "undefined" == typeof y[C.x - 1 + "_" + (C.y - 1)] && (p[6] = !1);
        "undefined" == typeof y[C.x - 1 + "_" + C.y] && (p[7] = !1);
        n = p
      }
      this.renderer.Xf(h, e, f, m, n);
      aa && (a == aa.x && b == aa.y && O <= za) && this.renderer.ue(e.x, e.y, "white");
      a == K.x && (b == K.y && O <= za) && this.renderer.ue(e.x, e.y, "red");
      !f.ja && O > za ? (I.push({x:a, y:b}), g(1), D = 200) : D = 20
    }catch(z) {
    }
    return f.ja
  }.bind(this);
  this.lg = function() {
    return R.indexOf(O)
  }
}
var za;
function Da(a, c) {
  var b = Math.abs(a.x - c.x), l = Math.abs(a.y - c.y);
  return Math.sqrt(b * b + l * l)
}
function Ea(a, c) {
  "object" != typeof a && (a = Fa(a));
  "object" != typeof c && (c = Fa(c));
  return 3 < Math.abs(a.x - c.x) || 3 < Math.abs(a.y - c.y) ? !1 : !0
}
function Fa(a) {
  return{x:a % 32768 - 16384, y:Math.floor(a / 32768) - 16384}
}
function Ga(a, c) {
  return Math.sqrt(a * a + c * c) <= Travian.Config.worldRadius
}
function Ha(a, c) {
  this.init = function(a, c) {
    this.f = a;
    this.border = 0;
    this.size = c.size || 128;
    this.line = c.line || 20;
    this.$a = c.$a || "255,64,0";
    this.opacity = c.opacity || "0.5";
    this.scale = c.scale || 1;
    this.Lc = this.line + 2 * this.scale;
    var h = this.line / 2 + this.border;
    this.hc = {x:h, y:h};
    this.nc = {x:this.size - h, y:this.size - h};
    this.wc = {x:this.size - h, y:h};
    this.Nb = {x:h, y:this.size - h};
    h = this.Lc / 2 + this.border + 2 * this.scale;
    this.ic = {x:h, y:h};
    this.oc = {x:this.size - h, y:this.size - h};
    this.xc = {x:this.size - h, y:h};
    this.Ob = {x:h, y:this.size - h}
  };
  this.init(a, c);
  this.start = function() {
    var a = this.f;
    a.save();
    a.translate(0, 34 * this.scale);
    a.scale(0.71, 0.3834);
    a.rotate(-0.25 * Math.PI)
  };
  this.end = function() {
    this.f.restore()
  };
  this.W = function(a) {
    "left" == a && (this.f.moveTo(this.hc.x, this.hc.y), this.f.lineTo(this.wc.x, this.wc.y));
    "top" == a && (this.f.moveTo(this.nc.x, this.nc.y), this.f.lineTo(this.wc.x, this.wc.y));
    "right" == a && (this.f.moveTo(this.nc.x, this.nc.y), this.f.lineTo(this.Nb.x, this.Nb.y));
    "bottom" == a && (this.f.moveTo(this.hc.x, this.hc.y), this.f.lineTo(this.Nb.x, this.Nb.y))
  };
  this.Pb = function(a, c) {
    "upperLeft" == a && (this.f.moveTo(this.xc.x - c, this.xc.y + c), this.f.lineTo(this.xc.x + 0.01 - c, this.xc.y + c));
    "upperRight" == a && (this.f.moveTo(this.oc.x - c, this.oc.y + c), this.f.lineTo(this.oc.x + 0.01 - c, this.oc.y + c));
    "lowerRight" == a && (this.f.moveTo(this.Ob.x - c, this.Ob.y + c), this.f.lineTo(this.Ob.x + 0.01 - c, this.Ob.y + c));
    "lowerLeft" == a && (this.f.moveTo(this.ic.x - c, this.ic.y + c), this.f.lineTo(this.ic.x + 0.01 - c, this.ic.y + c))
  };
  this.create = function(a, c, h, g, e, m, f, n) {
    this.start();
    this.f.beginPath();
    this.f.strokeStyle = "rgba(" + this.$a + "," + this.opacity + ")";
    this.f.lineWidth = this.line;
    this.f.lineCap = "square";
    c || this.W("top", n, g);
    g || this.W("right", c, m);
    m || this.W("bottom", n, g);
    n || this.W("left", c, m);
    this.f.stroke();
    var q = 1;
    for(0.5 < this.opacity && (q = 0);2 > q;q++) {
      this.f.beginPath();
      if(1 == q) {
        this.f.strokeStyle = "rgba(" + this.$a + "," + Math.min(1, this.opacity + 0.3) + ")";
        this.f.lineWidth = this.Lc;
        var p = 0
      }else {
        this.f.strokeStyle = "rgba(0,0,0,0.5)", this.f.lineWidth = this.Lc, p = 2 * this.scale
      }
      this.f.lineCap = "square";
      c != n || a && c || this.Pb("upperLeft", p);
      c != g || h && c || this.Pb("upperRight", p);
      m != g || e && m || this.Pb("lowerRight", p);
      m != n || f && m || this.Pb("lowerLeft", p);
      this.f.stroke()
    }
    this.end()
  }
}
function Ia(a) {
  function c() {
    var a = {}, e;
    for(e in f.Da) {
      var c = [], g;
      for(g in f.Da[e]) {
        c = c.concat(h(g))
      }
      a[e] = eliminateDuplicates(c);
      for(c = 0;c < a[e].length;c++) {
        if(g = a[e][c], !f.region[e].hasOwnProperty(g)) {
          var n = id2xy(g);
          f.region[e][g] = new Ja(n.x, n.y);
          e == F && FieldMarkerGlobal.getCollection(g).subscribe(b)
        }
      }
    }
    r || (r = FieldMarkerPersonal.getCollection(), r.subscribe(b));
    Travian.request("map/getByRegionIds", {regionIdCollection:a}, f.gh);
    for(e in f.Da) {
      f.Da[e] = {}
    }
    m = null
  }
  function b(a) {
    for(var b = 0;b < a.lastRemovedEntries.length;b++) {
      var e = a.lastRemovedEntries[b], c = e.data.cellId;
      if(p[c]) {
        for(var g = 0;g < p[c].length;g++) {
          if("FieldMarkerPersonal" == e.name && e.data.id === p[c][g].data.id) {
            p[c].splice(g, 1);
            break
          }
        }
      }
    }
    for(b = 0;b < a.data.length;b++) {
      e = a.data[b];
      c = e.data.cellId;
      g = !1;
      if(void 0 === p[c]) {
        e.data.isClosed || (p[c] = [], p[c].push(e), g = !0)
      }else {
        for(var m = !1, n = 0;n < p[c].length;n++) {
          if(p[c][n].data.id === e.data.id && p[c][n].data.isGlobal === e.data.isGlobal) {
            e.data.isClosed ? p[c].splice(n, 1) : p[c][n] = e;
            g = m = !0;
            break
          }
        }
        m || e.data.isClosed || (p[c].push(e), g = !0)
      }
      g && (p[c].sort(function(a, b) {
        return b.data.timestamp - a.data.timestamp
      }), e = id2xy(c), f.Z[F][e.x + "_" + e.y] = !0)
    }
  }
  function l(a) {
    var b = null != a.N, c = {};
    c[Marker.TYPE_PLAYER] = [];
    c[Marker.TYPE_ALLIANCE] = [];
    c[Marker.TYPE_COORDINATES] = [];
    c[Marker.TYPE_TROOP_MOVEMENT] = [];
    var m = !1;
    a.ra = null;
    a.Na = null;
    a.Oc = null;
    for(var n = 0;n < g.data.length;n++) {
      var h = g.data[n], l = !1;
      h.data.type == Marker.TYPE_PLAYER && h.data.targetId == a.playerId && (l = !0);
      h.data.type == Marker.TYPE_ALLIANCE && h.data.targetId == PlayerAllianceMapper.ha(a.playerId) && (l = !0);
      h.data.type == Marker.TYPE_COORDINATES && h.data.targetId == a.id && (l = !0);
      l && (c[h.data.type].push(h), m = !0);
      h.data.type == Marker.TYPE_PLAYER && a.owner == h.data.targetId ? h.data.owner != Marker.OWNER_ALLIANCE && (a.ra = h.data.color) : h.data.type == Marker.TYPE_PLAYER && h.data.targetId == a.playerId ? a.Oc = h.data.color : h.data.type == Marker.TYPE_ALLIANCE && PlayerAllianceMapper.ha(a.owner) == h.data.targetId && (a.Na = h.data.color)
    }
    n = a.id;
    null != a.Xh && (n = a.Xh.villageId);
    if("undefined" != typeof e[n]) {
      for(var p in e[n]) {
        h = new Marker, h.set({color:1, targetId:-1, type:Marker.TYPE_TROOP_MOVEMENT, owner:Marker.TYPE_PLAYER, moveType:p, moveData:e[n][p], playerId:a.playerId}), c[h.data.type].push(h)
      }
      m = !0
    }
    0 < m ? (a.N = c, f.Z[F][a.x + "_" + a.y] = !0) : (a.N = null, b && (f.Z[F][a.x + "_" + a.y] = !0))
  }
  function h(a) {
    a = parseInt(a);
    var b = id2xy(a), f = [];
    f.push(xy2id(b.x - 1, b.y - 1));
    f.push(xy2id(b.x, b.y - 1));
    f.push(xy2id(b.x + 1, b.y - 1));
    f.push(a - 1);
    f.push(a);
    f.push(a + 1);
    f.push(xy2id(b.x - 1, b.y + 1));
    f.push(xy2id(b.x, b.y + 1));
    f.push(xy2id(b.x + 1, b.y + 1));
    return f
  }
  var g = a, e = {};
  this.od = {};
  this.fb = function() {
    f.Oa = {};
    f.Sa = {};
    f.Z = {1:{}, 3:{}};
    f.G = {1:{}, 3:{}};
    f.region = {1:{}, 2:{}, 3:{}, 4:{}, 5:{}, 6:{}};
    f.Da = {1:{}, 2:{}, 3:{}, 4:{}, 5:{}, 6:{}}
  };
  var m = null, f = this, n = 0, q = null, p = {}, r = null;
  this.fb();
  this.vh = function() {
    n = (new Date).getTime();
    Travian.request("map/getHeatmapMaximums", {}, function(a) {
      q = a
    })
  };
  this.Hh = function(a) {
    var b = [], f;
    for(f in a) {
      if(void 0 === e[f]) {
        b.push(f)
      }else {
        for(var c in a[f]) {
          void 0 === e[f][c] && b.push(f)
        }
      }
    }
    for(f in e) {
      if(void 0 === a[f]) {
        b.push(f)
      }else {
        for(c in e[f]) {
          void 0 === a[f][c] && b.push(f)
        }
      }
    }
    e = a;
    for(a = 0;a < b.length;a++) {
      f = id2xy(b[a]), void 0 !== this.G[F][f.x + "_" + f.y] && l(this.G[F][f.x + "_" + f.y])
    }
  };
  this.Ne = function() {
    for(var a in this.G[F]) {
      l(this.G[F][a])
    }
  };
  this.qg = function() {
    return q
  };
  this.ng = function(a) {
    return p[a]
  };
  this.gh = function(a) {
    if("undefined" != typeof a) {
      for(var b in a) {
        b == F || b == Ka ? null != a[b] && this.Hg(a[b], b) : this.Jg(a[b], b)
      }
    }
  }.bind(this);
  this.Jg = function(a, b) {
    var f = (new Date).getTime(), e;
    for(e in a) {
      var c = this.region[b][e];
      "undefined" == typeof c && (c = id2xy(e), this.region[b][e] = new Ja(c.x, c.y), c = this.region[b][e]);
      c.ye = !1;
      c.ja = !0;
      c = id2xy(e);
      c.x *= 21;
      c.y *= 21;
      var g = a[e];
      if(null != g) {
        for(var m = 0;m < g.length;m++) {
          for(var n = 0;n < g[m].length;n++) {
            if(b == Aa) {
              this.Ig(g[m][n], c, m, n, f)
            }else {
              var h = c.x + m + "_" + (c.y + n);
              this.P(h, Aa, 0).bc[b] = g[m][n];
              this.Z[Aa][h] = !0
            }
          }
        }
      }
    }
  }.bind(this);
  this.Ig = function(a, b, f, e, c) {
    var m = a, n = m[0], h = m[1], l = m[2], p = m[3];
    b = b.x + f + "_" + (b.y + e);
    a = this.P(b, Aa, 0);
    a.landscape = Math.floor(n / 1E3) % 10;
    a.owner = h;
    a.village = null;
    a.cropAmount = p;
    a.ra = null;
    a.Jb = null;
    a.Na = null;
    a.ja = !0;
    if(0 < l) {
      for(a.village = {playerId:m[4], allianceId:PlayerAllianceMapper.ha(m[4]), tribe:l % 10, size:Math.floor(l / 10) % 10, type:Math.floor(l / 100) % 100}, m = 0;m < g.data.length;m++) {
        n = g.data[m], n.data.type == Marker.TYPE_PLAYER ? (0 < a.owner && n.data.targetId == a.owner && (a.ra = n.data.color), n.data.targetId == a.village.playerId && (a.Jb = n.data.color)) : n.data.type == Marker.TYPE_ALLIANCE && (h = PlayerAllianceMapper.ha(a.owner), 0 < a.owner && n.data.targetId == h && (a.Na = n.data.color), n.data.targetId == a.village.allianceId && (a.Jb = n.data.color))
      }
    }
    if(null == a.village && 0 < a.owner) {
      for(h = PlayerAllianceMapper.ha(a.owner), m = 0;m < g.data.length;m++) {
        n = g.data[m], n.data.type == Marker.TYPE_PLAYER && n.data.targetId == a.owner ? a.ra = n.data.color : n.data.type == Marker.TYPE_ALLIANCE && n.data.targetId == h && (a.Na = n.data.color)
      }
    }
    a.xb = c;
    a.yb = -1;
    this.Z[Aa][b] = !0
  }.bind(this);
  this.Hg = function(a, b) {
    if("undefined" != typeof a) {
      var f = (new Date).getTime(), e;
      for(e in a.player) {
        "undefined" != typeof this.Oa[e] && this.Oa[e].allianceId != a.player[e].allianceId && (PlayerAllianceMapper.removeMemberships(Array(e)), PlayerAllianceMapper.Bh(e, a.player[e].allianceId)), this.Oa[e] = a.player[e]
      }
      for(var c in a.alliance) {
        this.Sa[c] = a.alliance[c]
      }
      for(var g in a.reports) {
        this.od[g] = a.reports[g]
      }
      for(var m in a.region) {
        g = this.region[b][m];
        "undefined" == typeof g && (g = id2xy(m), this.region[b][m] = new Ja(g.x, g.y), g = this.region[b][m]);
        g.ye = !1;
        g.ja = !0;
        c = a.region[m];
        for(var n = 0;n < c.length;n++) {
          var h = c[n];
          g = id2xy(h.id);
          h.x = g.x;
          h.y = g.y;
          g = h.x + "_" + h.y;
          var p = this.P(g, F, 0);
          delete p.villageId;
          p.influence = {};
          p.village = null;
          delete p.playerId;
          for(var r in h) {
            p[r] = h[r]
          }
          p.src = "map/feld" + p.landscape + ".png";
          if(100 < p.landscape) {
            h = Math.floor(p.landscape / 1E3) % 10;
            e = Math.floor(p.landscape / 100) % 10;
            var q = Math.floor(p.landscape / 10) % 10 - 5, G = Math.floor(p.landscape / 1) % 10 - 5, J = Resources.STRING[h];
            p.$c = q;
            p.ad = G;
            p.src = "map/oase/" + h + "_" + J + "/" + J + e + "_" + q + "_" + G + ".png"
          }
          9E3 <= p.landscape && (q = Math.floor(p.landscape / 10) % 10 - 2, G = Math.floor(p.landscape / 1) % 10 - 2, p.src = "map/weltwunder/weltwunder_" + q + "_" + G + ".png", -1 == q && 1 == G && (p.src = [], p.src.push("map/weltwunder/weltwunder_-1_1.png"), p.src.push("map/weltwunder/weltwunder_cloud.png")));
          if(null != p.village) {
            e = p.playerId;
            if(!Village.isWWVillage(p.village.type) && "undefined" == typeof this.Oa[e] && 0 < e) {
              p.src = "map/feld" + Math.round(15 * Math.random()) + ".png"
            }else {
              if(Village.isWWVillage(p.village.type)) {
                p.src = [], p.src.push("map/weltwunder/weltwunder_-1_1.png"), p.src.push("map/weltwunder/weltwunder_village.png")
              }else {
                if(e == Player.ID.NATAR) {
                  p.src = "village/village4_2.png"
                }else {
                  if(e > Player.ID.NATAR) {
                    h = this.Oa[e].tribeId;
                    e = this.Oa[e].active;
                    a: {
                      q = [0, 100, 250, 500, 1E3, 9999999];
                      for(G = 0;G < q.length;G++) {
                        if(p.village.population < q[G]) {
                          q = G;
                          break a
                        }
                      }
                      q = void 0
                    }
                    Village.isTown(p.village.type) && (q = 6);
                    p.src = "village/village" + h + "_" + q + ".png";
                    0 == e && (p.src = "village/village" + h + "_" + q + "_inactive.png")
                  }else {
                    100 < p.landscape ? (h = p.src, p.src = [], p.src.push(h), p.village.type == Village.TYPE_GOVERNOR_NPC_VILLAGE ? p.src.push("village/villageNPCgov.png") : p.src.push("village/villageRobberHideout.png")) : p.src = "village/villageRobber.png"
                  }
                }
              }
            }
            p.village.type == Village.TYPE_GOVERNOR_NPC_VILLAGE && (p.owner = Travian.Player.data.playerId)
          }
          l(p);
          p.xb = f;
          p.yb = -1;
          p.hasData = !0;
          this.Z[F][g] = !0;
          this.Z[F][p.x - 1 + "_" + p.y] = !0;
          this.Z[F][p.x + "_" + (p.y + 1)] = !0;
          this.Z[F][p.x - 1 + "_" + (p.y + 1)] = !0
        }
      }
    }
  }.bind(this);
  this.yh = function(a) {
    this.od[a.villageId] = a
  };
  this.P = function(a, b, f, e) {
    0 == f && (f = b);
    var g = !1, h = "undefined" !== typeof this.G[b] && "undefined" != typeof this.G[b][a];
    if(h && null != this.G[b][a].village) {
      var l = (new Date).getTime();
      this.G[b][a].xb < n && this.G[b][a].xb < l - 6E4 && this.G[b][a].wb && (g = !0, this.G[b][a].xb = l)
    }
    h && 0 < this.G[b][a].yb && this.G[b][a].yb < l - 1E4 && (e = !0);
    h && b == Aa && f != Aa && 0 > this.G[b][a].bc[f] && (e = !0);
    if(e || g || !h) {
      l = a.split("_"), e = 1 * l[0], l = 1 * l[1], h || (this.G[b][a] = new La(e, l)), h = 7, b == Aa && (h = 21), e = Math.floor(e / h), l = Math.floor(l / h), h = xy2id(e, l), this.region[f].hasOwnProperty(h) || this.Da[f].hasOwnProperty(h) || (this.Da[f][h] = new V(e, l), null == m && (m = window.setTimeout(c, 10))), g && (this.G[b][a].wb && "undefined" == typeof this.Da[Ka][h]) && (this.Da[Ka][h] = new V(e, l), null == m && (m = window.setTimeout(c, 10)))
    }
    return this.G[b][a]
  };
  this.oa = function(a, b) {
    return this.P(a, b, 0).owner
  };
  this.Dg = function(a) {
    return e[a]
  };
  this.$b = function(a) {
    var b = this.Oa[a];
    if("undefined" != typeof b) {
      var f = PlayerAllianceMapper.ha(a);
      b.allianceTag = "";
      if(f != b.allianceId) {
        b.allianceId = f;
        if("undefined" == typeof this.Sa[b.allianceId]) {
          var e = Alliance.get(f);
          if(e.filled) {
            c.Sa[f] = {name:e.data.tag}
          }else {
            var c = this, g = e.subscribe(function() {
              c.Sa[f] = {name:e.data.tag};
              e.unsubscribe(g)
            })
          }
        }
        this.Ne()
      }
      0 < b.allianceId && "undefined" != typeof this.Sa[b.allianceId] && (b.allianceTag = this.Sa[b.allianceId].name)
    }
    return b
  };
  this.ke = function(a) {
    return this.od[a]
  };
  this.hg = function(a, b, f) {
    a = a.owner;
    var e = [];
    e[0] = this.oa(b - 1 + "_" + (f + 1), F);
    e[1] = this.oa(b + "_" + (f + 1), F);
    e[2] = this.oa(b + 1 + "_" + (f + 1), F);
    e[3] = this.oa(b + 1 + "_" + f, F);
    e[4] = this.oa(b + 1 + "_" + (f - 1), F);
    e[5] = this.oa(b + "_" + (f - 1), F);
    e[6] = this.oa(b - 1 + "_" + (f - 1), F);
    e[7] = this.oa(b - 1 + "_" + f, F);
    b = [];
    for(f = 0;f < e.length;f++) {
      b[f] = e[f] == a
    }
    return b
  };
  this.Qf = function(a) {
    var b = id2xy(a);
    a = 21 * b.x;
    for(var f = 21 * b.y, b = [], e = a;e < a + 21;e++) {
      for(var c = f;c < f + 21;c++) {
        var g = e + "_" + c, m;
        for(m in this.G) {
          "undefined" != typeof this.G[m][g] && (this.G[m][g].wb ? b.push(g) : delete this.G[m][g])
        }
      }
    }
    for(e = a;e < a + 21;e += 7) {
      for(c = f;c < f + 21;c += 7) {
        for(m in g = xy2id(Math.floor(e / 7), Math.floor(c / 7)), this.G) {
          delete this.region[m][g]
        }
      }
    }
    for(a = 0;a < b.length;a++) {
      for(m in this.G) {
        this.P(b[a], m, 0, !0)
      }
    }
  }
}
var F = 1, Ka = 2, Aa = 3;
function La(a, c) {
  this.landscape = this.resType = 0;
  this.owner = -2;
  this.playerId = 0;
  this.oasis = this.village = null;
  this.cropAmount = 0;
  this.influence = {};
  this.x = a;
  this.y = c;
  this.id = xy2id(a, c);
  this.Yf = 0;
  this.ja = this.wb = this.hasData = !1;
  this.ad = this.$c = 0;
  this.src = "map/loading.png";
  0 == Travian.Player.isOnMap() && (this.src = "map/fog.png");
  this.Jb = this.Na = this.ra = this.Pd = this.N = null;
  this.xb = (new Date).getTime();
  this.yb = (new Date).getTime();
  this.bc = {4:-1, 5:-1, 6:-1}
}
function Ja(a, c) {
  this.x = a;
  this.y = c;
  this.ye = !0;
  this.ja = !1
}
function Ma(a, c, b, l, h, g) {
  this.e = h;
  this.I = a;
  var e = 1;
  this.j = l;
  var m = new V(b.x, b.y), f = this, n = {};
  this.sa = Travian.Config.worldRadius;
  this.V = new V(c.x + 2 * this.j.x, c.y + 2 * this.j.y);
  this.Y = new V(this.j.x / 2, this.j.y / 2);
  this.D = new V(this.V.x, this.V.y);
  this.canvas = document.createElement("canvas");
  this.canvas.id = "canvasMap";
  this.canvas.width = this.D.x;
  this.canvas.height = this.D.y;
  this.canvas.style.position = "absolute";
  this.canvas.style.top = "-" + this.j.y + "px";
  this.canvas.style.left = "-" + this.j.x + "px";
  this.offset = new V(this.j.x, this.j.y);
  this.f = this.canvas.getContext("2d");
  b == l && (this.f.fillStyle = "#c5de89", this.f.fillRect(0, 0, this.canvas.width, this.canvas.height));
  this.Td = {};
  var q = null, p = null;
  this.Db = function(a) {
    n = a;
    p.Db(a)
  };
  this.Ze = function(b) {
    e = b;
    this.j = new V(m.x, m.y);
    this.j.multiply(e);
    this.Y = new V(this.j.x / 2, this.j.y / 2);
    this.vc = document.createElement("canvas");
    this.vc.width = this.j.x;
    this.vc.height = this.j.y;
    this.Sh = this.vc.getContext("2d");
    null != p ? p.init(this.f, this.j) : p = new Na(a, this.f, this.j);
    this.sd()
  };
  this.sd = function() {
    b == l && (this.f.fillStyle = "rgba(0,0,0,0.2)", this.f.fillRect(0, 0, this.canvas.width, this.canvas.height), this.f.fill())
  };
  this.Ze(1);
  this.zh = function(a) {
    this.V = new V(a.x + 2 * m.x, a.y + 2 * m.y);
    this.D = new V(this.V.x, this.V.y);
    this.canvas.width = this.D.x;
    this.canvas.height = this.D.y;
    var b = document.getElementById("canvasBorder");
    null != b && (b.style.width = a.x + "px", b.style.height = a.y + "px")
  };
  this.Od = function(a) {
    var b = document.createElement("div");
    b.id = "canvasBorder";
    b.style.position = "absolute";
    b.style.top = 0;
    b.style.left = 0;
    b.style.overflow = "hidden";
    b.style.width = this.V.x + "px";
    b.style.height = this.V.y + "px";
    b.appendChild(this.canvas);
    a.appendChild(b)
  };
  this.Jh = function(a) {
    this.f.drawImage(this.canvas, a.x, a.y)
  };
  this.Xf = function(a, b, f, c, g) {
    e <= za ? p.Vf(b, f) : (a = this.Ff(a, b, f, c, g), f.ja && this.f.drawImage(a, b.x, b.y))
  };
  this.Uf = function(a, b, c) {
    var g = f.e.get(a.src);
    if(null !== g) {
      var m = Math.round(g.cfg.d * e), n = Math.round(g.cfg.a * e);
      c ? (a = V2.tc(a.mc, b), c.drawImage(g.image, g.cfg.x, g.cfg.y, g.cfg.d, g.cfg.a, a.x, Math.round(f.j.y - g.cfg.a * e) + a.y, m, n)) : this.f.drawImage(g.image, g.cfg.x, g.cfg.y, g.cfg.d, g.cfg.a, a.mc.x, Math.round(f.j.y - g.cfg.a * e) + a.mc.y, m, n);
      return!0
    }
    return!1
  };
  this.Ff = function(a, b, e, c, g) {
    e.Yf++;
    var m = this.Sh;
    a.unshift({mc:b, src:"map/feld0_0.png"});
    e.ja = !0;
    for(var h = 0, l = a.length;h < l;h++) {
      "borders" == a[h].src ? 1 == n.borders && f.Af(e, c, m) : "radiusBorders" == a[h].src ? f.Bf(g, m) : "kingVillage" == a[h].src ? f.Tf(a[h].data, m) : "dukeVillage" == a[h].src ? f.Sf(a[h].data, m) : f.Uf(a[h], b, m) || (e.ja = !1)
    }
    if(!e.ja) {
      return null
    }
    a = f.e.get("mask/fullTileGround.png");
    null != a && (m.globalCompositeOperation = "destination-in", m.drawImage(a.image, a.cfg.x, a.cfg.y, a.cfg.d, a.cfg.a, 0, 0, f.j.x, f.j.y), m.globalCompositeOperation = "source-over");
    return this.vc
  };
  this.Tf = function(a, b) {
    b.lineWidth = 1;
    b.beginPath();
    b.moveTo(123 * e, 34 * e);
    b.lineTo(108 * e, 25 * e);
    b.lineTo(85 * e, 30 * e);
    b.bezierCurveTo(86 * e, 26 * e, 89 * e, 22 * e, 93 * e, 17 * e);
    b.bezierCurveTo(84 * e, 19 * e, 77 * e, 21 * e, 71 * e, 21 * e);
    b.lineTo(78 * e, 9 * e);
    b.lineTo(63 * e, 1 * e);
    b.lineTo(49 * e, 9 * e);
    b.lineTo(56 * e, 21 * e);
    b.bezierCurveTo(49 * e, 21 * e, 42 * e, 19 * e, 34 * e, 17 * e);
    b.bezierCurveTo(37 * e, 22 * e, 40 * e, 26 * e, 41 * e, 30 * e);
    b.lineTo(19 * e, 25 * e);
    b.lineTo(4 * e, 34 * e);
    b.lineTo(19 * e, 43 * e);
    b.lineTo(41 * e, 39 * e);
    b.bezierCurveTo(40 * e, 42 * e, 37 * e, 46 * e, 34 * e, 51 * e);
    b.bezierCurveTo(42 * e, 49 * e, 49 * e, 48 * e, 56 * e, 47 * e);
    b.lineTo(49 * e, 59 * e);
    b.lineTo(63 * e, 67 * e);
    b.lineTo(78 * e, 59 * e);
    b.lineTo(71 * e, 47 * e);
    b.bezierCurveTo(77 * e, 48 * e, 84 * e, 49 * e, 93 * e, 51 * e);
    b.bezierCurveTo(89 * e, 46 * e, 86 * e, 42 * e, 85 * e, 39 * e);
    b.lineTo(108 * e, 43 * e);
    b.closePath();
    a.capital ? (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.9)", b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.5)") : (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.8)", b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.2)");
    b.fill();
    b.stroke()
  };
  this.Sf = function(a, b) {
    b.lineWidth = 1;
    b.beginPath();
    b.moveTo(63 * e, 34 * e);
    b.lineTo(75 * e, 13 * e);
    b.lineTo(63 * e, 6 * e);
    b.lineTo(51 * e, 13 * e);
    b.lineTo(63 * e, 34 * e);
    b.lineTo(51 * e, 56 * e);
    b.lineTo(63 * e, 63 * e);
    b.lineTo(75 * e, 56 * e);
    b.lineTo(63 * e, 34 * e);
    b.lineTo(101 * e, 26 * e);
    b.lineTo(114 * e, 34 * e);
    b.lineTo(101 * e, 42 * e);
    b.lineTo(25 * e, 26 * e);
    b.lineTo(12 * e, 34 * e);
    b.lineTo(25 * e, 42 * e);
    b.closePath();
    a.capital ? (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.9)", b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.5)") : (b.strokeStyle = "rgba(" + a.color.colorRGBValues + ",0.8)", b.fillStyle = "rgba(" + a.color.colorRGBValues + ",0.2)");
    b.fill();
    b.stroke()
  };
  this.he = function(a, b, f, e) {
    b = a.$a + a.opacity + a.line + b + "," + f;
    var c = this.Td[b];
    "undefined" == typeof c && (c = document.createElement("canvas"), c.id = "canvasBorders", c.width = this.j.x, c.height = this.j.x, f = c.getContext("2d"), this.Td[b] = c, null == q ? q = new Ha(f, a) : q.init(f, a), q.create(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7]));
    return c
  };
  this.Af = function(a, b, f) {
    var c = a.owner;
    if(0 < c) {
      var m = {}, h = 0.4;
      m.size = this.j.x;
      m.scale = e;
      m.line = 10 * e;
      n.kingdom == c && (h = 0.7);
      c == g.data.ti && (h += 0.2);
      m.$a = a.borderColorValue;
      m.opacity = h;
      a = !0;
      for(h = c = 0;8 > h;h++) {
        a = a && b[h], b[h] && (c += Math.pow(2, h))
      }
      a || (b = this.he(m, c, e, b), f.drawImage(b, 0, 0))
    }
  };
  this.Bf = function(a, b) {
    for(var f = {size:this.j.x, line:5 * e, scale:e, $a:"255, 255, 255"}, c = 0, g = 0;8 > g;g++) {
      a[g] && (c += Math.pow(2, g))
    }
    f = this.he(f, c, e, a);
    b.drawImage(f, 0, 0)
  };
  this.ue = function(a, b, f) {
    this.f.strokeStyle = f;
    this.f.beginPath();
    this.f.moveTo(a + this.j.x / 2, b + 1);
    this.f.lineTo(a + this.j.x - 1, b + this.j.y / 2);
    this.f.lineTo(a + this.j.x / 2, b + this.j.y - 1);
    this.f.lineTo(a + 1, b + this.j.y / 2);
    this.f.closePath();
    this.f.stroke()
  }
}
function Na(a, c, b) {
  function l(a, b, e) {
    for(var c = "#", g = a.split(","), m = 0;3 > m;m++) {
      col2 = 1 < g.length ? parseInt(g[m]) : parseInt(a.substr(2 * m, 2), 16);
      var h = parseInt(e.substr(2 * m + 1, 2), 16), h = Math.round(h + (col2 - h) * b).toString(16);
      2 > h.length && (h = "0" + h);
      c += h
    }
    return c
  }
  function h(a, b) {
    function e(a) {
      return"#" == a.charAt(0) ? a.substring(1, 7) : a
    }
    function c(a) {
      var b = {};
      b.jd = parseInt(e(a).substring(0, 2), 16);
      b.Tc = parseInt(e(a).substring(2, 4), 16);
      b.Fc = parseInt(e(a).substring(4, 6), 16);
      return b
    }
    function g(a) {
      var b = parseInt(a);
      if(0 == b || isNaN(a)) {
        return"00"
      }
      b = Math.round(Math.min(Math.max(0, b), 255));
      return"0123456789abcdef".charAt((b - b % 16) / 16) + "0123456789abcdef".charAt(b % 16)
    }
    var m = c("#D5E874"), h = c("#ff0000"), l = (b - 1) / (a - 1), t, z;
    t = (h.jd - m.jd) * l + m.jd;
    z = (h.Tc - m.Tc) * l + m.Tc;
    m = (h.Fc - m.Fc) * l + m.Fc;
    return"#" + g(t) + g(z) + g(m)
  }
  var g = {};
  this.I = a;
  var e = null;
  this.init = function(a, b) {
    this.f = a;
    this.j = b
  };
  this.init(c, b);
  var m = this;
  this.Db = function(a) {
    g = a
  };
  this.Vf = function(a, b) {
    if(0 < g.heatmap) {
      m.Wf(a, b, g.heatmap)
    }else {
      this.f.fillStyle = "#c5de89";
      var e = b.owner;
      0 < b.landscape && (1 == b.landscape && (this.f.fillStyle = l("7eac5b", 0.3, this.f.fillStyle)), 2 == b.landscape && (this.f.fillStyle = l("d28c5d", 0.3, this.f.fillStyle)), 3 == b.landscape && (this.f.fillStyle = l("839aab", 0.3, this.f.fillStyle)), 4 == b.landscape && (this.f.fillStyle = l("76b4e2", 0.3, this.f.fillStyle)));
      this.f.lineWidth = 1;
      this.f.strokeStyle = "#788753";
      this.f.beginPath();
      this.f.moveTo(a.x + this.j.x / 2, a.y);
      this.f.lineTo(a.x + this.j.x, a.y + this.j.y / 2);
      this.f.lineTo(a.x + this.j.x / 2, a.y + this.j.y);
      this.f.lineTo(a.x, a.y + this.j.y / 2);
      this.f.closePath();
      if(0 < e && 1 == g.borders) {
        e = 0.5;
        "undefined" != typeof g.borderAlpha && (e = g.borderAlpha);
        var c = b.borderColorValue;
        this.f.fillStyle = l(c, e, this.f.fillStyle)
      }
      this.f.fill();
      this.f.stroke();
      null != b.village && (e = 0.5, "undefined" != typeof g.villageAlpha && (e = g.villageAlpha), c = b.villageColorValue, this.f.strokeStyle = l(c, e, "#000000"), e = 1.5, "undefined" != typeof g.lineWidth && (e = g.lineWidth), this.f.lineWidth = e, this.f.beginPath(), this.f.moveTo(a.x + this.j.x / 2, a.y + e), this.f.lineTo(a.x + this.j.x - e, a.y + this.j.y / 2), this.f.lineTo(a.x + this.j.x / 2, a.y + this.j.y - e), this.f.lineTo(a.x + e, a.y + this.j.y / 2), this.f.closePath(), this.f.stroke())
    }
  };
  this.Wf = function(b, c, g) {
    null == e && (e = a.qg());
    this.f.fillStyle = "#c5de89";
    0 < c.bc[g] && (this.f.fillStyle = h(e[g], c.bc[g]));
    0 < c.landscape && (1 == c.landscape && (this.f.fillStyle = l("7eac5b", 0.3, this.f.fillStyle)), 2 == c.landscape && (this.f.fillStyle = l("d28c5d", 0.3, this.f.fillStyle)), 3 == c.landscape && (this.f.fillStyle = l("839aab", 0.3, this.f.fillStyle)), 4 == c.landscape && (this.f.fillStyle = l("76b4e2", 0.3, this.f.fillStyle)));
    this.f.lineWidth = 1;
    this.f.strokeStyle = "#788753";
    this.f.beginPath();
    this.f.moveTo(b.x + this.j.x / 2, b.y);
    this.f.lineTo(b.x + this.j.x, b.y + this.j.y / 2);
    this.f.lineTo(b.x + this.j.x / 2, b.y + this.j.y);
    this.f.lineTo(b.x, b.y + this.j.y / 2);
    this.f.closePath();
    this.f.fill();
    this.f.stroke()
  }
}
V = function(a, c) {
  this.x = a || 0;
  this.y = c || 0
};
V.prototype = new function Oa() {
  this.set = function(c, b) {
    this.x = c;
    this.y = b;
    return this
  };
  this.abs = function() {
    this.x = Math.abs(this.x);
    this.y = Math.abs(this.y)
  };
  this.add = function(c) {
    this.x += c.x;
    this.y += c.y;
    return this
  };
  this.tc = function(c) {
    this.x -= c.x;
    this.y -= c.y;
    return this
  };
  this.multiply = function(c) {
    this.x *= c;
    this.y *= c;
    return this
  };
  this.length = function() {
    return Math.sqrt(this.x * this.x + this.y * this.y)
  };
  this.normalize = function() {
    var c = this.length();
    this.x /= c;
    this.y /= c;
    return this
  };
  this.round = function() {
    this.x = Math.round(this.x);
    this.y = Math.round(this.y);
    return this
  };
  this.min = function(c) {
    this.x = Math.min(this.x, c.x);
    this.y = Math.min(this.y, c.y);
    return this
  };
  this.max = function(c) {
    this.x = Math.max(this.x, c.x);
    this.y = Math.max(this.y, c.y);
    return this
  };
  this.$d = function(c) {
    return Math.sqrt(Math.pow(this.x - c.x, 2) + Math.pow(this.y - c.y, 2))
  };
  this.isEqual = function(c) {
    return this.x != c.x || this.y != c.y ? !1 : !0
  };
  this.fe = function(c) {
    this.x = Math.cos(c * Math.uf);
    this.y = Math.sin(c * Math.uf);
    this.x = S.tf.truncate(this.x, 12);
    this.y = S.tf.truncate(this.y, 12);
    return this
  };
  this.toString = function() {
    return this.x + "," + this.y
  };
  this.clone = function() {
    var c = new Oa(this.x, this.y);
    c.set(this.x, this.y);
    return c
  }
};
N_V2Math = function() {
  this.abs = function(a) {
    return new V(Math.abs(a.x), Math.abs(a.y))
  };
  this.add = function(a, c) {
    return new V(a.x + c.x, a.y + c.y)
  };
  this.tc = function(a, c) {
    return new V(a.x - c.x, a.y - c.y)
  };
  this.multiply = function(a, c) {
    return new V(a.x * c, a.y * c)
  };
  this.length = function(a) {
    return Math.sqrt(a.x * a.x + a.y * a.y)
  };
  this.normalize = function(a) {
    var c = V2.length(a);
    return new V(a.x / c, a.y / c)
  };
  this.round = function(a) {
    return new V(Math.round(a.x), Math.round(a.y))
  };
  this.min = function(a) {
    for(var c = a[0].x, b = a[0].y, l = 1;l < a.length;l++) {
      c = Math.min(c, a[l].x), b = Math.min(b, a[l].y)
    }
    return new V(c, b)
  };
  this.max = function(a) {
    for(var c = a[0].x, b = a[0].y, l = 1;l < a.length;l++) {
      c = Math.max(c, a[l].x), b = Math.max(b, a[l].y)
    }
    return new V(c, b)
  };
  this.$d = function(a, c) {
    return Math.sqrt(Math.pow(a.x - c.x, 2) + Math.pow(a.y - c.y, 2))
  };
  this.isEqual = function(a, c) {
    return a.x != c.x || a.y != c.y ? !1 : !0
  };
  this.fe = function(a) {
    return(new V).fe(a)
  }
};
V2 = new N_V2Math;
if("undefined" == typeof x) {
  var x = []
}
"undefined" == typeof x.files && (x.files = []);
x.files.push({src:"iso/sprite.png", d:2E3, a:1736});
var Y = x.files.length - 1;
x["iso/marker/troopMovement/ani_outgoingSupport.png"] = {x:0, y:0, d:2E3, a:100, e:Y};
x["iso/marker/troopMovement/ani_incomingRobberAttack.png"] = {x:0, y:100, d:2E3, a:100, e:Y};
x["iso/marker/troopMovement/ani_incomingAttack.png"] = {x:0, y:200, d:2E3, a:100, e:Y};
x["iso/marker/troopMovement/ani_outgoingAttack.png"] = {x:0, y:300, d:2E3, a:100, e:Y};
x["iso/marker/troopMovement/ani_outgoingSupport&attack.png"] = {x:0, y:400, d:2E3, a:100, e:Y};
x["iso/map/oase/1_wood/wood7_1_1.png"] = {x:0, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood1_0_0.png"] = {x:126, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood3_0_0.png"] = {x:252, y:500, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron10_0_0.png"] = {x:378, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood4_0_-1.png"] = {x:504, y:500, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron2_1_0.png"] = {x:630, y:500, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron8_0_0.png"] = {x:756, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood3_0_-1.png"] = {x:882, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood5_0_0.png"] = {x:1008, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood15_0_0.png"] = {x:1134, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood1_-1_0.png"] = {x:1260, y:500, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron11_0_0.png"] = {x:1386, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood15_1_-1.png"] = {x:1512, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood9_0_1.png"] = {x:1638, y:500, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood4_1_0.png"] = {x:1764, y:500, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron4_0_0.png"] = {x:0, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron5_0_0.png"] = {x:126, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron2_0_0.png"] = {x:252, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron3_0_0.png"] = {x:378, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron9_0_0.png"] = {x:504, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron1_0_1.png"] = {x:630, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron1_0_0.png"] = {x:756, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron9_1_1.png"] = {x:882, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron8_1_0.png"] = {x:1008, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron6_0_0.png"] = {x:1134, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron0_0_0.png"] = {x:1260, y:584, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood3_1_-1.png"] = {x:1386, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron7_0_1.png"] = {x:1512, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron9_1_0.png"] = {x:1638, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron3_1_0.png"] = {x:1764, y:584, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron3_1_1.png"] = {x:0, y:668, d:126, a:84, e:Y};
x["iso/map/oase/3_iron/iron7_0_0.png"] = {x:126, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood8_1_-1.png"] = {x:252, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood16_0_0.png"] = {x:378, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/oase2.png"] = {x:504, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood4_0_0.png"] = {x:630, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood7_1_-1.png"] = {x:756, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood8_0_1.png"] = {x:882, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood11_0_-1.png"] = {x:1008, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood8_0_0.png"] = {x:1134, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood9_1_0.png"] = {x:1260, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood10_0_0.png"] = {x:1386, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood12_1_-1.png"] = {x:1512, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood1_1_0.png"] = {x:1638, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood15_1_0.png"] = {x:1764, y:668, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood7_0_0.png"] = {x:0, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood2_0_1.png"] = {x:126, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood12_0_0.png"] = {x:252, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood12_0_-1.png"] = {x:378, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood2_0_0.png"] = {x:504, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood10_1_0.png"] = {x:630, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood9_1_-1.png"] = {x:756, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood8_1_0.png"] = {x:882, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood15_1_1.png"] = {x:1008, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood12_1_0.png"] = {x:1134, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood10_-1_0.png"] = {x:1260, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood14_0_0.png"] = {x:1386, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood2_1_0.png"] = {x:1512, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood0_0_0.png"] = {x:1638, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood3_1_0.png"] = {x:1764, y:752, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood6_0_0.png"] = {x:0, y:836, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood15_0_1.png"] = {x:126, y:836, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood9_0_0.png"] = {x:252, y:836, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood7_0_1.png"] = {x:378, y:836, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood13_0_0.png"] = {x:504, y:836, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood11_0_0.png"] = {x:630, y:836, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood7_1_0.png"] = {x:756, y:836, d:126, a:84, e:Y};
x["iso/map/oase/1_wood/wood11_1_0.png"] = {x:882, y:836, d:126, a:84, e:Y};
x["iso/village/village3_2.png"] = {x:1008, y:836, d:126, a:68, e:Y};
x["iso/village/village4_6.png"] = {x:1134, y:836, d:126, a:68, e:Y};
x["iso/village/village3_4.png"] = {x:1260, y:836, d:126, a:68, e:Y};
x["iso/village/village2_6_inactive.png"] = {x:1386, y:836, d:126, a:68, e:Y};
x["iso/village/village4_2.png"] = {x:1512, y:836, d:126, a:68, e:Y};
x["iso/village/village3_3.png"] = {x:1638, y:836, d:126, a:68, e:Y};
x["iso/village/village2_6.png"] = {x:1764, y:836, d:126, a:68, e:Y};
x["iso/village/village2_2.png"] = {x:0, y:920, d:126, a:68, e:Y};
x["iso/village/village2_4_inactive.png"] = {x:126, y:920, d:126, a:68, e:Y};
x["iso/village/village3_2_inactive.png"] = {x:252, y:920, d:126, a:68, e:Y};
x["iso/village/village4_4.png"] = {x:378, y:920, d:126, a:68, e:Y};
x["iso/village/village2_2_inactive.png"] = {x:504, y:920, d:126, a:68, e:Y};
x["iso/village/village4_5.png"] = {x:630, y:920, d:126, a:68, e:Y};
x["iso/village/village1_4_inactive.png"] = {x:756, y:920, d:126, a:68, e:Y};
x["iso/village/village1_5_inactive.png"] = {x:882, y:920, d:126, a:68, e:Y};
x["iso/village/village1_1.png"] = {x:1008, y:904, d:126, a:68, e:Y};
x["iso/village/village1_3.png"] = {x:1134, y:904, d:126, a:68, e:Y};
x["iso/village/village3_5_inactive.png"] = {x:1260, y:904, d:126, a:68, e:Y};
x["iso/village/villageNatar.png"] = {x:1386, y:904, d:126, a:68, e:Y};
x["iso/village/village2_4.png"] = {x:1512, y:904, d:126, a:68, e:Y};
x["iso/village/village4_3.png"] = {x:1638, y:904, d:126, a:68, e:Y};
x["iso/village/village2_1_inactive.png"] = {x:1764, y:904, d:126, a:68, e:Y};
x["iso/village/village1_4.png"] = {x:0, y:988, d:126, a:68, e:Y};
x["iso/village/village1_1_inactive.png"] = {x:126, y:988, d:126, a:68, e:Y};
x["iso/village/village2_5.png"] = {x:252, y:988, d:126, a:68, e:Y};
x["iso/village/village3_1.png"] = {x:378, y:988, d:126, a:68, e:Y};
x["iso/village/village2_1.png"] = {x:504, y:988, d:126, a:68, e:Y};
x["iso/village/village4_1.png"] = {x:630, y:988, d:126, a:68, e:Y};
x["iso/village/village3_3_inactive.png"] = {x:756, y:988, d:126, a:68, e:Y};
x["iso/village/village2_5_inactive.png"] = {x:882, y:988, d:126, a:68, e:Y};
x["iso/village/village3_6.png"] = {x:1008, y:972, d:126, a:68, e:Y};
x["iso/village/villageRobber.png"] = {x:1134, y:972, d:126, a:68, e:Y};
x["iso/village/village3_6_inactive.png"] = {x:1260, y:972, d:126, a:68, e:Y};
x["iso/village/village2_3_inactive.png"] = {x:1386, y:972, d:126, a:68, e:Y};
x["iso/village/village1_5.png"] = {x:1512, y:972, d:126, a:68, e:Y};
x["iso/village/village1_6_inactive.png"] = {x:1638, y:972, d:126, a:68, e:Y};
x["iso/village/village1_3_inactive.png"] = {x:1764, y:972, d:126, a:68, e:Y};
x["iso/village/village1_2.png"] = {x:0, y:1056, d:126, a:68, e:Y};
x["iso/village/village1_6.png"] = {x:126, y:1056, d:126, a:68, e:Y};
x["iso/village/village3_4_inactive.png"] = {x:252, y:1056, d:126, a:68, e:Y};
x["iso/village/villageNPCgov.png"] = {x:378, y:1056, d:126, a:68, e:Y};
x["iso/village/village3_5.png"] = {x:504, y:1056, d:126, a:68, e:Y};
x["iso/village/village1_2_inactive.png"] = {x:630, y:1056, d:126, a:68, e:Y};
x["iso/village/village2_3.png"] = {x:756, y:1056, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_05.png"] = {x:882, y:1056, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_07.png"] = {x:1008, y:1040, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_09.png"] = {x:1134, y:1040, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_10.png"] = {x:1260, y:1040, d:126, a:68, e:Y};
x["iso/village/village3_1_inactive.png"] = {x:1386, y:1040, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_08.png"] = {x:1512, y:1040, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_11.png"] = {x:1638, y:1040, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_09.png"] = {x:1764, y:1040, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_07.png"] = {x:0, y:1124, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_13.png"] = {x:126, y:1124, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_10.png"] = {x:252, y:1124, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_11.png"] = {x:378, y:1124, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_13.png"] = {x:504, y:1124, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_12.png"] = {x:630, y:1124, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_03.png"] = {x:756, y:1124, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_06.png"] = {x:882, y:1124, d:126, a:68, e:Y};
x["iso/mask/fullTileGround.png"] = {x:1008, y:1108, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_04.png"] = {x:1134, y:1108, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_01.png"] = {x:1260, y:1108, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_02.png"] = {x:1386, y:1108, d:126, a:68, e:Y};
x["iso/marker/playerMarker/playerMarker_14.png"] = {x:1512, y:1108, d:126, a:68, e:Y};
x["iso/marker/playerMarker/ownMarker_04.png"] = {x:1638, y:1108, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_01.png"] = {x:1764, y:1108, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_08.png"] = {x:0, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_09.png"] = {x:126, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_02.png"] = {x:252, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_05.png"] = {x:378, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_06.png"] = {x:504, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_11.png"] = {x:630, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_13.png"] = {x:756, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_01.png"] = {x:882, y:1192, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_07.png"] = {x:1008, y:1176, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_03.png"] = {x:1134, y:1176, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_10.png"] = {x:1260, y:1176, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_04.png"] = {x:1386, y:1176, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_05.png"] = {x:1512, y:1176, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_04.png"] = {x:1638, y:1176, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_06.png"] = {x:1764, y:1176, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_03.png"] = {x:0, y:1260, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_14.png"] = {x:126, y:1260, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_12.png"] = {x:252, y:1260, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_12.png"] = {x:378, y:1260, d:126, a:68, e:Y};
x["iso/marker/fieldMarker/fieldMarker_08.png"] = {x:504, y:1260, d:126, a:68, e:Y};
x["iso/marker/allianceMarker/allianceMarker_02.png"] = {x:630, y:1260, d:126, a:68, e:Y};
x["iso/village/villageRobberHideout.png"] = {x:756, y:1260, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_2_0.png"] = {x:882, y:1260, d:126, a:68, e:Y};
x["iso/map/feld13.png"] = {x:1134, y:1244, d:126, a:68, e:Y};
x["iso/map/feld10.png"] = {x:1260, y:1244, d:126, a:68, e:Y};
x["iso/map/feld6.png"] = {x:1386, y:1244, d:126, a:68, e:Y};
x["iso/map/feld31.png"] = {x:1512, y:1244, d:126, a:68, e:Y};
x["iso/map/feld16.png"] = {x:1638, y:1244, d:126, a:68, e:Y};
x["iso/map/feld0_0_old.png"] = {x:1764, y:1244, d:126, a:68, e:Y};
x["iso/map/feld21.png"] = {x:0, y:1328, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop3_0_0.png"] = {x:126, y:1328, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop9_0_1.png"] = {x:252, y:1328, d:126, a:68, e:Y};
x["iso/map/feld7.png"] = {x:378, y:1328, d:126, a:68, e:Y};
x["iso/map/feld9.png"] = {x:504, y:1328, d:126, a:68, e:Y};
x["iso/map/feld4.png"] = {x:630, y:1328, d:126, a:68, e:Y};
x["iso/map/feld22.png"] = {x:756, y:1328, d:126, a:68, e:Y};
x["iso/map/loading.png"] = {x:882, y:1328, d:126, a:68, e:Y};
x["iso/map/feld2.png"] = {x:1008, y:1312, d:126, a:68, e:Y};
x["iso/map/feld18.png"] = {x:1134, y:1312, d:126, a:68, e:Y};
x["iso/map/feld11.png"] = {x:1260, y:1312, d:126, a:68, e:Y};
x["iso/map/feld23.png"] = {x:1386, y:1312, d:126, a:68, e:Y};
x["iso/map/feld28.png"] = {x:1512, y:1312, d:126, a:68, e:Y};
x["iso/map/feld27.png"] = {x:1638, y:1312, d:126, a:68, e:Y};
x["iso/map/feld5.png"] = {x:1764, y:1312, d:126, a:68, e:Y};
x["iso/map/feld19.png"] = {x:0, y:1396, d:126, a:68, e:Y};
x["iso/map/feld29.png"] = {x:126, y:1396, d:126, a:68, e:Y};
x["iso/map/feld30.png"] = {x:252, y:1396, d:126, a:68, e:Y};
x["iso/map/feld14.png"] = {x:378, y:1396, d:126, a:68, e:Y};
x["iso/map/feld8.png"] = {x:504, y:1396, d:126, a:68, e:Y};
x["iso/map/feld0.png"] = {x:630, y:1396, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop7_-1_0.png"] = {x:756, y:1396, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop6_0_0.png"] = {x:882, y:1396, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay7_0_0.png"] = {x:1008, y:1380, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay2_0_0.png"] = {x:1134, y:1380, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay7_0_1.png"] = {x:1260, y:1380, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay6_0_0.png"] = {x:1386, y:1380, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop9_1_0.png"] = {x:1512, y:1380, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay6_0_1.png"] = {x:1638, y:1380, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay6_1_0.png"] = {x:1764, y:1380, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay5_0_0.png"] = {x:0, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay4_0_0.png"] = {x:126, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay7_1_0.png"] = {x:252, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay1_0_0.png"] = {x:378, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay3_0_0.png"] = {x:504, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/2_clay/clay0_0_0.png"] = {x:630, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop8_-1_0.png"] = {x:756, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop2_0_0.png"] = {x:882, y:1464, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop4_0_0.png"] = {x:1008, y:1448, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop8_0_0.png"] = {x:1134, y:1448, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop2_1_0.png"] = {x:1260, y:1448, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop2_0_1.png"] = {x:1386, y:1448, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop5_0_0.png"] = {x:1512, y:1448, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop0_0_0.png"] = {x:1638, y:1448, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop1_0_0.png"] = {x:1764, y:1448, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop10_0_1.png"] = {x:0, y:1532, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop10_1_0.png"] = {x:126, y:1532, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop10_0_0.png"] = {x:252, y:1532, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop7_0_0.png"] = {x:378, y:1532, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop9_0_0.png"] = {x:504, y:1532, d:126, a:68, e:Y};
x["iso/map/oase/4_crop/crop1_-1_0.png"] = {x:630, y:1532, d:126, a:68, e:Y};
x["iso/map/feld20.png"] = {x:756, y:1532, d:126, a:68, e:Y};
x["iso/map/feld25.png"] = {x:882, y:1532, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-1_2.png"] = {x:1008, y:1516, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_0_-1.png"] = {x:1134, y:1516, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_0_1.png"] = {x:1260, y:1516, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_1_-1.png"] = {x:1386, y:1516, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_1_-2.png"] = {x:1512, y:1516, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-2_2.png"] = {x:1638, y:1516, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-2_0.png"] = {x:1764, y:1516, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-2_1.png"] = {x:0, y:1600, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_cloud.png"] = {x:126, y:1600, d:126, a:68, e:Y};
x["iso/map/feld15.png"] = {x:252, y:1600, d:126, a:68, e:Y};
x["iso/map/feld1.png"] = {x:378, y:1600, d:126, a:68, e:Y};
x["iso/map/feld17.png"] = {x:504, y:1600, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_0_2.png"] = {x:630, y:1600, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_0_0.png"] = {x:756, y:1600, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_village.png"] = {x:882, y:1600, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_2_1.png"] = {x:1008, y:1584, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_0_-2.png"] = {x:1134, y:1584, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_1_0.png"] = {x:1260, y:1584, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_1_2.png"] = {x:1386, y:1584, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-2_-2.png"] = {x:1512, y:1584, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_2_2.png"] = {x:1638, y:1584, d:126, a:68, e:Y};
x["iso/map/feld12.png"] = {x:1764, y:1584, d:126, a:68, e:Y};
x["iso/map/fog.png"] = {x:0, y:1668, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-1_-2.png"] = {x:126, y:1668, d:126, a:68, e:Y};
x["iso/map/feld3.png"] = {x:252, y:1668, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-2_-1.png"] = {x:378, y:1668, d:126, a:68, e:Y};
x["iso/map/feld26.png"] = {x:504, y:1668, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-1_-1.png"] = {x:630, y:1668, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_1_1.png"] = {x:756, y:1668, d:126, a:68, e:Y};
x["iso/map/feld24.png"] = {x:882, y:1668, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_2_-2.png"] = {x:1008, y:1652, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_2_-1.png"] = {x:1134, y:1652, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-1_0.png"] = {x:1260, y:1652, d:126, a:68, e:Y};
x["iso/map/weltwunder/weltwunder_-1_1.png"] = {x:1386, y:1652, d:126, a:68, e:Y};
x["iso/marker/strategicMap/cropMarker_02.png"] = {x:1512, y:1652, d:25, a:32, e:Y};
x["iso/marker/strategicMap/cropMarker_01.png"] = {x:1512, y:1684, d:25, a:32, e:Y};
x["iso/oases/oasis20Free.png"] = {x:1537, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis10Occupied.png"] = {x:1565, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis30Occupied.png"] = {x:1593, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis20Occupied.png"] = {x:1621, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis41Occupied.png"] = {x:1649, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis31Occupied.png"] = {x:1677, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis21Occupied.png"] = {x:1705, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis31Free.png"] = {x:1733, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis10Free.png"] = {x:1761, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis41Free.png"] = {x:1789, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis40Occupied.png"] = {x:1817, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis21Free.png"] = {x:1845, y:1652, d:28, a:28, e:Y};
x["iso/oases/oasis11Free.png"] = {x:1873, y:1652, d:28, a:28, e:Y};
x["iso/oases_v2/oasis31.png"] = {x:1537, y:1680, d:28, a:28, e:Y};
x["iso/oases_v2/readyToFetch.png"] = {x:1537, y:1708, d:28, a:28, e:Y};
x["iso/oases_v2/oasis30.png"] = {x:1565, y:1680, d:28, a:28, e:Y};
x["iso/oases_v2/oasis20.png"] = {x:1565, y:1708, d:28, a:28, e:Y};
x["iso/oases_v2/oasis21.png"] = {x:1593, y:1680, d:28, a:28, e:Y};
x["iso/oases/oasis30Free.png"] = {x:1593, y:1708, d:28, a:28, e:Y};
x["iso/oases_v2/oasis41.png"] = {x:1621, y:1680, d:28, a:28, e:Y};
x["iso/oases_v2/oasis40.png"] = {x:1621, y:1708, d:28, a:28, e:Y};
x["iso/oases/oasis40Free.png"] = {x:1649, y:1680, d:28, a:28, e:Y};
x["iso/oases/oasis11Occupied.png"] = {x:1649, y:1708, d:28, a:28, e:Y};
x["iso/oases_v2/oasis10.png"] = {x:1677, y:1680, d:28, a:28, e:Y};
x["iso/oases_v2/oasis11.png"] = {x:1677, y:1708, d:28, a:28, e:Y};
x["iso/oases/readyToFetch.png"] = {x:1705, y:1680, d:28, a:28, e:Y};
function Pa(a) {
  function c() {
    u.height(r.height());
    C = v.height();
    D = u[0].scrollHeight
  }
  function b() {
    C !== D && A.height(C * (100 * C / D) / 100)
  }
  function l() {
    var a = 100 * u.scrollTop() / D;
    A.css({top:C * a / 100})
  }
  function h() {
    J = !0;
    window.setTimeout(function() {
      J && (z.stop(!0), z.fadeIn(), v.addClass("active"))
    }, 300)
  }
  function g() {
    n();
    var a = u.scrollTop() - (D - v.height());
    20 > Math.abs(a) ? B = !1 : B = !0
  }
  function e() {
    u.scrollTop(D - v.height())
  }
  function m(a) {
    u.scrollTop(u.scrollTop() + a);
    q()
  }
  function f() {
    var a = u.scrollTop(), b = v.height();
    u.find(".waitForRender").each(function(e, f) {
      var c = !1;
      f.offsetTop <= a + b && f.offsetTop + f.offsetHeight >= a && (c = !0);
      c && ("function" == typeof f.ta && f.ta(), $(f).removeClass("waitForRender"))
    })
  }
  function n() {
    N || (N = !0, window.setTimeout(function() {
      N = !1;
      f()
    }, 10))
  }
  function q() {
    if(s || ("none" == r[0].style.display || null === r[0].offsetParent) || E == t[0].scrollHeight && R == t[0].scrollWidth && O === u[0].offsetHeight) {
      return!0
    }
    E = t[0].scrollHeight;
    R = t[0].scrollWidth;
    O = u[0].offsetHeight;
    c();
    b();
    z.height(u.height());
    u.width("auto");
    v.width("auto");
    var f = r.width();
    v.width(f);
    var g = u.width() - t.width() || y;
    u.width(f + g);
    C + 1 >= D || 0 == C ? (u.width(f), u.css("overflow-y", "hidden"), t.width("auto"), z.stop(!0), z.hide(), J && (J = !1, v.removeClass("active"))) : (0 < f && t.width(f), u.css("overflow-y", "auto"), h());
    l();
    n();
    "undefined" !== a.scrollDown && (a.scrollDown && !B) && e();
    return!0
  }
  function p() {
    if(H) {
      H = !1
    }else {
      if(l(), g(), "function" == typeof a.onScrolling) {
        a.onScrolling()
      }
    }
  }
  var r = a.element, s = !1, v = $(".scrollContentOuterWrapper", r).first(), u = $(".scrollContent", r).first(), t = $(".scrollContentInnerWrapper", r).first(), z = $(".scrollTrack", r).last(), A = $(".scrollHandle", r).last(), C = 0, D = 0, y = 20, B = !1, H = !1, I = -1 !== navigator.platform.toUpperCase().indexOf("MAC"), G = 0 < $(".Firefox").length;
  I && G && (y = 15);
  var J = !1, N = !1, E = -1, R = -1, O = -1;
  U.ca(A[0], function() {
    var b = parseInt(A.css("top")), f = U.M().current.y, e = U.H("move", function(e) {
      e = b + e.current.y - f;
      var c = parseInt(z.css("height")) - parseInt(A.css("height"));
      e = Math.max(0, Math.min(c, e));
      A.css("top", e);
      e = 100 * parseInt(A.css("top")) / (C - 1);
      H = !0;
      u.scrollTop(Math.ceil(D * e / 100));
      g();
      if("function" == typeof a.onScrolling) {
        a.onScrolling()
      }
    }), c = U.H("up", function() {
      e();
      c()
    })
  });
  U.Ma(A[0], ha(!1));
  U.Ie(z[0], function() {
    H = !1
  });
  U.ca(z[0], function() {
    var a = U.M();
    if(window.document.elementFromPoint(a.current.x, a.current.y) == A[0]) {
      return!1
    }
    var b = A.offset().top;
    a.current.y < b ? m(-100) : m(100)
  });
  u.on("scroll", p);
  var L = !1;
  !0 === a.autoUpdate && ("function" == typeof a.initUpdateTick ? a.initUpdateTick(q) : function Z() {
    L || (window.setTimeout(Z, 100), q())
  }());
  v.removeClass("disableScrolling");
  u.removeClass("disableScrolling");
  c();
  b();
  l();
  "undefined" !== a.scrollDown && a.scrollDown && (e(), H = !0);
  this.update = q;
  this.scrollToBeginning = function() {
    u.scrollTop(0)
  };
  this.scrollToEnd = e;
  this.scrollBy = m;
  this.scrollTo = function(a, b, e) {
    b && (a = D - a);
    e || (a -= v.height());
    u.scrollTop(a)
  };
  this.checkLazyRenderer = n;
  this.resetSettings = function() {
    B = !1
  };
  this.oh = function() {
    v.attr("style", "");
    u.attr("style", "");
    t.attr("style", "");
    z.attr("style", "");
    v.addClass("disableScrolling");
    u.addClass("disableScrolling");
    s = !0
  };
  this.destroy = function() {
    U.s(A[0]);
    U.s(z[0]);
    u.off("scroll", p);
    L = !0
  }
}
function Qa(a) {
  function c(a) {
    for(key in a) {
      h[key] = a[key]
    }
    if(0 >= h.customSteps) {
      throw Error("CustomSteps must be bigger than 0");
    }
    if(0 > h.min) {
      throw Error("min must be minimum 0");
    }
    if(h.max < h.min) {
      throw Error("max shouldn't be smaller than min");
    }
    h.max -= h.max % h.customSteps;
    a = h.max / h.customSteps;
    h.Ga = a <= h.width ? a : 100;
    0 != h.Ga ? (h.Fa = 100 / h.Ga, h.ff = h.width / h.Ga) : (h.Fa = 0, h.ff = 0, h.head = 0)
  }
  function b(a) {
    if("undefined" !== typeof h[a]) {
      for(var b = [], c = 1;c < arguments.length;c++) {
        b.push(arguments[c])
      }
      return h[a].apply(h, b)
    }
    return!1
  }
  function l(a, b, c) {
    a = parseInt(a);
    isNaN(a) && (a = 0);
    b = parseInt(b);
    c = parseInt(c);
    return a < b ? b : a > c ? c : a
  }
  this.width = this.max = this.min = this.head = this.gd = 0;
  this.customSteps = 1;
  this.Ke = {x:0, y:0};
  this.zb = !1;
  var h = this;
  c(a);
  this.update = function(a) {
    c(a);
    return this
  };
  this.Ue = function(a) {
    a = Math.round(a * this.max / 100);
    this.la(a, !0)
  };
  this.la = function(a, e) {
    if("undefined" === typeof e || e) {
      a = this.Hf(a)
    }
    var c = l(a, this.min, this.max), f = this.tb();
    if(c != f || a != c || e) {
      f = b("headChanged", c, f), isNaN(f) || (c = f), this.head = 0 >= this.max ? 0 : 100 * c / this.max
    }
  };
  this.tb = function() {
    return Math.round(this.head * this.max / 100)
  };
  this.pe = function(a) {
    a = l(Math.round(100 * a / this.width), 0, 100);
    a = this.Gf(a);
    return Math.round(a * this.max / 100)
  };
  this.pg = function() {
    return Math.round(this.head * this.width / 100)
  };
  this.step = function(a, b, c) {
    c += h.Fa * b * a;
    this.Ue(c);
    return this
  };
  this.moveStart = function(a) {
    this.Ke = a;
    this.gd = this.head;
    this.zb = !0;
    return this
  };
  this.move = function(a) {
    a = a.x - this.Ke.x;
    if(!this.zb || 0 == a) {
      return this
    }
    var b = (new V(a, 0)).normalize().x;
    this.step(b, Math.abs(a / this.ff), this.gd);
    return this
  };
  this.Zg = function() {
    this.zb = !1;
    this.gd = this.head
  };
  this.Gf = function(a) {
    var b = a;
    if(100 < this.Fa || 0 == this.Fa) {
      return 0
    }
    if(0 < a % this.Fa) {
      a %= this.Fa;
      var b = b - a, c = Math.round(100 * (b + this.Fa)) / 100;
      this.Fa / 2 <= a && 100 >= c && (b = c)
    }
    return b
  };
  this.Hf = function(a) {
    var b = a;
    if(0 == this.customSteps || 0 == this.Ga) {
      return 0
    }
    0 < a % this.customSteps && (a %= this.customSteps, b -= a, this.customSteps / 2 <= a && b + this.customSteps <= this.max && (b += this.customSteps));
    return b
  }
}
window.debugCtrl = function(a, c, b, l, h, g) {
  function e(a) {
    a = Travian.writeRequest("cheat/" + a, {villageId:b.getActiveVillageId()});
    console.log(a)
  }
  var m = [{text:"------Village------", funct:null, params:[], disabled:!0}, {text:"Finish events for current village", funct:e, params:["finishEvents"]}, {text:"pimp my village", funct:e, params:["pimpMyVillage"]}, {text:"Fill resources for current village", funct:e, params:["fillupResources"]}, {text:"Clear resources for current village", funct:e, params:["clearResources"]}, {text:"Create new village", funct:function() {
    var a = {playerId:l.getPlayerId(), tribeId:l.l().data.tribeId, villageId:b.getActiveVillageId()};
    Travian.writeRequest("cheat/createVillage", a)
  }, params:[]}, {text:"Destroy current village", funct:e, params:["destroyVillage"]}, {text:"Destroy all Resource Fields", funct:e, params:["destroyAllResourceFields"]}, {text:"Fillup Troops", funct:e, params:["fillTroops"]}, {text:"Fillup Troops Massive", funct:e, params:["fillTroopsMassive"]}, {text:"Start Robber Attack", funct:e, params:["startRobberAttack"]}, {text:"Generate incoming attacks", funct:e, params:["generateTroopMovements"]}, {text:"generate max possible farm lists", funct:e, params:["generateFarmLists"]}, 
  {text:"------Player------", funct:null, params:[], disabled:!0}, {text:"Finish events for current player", funct:e, params:["finishEventsForPlayer"]}, {text:"Fillup Culturepoints", funct:e, params:["fillCulture"]}, {text:"Get Gold", funct:e, params:["getGold"]}, {text:"Pimp my Staatskasse", funct:e, params:["pimpMyTributesAndTreasures"]}, {text:"Spawn Kingdom Villages", funct:e, params:["spawnKingdomVillages"]}, {text:"Give me +5 Governors", funct:e, params:["addGovernors"]}, {text:"Set Inactive", 
  funct:e, params:["setInactive"]}, {text:"Set Inactive and delete", funct:e, params:["setInactiveAndDelete"]}, {text:"Set player to 1 days old", funct:e, params:["setPlayerTo1d"]}, {text:"Set player to 7 days old", funct:e, params:["setPlayerTo7d"]}, {text:"Set player offline for 24h", funct:function() {
    Travian.writeRequest("cheat/setOfflineFor24h", {}, function() {
      l.ab()
    })
  }, params:[]}, {text:"Force recalculation of BP", funct:e, params:["recalculateBeginnersProtection"]}, {text:"Reset sign up time (+starter package)", funct:e, params:["resetSignUpTimeAndStarterPackage"]}, {text:"Create Sample Reports", funct:e, params:["createSampleReports"]}, {text:"Shift market offer time", funct:e, params:["shiftMarketOfferTime"]}, {text:"------World------", funct:null, params:[], disabled:!0}, {text:"Finish Auctions", funct:e, params:["finishAuctions"]}, {text:"Set World Wonder to (maxLevel-1)", 
  funct:e, params:["setWorldWonderTo99"]}, {text:"Activate World Wonders", funct:e, params:["activateWorldWonders"]}, {text:"Deactivate World Wonders", funct:e, params:["deactivateWorldWonders"]}, {text:"------Punishment------", funct:null, params:[], disabled:!0}, {text:"-for payment use Payment Shop-", funct:null, params:[], disabled:!0}, {text:"Ban Player ClickCounter limit", funct:e, params:["banPlayerClickCounter"]}, {text:"------Tutorial/Quests------", funct:null, params:[], disabled:!0}, {text:"Finish Tutorial as King and place on map", 
  funct:e, params:["finishTutorialKing"]}, {text:"Finish Tutorial as Governor and place on map", funct:e, params:["finishTutorialGovernor"]}, {text:"Finish all tutorial quests", funct:e, params:["finishAllQuests"]}, {text:"------PremiumFeatures------", funct:null, params:[], disabled:!0}, {text:"set TimedFeatures 24h, 1m before Expired", funct:e, params:["setTimedPremiumFeaturesTo24h"]}, {text:"Enable deletion if bought gold", funct:e, params:["enableDeletionIfBoughtGold"]}, {text:"------Hero------", 
  funct:null, params:[], disabled:!0}, {text:"Hero Levelup", funct:e, params:["heroLevelup"]}, {text:"Hero Levelup +10", funct:e, params:["heroLevelup10"]}, {text:"Hero all items", funct:e, params:["heroAllItems"]}, {text:"Kill your hero", funct:e, params:["heroKill"]}, {text:"regenerate your hero for 24h", funct:e, params:["regenerateHeroFor24h"]}, {text:"Fillup hero health", funct:e, params:["regenerateHeroFull"]}, {text:"+10 Adventure points", funct:e, params:["fillupAdventurePoints"]}, {text:"------Other------", 
  funct:null, params:[], disabled:!0}, {text:"Show cheat sheet", funct:c.openWindow, params:["cheatSheet"]}, {text:"Switch Highlighting Canvas <-> SVG", funct:function() {
    Travian.rootScope.enableSvgHighlighting = !Travian.rootScope.enableSvgHighlighting
  }, params:[]}, {text:"------Debugging------", funct:null, params:[], disabled:!0}, {text:"Call dbUpdate", funct:function() {
    Travian.writeRequest("acp/dbUpdate", {}, w())
  }, params:[]}, {text:"Recalculate Map Domination", funct:e, params:["calcRegion"]}, {text:"Recalculate Resources", funct:e, params:["calculateResources"]}, {text:"Dump current village data to console", funct:function(a) {
    "village" == a && console.log(b.i().data)
  }, params:["village"]}, {text:"Toggle tooltips to stay open", funct:function() {
    Travian.Config.wd = !Travian.Config.wd
  }, params:[]}];
  c.options = [];
  c.buildingDropDown = {placeholder:"ChoseBuilding", selected:null, options:{}, lazyRendering:!0};
  for(a = 0;42 > a;a++) {
    c.buildingDropDown.options[a] = a + ": " + Travian.translate("Building_" + a)
  }
  Travian.txt["Cheat.debug"] = "Debug";
  c.dropdown1 = {placeholder:"Cheat.debug", selected:null, options:[], callback:function(a) {
    "function" === typeof m[a].funct && m[a].funct.apply(this, m[a].params);
    g(function() {
      c.dropdown1.selected = null
    }, 0)
  }, disabledEntries:[], maxHeight:600, bodyClass:"cheatDropDown", lazyRendering:!0};
  (function() {
    for(var a = 0;a < m.length;a++) {
      c.dropdown1.options.push(m[a].text), m[a].disabled && c.dropdown1.disabledEntries.push(a)
    }
  })()
};
window.debugCtrl.$inject = "$rootScope $scope VillageService SessionService BuildingService $timeout".split(" ");
window.achievementNotificationsCtrl = function(a) {
  a.close = function() {
    a.closeWindow("achievementNotifications")
  };
  a.collectRewards = function() {
    window.location.href = "http://" + Travian.Config.gameLobbyUrl + "/#/achievements"
  };
  Travian.request("player/getAchievementNotifications", {}, function(c) {
    if(0 == c.length) {
      a.close()
    }else {
      for(var b = 0;b < c.length;b++) {
        c[b].extraData || (c[b].extraData = {}), c[b].langKeySuffix = c[b].key == Achievement.TYPE_FINISHED_A_GAMEWORLD && c[b].extraData.allianceName ? "_hasAlliance" : ""
      }
      a.achievementNotifications = c
    }
  })
};
window.achievementNotificationsCtrl.$inject = ["$scope", "SessionService"];
window.activationCtrl = function(a) {
  a.w.windowName = "Activation";
  a.useMellon = config.mellon.useMellon;
  a.activationIframe = mellon.getActivationIframe()
};
window.activationCtrl.$inject = ["$scope", "RoutingService", "SessionService"];
window.activationNeededCtrl = function(a, c, b, l) {
  if("undefined" == typeof a.tabConfig || 0 == a.tabConfig.tabs.length) {
    a.w.windowName = "ActivationNeeded"
  }
  a.useMellon = config.mellon.useMellon;
  a.openActivation = function() {
    if(a.useMellon) {
      var b = l.ba().getActivation();
      l.ia(b).open()
    }else {
      window.open(config.portal + config.activation + "-" + (new Date).getTime(), "_blank")
    }
  }
};
window.activationNeededCtrl.$inject = ["$scope", "RoutingService", "SessionService", "MellonService"];
window.allianceCtrl = function(a, c, b) {
  a.w.windowName = "Alliance";
  a.alliance = null;
  var l = a.getParam("allianceId");
  a.alliance = Alliance.get(l);
  b(function() {
    if("undefined" == typeof l || null == l) {
      a.closeWindow("alliance"), a.openWindow("society")
    }
    a.alliance.data.id == Travian.Player.data.allianceId && (a.closeWindow("alliance"), a.openWindow("society", {tab:"Alliance"}))
  }, 10)
};
window.allianceCtrl.$inject = ["$scope", "SessionService", "$timeout"];
window.authErrorCtrl = function(a, c) {
  a.w.windowName = "AuthError.WindowName";
  a.logout = function() {
    c.ab()
  }
};
window.authErrorCtrl.$inject = ["$scope", "SessionService"];
window.academyCtrl = function(a) {
  a.tabConfig.disableScrollingForTabs = ["main"]
};
window.academyCtrl.$inject = ["$scope"];
window.blacksmithCtrl = function(a) {
  a.tabConfig.disableScrollingForTabs = ["main"]
};
window.blacksmithCtrl.$inject = ["$scope"];
window.buildingIndexCtrl = function(a, c, b, l) {
  function h(b) {
    a.building = b;
    a.w.building = a.building
  }
  function g() {
    0 < q ? c.R("type" + q, e) : c.R(a.locationId, e)
  }
  function e(b) {
    null == b ? a.closeWindow("building") : (h(b), f = b.isRubble(), a.locationId = b.data.locationId, a.subscribe(b, m))
  }
  function m() {
    var b = a.building;
    if(f && !b.isRubble()) {
      f = !1, a.closeWindow("building")
    }else {
      b.data.buildingType == Building.TYPE.CRANNY && b.calculateEffect();
      0 <= q && a.m("location", b.data.locationId);
      var e = "default";
      if(0 < b.data.lvl || 4 >= b.data.buildingType || b.data.buildingType == Building.TYPE.WONDER_OF_WORLD) {
        e = c.ig(b.data.buildingType), 0 < b.data.buildingType && (a.w.contentHeaderTemplate = "tpl/building/partials/buildingHeader.html")
      }
      b.isRubble() && (e = "rubble");
      a.pageTemplate = "tpl/building/" + e + "/" + e + "_main.html";
      q = -1;
      a.building.buildingImage = b.getImageName(Travian.Player.data.tribeId);
      b && "undefined" != typeof b.data.effect && (a.nextEffect = b.data.nextEffect, a.nextEffects = b.data.effect.slice(1), a.currentEffect = b.data.currentEffect)
    }
  }
  a.w.contentHeaderTemplate = "tpl/building/partials/buildingHeader.html";
  a.pageTemplate = "";
  a.locationId = a.getParam("location", !0);
  var f = !1, n = b.i();
  h(new Building);
  a.storage = n.getResources();
  g();
  var q = -1;
  a.upgradeBuildingButtonIsDisabled = !1;
  a.canCollectRubble = function() {
    var a = Travian.Player.data.playerId, e = Travian.Player.data.uiStatus;
    return!(0 < BuildingQueue.get(b.getActiveVillageId()).data.queues[BuildingQueue.TYPE_DESTRUCTION].length) && 0 < a && -1 == e
  };
  a.collectRubble = function() {
    var e = a.building;
    l.U(Ra);
    Travian.writeRequest("building/upgrade", {villageId:b.getActiveVillageId(), locationId:e.data.locationId, buildingType:e.data.buildingType})
  };
  a.$on("urlChanged", function(b, e) {
    e.location && (a.locationId = e.location, g())
  });
  a.$on("activeVillageChanged", function() {
    if(null == a.getParam("location")) {
      return!1
    }
    n = b.i();
    a.storage = n.getResources();
    q = a.building.data.buildingType;
    a.locationId = a.getParam("location");
    g()
  });
  a.hasEnoughResources = function(a) {
    return n.hasEnoughResources(a)
  };
  a.isBuildingBuild = function() {
    return 0 < a.building.data.lvl
  };
  a.getFutureLevel = function(b) {
    return a.building.data.lvl + b + 1
  };
  a.$on("$destroy", function() {
    l.Qh(a.building.data.buildingType)
  })
};
window.buildingIndexCtrl.$inject = ["$scope", "BuildingService", "VillageService", "AudioService"];
window.buildingQueueCtrl = function(a, c, b, l) {
  function h() {
    a.slotDetails.building = {};
    a.slotDetails.level = 0;
    a.slotDetails.startTime = 0;
    a.slotDetails.notEnoughResources = !1;
    a.slotDetails.npcTradingTimeBoost = 0;
    a.slotDetails.canPayNow = !1;
    if(q && a.buildingsByLocation && a.slotDetails.visible) {
      var b = q.data.queues[a.slotDetails.queue][a.slotDetails.slot];
      if(a.slotDetails.queue == BuildingQueue.TYPE_VILLAGE || a.slotDetails.queue == BuildingQueue.TYPE_RESOURCES) {
        for(var e = [BuildingQueue.TYPE_VILLAGE, BuildingQueue.TYPE_RESOURCES], f = 0;f < e.length;f++) {
          var g = e[f];
          if(q.data.queues[g][0]) {
            var m = q.data.queues[g][0].locationId;
            a.slotDetails.building[g] = a.buildingsByLocation[m]
          }
        }
      }else {
        b && (a.slotDetails.building[a.slotDetails.queue] = a.buildingsByLocation[b.locationId])
      }
      if(b && (e = a.buildingsByLocation[b.locationId]) && (a.slotDetails.level = e.data.lvl + b.levelDifference, a.slotDetails.queue == BuildingQueue.TYPE_MASTER_BUILDER)) {
        g = {};
        a.slotDetails.canPayNow = !0;
        if(q.data.queues[BuildingQueue.TYPE_RESOURCES][0]) {
          if(Travian.Player.data.tribeId != Player.TRIBE.ROMAN || e.isResourceField()) {
            a.slotDetails.startTime = parseInt(q.data.queues[BuildingQueue.TYPE_RESOURCES][0].finished)
          }
          g[q.data.queues[BuildingQueue.TYPE_RESOURCES][0].locationId] = 1
        }
        q.data.queues[BuildingQueue.TYPE_VILLAGE][0] && (Travian.Player.data.tribeId == Player.TRIBE.ROMAN && e.isResourceField() || (a.slotDetails.startTime = parseInt(q.data.queues[BuildingQueue.TYPE_VILLAGE][0].finished)), g[q.data.queues[BuildingQueue.TYPE_VILLAGE][0].locationId] = 1);
        for(var h = !1, f = 0;f < a.slotDetails.slot;f++) {
          var m = q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][f].locationId, n = a.buildingsByLocation[m];
          if(Travian.Player.data.tribeId != Player.TRIBE.ROMAN || n.isResourceField() === e.isResourceField()) {
            var l = n.data.lvl + (g[m] || 0), p = q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][f].paid;
            !c.i().hasEnoughResources(n.data.nextUpgradeCosts[l]) && !p || h ? (a.slotDetails.startTime = -1, h = !0) : a.slotDetails.startTime += parseInt(n.data.nextUpgradeTimes[l]);
            g[m] = g[m] ? g[m] + 1 : 1;
            b.paid || (m != b.locationId || q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][f].paid) || (a.slotDetails.canPayNow = !1)
          }
        }
        f = e.data.nextUpgradeCosts[a.slotDetails.level];
        b.paid || c.i().hasEnoughResources(f) || (a.slotDetails.notEnoughResources = !0);
        !a.slotDetails.notEnoughResources || (a.activeVillage.isWWVillage() || e.hasEnoughResourcesUsingNpcTrader(a.activeVillage.getResources(), a.activeVillage.getCapacity(), b.levelDifference)) || (f = e.data.nextUpgradeCosts[a.slotDetails.level], a.activeVillage.getCostsDistributionDifference(f) < PremiumFeature.NPC_TRADER_INSIGNIFICANCE_LIMIT ? a.slotDetails.npcTradingTimeBoost = -1 : (a.slotDetails.npcTradingTimeBoost = a.activeVillage.calculateNpcTradingTimeBoost(f), 0 == a.slotDetails.npcTradingTimeBoost && 
        (a.slotDetails.npcTradingTimeBoost = -1)))
      }
    }
  }
  function g() {
    if(q && a.buildingsByLocation) {
      var b = {};
      $.each([BuildingQueue.TYPE_VILLAGE, BuildingQueue.TYPE_RESOURCES, BuildingQueue.TYPE_MASTER_BUILDER], function(e, f) {
        for(var c = q.data.queues[f], g = 0;g < c.length;g++) {
          var m = c[g].id, h = a.buildingsByLocation[c[g].locationId];
          a.slotImages[m] || (a.slotImages[m] = {});
          a.slotImages[m].queueType = f;
          a.slotImages[m].slotNr = g + 1;
          a.slotImages[m].buildingType = h.data.buildingType;
          a.slotImages[m].level = h.data.lvl + c[g].levelDifference;
          a.slotImages[m].paid = c[g].paid;
          b[m] = !0
        }
      });
      for(var f in a.slotImages) {
        b[f] || delete a.slotImages[f]
      }
      e()
    }
  }
  function e() {
    if(q && a.buildingsByLocation) {
      for(var b in a.slotImages) {
        if(a.slotImages[b].paid) {
          delete a.slotImages[b].enoughResources
        }else {
          var e = a.slotImages[b].queueType, f = a.slotImages[b].slotNr - 1;
          if(!q.data.queues[e][f]) {
            break
          }
          e = a.buildingsByLocation[q.data.queues[e][f].locationId];
          if(!e) {
            break
          }
          a.slotImages[b].enoughResources = a.activeVillage.hasEnoughResources(e.data.nextUpgradeCosts[a.slotImages[b].level])
        }
      }
    }
  }
  function m() {
    a.availableMasterBuilderSlots = q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length + q.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER];
    a.paidMaxLvlInQueue = {};
    for(var b = [BuildingQueue.TYPE_VILLAGE, BuildingQueue.TYPE_RESOURCES], e = 0;e < b.length;e++) {
      var f = b[e];
      0 < q.data.queues[f].length && (f = q.data.queues[f][0].locationId, a.paidMaxLvlInQueue[f] = a.buildingsByLocation[f].data.lvl)
    }
    for(e = 0;e < q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length;e++) {
      b = q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][e], b.paid && (a.paidMaxLvlInQueue[b.locationId] = a.buildingsByLocation[b.locationId].data.lvl + b.levelDifference)
    }
    h();
    g()
  }
  function f() {
    a.buildingsByLocation = {};
    for(var b = 0;b < p.data.length;b++) {
      var e = p.data[b];
      a.buildingsByLocation[e.data.locationId] = e
    }
    h();
    g()
  }
  function n() {
    var e = c.i();
    null != e.data.villageId && (a.activeVillage = e, delete a.buildingsByLocation, q = BuildingQueue.get(e.data.villageId), (p = b.na(e.data.villageId)) && r && p.unsubscribe(r), r = p.subscribe(f), q && s && q.unsubscribe(s), s = q.subscribe(m), a.buildingQueue = q, a.hideDetails())
  }
  a.Math = Math;
  a.ROMAN = Player.TRIBE.ROMAN;
  a.BuildingQueue = BuildingQueue;
  a.PremiumFeature = PremiumFeature;
  a.slotPrices = Travian.Config.PremiumFeatures.buildingMasterSlot;
  a.npcTraderPrice = Travian.Config.PremiumFeatures.NPCTrader.price;
  a.slotImages = {};
  var q = null, p = null, r = null, s = null;
  a.slotDetails = {visible:!1, queue:0, slot:0, building:{}, level:0, startTime:0, notEnoughResources:!1, npcTradingTimeBoost:0, canPayNow:!1};
  a.showDetails = function(b, e) {
    a.slotDetails.visible && a.slotDetails.queue == b && a.slotDetails.slot == e || (a.slotDetails.visible = !0, "undefined" != typeof b && (a.slotDetails.queue = b), "undefined" != typeof e && (a.slotDetails.slot = e), h())
  };
  a.hideDetails = function() {
    if(Travian.rootScope.windows.confirmGoldUsage) {
      var b = Travian.rootScope.$watch("windows", function() {
        Travian.rootScope.windows.confirmGoldUsage || (a.slotDetails.visible = !1, b())
      }, !0)
    }else {
      a.slotDetails.visible = !1
    }
  };
  n();
  a.$on("activeVillageChanged", n);
  a.$on("resourcesChanged", function() {
    e();
    a.slotDetails.visible && a.slotDetails.queue == BuildingQueue.TYPE_MASTER_BUILDER && h()
  });
  a.shiftMasterBuilder = function(a, b) {
    var e = a.slotNr - 1;
    q && (q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length > Math.max(e, b) && 4 == a.queueType && q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][e].paid == q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][b].paid) && (Travian.request("building/shiftMasterBuilder", {villageId:c.getActiveVillageId(), from:e, to:b}), e = q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].splice(e, 1)[0], q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].splice(b, 0, e))
  };
  a.cancelBuilding = function(a) {
    Travian.writeRequest("building/cancel", {villageId:c.i().data.villageId, eventId:a});
    return!1
  };
  a.reserveResources = function(b) {
    Travian.writeRequest("building/reserveResources", {villageId:c.i().data.villageId, entryId:b}, function(b) {
      if("undefined" == typeof b.errors) {
        b = q.data.queues[BuildingQueue.TYPE_MASTER_BUILDER];
        for(var e = 0;e < b.length;e++) {
          if(!b[e].paid) {
            a.showDetails(BuildingQueue.TYPE_MASTER_BUILDER, e);
            break
          }
        }
      }
    })
  };
  l.o(function() {
    a.vouchers = Voucher.get(Travian.Player.data.playerId)
  });
  a[PremiumFeature.FEATURE_NAME_NPC_TRADER] = function() {
    if(!a.slotDetails.building[BuildingQueue.TYPE_MASTER_BUILDER]) {
      return!1
    }
    var b = c.i(), e = b.getCapacity(), f = new Resources(b.getResources()), g = new Resources(a.slotDetails.building[BuildingQueue.TYPE_MASTER_BUILDER].data.nextUpgradeCosts[a.slotDetails.level]), e = f.distribute(e, g, b.getProduction());
    return{villageId:b.data.villageId, distributeRes:e}
  };
  a[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function(a) {
    return{villageId:c.getActiveVillageId(), queueType:a, delayForNextRequest:2E3}
  };
  a.$on("$destroy", function() {
    p && r && p.unsubscribe(r);
    q && s && q.unsubscribe(s)
  })
};
window.buildingQueueCtrl.$inject = "$scope VillageService BuildingService SessionService AnimationService $timeout".split(" ");
window.buildingUpgradeTooltipCtrl = function(a) {
  function c() {
    var c, e, m = a.building;
    l = parseInt(m.data.lvl, 10);
    var f = a.buildingQueue.data.queues, h = BuildingQueue.TYPE_VILLAGE;
    m.isResourceField() && (h = BuildingQueue.TYPE_RESOURCES);
    for(c = 0;c < f[h].length;c++) {
      "undefined" !== typeof f[h][c] && (e = parseInt(f[h][c].locationId, 10), m.data.locationId == e && l++)
    }
    for(c = 0;c < f[BuildingQueue.TYPE_MASTER_BUILDER].length;c++) {
      "undefined" !== typeof f[BuildingQueue.TYPE_MASTER_BUILDER][c] && (e = parseInt(f[BuildingQueue.TYPE_MASTER_BUILDER][c].locationId, 10), m.data.locationId == e && l++)
    }
    b(a.premiumOptionMenu.requestedUpgrades[m.data.locationId])
  }
  function b(b) {
    a.currentBuildingLevel = l + (parseInt(b) || 0);
    a.numItemsInQueue = a.currentBuildingLevel - parseInt(a.building.data.lvl, 10);
    "undefined" == typeof a.originalSlides && (a.originalSlides = a.numItemsInQueue)
  }
  var l = 0;
  c();
  var h = a.buildingQueue.subscribe(c);
  a.$watch("premiumOptionMenu.requestedUpgrades", function() {
    b(a.premiumOptionMenu.requestedUpgrades[a.building.data.locationId])
  }, !0);
  a.$on("$destroy", function() {
    a.buildingQueue.unsubscribe(h)
  })
};
window.buildingUpgradeTooltipCtrl.$inject = ["$scope"];
window.constructBuildingCtrl = function(a, c, b) {
  function l(b) {
    if("undefined" === typeof b || !b.buildings) {
      return!1
    }
    a.buildings = [];
    for(var m = 0;m < b.buildings.buildable.length;m++) {
      var g = b.buildings.buildable[m], g = new Building(e.data.villageId, a.locationId, g, c);
      g.data.buildable = !0;
      g.data.sortKey = g.data.sortOrder;
      a.buildings.push(g.data)
    }
    for(m = 0;m < b.buildings.notBuildable.length;m++) {
      g = b.buildings.notBuildable[m];
      g = new Building(e.data.villageId, a.locationId, g, c);
      g.data.buildable = !1;
      for(var h = 0, l = 0;l < g.data.requiredBuildings.length;l++) {
        h += Math.max(0, g.data.requiredBuildings[l].requiredLevel - g.data.requiredBuildings[l].currentLevel)
      }
      g.data.sortKey = 100 + g.data.buildingType + 100 * h;
      a.buildings.push(g.data)
    }
    a.buildings.sort(function(a, b) {
      return a.sortKey - b.sortKey
    })
  }
  function h() {
    e = c.i();
    a.activeVillage = e;
    g = BuildingQueue.get(c.getActiveVillageId());
    a.subscribe(g, function() {
      Travian.request("building/getBuildingList", {villageId:e.data.villageId, locationId:a.locationId}, l)
    })
  }
  a.w.windowName = "constructBuilding";
  a.w.contentHeaderTemplate = null;
  a.tabConfig.disableScrolling = !0;
  a.buildings = [];
  a.activeItem = null;
  var g, e, m = !1;
  a.hasEnoughResources = function(a) {
    return e.hasEnoughResources(a)
  };
  a.build = function() {
    if(!m) {
      var f = a.activeItem.buildingType;
      e.getResources();
      for(var h = null, l = 0;l < a.buildings.length;l++) {
        var p = a.buildings[l];
        if(p.buildingType == f) {
          h = p;
          break
        }
      }
      if(null === h) {
        return!1
      }
      var h = new Building(e.data.villageId, a.locationId, p, c), r = {villageId:c.getActiveVillageId(), locationId:a.locationId, buildingType:f};
      a.enoughRes && a.canQueue ? (f = ".constructBuilding button.startConstruction", h = ".buildingQueueContainer .constructionContainer .slotIcon.queueType" + (h.isResourceField() ? BuildingQueue.TYPE_RESOURCES : BuildingQueue.TYPE_VILLAGE), m = b.jb(f, h, "feature_buildingQueue_medium_illu", null, 500, 100, "ease", function() {
        Travian.writeRequest("building/upgrade", r);
        a.closeWindow("building")
      }, null, null, "buildingUpgrade")) : (h = g.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length + 1, m = b.jb(".constructBuilding button.startConstruction.masterBuilder", ".buildingQueueContainer .masterBuilderContainer .slot" + h + " i", "feature_buildingMaster_medium_illu", null, 500, 100, "ease", function() {
        Travian.writeRequest("building/useMasterBuilder", r);
        a.closeWindow("building")
      }, null, null, "buildingUpgrade"))
    }
  };
  h();
  a.$watch("activeItem", function() {
    if(null !== a.activeItem) {
      var b = new Building(e.data.villageId, a.locationId, a.activeItem, c);
      a.enoughRes = e.hasEnoughResources(a.activeItem.upgradeCosts);
      a.canQueue = g.hasFreeBuildingSlots(b);
      a.masterBuilderFree = 0 < g.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER]
    }
  });
  a.$on("activeVillageChanged", function() {
    h()
  })
};
window.constructBuildingCtrl.$inject = ["$scope", "VillageService", "AnimationService"];
window.crannyCtrl = function(a, c, b) {
  c = c.na(b.getActiveVillageId());
  b = 0;
  a.crannyCount = 0;
  a.lootableResources = {1:{}, 2:{}, 3:{}, 4:{}};
  for(var l = 0;l < c.data.length;l++) {
    c.data[l].data.buildingType == a.building.data.buildingType && (b += c.data[l].data.currentEffect.values[0], a.crannyCount++)
  }
  a.wholeEffect = [];
  1 < a.crannyCount && (a.wholeEffect = b);
  for(var h in a.storage) {
    a.lootableResources[h].value = a.storage[h] - b, a.lootableResources[h].name = Resources.STRING[h]
  }
};
window.crannyCtrl.$inject = ["$scope", "BuildingService", "VillageService"];
window.allianceFoundCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.FoundAlliance", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/alliance/allianceFound.html"});
  a.handleError({}, "allianceFoundError");
  a.newAlliance = {tag:"", name:""};
  a.foundAlliance = function() {
    if("" == a.newAlliance.tag || "" == a.newAlliance.name) {
      return!1
    }
    a.newAlliance.founderTitle = Travian.translate("Alliance.FounderTitle");
    Travian.writeRequest("alliance/create", a.newAlliance, function(c) {
      "undefined" == typeof c.errors ? a.closeOverlay() : a.handleError(c, "allianceFoundError")
    })
  }
};
window.allianceFoundCtrl.$inject = ["$scope"];
window.allianceInvitationCtrl = function(a, c) {
  function b() {
    h = "undefined" != typeof a.getParam(l) ? a.getParam("invitation") : "";
    a.allianceReachedKingLimit = !1;
    "" == h ? (a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_ALLIANCE), a.overlayConfig.Mb("inWindowPopupTemplate"), a.overlayConfig.k({inWindowPopupTitle:"Group.OpenInvitations.Headline", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/alliance/allianceInvitationOverview.html"})) : (a.invitation = GroupInvitation.get(h), "undefined" != typeof a.invitation && a.player.data.playerId == 
    a.invitation.data.playerId || a.removeParam(l), Travian.request("ranking/getAllianceStats", {allianceId:a.invitation.data.groupId}, function(b) {
      "undefined" !== typeof b.kingdomStats && (b.kingdomStats.length >= Travian.Config.AllianceConfig.maxAllowedKingsInAlliance && (a.allianceReachedKingLimit = !0, a.allianceInviteError = Travian.translate("Error.MaximumKingsReached", {totalKings:Travian.Config.AllianceConfig.maxAllowedKingsInAlliance})), a.overlayConfig.k({inWindowPopupTemplate:"tpl/building/embassy/overlay/alliance/allianceInvitationDetails.html"}))
    }))
  }
  var l = "invitation", h = "";
  a.player = Travian.Player;
  a.subscribe(a.player, function() {
    a.isSitter = c.L();
    "undefined" != typeof a.invitations && Cache.A(a.invitations);
    b()
  });
  a.$on("urlChanged", function() {
    b()
  });
  a.$on("$destroy", function() {
    a.removeParam(l)
  });
  a.backToOverview = function() {
    a.removeParam(l)
  };
  a.acceptInvitation = function() {
    Travian.writeRequest("alliance/acceptInvitation", {id:a.invitation.data.id}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceInviteError")
    })
  };
  a.handleError({}, "allianceInviteError");
  a.declineInvitation = function() {
    Travian.writeRequest("alliance/declineInvitation", {id:a.invitation.data.id}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceInviteError")
    })
  }
};
window.allianceInvitationCtrl.$inject = ["$scope", "SessionService"];
window.allianceLeaveCtrl = function(a, c, b) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.LeaveAlliance", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/alliance/allianceLeave.html"});
  a.useMellon = config.mellon.useMellon;
  a.handleError({}, "allianceLeaveError");
  a.password = {};
  var l = !1;
  a.alliance = Alliance.get(Travian.Player.data.allianceId);
  a.subscribe(a.alliance, function() {
    for(var b = 0;b < a.alliance.data.members.length;b++) {
      a.alliance.data.members[b].playerId == Travian.Player.data.playerId && (a.playerVictoryPoints = a.alliance.data.members[b].victoryPoints)
    }
    var c = 0;
    "undefined" !== typeof Travian.Player.data.villages && null != Travian.Player.data.villages && Travian.Player.data.villages.forEach(function(a) {
      c += Math.min(parseInt(a.treasures), parseInt(a.treasuresUsable))
    });
    a.playerVictoryPointsLost = Math.min(c, a.playerVictoryPoints)
  });
  a.confirmWithPassword = function() {
    var a = {};
    a.requestAction = Player.ACTION_LEAVE_ALLIANCE;
    a.url = window.location.href;
    Travian.writeRequest("player/requestVerification", a, function(a) {
      "undefined" != typeof a.token && (a = b.ba().getAccountPasswordVerification(a.token), b.ia(a).open())
    })
  };
  a.confirmLeaveAlliance = function() {
    var b = {};
    b.groupId = Travian.Player.data.allianceId;
    b.groupType = GroupInvitation.TYPE_ALLIANCE;
    b.pw = a.password.check;
    Travian.writeRequest("alliance/leave", b, function(b) {
      a.password.check = "";
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceLeaveError")
    })
  };
  a.$on("urlChanged", function() {
    var b = c.getParam("verification");
    null == b || ("" == b || l) || (l = !0, Travian.writeRequest("player/verifyAction", {token:b}, function(b) {
      c.O("verification");
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceLeaveError")
    }))
  })
};
window.allianceLeaveCtrl.$inject = ["$scope", "RoutingService", "MellonService"];
window.embassyAllianceCtrl = function(a, c) {
  a.alliance = null;
  a.user = Travian.Player;
  a.isSitter = !1;
  a.subscribe(a.user, function() {
    "undefined" != typeof a.invitations && Cache.A(a.invitations);
    a.isSitter = c.L();
    a.alliance = null;
    a.allianceFounder = null;
    a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_ALLIANCE);
    0 < a.user.data.allianceId && (a.alliance = Alliance.get(a.user.data.allianceId), a.subscribe(a.alliance, function() {
      if("undefined" != typeof a.alliance.data) {
        Travian.Player.data.allianceTag = a.alliance.data.tag;
        for(var b = a.alliance.data.members, c = 0;c < b.length;c++) {
          if(b[c].isFounder) {
            a.allianceFounder = b[c];
            break
          }
        }
      }
    }))
  })
};
window.embassyAllianceCtrl.$inject = ["$scope", "SessionService"];
window.embassyCommunitiesCtrl = function(a) {
  a.embassyCommunitiesTabConfig = {};
  a.embassyCommunitiesTabConfig.tabs = ["Kingdom", "Alliance", "SecretSociety"];
  a.embassyCommunitiesTabConfig.bodyTemplatePrefix = "tpl/building/embassy/partials/";
  a.embassyCommunitiesTabConfig.routeNamedParam = "subtab";
  a.embassyCommunitiesTabConfig.tabName = "subtab";
  a.embassyCommunitiesTabConfig.tabType = "subtab vertical";
  a.embassyCommunitiesTabConfig.disableScrolling = !0;
  a.w.waitUntilWindowIsReady()
};
window.embassyCommunitiesCtrl.$inject = ["$scope"];
window.embassyCtrl = function(a) {
  a.tabConfig.tabs = ["Communities", "Oases"];
  a.tabConfig.bodyTemplatePrefix = "tpl/building/embassy/tabs/";
  a.tabConfig.disableScrollingForTabs = ["Communities", "Oases"];
  a.setWindowClass("embassy")
};
window.embassyCtrl.$inject = ["$scope", "RoutingService"];
window.embassyOasesCtrl = function(a, c) {
  function b() {
    a.oases = [];
    m.options = h;
    m.disabled = 0 < h.length ? !1 : !0;
    for(var f in Travian.Config.oasisConfig.embassyLevels) {
      a.oases.push({lvl:Travian.Config.oasisConfig.embassyLevels[f], dropdown:angular.copy(m), used:null})
    }
    for(var n = f = 0;n < g.data.length;n++) {
      var l = g.data[n];
      l.data.usedByVillage == c.getActiveVillageId() && (a.oases[f++].used = l);
      "undefined" == typeof e[l.data.oasisId] && (e[l.data.oasisId] = !0, a.subscribe(l, b))
    }
  }
  function l() {
    a.oasesInReach = [];
    Travian.request("building/getOasisList", {villageId:c.getActiveVillageId()}, function(e) {
      a.mapRadius = c.getActiveVillageId() + ":" + e.radius;
      h = [];
      for(var m = 0;m < e.inReach.length;m++) {
        var g = e.inReach[m];
        0 == g.myRank || 0 != g.usedByVillage || g.isWild || h.push(g)
      }
      e.inReach.sort(function(a, b) {
        return 0 != a.myRank && 0 != b.myRank ? a.myRank - b.myRank : b.myRank - a.myRank
      });
      a.oasesInReach = e.inReach;
      b()
    })
  }
  var h = [], g = OasisTroopRanking.getCollection(), e = {}, m = {placeholder:"Embassy.Oasis.DropdownAssignOasis", selected:null, lazyRendering:!1, resize:!0, bodyClass:"oasisDropdown", callback:function(a) {
    a = h[a];
    Travian.writeRequest("village/useOasis", {oasisId:a.villageId, villageId:c.getActiveVillageId()}, l);
    Cache.A("MapDetails:" + a.villageId)
  }, disabled:!1, options:[], noTruncate:!0};
  a.clearOasis = function(a, b) {
    Travian.writeRequest("village/clearOasis", {oasisId:a, villageId:b}, l);
    Cache.A("MapDetails:" + a)
  };
  l();
  a.subscribe(g, b);
  a.$on("activeVillageChanged", l);
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_OASES + "_" + PlayerProgressTrigger.HELP_PAGE_ASSIGN_OASIS)
};
window.embassyOasesCtrl.$inject = ["$scope", "VillageService"];
window.abdicateDukeCtrl = function(a) {
  function c(b) {
    a.handleError(b, "dukeError") && a.closeOverlay()
  }
  a.overlayConfig.k({inWindowPopupTitle:"Embassy.Communities.Kingdom.Abdicate.Duke.Title", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/kingdom/AbdicateDukeConfirmation.html"});
  a.dukePlayerId = -1;
  "undefined" != typeof a.getParam("dukePlayerId") && (a.dukePlayerId = a.getParam("dukePlayerId"), a.overlayConfig.k({inWindowPopupTitle:"Embassy.Communities.Kingdom.Dismiss.Duke.Title"}));
  a.confirmAbdicate = function() {
    Travian.writeRequest("kingdom/cancelDuke", {dukePlayerId:a.dukePlayerId}, c)
  }
};
window.abdicateDukeCtrl.$inject = ["$scope"];
window.abdicateKingdomCtrl = function(a) {
  function c(b) {
    a.handleError(b, "kingError")
  }
  a.overlayConfig.k({inWindowPopupTitle:"Embassy.Communities.Kingdom.Abdicate.Title", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/kingdom/AbdicateConfirmation.html"});
  a.currentPlayer = Travian.Player;
  a.subscribe(a.currentPlayer, function() {
    a.coronationDuration = Travian.Player.data.coronationDuration / 3600
  });
  a.confirmAbdicate = function() {
    Travian.writeRequest("kingdom/cancelKingdom", {}, c);
    a.closeOverlay()
  }
};
window.abdicateKingdomCtrl.$inject = ["$scope"];
window.embassyKingdomCtrl = function(a, c, b, l) {
  function h() {
    a.treasuryAvailable = !1;
    var b = a.visibleTreasuryAvailable = !1, b = l.za(c.getActiveVillageId(), Building.TYPE.HIDDEN_TREASURY);
    e.data.kingdomRole != Player.KINGDOM_ROLE_DUKE || b || (b = l.za(c.getActiveVillageId(), Building.TYPE.TREASURY), a.visibleTreasuryAvailable = !0);
    b && (a.treasuryAvailable = !0)
  }
  function g(b) {
    a.handleError(b, "kingError")
  }
  var e = Travian.Player;
  a.Player = Player;
  a.Building = Building;
  a.coronationStatus = Player.CORONATION_STATUS.NONE;
  a.isSitter = !1;
  a.treasuryAvailable = !1;
  h();
  a.subscribe(e, function() {
    a.user = e;
    a.isSitter = b.L();
    var c = e.data.kingdomId;
    a.myKing = null != c && 0 < c ? Player.get(c) : null;
    "undefined" != typeof a.invitations && Cache.A(a.invitations);
    a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM);
    a.coronationStatus = e.getCoronationStatus();
    h();
    a.becomeKingToolTip = a.user.data.isKing ? Travian.translate("Kingdom.Become.AlreadyKing") : e.data.hasNoobProtection ? Travian.translate("Kingdom.Become.StillInNoobProtection") : a.treasuryAvailable ? Travian.translate("Kingdom.Become.Become") : Travian.translate("Kingdom.Become.TreasuryMissing")
  });
  a.cancelBecomeKing = function() {
    Travian.writeRequest("kingdom/cancelKingdom", {}, g)
  };
  a.$on("activeVillageChanged", h)
};
window.embassyKingdomCtrl.$inject = ["$scope", "VillageService", "SessionService", "BuildingService"];
window.foundKingdomCtrl = function(a, c, b, l) {
  a.overlayConfig.k({inWindowPopupTitle:"Embassy.Communities.Kingdom.FoundKingdom.Title", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/kingdom/foundKingdomConfirmation.html"});
  var h = HeroItem.getCollection("own"), g = Travian.Config.NoobProtectionDays.King;
  a.currentPlayer = l.l();
  a.currentPlayer.data.hasNoobProtection && a.closeOverlay();
  a.subscribe(a.currentPlayer, function() {
    a.coronationDuration = a.currentPlayer.data.coronationDuration / 3600;
    if(a.currentPlayer.data.hasNoobProtection) {
      var b = Math.ceil((Travian.ServerTime - a.currentPlayer.data.spawnedOnMap) / 86400);
      a.remainingNoobProtection = 0;
      b <= g && (a.remainingNoobProtection = a.currentPlayer.data.spawnedOnMap + 86400 * g - a.currentPlayer.data.coronationDuration)
    }
  });
  a.subscribe(h, function() {
    for(var b = 0;b < h.data.length;b++) {
      var c = h.data[b];
      if(c.data.itemType == HeroItem.TYPE_TREASURES) {
        a.amountStolenGoods = c.data.amount;
        break
      }
    }
  });
  a.confirmBecomeKing = function() {
    Travian.writeRequest("kingdom/startCoronationCeremony", {villageId:c.getActiveVillageId()}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingError")
    })
  }
};
window.foundKingdomCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService"];
window.kingdomInvitationCtrl = function(a) {
  function c() {
    l = "undefined" != typeof a.getParam(b) ? a.getParam("invitation") : "";
    "" == l ? (a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_KINGDOM), a.Player = Player, a.overlayConfig.Mb("inWindowPopupTemplate"), a.overlayConfig.k({inWindowPopupTitle:"Group.OpenInvitations.Headline", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/kingdom/kingdomInvitationOverview.html"})) : (a.invitation = GroupInvitation.get(l), "undefined" != typeof a.invitation && a.player.data.playerId == 
    a.invitation.data.playerId || a.removeParam(b), a.overlayConfig.k({inWindowPopupTemplate:"tpl/building/embassy/overlay/kingdom/kingdomInvitationDetails.html"}), a.handleError({}, "kingdomInviteError"))
  }
  var b = "invitation", l = "";
  a.player = Travian.Player;
  a.subscribe(a.player, function() {
    "undefined" != typeof a.invitations && Cache.A(a.invitations);
    c()
  });
  a.$on("urlChanged", function() {
    c()
  });
  a.$on("$destroy", function() {
    a.removeParam(b)
  });
  a.backToOverview = function() {
    a.removeParam(b)
  };
  a.acceptInvitation = function() {
    Travian.writeRequest("kingdom/acceptInvitation", {id:a.invitation.data.id}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingdomInviteError")
    })
  };
  a.handleError({}, "allianceInviteError");
  a.declineInvitation = function() {
    Travian.writeRequest("kingdom/declineInvitation", {id:a.invitation.data.id}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "kingdomInviteError")
    })
  }
};
window.kingdomInvitationCtrl.$inject = ["$scope"];
window.townFoundingCtrl = function(a, c) {
  a.overlayConfig.k({inWindowPopupTitle:"MainBuilding.TownFounding", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/mainBuilding/overlay/townFoundingConfirmation.html"});
  a.$on("activeVillageChanged", function() {
    a.closeOverlay()
  });
  a.upgradeToTown = function() {
    Travian.writeRequest("village/upgradeToTown", {villageId:c.getActiveVillageId()}, function(b) {
      "undefined" != typeof b.errors && a.handleError(b, "errorUpgrade");
      a.closeOverlay()
    })
  }
};
window.townFoundingCtrl.$inject = ["$scope", "VillageService"];
window.embassySecretSocietyCtrl = function(a, c) {
  a.player = Travian.Player;
  a.ownSociety = null;
  a.societies = Society.getCollection();
  a.embassyCommunitiesTabConfig.scrollContentHeightOffset = 22;
  a.subscribe(a.societies, function() {
    a.isSitter = c.L();
    for(var b = 0;b < a.societies.data.length;b++) {
      for(var l = a.societies.data[b], h = l.data.members, g = 0;g < h.length;g++) {
        var e = h[g];
        if(e.playerId == a.player.data.playerId && e.isFounder) {
          a.ownSociety = Society.get(l.data.groupId);
          return
        }
      }
    }
    a.ownSociety = null
  });
  a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_SECRET_SOCIETY)
};
window.embassySecretSocietyCtrl.$inject = ["$scope", "SessionService"];
window.secretSocietyDissolveCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Society.Close.SecretSociety", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/secretSociety/secretSocietyDissolve.html"});
  a.society = Society.get(a.getParam("societyId"));
  a.confirmCloseSociety = function() {
    var c = {};
    c.groupId = a.society.data.groupId;
    c.groupType = GroupInvitation.TYPE_SECRET_SOCIETY;
    Travian.writeRequest("society/close", c, function() {
      "undefined" == typeof c.errors ? (a.closeOverlay(), a.closeWindow("society")) : a.handleError(c, "societyCloseError")
    })
  };
  a.$on("$destroy", function() {
    a.removeParam("societyId")
  })
};
window.secretSocietyDissolveCtrl.$inject = ["$scope"];
window.secretSocietyFoundCtrl = function(a) {
  var c = null;
  a.overlayConfig.k({inWindowPopupTitle:"Society.FoundSociety", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/secretSociety/secretSocietyFound.html"});
  a.input = {chosenAttitude:0, name:"", targetName:"", conditionValue:""};
  a.selectedTarget = null;
  a.targetDropdown = {};
  a.targetDropdown.selected = null;
  a.targetDropdown.options = [];
  a.targetDropdown.disabled = !0;
  a.targetDropdown.resize = !0;
  a.targetDropdown.placeholder = "Society.Target.Placeholder";
  a.targetDropdown.bodyClass = "embassyFoundDropdownBody";
  a.conditionDropdown = {};
  a.conditionDropdown.selected = null;
  a.conditionDropdown.options = {};
  a.conditionDropdown.options[0] = Travian.translate("Society.Conditions.None");
  a.conditionDropdown.disabled = !0;
  a.conditionDropdown.resize = !0;
  a.conditionDropdown.placeholder = "Society.Conditions.None";
  a.conditionDropdown.bodyClass = "embassyFoundDropdownBody";
  a.placeHolderSocietyName = Travian.translate("Society.NamePlaceholder");
  a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Default");
  a.valuePlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Default");
  a.player = Travian.Player;
  a.target = {village:Society.TARGET_VILLAGE, player:Society.TARGET_PLAYER, kingdom:Society.TARGET_KINGDOM, alliance:Society.TARGET_ALLIANCE, society:Society.TARGET_SOCIETY};
  a.attitude = {white:Society.ATTITUDE_WHITE, black:Society.ATTITUDE_BLACK};
  Society.CONDITION_WHITE_SEND_RESOURCES = 1;
  Society.CONDITION_WHITE_LOST_UNITS = 2;
  Society.CONDITION_WHITE_PROVIDED_UNITS = 3;
  Society.CONDITION_BLACK_STOLE_RESOURCES = 4;
  Society.CONDITION_BLACK_DEFEAT_UNITS = 5;
  Society.CONDITION_BLACK_STOLE_TREASURE = 6;
  Society.yc = 1;
  Society.zc = 2;
  Society.Fd = 3;
  Society.Gd = 4;
  a.processAttitudeChange = function() {
    if(c != a.input.chosenAttitude) {
      c = a.input.chosenAttitude;
      a.input.targetName = "";
      a.targetDropdown.options = {};
      a.targetDropdown.selected = null;
      a.targetDropdown.placeholder = "Society.Target.Placeholder";
      a.targetDropdown.disabled = !1;
      a.conditionDropdown.options = {};
      a.conditionDropdown.options[0] = Travian.translate("Society.Conditions.None");
      a.conditionDropdown.selected = null;
      a.conditionDropdown.placeholder = "Society.Conditions.None";
      a.conditionDropdown.disabled = !1;
      var b = a.targetDropdown.options, l = a.conditionDropdown.options;
      a.input.chosenAttitude == Society.ATTITUDE_WHITE ? (b[Society.TARGET_VILLAGE] = Travian.translate("Society.Target.White.Village"), b[Society.TARGET_PLAYER] = Travian.translate("Society.Target.White.Player"), b[Society.TARGET_KINGDOM] = Travian.translate("Society.Target.White.Kingdom"), b[Society.TARGET_ALLIANCE] = Travian.translate("Society.Target.White.Alliance"), b[Society.TARGET_SOCIETY] = Travian.translate("Society.Target.White.Society"), l[Society.yc] = Travian.translate("Society.Stats.Resources1"), 
      l[Society.zc] = Travian.translate("Society.Stats.Troops1"), l[Society.Gd] = Travian.translate("Society.Stats.TroopsDeployed")) : (b[Society.TARGET_VILLAGE] = Travian.translate("Society.Target.Black.Village"), b[Society.TARGET_PLAYER] = Travian.translate("Society.Target.Black.Player"), b[Society.TARGET_KINGDOM] = Travian.translate("Society.Target.Black.Kingdom"), b[Society.TARGET_ALLIANCE] = Travian.translate("Society.Target.Black.Alliance"), l[Society.yc] = Travian.translate("Society.Stats.Resources2"), 
      l[Society.zc] = Travian.translate("Society.Stats.Troops2"), l[Society.Fd] = Travian.translate("Society.Stats.Treasures"))
    }
  };
  a.$watch("targetDropdown.selected", function() {
    var b = a.targetDropdown.selected;
    b == Society.TARGET_VILLAGE ? (a.serverAutocompleteName = "village,coords", a.autocompleteCallback = "selectTargetVillage", a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Village")) : b == Society.TARGET_PLAYER ? (a.serverAutocompleteName = "player", a.autocompleteCallback = "selectTargetPlayer", a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Player")) : b == Society.TARGET_KINGDOM ? 
    (a.serverAutocompleteName = "king", a.autocompleteCallback = "selectTargetKingdom", a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Kingdom")) : b == Society.TARGET_ALLIANCE && (a.serverAutocompleteName = "alliance", a.autocompleteCallback = "selectTargetAlliance", a.targetPlaceholder = Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Target.Placeholder.Alliance"))
  });
  a.$watch("conditionDropdown.selected", function() {
    a.input.conditionValue = null;
    var b = a.conditionDropdown.selected;
    a.valuePlaceholder = b == Society.zc || b == Society.Gd ? Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Units") : b == Society.yc ? Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Resources") : b == Society.Fd ? Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Treasures") : Travian.translate("Embassy.Communities.Popup.SecretSociety.Create.Value.Placeholder.Default")
  });
  a.selectTargetVillage = function(b) {
    a.selectedTarget = {targetType:Society.TARGET_VILLAGE, targetId:b.villageId}
  };
  a.selectTargetPlayer = function(b) {
    a.selectedTarget = {targetType:Society.TARGET_PLAYER, targetId:b.playerId}
  };
  a.selectTargetKingdom = function(b) {
    a.selectedTarget = {targetType:Society.TARGET_KINGDOM, targetId:b.playerId}
  };
  a.selectTargetAlliance = function(b) {
    a.selectedTarget = {targetType:Society.TARGET_ALLIANCE, targetId:b.allianceId}
  };
  a.shared = {};
  a.shared.reports = !1;
  a.shared.nextAttacks = !1;
  a.shared.villageDetails = !1;
  a.checkValid = function() {
    var b = !0;
    "" == a.input.name && (b = !1);
    null == a.selectedTarget && a.targetDropdown.selected != Society.TARGET_SOCIETY && (b = !1);
    return b
  };
  a.foundNew = function() {
    var b = {};
    b.name = a.input.name;
    b.attitude = a.input.chosenAttitude;
    a.targetDropdown.selected != Society.TARGET_SOCIETY ? (b.target = a.selectedTarget.targetType, b.targetId = a.selectedTarget.targetId) : (b.target = Society.TARGET_SOCIETY, b.targetId = 0);
    b.sharedInformations = a.shared;
    b.joinCondition = a.conditionDropdown.selected;
    b.conditionValue = a.input.conditionValue;
    Travian.writeRequest("society/create", b, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyFoundError")
    })
  }
};
window.secretSocietyFoundCtrl.$inject = ["$scope"];
window.secretSocietyInvitationCtrl = function(a, c) {
  function b() {
    var b = a.society.data.targetType;
    b == Society.TARGET_VILLAGE && (a.targetObj = Village.get(a.society.data.targetId));
    if(b == Society.TARGET_PLAYER || b == Society.TARGET_KINGDOM) {
      a.targetObj = Player.get(a.society.data.targetId)
    }
    b == Society.TARGET_ALLIANCE && (a.targetObj = Alliance.get(a.society.data.targetId));
    a.conditions = SocietyConditions.getCollection(e);
    Cache.t(a.conditions, 1);
    a.hasSharedInformation = !1;
    $.each(a.shared, function(b, e) {
      a.society.isShared(e) && (a.hasSharedInformation = !0)
    });
    a.allConditionsMet = !1;
    a.subscribe(a.conditions, function() {
      b == Society.TARGET_VILLAGE && a.targetObj.data.playerId == a.player.data.playerId && (a.conditions.data.length = 0);
      b == Society.TARGET_PLAYER && a.targetObj.data.playerId == a.player.data.playerId && (a.conditions.data.length = 0);
      0 < a.conditions.data.length && (a.hasConditions = !0);
      a.allConditionsMet = !0;
      for(var e = (new Date).getTime(), c = 0;c < a.conditions.data.length;c++) {
        if(a.conditions.data[c].data.type == SocietyConditions.TYPE_TROOPS_DEPLOYED && m + 1E3 < e) {
          m = e;
          break
        }
      }
      for(c = 0;c < a.conditions.data.length;c++) {
        if(e = a.conditions.data[c].data, e.ownValue < e.value) {
          a.allConditionsMet = !1;
          break
        }else {
          e.ownValue = e.value
        }
      }
    })
  }
  function l() {
    g = "undefined" != typeof a.getParam(h) ? a.getParam("invitation") : "";
    "" == g ? (a.invitations = GroupInvitation.getCollection("player", GroupInvitation.TYPE_SECRET_SOCIETY), a.overlayConfig.Mb("inWindowPopupTemplate"), a.overlayConfig.k({inWindowPopupTitle:"Group.OpenInvitations.Headline", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/secretSociety/secretSocietyInvitationOverview.html"})) : (a.invitation = GroupInvitation.get(g), "undefined" != typeof a.invitation && a.player.data.playerId == 
    a.invitation.data.playerId || a.removeParam(h), a.overlayConfig.k({inWindowPopupTemplate:"tpl/building/embassy/overlay/secretSociety/secretSocietyInvitationDetails.html"}), a.hasConditions = !1, e = a.invitation.data.groupId, a.society = Society.get(e), a.subscribe(a.society, b))
  }
  var h = "invitation", g = "", e = "", m = 0;
  a.player = Travian.Player;
  a.shared = {reports:Society.SHARED_REPORTS, nextAttacks:Society.SHARED_NEXT_ATTACKS, villageDetails:Society.SHARED_VILLAGE_DETAILS};
  a.subscribe(a.player, function() {
    a.isSitter = c.L();
    "undefined" != typeof a.invitations && Cache.A(a.invitations);
    l()
  });
  a.$on("urlChanged", function() {
    l()
  });
  a.$on("$destroy", function() {
    a.removeParam(h)
  });
  a.backToOverview = function() {
    a.removeParam(h)
  };
  a.acceptInvitation = function() {
    Travian.writeRequest("society/acceptInvitation", {id:a.invitation.data.id}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyInviteError")
    })
  };
  a.handleError({}, "allianceInviteError");
  a.declineInvitation = function() {
    Travian.writeRequest("society/declineInvitation", {id:a.invitation.data.id}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyInviteError")
    })
  }
};
window.secretSocietyInvitationCtrl.$inject = ["$scope", "SessionService"];
window.secretSocietyLeaveCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Society.Leave.SecretSociety", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupContentTemplate:"tpl/building/embassy/overlay/secretSociety/secretSocietyLeave.html"});
  if("undefined" != typeof a.getParam("societyId")) {
    var c = a.getParam("societyId")
  }
  a.confirmLeaveSociety = function() {
    var b = {};
    b.groupId = c;
    b.groupType = GroupInvitation.TYPE_SECRET_SOCIETY;
    Travian.writeRequest("society/leave", b, function() {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyLeaveError")
    })
  };
  a.$on("$destroy", function() {
    a.removeParam("societyId")
  })
};
window.secretSocietyLeaveCtrl.$inject = ["$scope"];
window.hiddenTreasuryCtrl = function(a, c) {
  function b() {
    h = c.i();
    a.canTransformToTreasury = !1;
    a.maxSlotsReached = !1;
    a.dataLoading = !0;
    Travian.request("building/getTreasuryTransformations", {}, function(b) {
      a.transformationFinished = 0;
      for(var e = a.abortButtonShowTime = 0;e < b.length;e++) {
        b[e].villageId == h.data.villageId && (a.transformationFinished = parseInt(b[e].finished), a.abortButtonShowTime = a.transformationFinished - a.config.balancing.treasuryTransformTime + 90)
      }
      0 == a.transformationFinished && l();
      a.dataLoading = !1
    })
  }
  function l() {
    (a.currentPlayer.getField("isKing") || a.currentPlayer.data.kingdomRole === Player.KINGDOM_ROLE_DUKE) && Travian.request("building/countForTransformingToTreasuryFreeSlots", {villageId:h.data.villageId, locationId:a.locationId}, function(b) {
      a.canTransformToTreasury = 0 < b.available;
      a.maxSlotsReached = b.maxSlotsReached;
      a.slotInfo = {usedSlots:b.totalSlots - b.available, totalSlots:b.totalSlots}
    })
  }
  a.Player = Player;
  a.currentPlayer = Travian.Player;
  a.treasuryLimit = Math.min(7, Math.ceil((a.currentPlayer.data.villages.length + 1) / 2));
  a.inCoronation = 0;
  a.dataLoading = !1;
  var h;
  a.treasuryResources = c.i().data.treasury;
  a.transformToTreasury = function() {
    Travian.writeRequest("building/transformHiddenTreasury", {villageId:h.data.villageId, locationId:a.locationId}, function() {
      b()
    })
  };
  a.cancelTransformToTreasury = function() {
    Travian.writeRequest("building/cancelTransformHiddenTreasury", {villageId:h.data.villageId, locationId:a.locationId}, function() {
      a.transformationFinished = 0;
      l();
      a.abortButtonShowTime = 0
    })
  };
  a.claimResources = function() {
    Travian.writeRequest("building/claimHiddenTreasuryResources", {villageId:h.data.villageId, locationId:a.locationId}, w())
  };
  b();
  a.$on("activeVillageChanged", b)
};
window.hiddenTreasuryCtrl.$inject = ["$scope", "VillageService"];
window.mainBuildingCtrl = function(a, c, b, l) {
  function h() {
    var e = c.i();
    a.village = e.data;
    a.isSitter = l.L();
    g = e.data.isTown;
    a.villageName = e.data.name;
    a.acceptanceMaxForTown = Travian.Config.townConfig.acceptanceMaxForTown;
    a.townAdditionalPopulation = Travian.Config.townConfig.townAdditionalPopulation;
    a.townAdditionalCultureProduction = Travian.Config.townConfig.townAdditionalCultureProduction;
    e.data.isMainVillage && (a.townAdditionalCultureProduction = Travian.Config.townConfig.townAdditionalCultureProductionMain);
    Travian.request("building/getCulturePointBalance", {villageId:a.village.villageId}, function(b) {
      a.townPreconditions = {};
      a.townPreconditions.population = Travian.Config.townConfig.townRequirementForPopulation;
      a.townPreconditions.culturePoints = b.currentCP;
      a.townPreconditions.culturePointsForTown = b.neededCP
    });
    var m = b.na(a.village.villageId);
    a.subscribe(m, function() {
      a.dropdown.options = {};
      var b = a.dropdown.selected;
      a.dropdown.selected = null;
      for(var c = 0;c < m.data.length;c++) {
        if(!m.data[c].isResourceField()) {
          var f = m.data[c].data.locationId, g = m.data[c].data.buildingType, h = m.data[c].data.lvl;
          (!Village.isWWVillage(e.data.type) || g != Building.TYPE.RALLY_POINT) && (0 < g && 0 < h && g != Building.TYPE.WONDER_OF_WORLD) && (a.dropdown.options[f] = f + ". " + Travian.translate("Building_" + g) + " " + h, f == b && (a.dropdown.selected = b))
        }
      }
    });
    var f = BuildingQueue.get(a.village.villageId);
    a.subscribe(f, function() {
      a.isRubble = !1;
      a.demolishQueue = f.data.queues[BuildingQueue.TYPE_DESTRUCTION];
      if("undefined" == typeof a.demolishQueue) {
        a.demolishQueue = []
      }else {
        if(0 < f.data.queues[BuildingQueue.TYPE_DESTRUCTION].length) {
          for(var b = 0;b < m.data.length;b++) {
            var e = m.data[b];
            e.data.locationId == a.demolishQueue[0].locationId && (a.demolishingBuildingInfo = e.data, a.isRubble = "1" == a.demolishQueue[0].isRubble ? !0 : !1, a.rubbleResources = e.data.rubble)
          }
        }
      }
    })
  }
  a.buildings = {};
  a.townPreconditions = {};
  a.village = {};
  a.villageName = {};
  a.dropdown = {placeholder:"ChoseBuilding", selected:null, options:{}};
  var g = !1;
  h();
  a.$watch("village.isTown", function(a) {
    g == a || a || h()
  });
  a.$on("activeVillageChanged", h);
  a.demolish = function() {
    0 == a.demolishQueue.length && Travian.writeRequest("building/destroy", {villageId:a.village.villageId, locationId:a.dropdown.selected}, function(b) {
      a.handleError(b, "errorDemolish")
    })
  };
  a.cancel = function() {
    0 != a.demolishQueue.length && Travian.writeRequest("building/cancel", {villageId:a.village.villageId, eventId:a.demolishQueue[0].id})
  };
  a.mayUpgradeToTown = function() {
    return a.village.population < a.townPreconditions.population || a.townPreconditions.culturePoints < a.townPreconditions.culturePointsForTown ? !1 : !0
  };
  a.setNewVillageName = function(b) {
    Travian.writeRequest("village/updateName", {villageId:a.village.villageId, villageName:b}, function(b) {
      "undefined" === typeof b.errors ? (a.closeWindow("building"), c.S().data.sort(Village.collectionSortFct)) : a.handleError(b)
    })
  }
};
window.mainBuildingCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService"];
window.buyMarketplaceCtrl = function(a, c) {
  function b() {
    Travian.request("trade/getOfferList", {villageId:h.data.villageId, search:a.filter.search.type, offer:a.filter.offer.type, rate:a.filter.rate, start:(a.filter.page - 1) * a.itemsPerPage, count:a.itemsPerPage}, function(b) {
      a.marketOffers = b.data;
      a.numberOfItems = b.countEntries
    })
  }
  function l(b, e) {
    "undefined" == typeof e && (e = 1);
    var c = "";
    "search" == b && (c = "offer");
    "offer" == b && (c = "search");
    "" != c && a.filter[c].type == a.filter[b].type && 0 < a.filter[b].type && (a.filter[c].type = 0);
    a.m("cp", e);
    a.filter.page = e
  }
  a.filter = {search:{type:0}, offer:{type:0}, rate:0, page:0};
  a.itemsPerPage = 8;
  a.numberOfItems = 0;
  a.marketOffers = [];
  a.acceptedOffer = {};
  a.displayCurrentPage = function(c) {
    null == c && (c = 1);
    a.filter.page = c;
    b()
  };
  a.filterChanged = function(a, e) {
    l(a, e);
    b()
  };
  a.selectRate = function(b) {
    a.filter.rate = b;
    a.filterChanged()
  };
  var h = c.i();
  l();
  a.$on("activeVillageChanged", function() {
    h = c.i();
    a.filterChanged()
  });
  a.acceptOffer = function(b) {
    var e = {offerId:b, villageId:h.data.villageId}, c = a.getParam("cp");
    Travian.writeRequest("trade/acceptOffer", e, function(e) {
      if(a.handleError(e)) {
        for(var h in a.marketOffers) {
          if(a.marketOffers[h].offerId == b) {
            a.acceptedOffer = a.marketOffers[h];
            a.marketOffers[h].inactive = !0;
            break
          }
        }
      }else {
        a.filterChanged("", c)
      }
    })
  };
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_TRADING + "_" + PlayerProgressTrigger.HELP_PAGE_TRADING_RESOURCES);
  a.$on("$destroy", function() {
    a.handleError({})
  });
  a.$parent.hasMerchantRight || a.selectRate(1)
};
window.buyMarketplaceCtrl.$inject = ["$scope", "VillageService"];
window.editTradeRouteCtrl = function(a, c, b) {
  function l() {
    a.stock = new Resources(g.getResources())
  }
  function h() {
    g = c.i();
    a.merchants = new Merchants.get(g.data.villageId);
    l();
    b.R("type17", function(b) {
      null != b && (a.building = b)
    });
    a.qa = TradeOffer.getCollection(TradeOffer.COLLECTION_OWN, g.data.villageId);
    a.subscribe(a.qa, function() {
      a.ownOffers = a.qa.data
    })
  }
  a.overlayConfig.k({inWindowPopupTitle:"Marketplace.TradeRoutes.Headline", inWindowPopupContentTemplate:"tpl/building/marketplace/partials/editTradeRoute.html"});
  a.disabledScrolling = !0;
  a.editTradeRoute = !0;
  a.tradeRouteId = a.getParam("tradeRoute");
  var g = null;
  a.building = new Building;
  a.tradeOffice = new Building;
  a.merchants = new Merchants;
  a.Math = Math;
  a.resNames = angular.copy(Resources.STRING);
  delete a.resNames[0];
  a.ownOffers = [];
  a.marketOffers = [];
  a.qa = [];
  a.$on("activeVillageChanged", function() {
    h()
  });
  a.$on("resourcesChanged", function() {
    l()
  });
  h();
  a.$on("$destroy", function() {
    a.removeParam("tradeRoute")
  })
};
window.editTradeRouteCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService"];
window.marketplaceCtrl = function(a, c, b, l, h, g) {
  function e() {
    a.stock = new Resources(f.getResources())
  }
  function m() {
    f = c.i();
    a.merchants = new Merchants.get(f.data.villageId);
    e();
    b.R("type17", function(b) {
      null != b && (a.building = b)
    });
    a.qa = TradeOffer.getCollection(TradeOffer.COLLECTION_OWN, f.data.villageId);
    a.subscribe(a.qa, function() {
      a.ownOffers = a.qa.data;
      a.$broadcast("ownOffersChanged")
    })
  }
  a.tabConfig.tabs = ["Send", "Buy", "Sell", "NpcTrade"];
  (Travian.Player.hasPlusAccount() || Travian.Player.hasUiLimitationFlag(Player.UI_LIMITATIONS.ALWAYS_SHOW_TRADE_ROUTES)) && a.tabConfig.tabs.push("TradeRoute");
  a.tabConfig.tabs.push("Merchants");
  a.tabConfig.bodyTemplatePrefix = "tpl/building/marketplace/tabs/";
  a.tabConfig.disableScrollingForTabs = ["Send", "NpcTrade", "TradeRoute"];
  a.disabledScrolling = a.tabData.currentDisableScrolling;
  a.building = new Building;
  a.tradeOffice = new Building;
  a.merchants = new Merchants;
  a.Math = Math;
  a.resNames = angular.copy(Resources.STRING);
  delete a.resNames[0];
  a.ownOffers = [];
  a.marketOffers = [];
  a.qa = [];
  a.hasMerchantRight = g.hasRight(Session.RIGHT_SEND_MERCHANTS);
  var f = null;
  a.$on("activeVillageChanged", function() {
    m()
  });
  a.$on("resourcesChanged", function() {
    e()
  });
  m();
  e()
};
window.marketplaceCtrl.$inject = "$scope VillageService BuildingService RoutingService TroopsService SessionService".split(" ");
window.merchantsMarketplaceCtrl = function(a, c, b) {
  function l() {
    g = c.getActiveVillageId();
    null !== e && e.destroy();
    e = b.B([g], null, h, a)
  }
  function h() {
    var b = e.u();
    a.traders = {outgoing:[], incoming:[], returns:[]};
    $.each(b, function(e) {
      e = b[e];
      "undefined" !== typeof e.data.movement && (e.fetchNames(), e.data.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT ? parseInt(e.data.movement.villageIdStart) == g ? a.traders.outgoing.push(e.data) : a.traders.incoming.push(e.data) : e.data.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN && a.traders.returns.push(e.data))
    })
  }
  var g = null, e = null;
  l();
  a.$on("activeVillageChanged", l);
  a.$on("$destroy", a.cleanupSubscriptions);
  h()
};
window.merchantsMarketplaceCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.npcMerchantCtrl = function(a, c, b, l) {
  function h() {
    Village.isWWVillage(r.data.type) ? (a.npcTradingAvailable = "notAvailable", a.error = Travian.translate("Error.NotAvailableInWW")) : a.npcTradingAvailable = "";
    var b = a.resources.getResources();
    a.resources = new Resources(r.getResources());
    a.capacity = new Resources(r.getCapacity());
    a.sliderMax = Math.max(a.capacity[1], a.capacity[4]);
    for(var c = 1;4 >= c;c++) {
      a.distributed[c] += a.resources[c] - b[c], a.resourceData[c].markers[m] = a.resources[c], a.resourceData[c].markers[e] = a.resources.getSum(), a.resourceData[c].markers[f] = a.capacity[c]
    }
    q || "undefined" == typeof a.$parent.predistribution || (a.distributed = new Resources(a.predistribution), q = !0);
    b = a.getParam("wood", !1, !0);
    if(null != b) {
      var c = a.getParam("clay", !1, !0), h = a.getParam("iron", !1, !0), n = a.getParam("crop", !1, !0);
      a.distributed = new Resources([0, b, c, h, n])
    }
    g()
  }
  function g() {
    a.error = null;
    n = 0;
    for(var b = 1;4 >= b;b++) {
      a.distributed[b] > a.capacity[b] ? a.distributed[b] = a.capacity[b] : 0 > a.distributed[b] && (a.distributed[b] = 0), a.resourceData[b].value = a.distributed[b], a.resourceData[b].diff = a.distributed[b] - a.resources[b], 0 < a.resourceData[b].diff && (a.resourceData[b].diff = "+" + a.resourceData[b].diff), n += parseInt(Math.abs(a.resourceData[b].diff))
    }
    a.distributedSum = a.distributed.getSum();
    a.resourcesSum = a.resources.getSum();
    a.freeResources = a.distributedSum - a.resourcesSum;
    a.totalDiff = n;
    50 > n && 0 < n && (a.error = Travian.translate("Error.NPCTradeTooLow"));
    a.$$phase || a.$digest()
  }
  var e = 0, m = 1, f = 2;
  a.Math = Math;
  a.resources = new Resources;
  a.distributed = new Resources;
  a.resourcesSum = 0;
  a.distributedSum = 0;
  a.freeResources = 0;
  a.lockedResources = 0;
  a.resNames = angular.copy(Resources.STRING);
  a.npcTradingAvailable = "";
  var n = a.totalDiff = 0;
  delete a.resNames[0];
  var q = !1, p = !1;
  a.resourceData = {1:{id:1, value:0, diff:"0", markers:[0, 0, 0], locked:!1}, 2:{id:2, value:0, diff:"0", markers:[0, 0, 0], locked:!1}, 3:{id:3, value:0, diff:"0", markers:[0, 0, 0], locked:!1}, 4:{id:4, value:0, diff:"0", markers:[0, 0, 0], locked:!1}};
  var r = b.i();
  h();
  a.$on("activeVillageChanged", function() {
    if("npcTrader" == a.w.name) {
      c.O("window"), a.closeWindow("npcTrader")
    }else {
      r = b.i();
      Village.isWWVillage(r.data.type) ? a.npcTradingAvailable = "notAvailable" : a.npcTradingAvailable = "";
      for(var e = 1;4 >= e;e++) {
        a.resourceData[e].locked = !1
      }
      a.lockedResources = 0;
      h();
      p = !0;
      l(function() {
        p = !1;
        for(var b = 1;4 >= b;b++) {
          a.resourceData[b].value = a.resources[b], a.distributed = new Resources(a.resources.getResources())
        }
      }, 10)
    }
  });
  a.sliderChanged = function(b, e, c) {
    if(p) {
      return e
    }
    c = c.id;
    if(a.distributed[c] >= a.capacity[c] && b > a.distributed[c]) {
      return e
    }
    a.distributed[c] = b || 0;
    b = [];
    for(e = 1;4 >= e;e++) {
      a.resourceData[e].locked || e == c || b.push(e)
    }
    a.distributed = a.resources.distribute(a.capacity, a.distributed, null, b);
    b = a.resources.getSum() - a.distributed.getSum();
    0 != b && (a.distributed[c] += b);
    g();
    return a.distributed[c]
  };
  a.toggleResourceLock = function(b) {
    !a.resourceData[b].locked && 1 < a.lockedResources || (a.resourceData[b].locked = !a.resourceData[b].locked, a.resourceData[b].locked ? a.lockedResources++ : a.lockedResources--, g())
  };
  a[PremiumFeature.FEATURE_NAME_NPC_TRADER] = function() {
    return Village.isWWVillage(r.data.type) ? !1 : {villageId:r.data.villageId, distributeRes:a.distributed, callback:function(b) {
      null != a.getParam("closeWindow", !1, !0) && a.closeOverlay();
      "undefined" != typeof a.closeNpcWindow ? a.closeWindow("npcTrader") : a.handleError(b) && (a.distributed = new Resources, a.resources = new Resources, h())
    }, updateCacheFirst:!0}
  };
  a.NPCTraderFeatureName = PremiumFeature.FEATURE_NAME_NPC_TRADER;
  a.distribute = function() {
    var b = [], e;
    for(e = 1;4 >= e;e++) {
      a.resourceData[e].locked || b.push(e)
    }
    b = a.resources.distribute(a.capacity, a.distributed, null, b);
    if("object" != typeof b) {
      return b
    }
    a.distributed = b;
    for(e = 1;4 >= e;e++) {
      a.resourceData[e].value = a.distributed[e]
    }
  };
  a.$on("$destroy", function() {
    a.handleError({})
  })
};
window.npcMerchantCtrl.$inject = ["$scope", "RoutingService", "VillageService", "$timeout", "SessionService"];
window.npcMerchantOverlayCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Tab.NpcTrade", inWindowPopupContentTemplate:"tpl/building/marketplace/tabs/NpcTrade.html", routeNamedParam:"npcOverlay"})
};
window.npcMerchantOverlayCtrl.$inject = ["$scope"];
window.noResourceSendToOthersCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Marketplace.Send.Button.SendResources", inWindowPopupContentTemplate:"tpl/building/marketplace/overlay/noResourceSendToOthers.html", isAWarning:!0})
};
window.noResourceSendToOthersCtrl.$inject = ["$scope"];
window.sellMarketplaceCtrl = function(a, c) {
  function b() {
    var b = a.qa.data, e = [], c = a.filter.page;
    a.numberOfItems = b.length;
    if(b.length <= a.itemsPerPage) {
      e = b
    }else {
      for(var f = c = (c - 1) * a.itemsPerPage;f < c + a.itemsPerPage && "undefined" !== typeof b[f];f++) {
        e.push(b[f])
      }
    }
    a.ownOffersPage = e
  }
  function l() {
    var b = a.merchants.data.merchantsFree * a.merchants.data.carry;
    a.newOffer.offeredAmount > b && (a.newOffer.offeredAmount = b)
  }
  a.maxLimitDurationValue = 99;
  a.itemsPerPage = 5;
  a.numberOfItems = 0;
  a.ownOffersPage = [];
  a.acceptedOffer = {};
  a.filter = {search:{type:1}, offer:{type:2}, page:0};
  a.newOffer = {offeredAmount:1, neededMerchants:1, searchedAmount:1, limitDurationValue:0, limitAlly:!1};
  var h = c.i();
  a.displayCurrentPage = function(c) {
    null == c && (c = 1);
    a.handleError({}, "sellMarketError");
    a.filter.page = c;
    b()
  };
  a.cancelOffer = function(a) {
    Travian.writeRequest("trade/cancelOffer", {offerId:a})
  };
  a.createOffer = function() {
    var b = a.newOffer, e = {villageId:h.data.villageId, offeredResource:a.filter.offer.type, offeredAmount:b.offeredAmount, searchedResource:a.filter.search.type, searchedAmount:b.searchedAmount, allyOnly:b.limitAlly};
    0 < b.limitDurationValue && (e.maximumDuration = b.limitDurationValue);
    Travian.writeRequest("trade/createOffer", e, function(b) {
      a.handleError(b, "sellMarketError")
    });
    l()
  };
  a.incrLimitDurationValue = function() {
    a.newOffer.limitDurationValue < a.maxLimitDurationValue && a.newOffer.limitDurationValue++
  };
  a.decrLimitDurationValue = function() {
    0 < a.newOffer.limitDurationValue && a.newOffer.limitDurationValue--
  };
  a.$watch("newOffer.offeredAmount", function() {
    a.newOffer.neededMerchants = Math.ceil(a.newOffer.offeredAmount / (a.merchants.data.carry || 1));
    a.requiredMerchants = a.newOffer.neededMerchants
  });
  a.$on("ownOffersChanged", function() {
    a.subscribe(a.qa, b)
  });
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_TRADING + "_" + PlayerProgressTrigger.HELP_PAGE_OFFERING_RESOURCES);
  a.$on("$destroy", function() {
    a.handleError({}, "sellMarketError")
  });
  a.filterChanged = function() {
    a.handleError({}, "sellMarketError")
  };
  a.$on("activeVillageChanged", function() {
    h = c.i();
    a.merchants = new Merchants.get(h.data.villageId);
    a.merchants.subscribe(l)
  })
};
window.sellMarketplaceCtrl.$inject = ["$scope", "VillageService"];
window.sendMarketplaceCtrl = function(a, c, b, l, h) {
  function g() {
    a.lastTrade = null;
    r = c.i();
    a.stock = new Resources(r.getResources());
    0 <= z && a.merchants.unsubscribe(z);
    z = a.merchants.subscribe(e);
    a.checkTarget(v);
    a.tradeRoutes = TradeRoute.getCollection(r.data.villageId);
    null !== p && a.subscribe(a.tradeRoutes, function() {
      a.tradeRoutes.data[p] && (m(a.tradeRoutes.data[p]), t = p, p = null)
    })
  }
  function e() {
    if(a.merchants.filled) {
      u = a.editTradeRoute ? a.merchants.data.carry * a.building.data.lvl : a.merchants.data.maxCapacity;
      a.sliderMax = a.merchants.data.carry * Building.MAX_LEVEL;
      a.selectedCarrySum = 0;
      for(var b = 1;4 >= b;b++) {
        a.selectedCarrySum += a.resourceData[b].value
      }
      b = u - a.selectedCarrySum;
      if(!(0 < b || 0 >= a.merchants.data.carry)) {
        for(var e = [1, 2, 3, 4], c = a.merchants.data.carry, m = !1;0 > b && 0 < e.length;) {
          for(var g = 0;g < e.length;g++) {
            var h = e[g];
            if(a.resourceData[h].value >= c || m && 0 < a.resourceData[h].value) {
              var l = c;
              m && (l = Math.min(Math.abs(b), a.resourceData[h].value));
              a.resourceData[h].value -= l;
              a.selectedCarrySum -= l;
              b += l
            }else {
              e.splice(g, 1), g--
            }
            if(0 <= b) {
              break
            }
          }
          0 != e.length || m || (e = [1, 2, 3, 4], m = !0)
        }
      }
      for(b = 1;4 >= b;b++) {
        a.resourceData[b].markers[f] = u, a.resourceData[b].markers[n] = Math.min(a.stock[b], u), a.resourceData[b].markers[q] = a.resourceData[b].value + u - a.selectedCarrySum
      }
    }
  }
  function m(b) {
    a.routeCode = b.data.times;
    a.recurrences = b.data.recurrences;
    for(var e in b.data.resources) {
      a.resourceData[e].setValue = !0, a.resourceData[e].value = parseInt(b.data.resources[e])
    }
    e = Village.get(b.data.destVillageId);
    a.checkTarget({villageId:b.data.destVillageId, playerId:e.getField("playerId")})
  }
  var f = 0, n = 1, q = 2, p = null, r = c.i();
  a.targetInput = null;
  a.validTarget = !1;
  a.travelDuration = 0;
  a.requiredMerchants = 0;
  a.villageNamePlaceHolder = Travian.translate("SearchVillage.Villagename");
  a.mayCreateRoute = !1;
  a.selectedCarrySum = 0;
  a.routeCode = 0;
  a.recurrences = 1;
  a.tradeRoutes = null;
  a.firstExtraTraderSlotPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price;
  a.secondExtraTraderSlotPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price2;
  a.lastTrade = null;
  a.targetPlayer = null;
  a.showInstantDelivery = !1;
  a.premiumFeatureName = "";
  a.premiumFeatureTroopId = 0;
  var s = Voucher.get(Travian.Player.data.playerId);
  a.hasVoucher = s.data.hasVouchers[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY];
  a.traderSlotFeatureName = PremiumFeature.FEATURE_NAME_TRADER_SLOT;
  a.player = l.l();
  a.subscribe(a.player, function() {
    a.plusAccount = Travian.Player.hasPlusAccount();
    a.firstExtraTraderSlot = PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST);
    a.secondExtraTraderSlot = PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_SECOND);
    a.traderSlots = 1;
    a.firstExtraTraderSlot && a.traderSlots++;
    a.secondExtraTraderSlot && a.traderSlots++
  });
  Travian.Player.hasPlusAccount() && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_TRADING + "_" + PlayerProgressTrigger.HELP_PAGE_TRADE_ROUTES, PlayerProgressTrigger.CHECK_THREE_VILLAGES_OWNED);
  var v = null, u = 0, t = -1, z = -1;
  a.resourceData = {1:{id:1, value:0, markers:[0, 0, 0]}, 2:{id:2, value:0, markers:[0, 0, 0]}, 3:{id:3, value:0, markers:[0, 0, 0]}, 4:{id:4, value:0, markers:[0, 0, 0]}};
  a.$on("resourcesChanged", function() {
    a.stock = new Resources(r.getResources());
    e()
  });
  a.sliderChanged = function(b, e, c) {
    0 != b && (a.showInstantDelivery = !1, a.premiumFeatureName = "", a.premiumFeatureTroopId = 0);
    var f = c.id, m = 0;
    for(e = 1;4 >= e;e++) {
      e != f && (m += a.resourceData[e].value)
    }
    c.setValue ? c.setValue = !1 : (b = Math.min(b, u - m), a.editTradeRoute || (b = Math.min(b, a.stock[f])));
    a.selectedCarrySum = b + m;
    a.requiredMerchants = Math.ceil(a.selectedCarrySum / a.merchants.data.carry) || 0;
    c = u - a.selectedCarrySum;
    for(e = 1;4 >= e;e++) {
      e != f && (a.resourceData[e].markers[q] = a.resourceData[e].value + c)
    }
    return b
  };
  a.addMerchant = function(b) {
    a.resourceData[b].value += a.merchants.data.carry
  };
  a.$watch("building.data.lvl", function() {
    a.editTradeRoute && e()
  }, !0);
  a.noResourceSendToOthers = function() {
    return null !== v && r.data.playerId != v.playerId && 7 >= Math.ceil((h.K() - a.player.data.signupTime) / 86400)
  };
  a.checkTarget = function(b) {
    v = b;
    a.validTarget = !1;
    a.travelDuration = 0;
    a.mayCreateRoute = !1;
    a.showInstantDelivery = !1;
    a.premiumFeatureName = "";
    a.premiumFeatureTroopId = 0;
    if(b && !a.noResourceSendToOthers()) {
      var e = {sourceVillageId:r.data.villageId, destVillageId:b.villageId};
      "undefined" != typeof b.name && (e.destVillageName = b.name);
      Travian.request("trade/checkTarget", e, function(b) {
        a.handleError(b) && (a.travelDuration = b.duration, a.validTarget = !0, a.targetInput = b.villageName, a.targetPlayer = Player.get(b.playerId), a.mayCreateRoute = b.mayCreateRoute, a.message = b.message, a.mayCreateRoute || (a.routeCode = 0, a.recurrences = 1))
      })
    }
  };
  a.sendResources = function() {
    if(a.validTarget) {
      for(var b = {sourceVillageId:r.data.villageId, resources:[0], destVillageId:v.villageId, recurrences:a.recurrences}, c = 1;4 >= c;c++) {
        b.resources[c] = a.resourceData[c].value
      }
      c = "sendResources";
      if(a.editTradeRoute) {
        c = "createTradeRoute", b.times = a.routeCode, "undefined" != typeof a.tradeRoutes.data[a.tradeRouteId] && (b.editId = a.tradeRoutes.data[a.tradeRouteId].data.id)
      }else {
        if(a.noResourceSendToOthers()) {
          a.openOverlay("noResourceSendToOthers");
          return
        }
      }
      Travian.writeRequest("trade/" + c, b, function(b) {
        if(a.handleError(b)) {
          if(a.editTradeRoute) {
            a.closeOverlay()
          }else {
            if(a.lastTrade = angular.copy(Troops.get(b.troopId)), r.data.playerId == v.playerId) {
              a.showInstantDelivery = !0;
              a.premiumFeatureName = PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY;
              if(1 == Voucher.get(Travian.Player.data.playerId).data.hasVouchers[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY]) {
                a.premiumFeaturePrice = -1
              }else {
                var c = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY], f = a.lastTrade.data.movement.timeFinish - Travian.ServerTime;
                a.premiumFeaturePrice = f < 60 * c.minutesMin ? c.priceMin : f < 60 * c.minutesMid ? c.priceMid : c.priceMax
              }
              a.premiumFeatureTroopId = b.troopId;
              a[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY] = function(b) {
                a.lastTrade = null;
                a.showInstantDelivery = !1;
                a.premiumFeatureName = "";
                a.premiumFeatureTroopId = 0;
                return{troopId:b}
              }
            }
          }
          a.mayCreateRoute = !1;
          a.routeCode = 0;
          a.stock = new Resources(r.getResources());
          for(b = 1;4 >= b;b++) {
            a.resourceData[b].value = 0
          }
          e()
        }
      }, !0)
    }
  };
  var A = !1;
  a.openTradeRoutesOverview = function() {
    a.removeParam("editRoute");
    a.openOverlay("tradeRoutesOverview");
    A = !0
  };
  a.$on("urlChanged", function() {
    if(A) {
      A = !1
    }else {
      var e = parseInt(b.getParam("editRoute"));
      "number" == typeof e && "undefined" != typeof a.tradeRoutes.data[e] ? (m(a.tradeRoutes.data[e]), t = e) : 0 <= t && "undefined" != typeof a.tradeRoutes.data[t] && (b.m("editRoute", t), A = !0)
    }
  });
  l = a.getParam("destId");
  s = a.getParam("destPlayerId");
  l && (v = {villageId:l}, s && (v.playerId = s));
  a.editTradeRoute && (p = a.tradeRouteId);
  g();
  a.$on("activeVillageChanged", g);
  a.$on("$destroy", function() {
    a.merchants.unsubscribe(z);
    a.handleError({})
  });
  a.changeRecurrence = function(b) {
    a.showInstantDelivery = !1;
    a.premiumFeatureName = "";
    a.premiumFeatureTroopId = 0;
    a.recurrences = b
  }
};
window.sendMarketplaceCtrl.$inject = ["$scope", "VillageService", "RoutingService", "SessionService", "ServertimeService"];
window.tradeRouteMarketplaceCtrl = function(a, c) {
  function b() {
    l = c.i();
    l.filled && (a.tradeRoutes = TradeRoute.getCollection(l.data.villageId))
  }
  var l = null;
  a.subscribe(Travian.Player, function() {
    a.hasPlusAccount = Travian.Player.hasPlusAccount()
  });
  b();
  a.$on("activeVillageChanged", b);
  a.changeRouteStatus = function(b, c) {
    a.tradeRoutes.data[b].data.status != c && Travian.Player.hasPlusAccount() && Travian.writeRequest("trade/changeTradeRouteStatus", {id:a.tradeRoutes.data[b].data.id, status:c})
  };
  a.editRoute = function(b) {
    Travian.Player.hasPlusAccount() && a.openOverlay("editTradeRoute", {tradeRoute:b})
  };
  a.deleteRoute = function(b) {
    Travian.Player.hasPlusAccount() && Travian.writeRequest("trade/deleteTradeRoute", {id:a.tradeRoutes.data[b].data.id})
  };
  a.addTradeRoutes = function() {
    Travian.Player.hasPlusAccount() && a.editRoute(-1)
  }
};
window.tradeRouteMarketplaceCtrl.$inject = ["$scope", "VillageService"];
window.palaceCapitalCtrl = function(a, c, b) {
  a.isSitter = b.L();
  var l = c.i();
  a.changeCapital = function() {
    Travian.writeRequest("building/makeVillageCapital", {villageId:l.data.villageId}, function(b) {
      b && a.handleError(b)
    })
  }
};
window.palaceCapitalCtrl.$inject = ["$scope", "VillageService", "SessionService"];
window.palaceCtrl = function(a, c, b) {
  function l() {
    m = c.i();
    a.activeVillage = m;
    g = UnitQueue.get(m.data.villageId);
    n = nrToUnitId(Troops.TYPE_SETTLER, m.data.tribeId);
    a.leaderId = nrToUnitId(Troops.TYPE_LEADER, m.data.tribeId);
    f = ExpansionListEntry.getCollection(m.data.villageId);
    "function" == typeof q && q();
    q = a.cb([m, g, f], h);
    null != e && e.destroy();
    e = b.B([m.data.villageId], "all", h, a);
    Travian.request("building/getCpData", {villageId:m.data.villageId}, function(b) {
      a.expansionSlots = b.expansionSlots;
      a.cpProduction = b.cpProduction;
      b = !0;
      for(var e = 0;e < a.expansionSlots.slots.length;e++) {
        var c = a.expansionSlots.slots[e];
        0 < c.required && b ? (a.expansionSlots.slots[e].showDetails = !0, a.expansionSlots.slots[e].percentage = Math.floor(100 * (a.expansionSlots.producedCulturePoints / c.culturePoints)), b = !1) : a.expansionSlots.slots[e].showDetails = !1
      }
      a.expansionSlots.numberOfTowns = parseInt(a.expansionSlots.numberOfTowns);
      a.expansionSlots.numberOfVillages = parseInt(a.expansionSlots.numberOfVillages)
    })
  }
  function h() {
    if(null != f && null != e && null != g) {
      g.filled && (a.unitQueue = g.data.buildingTypes[a.building.data.buildingType]);
      for(var b = 0, c = 0, h = e.u(), l = 0;l < h.length;l++) {
        if(h[l].data.villageId == m.data.villageId) {
          for(var q in h[l].data.units) {
            q == Troops.TYPE_SETTLER && (b += parseInt(h[l].data.units[q])), q == Troops.TYPE_LEADER && (c += parseInt(h[l].data.units[q]))
          }
        }
      }
      if("undefined" != typeof a.unitQueue) {
        for(l = 0;l < a.unitQueue.length;l++) {
          h = a.unitQueue[l], h.unitType == n && (b += parseInt(h.count)), h.unitType == a.leaderId && (c += parseInt(h.count))
        }
      }
      a.isCapital = !1;
      if(1 == m.data.type || 3 == m.data.type) {
        a.isCapital = !0
      }
      a.usedControlPoint = m.data.usedControlPoints;
      a.availableControlPoints = m.data.availableControlPoints;
      a.isTown = m.data.isTown;
      h = Building.EXPANSION_SLOTS[a.building.data.buildingType];
      q = a.building.data.buildingType;
      for(var t = a.building.data.lvl, z = [], l = 0;l < h;l++) {
        if(l >= f.data.length) {
          if(z[l] = {slot:l, state:"active", level:Building.EXPANSION_SLOT_UNLOCKS[q][l]}, z[l].level > t) {
            z[l].state = "locked"
          }else {
            if(0 < b) {
              z[l].subState = "icons";
              z[l].subStateIcons = [];
              for(var A = 0;3 > A;A++) {
                0 < b ? z[l].subStateIcons.push({className:"available", tribeId:m.data.tribeId, unitId:Troops.TYPE_SETTLER}) : z[l].subStateIcons.push({className:"needed", tribeId:m.data.tribeId, unitId:Troops.TYPE_SETTLER}), b--
              }
            }else {
              0 < c ? (z[l].subState = "icons", z[l].subStateIcons = [{className:"available", tribeId:m.data.tribeId, unitId:Troops.TYPE_LEADER}], c--) : z[l].subState = "free"
            }
          }
        }else {
          z[l] = {slot:l, state:"occupied", data:f.data[l].data}
        }
      }
      a.expensionSlots = z;
      a.expensionSlotsUsed = f.data.length;
      a.expensionSlotsAvail = h
    }
  }
  a.currentTab = a.getParam("tab");
  a.tabConfig.tabs = ["Expansions", "CulturePoints", "Acceptance"];
  a.tabConfig.bodyTemplatePrefix = "tpl/building/palace/tabs/";
  a.isResidence = !0;
  a.building.data.buildingType == Building.TYPE.PALACE && (a.isResidence = !1, a.tabConfig.tabs = ["Expansions", "CulturePoints", "Acceptance", "Capital"]);
  a.tabConfig.disableScrollingForTabs = ["Expansions", "Acceptance"];
  a.unitsTrainOptions = {cols:2};
  a.trainingInProgress = !1;
  a.expansionSlots = {};
  a.cpProduction = {};
  a.isTown = {};
  a.villages = c.S().data;
  a.Math = Math;
  var g = null, e = null, m = null, f = null;
  a.unitQueue = [];
  var n = 0;
  a.leaderId = 0;
  var q = null;
  l();
  a.$on("activeVillageChanged", l)
};
window.palaceCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.combatSimulatorCtrl = function(a, c, b, l) {
  function h() {
    var a = c.getActiveVillageId();
    z = Research.get(a);
    null !== t && t.destroy();
    u = t.u([a])
  }
  function g(a, b) {
    this.tribeId = a || Player.TRIBE.ROMAN;
    this.inputTroops = {};
    this.unitLevels = {};
    this.villageSettings = {};
    this.heroStrength = Troops.getHeroBaseStrength(this.tribeId);
    this.heroBonus = "0.0";
    this.mounted = !0;
    this.unitBonuses = A[b];
    e(this, b)
  }
  function e(b, e) {
    function g() {
      var a = [{name:Travian.translate("CombatSimulator.Equipment.None"), itemType:-1}], e;
      for(e in Travian.Config.heroItems) {
        Travian.Config.heroItems[e].unitBonus && Travian.Config.heroItems[e].tribeId == b.tribeId && a.push({name:Travian.translate("Hero.Item_" + e), itemType:e})
      }
      return a
    }
    var h = [{name:Travian.translate("Tribe_1"), tribeId:1}, {name:Travian.translate("Tribe_2"), tribeId:2}, {name:Travian.translate("Tribe_3"), tribeId:3}];
    "defender" != e && "supporter" != e || h.push({name:Travian.translate("Tribe_4"), tribeId:4});
    "defender" == e && h.push({name:Travian.translate("Tribe_5"), tribeId:5});
    h.push({name:Travian.Player.data.name, tribeId:p});
    b.tribeDropdown = {selected:b.tribeId, selectBy:"option.tribeId", options:h, orderBy:"tribeId", callback:function(e) {
      var h = b;
      -1 == [Troops.MOVEMENT_TYPE_ATTACK, Troops.MOVEMENT_TYPE_RAID, Troops.MOVEMENT_TYPE_SIEGE].indexOf(a.attackType) && (a.attackType = Troops.MOVEMENT_TYPE_RAID);
      (h.tribeId == Player.TRIBE.NATURE && e != Player.TRIBE.NATURE || h.tribeId == Player.TRIBE.NATAR && e != Player.TRIBE.NATURE && e != Player.TRIBE.NATAR) && a.w.updateWindowHeight();
      (h.tribeId != Player.TRIBE.NATURE && e == Player.TRIBE.NATURE || h.tribeId != Player.TRIBE.NATURE && h.tribeId != Player.TRIBE.NATAR && e == Player.TRIBE.NATAR) && a.w.updateWindowHeight(!0);
      h.inputTroops = {};
      h.unitLevels = {};
      h.villageSettings = {};
      h.heroStrength = Troops.getHeroBaseStrength(e);
      h.heroBonus = "0.0";
      h.mounted = !0;
      h.tribeId = e == p ? Travian.Player.data.tribeId : e;
      h.equipmentDropdown.options = g();
      h.equipmentDropdown.selected = -1;
      delete h.heroItem;
      e == p ? (h != a.defenderDetails[0] && h != a.attackerDetails || !u[0] || (h.inputTroops = angular.copy(u[0].data.units)), h.villageSettings.population = Travian.Player.data.population, m(h, c.getActiveVillageId(), z)) : f()
    }, bodyClass:"simulatorDropDown tribeDropDown"};
    b.equipmentDropdown = {selected:-1, selectBy:"option.itemType", options:g(), orderBy:"itemType", callback:function() {
      b.heroItem = Travian.Config.heroItems[b.equipmentDropdown.selected];
      f()
    }, bodyClass:"simulatorDropDown equipmentDropDown"}
  }
  function m(b, e, c) {
    function m(e) {
      b.heroStrength = e.fightStrength * (e.fightStrengthBaseLevel + s.data.fightStrengthPoints) + (s.data.bonuses[HeroItem.BONUS_FIGHT_STRENGTH] || 0);
      b.heroBonus = b == a.attackerDetails ? Math.round(100 * e.attBonus * s.data.attBonusPoints) / 100 : Math.round(100 * e.defBonus * s.data.defBonusPoints) / 100;
      for(e = 0;e < v.data.length;e++) {
        if(v.data[e].data.inSlot == HeroItem.SLOT_RIGHT_HAND) {
          var c = v.data[e].data.itemType, g = Travian.Config.heroItems[c];
          g.tribeId == b.tribeId && g.unitBonus && (b.equipmentDropdown.selected = c, b.heroItem = g, f())
        }
        b == a.attackerDetails && (v.data[e].data.inSlot == HeroItem.SLOT_LEFT_HAND && v.data[e].data.bonuses[HeroItem.BONUS_NATARS]) && (b.villageSettings.natarBonus = v.data[e].data.bonuses[HeroItem.BONUS_NATARS])
      }
    }
    for(var g = 0;g < c.data.units.length;g++) {
      var h = unitIdToNr(c.data.units[g].unitType);
      b.unitLevels[h] = Math.max(0, c.data.units[g].unitLevel)
    }
    $.each({mason:Building.TYPE.STONEMASON, wall:Building.WALL_TYPES[b.tribeId], palace:Building.TYPE.PALACE, moat:Building.TYPE.MOAT}, function(a, c) {
      var f = l.za(e, c);
      f && (b.villageSettings[a] = f.data.lvl)
    });
    C ? m(C) : Travian.request("hero/getValuePoints", null, function(a) {
      C = a;
      m(C)
    })
  }
  function f() {
    for(var b in A.attacker) {
      delete A.attacker[b]
    }
    if(a.attackerDetails.heroItem && a.attackerDetails.inputTroops[Troops.TYPE_HERO]) {
      var e = a.attackerDetails.heroItem, c = 10 * (a.attackerDetails.tribeId - 1) + e.unitBonus;
      A.attacker[c] = {bonus:e.bonusStrength, unitName:Travian.translate("Troop_" + c)}
    }
    for(b in A.defender) {
      delete A.defender[b]
    }
    for(b = 0;b < a.defenderDetails.length;b++) {
      if(a.defenderDetails[b].heroItem && a.defenderDetails[b].inputTroops[Troops.TYPE_HERO]) {
        var e = a.defenderDetails[b].heroItem, c = 10 * (a.defenderDetails[b].tribeId - 1) + e.unitBonus, f = e.bonusStrength;
        A.defender[c] && (f = Math.max(A.defender[c].bonus, e.bonusStrength));
        A.defender[c] = {bonus:f, unitName:Travian.translate("Troop_" + c)}
      }
    }
  }
  function n() {
    function b(e, c) {
      return a.extendedMode ? "attacker" == e ? a.attackerDetails.villageSettings[c] || 0 : a.defenderDetails[0].villageSettings[c] || 0 : 0
    }
    for(var e = {off:[a.attackerDetails.heroBonus], def:[0], heroMounted:[a.attackerDetails.mounted ? 1 : 0], itemType:[a.attackerDetails.equipmentDropdown.selected], str:[a.attackerDetails.heroStrength]}, c = [], f = [], m = [], g = 0;g < a.defenderDetails.length;g++) {
      var h = a.defenderDetails[g];
      c.push(h.tribeId);
      f.push(h.inputTroops);
      m.push(h.unitLevels);
      e.off.push(0);
      e.def.push(h.heroBonus);
      e.heroMounted.push(h.mounted ? 1 : 0);
      e.itemType.push(h.equipmentDropdown.selected);
      e.str.push(h.heroStrength)
    }
    g = b("attacker", "target1");
    h = 0;
    g && a.attackerDetails.inputTroops[Troops.TYPE_CATAPULT] >= Troops.SECOND_TARGET_CATAPULTS && (h = b("attacker", "target2"));
    return{attackType:a.attackType, attackerTribe:a.attackerDetails.tribeId, attackerUnits:a.attackerDetails.inputTroops, defenderTribe:c, defenderUnits:f, heroOffBonus:e.off, heroDefBonus:e.def, heroItemType:e.itemType, heroFightStrength:e.str, attackerResearch:a.extendedMode ? a.attackerDetails.unitLevels : {}, defenderResearch:a.extendedMode ? m : {}, attPopulation:b("attacker", "population"), defPopulation:b("defender", "population"), catapultTargetLevel:g, catapultTargetLevel2:h, masonLevel:b("defender", 
    "mason"), wallLevel:b("defender", "wall"), palaceLevel:b("defender", "palace"), moatLevel:b("defender", "moat"), natarBonus:b("attacker", "natarBonus"), heroMounted:e.heroMounted}
  }
  function q(b) {
    a.result = b.statistics;
    a.result.losses.amount = {attacker:0, defender:0};
    for(var e = {attacker:0, defender:0}, c = 0;c < b.modules.length;c++) {
      var f = b.modules[c];
      $.each(["attacker", "defender", "supporter"], function(b, c) {
        if(f.name == "troops/" + c) {
          for(var m in f.body.lostTroops) {
            e[c] += f.body.originalTroops[m], a.result.losses.amount[c] += f.body.lostTroops[m]
          }
        }
      })
    }
    a.result.successType = {attacker:0, defender:0};
    $.each(["attacker", "defender"], function(b, c) {
      var f = "WON_WITH_LOSSES";
      0 == a.result.losses.amount[c] ? f = "WON_WITHOUT_LOSSES" : a.result.losses.amount[c] == e[c] && (f = "attacker" == c ? "LOST" : "LOST_WITH_LOSSES");
      a.result.successType[c] = Notifications["REPORT_" + c.toUpperCase() + "_" + f];
      a.result.lossPercent[c] = Math.round(a.result.lossPercent[c]);
      a.result.totalEffective[c] = Math.round(a.result.totalEffective[c])
    });
    for(c = 0;c < b.modules.length;c++) {
      var f = b.modules[c], m = null, g = null;
      switch(f.name) {
        case "troops/attacker":
          m = a.attackerDetails;
          g = a.result.lossPercent.attacker;
          break;
        case "troops/defender":
        ;
        case "troops/supporter":
          m = a.defenderDetails[c - 1], g = a.result.lossPercent.defender
      }
      if(m) {
        delete m.lostTroops;
        for(var h in f.body.lostTroops) {
          if(0 < f.body.lostTroops[h]) {
            m.lostTroops = f.body.lostTroops;
            break
          }
        }
        delete m.heroHealthLoss;
        m.inputTroops[Troops.TYPE_HERO] && 0 < g && (m.heroHealthLoss = g, m.lostTroops || (m.lostTroops = {}), m.lostTroops[Troops.TYPE_HERO] = 1)
      }
      "damage" == f.name && (a.result.buildingDamage || (a.result.buildingDamage = []), f.body.buildingType == Building.WALL_TYPES[a.defenderDetails[0].tribeId] && (m = a.defenderDetails[0].tribeId, m == Player.TRIBE.NATAR && (f.body.buildingType = Building.TYPE.CITY_WALL), f.body.buildingFinalLevel < f.body.buildingOriginalLevel && (a.result.wallDamage = {buildingType:Building.WALL_TYPES[m], tribeId:m, finalLevel:f.body.buildingFinalLevel})), f.body.buildingType == Building.TYPE.MAIN_BUILDING && 
      (a.result.buildingDamage[0] = f.body.buildingFinalLevel), f.body.buildingType == Building.TYPE.ACADEMY && (a.result.buildingDamage[1] = f.body.buildingFinalLevel))
    }
    a.enableApplyLosses = 0 < a.result.losses.amount.attacker + a.result.losses.amount.defender;
    a.enableApplyLosses = a.enableApplyLosses || a.result.buildingDamage
  }
  var p = 9;
  a.Troops = Troops;
  a.Building = Building;
  a.Player = Player;
  a.attackType = Troops.MOVEMENT_TYPE_ATTACK;
  var r = Settings.get(Travian.Player.data.playerId);
  a.extendedMode = r.getSetting("extendedSimulator");
  var s = Hero.get(Travian.Player.data.playerId), v = HeroItem.getCollection("own"), u = [], t = b.B(null, [Troops.COLLECTION_STATIONARY], h), z = null;
  a.switchCallback = function(b) {
    a.extendedMode = b;
    a.w.updateWindowHeight(!b)
  };
  h();
  a.$on("activeVillageChanged", h);
  var A = {attacker:{}, defender:{}};
  A.supporter = A.defender;
  var C = null;
  a.attackerDetails = new g(Travian.Player.data.tribeId, "attacker");
  a.defenderDetails = [new g(Player.TRIBE.ROMAN, "defender")];
  a.addSupport = function(b) {
    b = new g(b, "supporter");
    a.defenderDetails.push(b);
    a.w.updateWindowHeight();
    return b
  };
  a.deleteSupport = function(b) {
    a.defenderDetails.splice(b, 1);
    a.w.updateWindowHeight(!0)
  };
  a.setVillageUnits = function(a, b) {
    a.tribeId == Travian.Player.data.tribeId && (a.inputTroops[b] = u[0].data.units[b])
  };
  a.applyLosses = function() {
    function b(a) {
      for(var e in a.lostTroops) {
        a.inputTroops[e] && (a.inputTroops[e] = Math.max(0, a.inputTroops[e] - a.lostTroops[e]))
      }
    }
    b(a.attackerDetails);
    for(var e = 0;e < a.defenderDetails.length;e++) {
      b(a.defenderDetails[e])
    }
    a.result.buildingDamage && ("undefined" != typeof a.result.buildingDamage[0] && (a.attackerDetails.villageSettings.target1 = a.result.buildingDamage[0]), "undefined" != typeof a.result.buildingDamage[1] && (a.attackerDetails.villageSettings.target1 ? a.attackerDetails.villageSettings.target2 = a.result.buildingDamage[1] : (a.attackerDetails.villageSettings.target1 = a.result.buildingDamage[1], a.attackerDetails.villageSettings.target2 = "")));
    a.enableApplyLosses = !1
  };
  a.simulate = function() {
    Travian.request("troops/fightSimulate", n(), q)
  };
  a.checkHero = function(b, e) {
    b[Troops.TYPE_HERO] != e[Troops.TYPE_HERO] && (a.w.updateWindowHeight(!b[Troops.TYPE_HERO]), f())
  };
  a.$watch("attackerDetails.inputTroops", function() {
    a.attackerUnitCount = 0;
    for(var b in a.attackerDetails.inputTroops) {
      a.attackerUnitCount += a.attackerDetails.inputTroops[b] || 0
    }
    a.attackerDetails.inputTroops[Troops.TYPE_HERO] && 1 < a.attackerDetails.inputTroops[Troops.TYPE_HERO] && (a.attackerDetails.inputTroops[Troops.TYPE_HERO] = 1)
  }, !0);
  var D = a.getParam("combatSimulatorData", !1, !0);
  if("undefined" !== typeof D) {
    var y = !1;
    a.subscribe(v, function() {
      if(!y) {
        a.attackType = D.attacker.attackType;
        a.attackerDetails = new g(parseInt(D.attacker.tribeId), "attacker");
        for(var b in D.attacker.troops) {
          a.attackerDetails.inputTroops[b] = parseInt(D.attacker.troops[b])
        }
        D.attacker.research && (a.attackerDetails.villageSettings.population = Travian.Player.data.population, m(a.attackerDetails, D.attacker.villageId, D.attacker.research));
        a.defenderDetails[0] = new g(parseInt(D.defender.tribeId), "defender");
        for(b in D.defender.troops) {
          a.defenderDetails[0].inputTroops[b] = parseInt(D.defender.troops[b])
        }
        D.defender.wallLevel && (a.defenderDetails[0].villageSettings.wall = D.defender.wallLevel);
        D.defender.research && (a.defenderDetails[0].villageSettings.population = Travian.Player.data.population, m(a.defenderDetails[0], D.defender.villageId, D.defender.research));
        if(D.support) {
          for(b = 0;b < D.support.length;b++) {
            var e = a.addSupport(parseInt(D.support[b].tribeId)), c;
            for(c in D.support[b].troops) {
              e.inputTroops[c] = parseInt(D.support[b].troops[c])
            }
            D.support[b].research && m(e, D.support[b].villageId, D.support[b].research)
          }
        }
        y = !0
      }
    })
  }
  a.$on("$destroy", function() {
    null !== t && t.destroy();
    var b = a.extendedMode ? 1 : 0;
    r.data.extendedSimulator != b && (r.data.extendedSimulator = b, r.persist())
  })
};
window.combatSimulatorCtrl.$inject = ["$scope", "VillageService", "TroopsService", "BuildingService"];
window.farmListAddCtrl = function(a, c, b, l) {
  a.player = b.l();
  a.FarmListEntry = FarmListEntry;
  "undefined" != typeof a.w ? (a.w.windowName = "FarmList.ListAddVillage.headline", a.villageId = "" + a.getParam("targetId"), a.entryId = a.getParam("entryId"), a.action = a.getParam("entryAction") || FarmListEntry.ACTION.ADD) : (a.villageId = "" + a.farmListTargetId, a.action = FarmListEntry.ACTION.TOGGLE);
  a.village = Village.get(a.villageId);
  var h = FarmList.getCollection();
  a.farmListCollection = [];
  a.farmListEntriesCount = {};
  a.villageInFarmLists = [];
  a.preselected = !0;
  var g = !1, e = h.subscribe(function() {
    g || (a.farmListCollection = angular.copy(h.data), a.farmListCollection.sort(function(a, b) {
      return b.data.lastChanged - a.data.lastChanged
    }), g = !0);
    a.villageInFarmLists = [];
    angular.forEach(h.data, function(b) {
      0 < b.data.villageIds.length && -1 < b.data.villageIds.indexOf(a.villageId) && a.villageInFarmLists.push(b.data.listId);
      a.farmListEntriesCount[b.data.listId] = b.data.entryIds.length
    });
    l(function() {
      a.$broadcast("scrollbarApi", "resetHeight")
    }, 0)
  });
  a.addVillage = function(b) {
    var e = "", g = {villageId:a.villageId};
    switch(a.action) {
      case FarmListEntry.ACTION.ADD:
        g.listId = b;
        e = "addEntry";
        break;
      case FarmListEntry.ACTION.COPY:
        g.newListId = b;
        g.entryId = a.entryId;
        e = "copyEntry";
        break;
      case FarmListEntry.ACTION.TOGGLE:
        g.listId = b, e = "toggleEntry"
    }
    Travian.request("farmList/" + e, g, function(b) {
      "undefined" == typeof b.errors ? (l(function() {
        c.$broadcast("farmListItemToggle", g.villageId)
      }, 5), a.error = "", a.errorParam = "") : (a.error = "Error." + b.errors[0].message, b.errors[0].hasOwnProperty("params") && (a.errorParam = b.errors[0].params), delete b.errors, "undefined" == typeof a.w && l(function() {
        a.$broadcast("scrollbarApi", "resetHeight")
      }, 0))
    });
    return!1
  };
  a.removePreselected = function() {
    a.preselected = !1
  };
  a.$on("farmListPreselect", function() {
    a.preselected = !0
  });
  a.$on("addVillageToFarmList", function() {
    a.preselected && a.addVillage(a.farmListCollection[0].data.listId)
  });
  a.$on("$destroy", function() {
    h.unsubscribe(e)
  })
};
window.farmListAddCtrl.$inject = ["$scope", "$rootScope", "SessionService", "$timeout"];
window.farmListAddVillageCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"FarmList.ListAddVillage.headline", inWindowPopupContentTemplate:"tpl/building/rallypoint/tabs/partials/FarmListAddVillage.html"});
  a.villageSearch = {target:null, targetPlayer:{}};
  a.villageId = 0;
  a.listId = a.getParam("listId");
  a.list = FarmListEntry.getCollection(a.listId);
  a.checkTarget = function() {
    a.villageId = a.villageSearch.getVillageId();
    if(0 != a.villageId || "undefined" != typeof a.villageSearch.result && "" != a.villageSearch.result.villageSearched) {
      a.error = "";
      for(var c = 0;c < a.list.data.length;c++) {
        if(a.list.data[c].data.villageId == a.villageId) {
          a.error = "Error.VillageAlreadyInFarmList";
          a.villageId = 0;
          return
        }
      }
      Travian.request("farmList/checkTarget", {villageId:a.villageId}, function(b) {
        if("undefined" == typeof b.errors) {
          var c = id2xy(b.villageId);
          a.villageSearch.setData(b.villageName, c.x, c.y);
          a.villageSearch.target = b;
          a.villageSearch.targetPlayer = Player.get(b.targetPlayerId)
        }else {
          a.villageSearch.target = null, a.villageSearch.targetPlayer = null, a.villageId = 0, a.error = "Error." + b.errors[0].message, delete b.errors
        }
      })
    }else {
      a.villageSearch.target = null
    }
  };
  a.addVillage = function() {
    Travian.request("farmList/addEntry", {villageId:a.villageId, listId:a.listId}, function(c) {
      "undefined" == typeof c.errors ? a.closeOverlay() : (a.error = "FarmList.Error." + c.errors[0].message, delete c.errors)
    })
  };
  a.$on("$destroy", function() {
    a.removeParam("listId")
  })
};
window.farmListAddVillageCtrl.$inject = ["$scope"];
window.farmListCreationCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"FarmList.ListCreation.headline", inWindowPopupContentTemplate:"tpl/building/rallypoint/tabs/partials/FarmListCreation.html"});
  a.listNamePlaceholder = Travian.translate("FarmList.ListCreation.listNamePlaceholder");
  a.input = {listName:""};
  a.maxLength = Travian.Config.farmListNameMaxLength;
  a.createNewList = function() {
    Travian.request("farmList/createList", {name:a.input.listName}, function(c) {
      "undefined" == typeof c.errors ? a.closeOverlay() : (a.error = "Error." + c.errors[0].message, delete c.errors)
    })
  }
};
window.farmListCreationCtrl.$inject = ["$scope"];
window.farmListCtrl = function(a, c, b, l, h, g) {
  function e() {
    for(var a = 0;a < u.data.members.length;a++) {
      var b = u.data.members[a].playerId;
      v[b] = b
    }
    for(a = 0;a < u.data.diplomacy.treaties.length;a++) {
      if(b = u.data.diplomacy.treaties[a], b.type == Alliance.NAP || b.type == Alliance.BND) {
        for(var b = Alliance.get(b.otherAllianceId), e = 0;e < b.data.members.length;e++) {
          var c = b.data.members[e].playerId;
          v[c] = c
        }
      }
    }
  }
  function m(b, e) {
    b.enoughTroops && 0 < b.needed && ("undefined" == typeof a.homeTroops.data.units[e] || a.homeTroops.data.units[e] < b.needed) && (b.enoughTroops = !1, a.enoughTroops = !1)
  }
  function f() {
    0 <= p && a.homeTroops.unsubscribe(p);
    a.homeTroops = c.Wb();
    p = a.homeTroops.subscribe(a.adjustTroopsInfo);
    var b = c.i();
    if("undefined" !== typeof a.currentFarmListEntries) {
      for(var e = 0;e < a.currentFarmListEntries.data.length;e++) {
        var f = Da(b.data.coordinates, a.currentFarmListEntries.data[e].data.coords);
        a.currentFarmListEntries.data[e].data.distance = f
      }
    }
  }
  function n() {
    var b = z.u(null, null, [Troops.MOVEMENT_TYPE_ATTACK, Troops.MOVEMENT_TYPE_RAID]);
    t = {};
    for(var e = 0;e < b.length;e++) {
      var c = b[e].data.movement.villageIdTarget;
      t[c] ? (t[c].count++, t[c].next = Math.min(t[c].next, b[e].data.movement.timeFinish)) : t[c] = {count:1, next:b[e].data.movement.timeFinish}
    }
    a.adjustTroopsInfo()
  }
  function q() {
    for(var b = 0;b < a.farmListCollection.data.length;b++) {
      a.farmListCollection.data[b].checked = !1
    }
  }
  var p = -1, r = -1, s = b.l(), v = {};
  if(0 < s.data.allianceId) {
    var u = Alliance.get(s.data.allianceId);
    a.subscribe(u, e)
  }
  a.player = s;
  a.currentListIndex = -1;
  a.selectedEntries = [];
  a.farmListCollection = FarmList.getCollection();
  a.troopIds = [1, 2, 3, 4, 5, 6];
  a.checkAll = {checked:!1};
  a.customSort = {field:["data.distance", "data.distance"]};
  a.reverseSort = !1;
  a.sort = "distance";
  a.sortBy = function(b) {
    "undefined" != typeof b && (a.sort == b ? a.reverseSort = !a.reverseSort : a.sort = b);
    b = "data." + a.sort;
    "lastReport.raidedResSum" == a.sort && (b = ["data." + a.sort, "data.lastReport.time"]);
    a.currentFarmListEntries.data = g("orderBy")(a.currentFarmListEntries.data, b, a.reverseSort)
  };
  a.farmListLimit = Travian.Config.farmListLimit;
  a.tribeId = s.data.tribeId;
  if(s.data.hasNoobProtection || !s.isOnMap()) {
    a.hasNoobProtection = !0
  }
  var t = {}, z = l.B(null, [Troops.COLLECTION_MOVING], n, a);
  a.adjustTroopsInfo = function() {
    a.handleError({});
    a.troopInfo = {};
    for(var b = 0;b < a.troopIds.length;b++) {
      a.troopInfo[a.troopIds[b]] = {id:a.troopIds[b], needed:0, enoughTroops:!0}
    }
    a.enoughTroops = !0;
    a.troopsAmountNeeded = 0;
    a.selectedEntries = [];
    a.amountAttackableVillages = 0;
    if(0 > a.currentListIndex) {
      for(b = 0;b < a.farmListCollection.data.length;b++) {
        for(var e = a.farmListCollection.data[b], c = e.data.underAttack = 0;c < e.data.villageIds.length;c++) {
          "undefined" != typeof t[e.data.villageIds[c]] && e.data.underAttack++
        }
        if(e.checked) {
          for(c in e.data.units) {
            a.troopInfo[c] && (a.troopInfo[c].needed += parseInt(e.data.units[c]), m(a.troopInfo[c], c), a.troopsAmountNeeded += a.troopInfo[c].needed)
          }
          a.selectedEntries = a.selectedEntries.concat(e.data.entryIds)
        }
      }
    }else {
      for(b = 0;b < a.currentFarmListEntries.data.length;b++) {
        var e = a.currentFarmListEntries.data[b], f = !1;
        0 < s.data.kingdomId && s.data.kingdomId == e.data.belongsToKing && (f = !0);
        0 > e.data.belongsToKing && s.data.kingdomId == e.data.targetOwnerId && (f = !0);
        "undefined" != typeof v[e.data.targetOwnerId] && (f = !0);
        e.data.isAlly = f;
        e.data.isOasis && (f = e.data.coords, e.data.villageName = Travian.translate("Oasis") + " (" + f.x + "|" + f.y + ")");
        if(e.checked) {
          for(c in e.data.units) {
            a.troopInfo[c] && (a.troopInfo[c].needed += parseInt(e.data.units[c]), m(a.troopInfo[c], c), a.troopsAmountNeeded += a.troopInfo[c].needed)
          }
          a.selectedEntries.push(e.data.entryId)
        }
        e.data.underAttack = null;
        "undefined" != typeof t[e.data.villageId] && (e.data.underAttack = t[e.data.villageId])
      }
      a.checkAll.checked = !1;
      0 < a.selectedEntries.length && a.selectedEntries.length == a.currentFarmListEntries.data.length && (a.checkAll.checked = !0)
    }
  };
  f();
  a.spyId = a.homeTroops.getSpyId();
  a.troopIds.splice(a.spyId - 1, 1);
  a.$on("raidNotification", function(b, e) {
    if(0 <= a.currentListIndex) {
      for(var c = 0;c < a.currentFarmListEntries.data.length;c++) {
        if(a.currentFarmListEntries.data[c].data.villageId == e.targetId) {
          Cache.A("FarmListEntry:" + a.currentFarmListEntries.data[c].data.id);
          var f = FarmListEntry.get(a.currentFarmListEntries.data[c].data.id), m = f.data.distance, g = f.checked, h = f.subscribe(function() {
            f.data.distance = m;
            f.checked = g;
            f.unsubscribe(h)
          })
        }
      }
    }
  });
  a.$on("$destroy", function() {
    0 <= p && a.homeTroops.unsubscribe(p);
    0 <= r && a.currentFarmListEntries.unsubscribe(r);
    a.handleError({})
  });
  a.openList = function(b, e, f) {
    if(-1 == e) {
      for(var m = 0;m < a.farmListCollection.data.length;m++) {
        a.farmListCollection.data[m].data.listId == b && (e = m)
      }
    }
    a.currentListIndex = e;
    a.currentFarmListEntries = FarmListEntry.getCollection(b);
    for(m = 0;m < a.currentFarmListEntries.data.length;m++) {
      a.currentFarmListEntries.data[m].checked = !1
    }
    r = a.currentFarmListEntries.subscribe(function() {
      for(var b = c.i(), e = 0;e < a.currentFarmListEntries.data.length;e++) {
        var m = Da(b.data.coordinates, a.currentFarmListEntries.data[e].data.coords);
        a.currentFarmListEntries.data[e].data.distance = m;
        a.currentFarmListEntries.data[e].checked = a.currentFarmListEntries.data[e].checked || !1;
        f && 0 <= f.indexOf(a.currentFarmListEntries.data[e].data.villageId) && (a.currentFarmListEntries.data[e].checked = !0);
        a.currentFarmListEntries.data[e].data.lastReport || (a.currentFarmListEntries.data[e].data.lastReport = {raidedResSum:0, time:0})
      }
      a.adjustTroopsInfo();
      a.sortBy()
    })
  };
  a.startRaid = function() {
    var b = [];
    if(0 > a.currentListIndex) {
      for(var e = 0;e < a.farmListCollection.data.length;e++) {
        a.farmListCollection.data[e].checked && b.push(a.farmListCollection.data[e].data.listId)
      }
      Travian.request("troops/startFarmListRaid", {listIds:b, villageId:c.getActiveVillageId()}, function(b) {
        "undefined" != typeof b.errors && a.handleError(b, "error")
      })
    }else {
      for(var f = a.farmListCollection.data[a.currentListIndex].data.listId, e = 0;e < a.currentFarmListEntries.data.length;e++) {
        a.currentFarmListEntries.data[e].checked && b.push(a.currentFarmListEntries.data[e].data.entryId)
      }
      Travian.request("troops/startPartialFarmListRaid", {listId:f, entryIds:b, villageId:c.getActiveVillageId()}, function(b) {
        "undefined" != typeof b.errors && a.handleError(b, "error")
      })
    }
  };
  a.goBackToOverview = function() {
    a.currentListIndex = -1;
    0 <= r && a.currentFarmListEntries.unsubscribe(r);
    q();
    a.adjustTroopsInfo();
    a.handleError({})
  };
  a.deleteList = function(a) {
    Travian.request("farmList/deleteList", {listId:a})
  };
  a.deleteEntry = function(a) {
    Travian.request("farmList/deleteEntry", {entryId:a})
  };
  a.changeListOrder = function(b, e) {
    0 >= e || e >= a.farmListCollection.data.length || Travian.request("farmList/changeListOrder", {listIds:[b, a.farmListCollection.data[e].data.listId]})
  };
  a.checkAllChange = function() {
    if(a.checkAll.checked) {
      for(var b = 0;b < a.currentFarmListEntries.data.length;b++) {
        a.currentFarmListEntries.data[b].checked = !0
      }
    }else {
      for(b = 0;b < a.currentFarmListEntries.data.length;b++) {
        a.currentFarmListEntries.data[b].checked = !1
      }
    }
    a.adjustTroopsInfo(a.currentFarmListEntries)
  };
  var A = a.getParam("listId", !1, !0);
  a.subscribe(a.farmListCollection, function() {
    for(var b = 0;b < a.farmListCollection.data.length;b++) {
      a.farmListCollection.data[b].checked = a.farmListCollection.data[b].checked || !1
    }
    a.farmListCollection.data.sort(function(a, b) {
      return a.data.orderNr >= b.data.orderNr ? 1 : -1
    });
    n();
    null != A && (b = a.getParam("targets", !1, !0), a.openList(A, -1, b), A = null)
  });
  a.$on("activeVillageChanged", f);
  q();
  a.FarmListEntry = FarmListEntry;
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_FARM_LISTS)
};
window.farmListCtrl.$inject = "$scope VillageService SessionService TroopsService $timeout $filter".split(" ");
window.farmListEditCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"FarmList.ListEdit.headline", inWindowPopupContentTemplate:"tpl/building/rallypoint/tabs/partials/FarmListEdit.html"});
  a.listNamePlaceholder = Travian.translate("FarmList.ListCreation.listNamePlaceholder");
  a.input = {listName:""};
  a.maxLength = Travian.Config.farmListNameMaxLength;
  a.editList = function() {
    Travian.request("farmList/editList", {name:a.input.listName, listId:a.getParam("listId")}, function(c) {
      "undefined" == typeof c.errors ? a.closeOverlay() : a.handleError(c, "editListError")
    })
  };
  a.$on("$destroy", function() {
    a.removeParam("listId")
  })
};
window.farmListEditCtrl.$inject = ["$scope"];
window.farmListEditTroopsCtrl = function(a) {
  function c() {
    g || (!b.filled || h && !h.filled) || (a.troopDetails.tribeId = b.data.tribeId, h && (a.troopDetails.inputTroops = angular.copy(h.data.units)), e || (a.editTroopsError = "FarmList.Warning.MultipleVillages"), g = !0)
  }
  a.overlayConfig.k({inWindowPopupTitle:"FarmList.EditTroops.Headline", inWindowPopupContentTemplate:"tpl/building/rallypoint/tabs/partials/FarmListEditTroops.html"});
  var b = Travian.Player, l = a.getParam("listId");
  0 < l && (a.list = FarmList.get(l));
  l = a.getParam("entryIds");
  a.troopDetails = {inputTroops:{1:0, 2:0, 3:0, 4:0, 5:0, 6:0}};
  var h = null, g = !1, e = !0;
  if("string" == typeof l) {
    a.entryIds = l.split(",");
    for(var l = null, m = 0;m < a.entryIds.length;m++) {
      var f = FarmListEntry.get(a.entryIds[m]), f = JSON.stringify(f.data.units);
      null == l && (l = f);
      f != l && (e = !1)
    }
    e && (h = FarmListEntry.get(a.entryIds[0]), a.subscribe(h, c))
  }else {
    h = FarmListEntry.get(l), a.subscribe(h, c), a.entryIds = [l]
  }
  a.subscribe(b, c);
  (a.checkInput = function() {
    a.noUnitSelected = !0;
    a.unitInputChanged = !h;
    for(var b in a.troopDetails.inputTroops) {
      a.noUnitSelected && 0 < a.troopDetails.inputTroops[b] && (a.noUnitSelected = !1), a.unitInputChanged || parseInt(a.troopDetails.inputTroops[b]) == parseInt(h.data.units[b]) || (a.unitInputChanged = !0)
    }
  })();
  a.$on("$destroy", function() {
    a.removeParam("listId");
    a.removeParam("entryIds")
  });
  a.saveTroops = function() {
    a.editTroopsError = "";
    Travian.request("farmList/editTroops", {entryIds:a.entryIds, units:a.troopDetails.inputTroops}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : (a.editTroopsError = "Error." + b.errors[0].message, delete b.errors)
    });
    a.handleError({})
  }
};
window.farmListEditTroopsCtrl.$inject = ["$scope", "SessionService"];
window.rallypointCtrl = function(a) {
  a.tabConfig.tabs = ["Overview", "CombatSimulator", "FarmList"];
  a.tabConfig.bodyTemplatePrefix = "tpl/building/rallypoint/tabs/";
  a.tabConfig.disableScrollingForTabs = ["Overview", "FarmList"]
};
window.rallypointCtrl.$inject = ["$scope"];
window.rallypointOverviewCtrl = function(a, c, b, l) {
  function h(a, b) {
    null == p && (p = Fa(q));
    var e = Fa(b.villageIdLocation), c = Da(p, Fa(a.villageIdLocation)), e = Da(p, e);
    return c < e ? -1 : c > e ? 1 : 0
  }
  function g(a, b) {
    return a.movement.timeFinish >= b.movement.timeFinish ? a.movement.timeFinish == b.movement.timeFinish && a.troopId < b.troopId ? -1 : 1 : -1
  }
  function e(b, e) {
    return 1 == a.troopsFilter[b].all || 1 == a.troopsFilter[b][e]
  }
  function m() {
    q = c.getActiveVillageId();
    null !== r && r.destroy();
    r = b.B([q], null, n, a)
  }
  function f(b, e) {
    for(var c = {}, f = 1;5 >= f;f++) {
      c[f] = {troopId:-f, tribeId:f, tribeName:Travian.translate("Tribe_" + f), status:e, villageIdLocation:q, villageId:null, troopsGroup:[], units:{1:0, 2:0, 3:0, 4:0, 5:0, 6:0, 7:0, 8:0, 9:0, 10:0, 11:0}, supplyTroops:0}
    }
    for(var m = 0;m < b.length;m++) {
      var g = b[m], f = g.tribeId;
      c[f].troopsGroup.push(g);
      c[f].supplyTroops += g.supplyTroops;
      for(var h in g.units) {
        c[f].units[h] += parseInt(g.units[h], 0)
      }
    }
    a.troopsOverview.displayTroops.Local[e] = [];
    for(f in c) {
      if(0 != c[f].troopsGroup.length) {
        if(s[e][f]) {
          1 == c[f].troopsGroup.length ? a.troopsOverview.displayTroops.Local[e].push(c[f].troopsGroup[0]) : a.troopsOverview.displayTroops.Local[e].push(c[f])
        }else {
          for(m = 0;m < c[f].troopsGroup.length;m++) {
            a.troopsOverview.displayTroops.Local[e].push(c[f].troopsGroup[m])
          }
        }
      }
    }
  }
  function n() {
    var b = r.u();
    a.troopsOverview.troopsCount = {Local:0, Oases:0, Deployed:0, Incoming:0, Outgoing:0};
    a.troopsOverview.displayTroops = {Local:[], Oases:[], Deployed:[], Incoming:[], Outgoing:[]};
    for(var c = {}, m = [], l = [], p = null, s = null, D = 0;D < b.length;D++) {
      var y = b[D].data;
      if("undefined" == typeof c[y.troopId]) {
        c[y.troopId] = y;
        y.villageIdLocation == q && (y.status == Troops.STATUS_HOME ? (p = y, a.troopsOverview.troopsCount.Local++) : y.tribeId == Player.TRIBE.NATURE && y.status == Troops.STATUS_SUPPORT ? (s = y, a.troopsOverview.troopsCount.Local++) : y.playerId == Travian.Player.data.playerId && y.status == Troops.STATUS_SUPPORT ? (m.push(y), a.troopsOverview.troopsCount.Local++) : y.playerId != Travian.Player.data.playerId && y.tribeId != Player.TRIBE.NATURE && y.status == Troops.STATUS_SUPPORT ? (m.push(y), 
        a.troopsOverview.troopsCount.Local++) : y.status == Troops.STATUS_TRAP && (l.push(y), a.troopsOverview.troopsCount.Local++));
        y.villageId == q && (y.villageIdLocation != q && y.status != Troops.STATUS_TRANSIT) && (a.troopsOverview.displayTroops.Deployed.push(y), a.troopsOverview.troopsCount.Deployed++);
        if(y.villageId == q && y.villageIdLocation != q && y.status == Troops.STATUS_TRANSIT) {
          switch(parseInt(y.movement.movementType, 0)) {
            case Troops.MOVEMENT_TYPE_ATTACK:
            ;
            case Troops.MOVEMENT_TYPE_RAID:
            ;
            case Troops.MOVEMENT_TYPE_SIEGE:
              e("Outgoing", "attack") && a.troopsOverview.displayTroops.Outgoing.push(y);
              a.troopsOverview.troopsCount.Outgoing++;
              break;
            case Troops.MOVEMENT_TYPE_SPY:
              e("Outgoing", "spy") && a.troopsOverview.displayTroops.Outgoing.push(y);
              a.troopsOverview.troopsCount.Outgoing++;
              break;
            case Troops.MOVEMENT_TYPE_SUPPORT:
              e("Outgoing", "support") && a.troopsOverview.displayTroops.Outgoing.push(y);
              a.troopsOverview.troopsCount.Outgoing++;
              break;
            case Troops.MOVEMENT_TYPE_ADVENTURE:
              e("Outgoing", "adventure") && a.troopsOverview.displayTroops.Outgoing.push(y);
              a.troopsOverview.troopsCount.Outgoing++;
              break;
            case Troops.MOVEMENT_TYPE_TRANSPORT:
              e("Outgoing", "trade") && a.troopsOverview.displayTroops.Outgoing.push(y);
              a.troopsOverview.troopsCount.Outgoing++;
              break;
            case Troops.MOVEMENT_TYPE_SETTLE:
              e("Outgoing", "settle") && a.troopsOverview.displayTroops.Outgoing.push(y), a.troopsOverview.troopsCount.Outgoing++
          }
          y.movement.playerIdTarget == Player.ID.ROBBER ? y.playerIdLocation = y.movement.playerIdTarget : y.movement.playerIdTarget == Player.ID.GOVERNOR_NPC && (y.playerIdLocation = y.movement.playerIdTarget, y.villageNameLocation = Travian.translate("NPCGovernorVillage"))
        }
        if(y.status == Troops.STATUS_TRANSIT) {
          if(y.villageIdLocation == q) {
            switch(parseInt(y.movement.movementType, 0)) {
              case Troops.MOVEMENT_TYPE_ATTACK:
              ;
              case Troops.MOVEMENT_TYPE_RAID:
              ;
              case Troops.MOVEMENT_TYPE_SIEGE:
                e("Incoming", "attack") && a.troopsOverview.displayTroops.Incoming.push(y);
                a.troopsOverview.troopsCount.Incoming++;
                break;
              case Troops.MOVEMENT_TYPE_SUPPORT:
              ;
              case Troops.MOVEMENT_TYPE_RETURN:
                e("Incoming", "support") && a.troopsOverview.displayTroops.Incoming.push(y);
                a.troopsOverview.troopsCount.Incoming++;
                break;
              case Troops.MOVEMENT_TYPE_REGENERATION:
                e("Incoming", "healing") && a.troopsOverview.displayTroops.Incoming.push(y);
                a.troopsOverview.troopsCount.Incoming++;
                break;
              case Troops.MOVEMENT_TYPE_TRANSPORT:
              ;
              case Troops.MOVEMENT_TYPE_TRANSPORT_RETURN:
              ;
              case Troops.MOVEMENT_TYPE_RETURN_ADVENTURE:
                e("Incoming", "trade") && a.troopsOverview.displayTroops.Incoming.push(y);
                a.troopsOverview.troopsCount.Incoming++;
                break;
              case Troops.MOVEMENT_TYPE_TREASURE_RESOURCES:
                e("Incoming", "trade") && a.troopsOverview.displayTroops.Incoming.push(y), a.troopsOverview.troopsCount.Incoming++
            }
          }else {
            y.villageId == q && y.villageIdLocation != q && (parseInt(y.movement.movementType, 0) == Troops.MOVEMENT_TYPE_RETURN_ADVENTURE ? (e("Incoming", "support") && a.troopsOverview.displayTroops.Incoming.push(y), a.troopsOverview.troopsCount.Incoming++) : parseInt(y.movement.movementType, 0) == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT && (e("Incoming", "tribute") && a.troopsOverview.displayTroops.Incoming.push(y), a.troopsOverview.troopsCount.Incoming++))
          }
        }
      }
    }
    a.troopsOverview.displayTroops.Local.home = [];
    null !== p && a.troopsOverview.displayTroops.Local.home.push(p);
    a.troopsOverview.displayTroops.Local.nature = [];
    null !== s && a.troopsOverview.displayTroops.Local.nature.push(s);
    a.troopsOverview.displayTroops.Local.regenerating = [];
    a.troopsOverview.displayTroops.Incoming.sort(g);
    a.troopsOverview.displayTroops.Outgoing.sort(g);
    a.troopsOverview.displayTroops.Deployed.sort(h);
    f(m, Troops.STATUS_SUPPORT);
    f(l, Troops.STATUS_TRAP);
    a.sendTroops = function(b, e) {
      var c = [b.troopId];
      "undefined" != typeof b.groupTroopIds && (c = [b.groupTroopIds]);
      for(var f = 0;f < c.length;f++) {
        if("Disband" == e) {
          Travian.writeRequest("troops/disband", {troopId:c[f]})
        }else {
          if("Release" == e) {
            Travian.writeRequest("troops/release", {troopId:c[f]})
          }else {
            var m = {troopId:c[f], moveHomeType:e};
            if("Call" == e || "Send" == e) {
              m.sendTroopsCallback = function() {
                a.openWindow("building", {location:a.locationId, tab:a.$parent.tabData.currentTab, subtab:a.tabData.currentTab}, {})
              }
            }
            a.openWindow("sendTroops", {}, m)
          }
        }
      }
    };
    a.abortTroopMovement = function(a) {
      Travian.writeRequest("troops/abortTroopMovement", {troopId:a})
    };
    a.filterTroops = function(b, e) {
      if("all" != b && "undefined" !== typeof a.troopsFilter[e] && "undefined" !== typeof a.troopsFilter[e][b]) {
        if(1 == a.troopsFilter[e][b]) {
          a.troopsFilter[e][b] = 0;
          var c = 1, f;
          for(f in a.troopsFilter[e]) {
            1 == a.troopsFilter[e][f] && (c = 0)
          }
          a.troopsFilter[e].all = c
        }else {
          a.troopsFilter[e][b] = 1, a.troopsFilter[e].all = 0
        }
        n()
      }
    }
  }
  var q = null, p = null, r = null;
  a.rallypointOverviewTabConfig = {};
  a.rallypointOverviewTabConfig.tabs = ["Local", "Deployed", "Incoming", "Outgoing"];
  a.rallypointOverviewTabConfig.bodyTemplatePrefix = "tpl/building/rallypoint/tabs/partials/";
  a.rallypointOverviewTabConfig.routeNamedParam = "subtab";
  a.rallypointOverviewTabConfig.tabName = "subtab";
  a.rallypointOverviewTabConfig.tabType = "subtab";
  a.rallypointOverviewTabConfig.scrollContentHeightOffset = 27;
  a.troopsOverview = {displayTroops:{Local:[], Oases:[], Deployed:[], Incoming:[], Outgoing:[]}, troopsCount:{Local:0, Oases:0, Deployed:0, Incoming:0, Outgoing:0}};
  a.troopsFilter = {Local:{all:1}, Oases:{all:1}, Deployed:{all:1}, Incoming:{all:1, attack:0, support:0, attackOasis:0, supportOasis:0, trade:0, tribute:0, healing:0}, Outgoing:{all:1, attack:0, spy:0, support:0, adventure:0, settle:0, trade:0}};
  m();
  a.$on("activeVillageChanged", m);
  a.$on("$destroy", a.cleanupSubscriptions);
  var s = {support:{1:!0, 2:!0, 3:!0}, trap:{1:!0, 2:!0, 3:!0}};
  a.expandGroup = function(b, e) {
    "homeTrap" == b && (b = "trap");
    s[b][e] = !1;
    n();
    l(function() {
      a.w.updateWindowHeight(!0)
    }, 50)
  }
};
window.rallypointOverviewCtrl.$inject = ["$scope", "VillageService", "TroopsService", "$timeout"];
window.resourceBuildingCtrl = function(a, c, b) {
  function l(a, b) {
    var c = "";
    1 == a && (c = Travian.translate("Building_" + b));
    2 == a && (c = Travian.translate("Oasis"));
    3 == a && (c = Travian.translate("ProductionOverview.HeroProduction"));
    return c
  }
  function h() {
    Travian.request("village/getProductionDetails", {villageId:b.i().data.villageId}, function(b) {
      var e = a.building.data, c = [], f = e.currentEffect.values[0];
      c.push({label:Travian.translate("ProductionOverview.ResourceField"), data:f, color:"#7ad900"});
      for(var h = b.production[e.buildingType].bonusFactors, q = 0;q < h.length;q++) {
        var p = l(h[q].category, h[q].type);
        c.push({label:p, data:Math.round(f * h[q].value), color:"#4e9700"})
      }
      b = b.production[e.buildingType].globalBonus;
      e = f;
      for(q = 0;q < b.length;q++) {
        f = 1 < b[q].value ? f * b[q].value : f * (1 + b[q].value), 4 != b[q].category && (p = l(b[q].category, b[q].type), c.push({label:p, data:f - e, color:"#4e9700"})), e = f
      }
      for(q = 0;q < c.length;q++) {
        f = 1 / c.length * q;
        p = "#";
        b = ["4e9700"];
        for(e = 0;3 > e;e++) {
          col2 = 1 < b.length ? parseInt(b[e]) : parseInt("4e9700".substr(2 * e, 2), 16), h = parseInt("#baf900".substr(2 * e + 1, 2), 16), h = Math.round(h + (col2 - h) * f).toString(16), 2 > h.length && (h = "0" + h), p += h
        }
        c[q].color = p
      }
      a.pieData = c
    })
  }
  h();
  a.$on("activeVillageChanged", h)
};
window.resourceBuildingCtrl.$inject = ["$scope", "BuildingService", "VillageService"];
window.trainTroopsCtrl = function(a) {
  a.tabConfig.disableScrollingForTabs = ["main"]
};
window.trainTroopsCtrl.$inject = ["$scope", "$timeout"];
window.trapperCtrl = function(a, c, b) {
  function l() {
    var c = UnitQueue.get(n.data.villageId);
    a.subscribe(c, function() {
      f = c.data.buildingTypes[a.building.data.buildingType];
      a.traps && ("undefined" !== typeof f ? (a.traps.queue = f[0], a.traps.maxAvailable = e()) : a.traps.queue = 0)
    });
    b.B([n.data.villageId], [Troops.COLLECTION_TRAPPED], h, a)
  }
  function h() {
    Travian.request("building/getTrapperInfos", {villageId:n.data.villageId, locationId:a.locationId}, g)
  }
  function g(b) {
    if("undefined" != typeof b.unit) {
      a.traps = {total:parseInt(b.total), queueTotal:b.queue, used:parseInt(b.used), maxByBuildingLevel:b.max, amount:0, costs:b.unit.costs, crop:b.unit.crop, time:b.unit.time, unitType:Troops.TYPE_TRAPS};
      f = UnitQueue.get(n.data.villageId).data.buildingTypes[a.building.data.buildingType];
      a.traps.queue = a.traps && "undefined" !== typeof f ? f[0] : 0;
      a.traps.maxAvailable = e();
      if("undefined" != typeof a.unitQueue) {
        for(var c = b = 0;c < a.unitQueue.length;c++) {
          b += Number(a.unitQueue[c].unitsLeft)
        }
        isNaN(b) || (a.traps.total = Number(a.traps.total) + (Number(a.traps.queue) - b))
      }
      a.activeItem = a.traps
    }
  }
  function e() {
    if("undefined" == typeof a.traps.total) {
      return 0
    }
    var b = a.traps.maxByBuildingLevel - a.traps.total - a.traps.queueTotal, b = Math.max(b, 0);
    $.each(a.traps.costs, function(a, e) {
      if(0 < e) {
        var c = Math.floor(q[a] / e);
        c < b && (b = c)
      }
    });
    return Math.floor(0 > b ? 0 : b)
  }
  function m(a, b) {
    a *= b;
    return isNaN(a) ? 0 : a
  }
  a.tabConfig.disableScrollingForTabs = ["main"];
  var f = {};
  a.traps = {};
  a.activeItem = {};
  var n = c.i();
  l();
  var q = n.getResources();
  a.$on("resourcesChanged", function() {
    "undefined" != typeof a.traps && (q = n.getResources(), a.computeAvailableResources())
  });
  a.computeAvailableResources = function() {
    "undefined" != typeof a.traps && ((new Resources(a.traps.costs)).multiply(a.traps.value), a.traps.maxAvailable = e())
  };
  var p = a.building;
  a.$watch("building", function(b) {
    p !== b && (p = b, n = c.i(), l(), q = n.getResources(), a.computeAvailableResources())
  });
  var r = UnitQueue.get(n.data.villageId);
  a.subscribe(r, function() {
    a.unitQueue = r.data.buildingTypes[a.building.data.buildingType];
    Travian.request("building/getTrapperInfos", {villageId:n.data.villageId, locationId:a.locationId}, g)
  });
  a.startTraining = function() {
    Travian.writeRequest("building/buildTraps", {villageId:n.data.villageId, locationId:a.building.data.locationId, amount:a.traps.value}, g)
  };
  a.sliderChanged = function(b) {
    if("undefined" !== typeof a.traps && (a.traps.value = b || 0, "undefined" !== typeof a.activeItem)) {
      a.traps.allTime = m(a.activeItem.value, a.activeItem.time);
      b = a.activeItem.value;
      var e = a.activeItem.costs, c = {}, f;
      for(f in e) {
        c[f] = m(b, e[f])
      }
      a.traps.allCosts = c
    }
  }
};
window.trapperCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.deactivateTreasuryCtrl = function(a, c, b) {
  a.overlayConfig.k({inWindowPopupTitle:"Treasury.DeactivateTreasury.Title", inWindowPopupContentTemplate:"tpl/building/treasury/overlay/deactivateTreasury.html", isAWarning:!0});
  a.isKing = Travian.Player.data.isKing;
  a.isDuke = Travian.Player.isDuke();
  a.confirmDeactivation = function() {
    Travian.writeRequest("building/transformTreasury", {villageId:b.getActiveVillageId(), locationId:a.w.building.data.locationId}, function() {
      c.$broadcast("transformTreasury")
    })
  }
};
window.deactivateTreasuryCtrl.$inject = ["$scope", "$rootScope", "VillageService"];
window.treasuryCtrl = function(a, c, b) {
  function l() {
    f = c.i();
    var b = !1;
    0 <= q && f.unsubscribe(q);
    q = f.subscribe(function() {
      if(b) {
        return!1
      }
      b = !0;
      a.treasures = f.data.treasures;
      a.treasuresUsable = f.data.treasuresUsable;
      a.treasureResourceBonus = {4:f.data.treasureResourceBonus};
      a.homeProductionPerDay = -1;
      a.king = e.data.isKing;
      a.alliance = 0 < e.data.allianceId;
      a.treasuryFilledPerc = Math.min(100, 100 * (a.treasures / a.currentEffect.values[0]));
      Travian.request("village/getVictoryPointsAndInfluenceBonus", {villageId:f.data.villageId}, function(e) {
        a.homeProductionPerDay = e.homeProductionPerDay;
        a.currentTerritoryBonusBoundary = e.currentTerritoryBonusBoundary;
        m = e.currentTerritoryBonusFactor;
        a.currentLevelPercent = 0;
        a.territoryBonusLevel = -1;
        a.influenceLevels = angular.copy(Travian.Config.KingdomConfig.treasureInfluenceBonuses);
        for(var c = e = 0, f = !1;e < a.influenceLevels.length;e++) {
          if(!f) {
            var g = a.influenceLevels[e].treasures;
            a.treasures < g && (a.currentLevelPercent = 100 * ((a.treasures - c) / (g - c)), a.territoryBonusLevel = Math.min(e, a.building.data.lvl), f = !0);
            c = g
          }
          a.influenceLevels[e].factor = Math.round(100 * (a.influenceLevels[e].factor - 1))
        }
        -1 == a.territoryBonusLevel && (a.territoryBonusLevel = a.influenceLevels.length, a.currentLevelPercent = 100);
        a.currentTerritoryBonus = Math.round(100 * (m - 1));
        b = !1
      });
      g()
    })
  }
  function h() {
    a.lastActiveTreasury = !0;
    for(var b = 0, e = 0;e < p.data.length;e++) {
      if(p.data[e].hasActiveTreasury() && !n[p.data[e].data.villageId]) {
        if(0 < b) {
          a.lastActiveTreasury = !1;
          break
        }else {
          b++
        }
      }
    }
  }
  function g() {
    Travian.request("building/getTreasuryTransformations", {}, function(b) {
      n = {};
      for(var e = 0;e < b.length;e++) {
        n[b[e].villageId] = b[e].finished
      }
      a.transformationFinished = 0;
      n[f.data.villageId] && (a.transformationFinished = parseInt(n[f.data.villageId]));
      Travian.Player.data.isKing && h()
    })
  }
  var e = b.l(), m, f;
  a.tabConfig.tabs = ["Treasures"];
  a.tabConfig.bodyTemplatePrefix = "tpl/building/treasury/tabs/";
  a.tabConfig.routeNamedParam = "tabTreasury";
  var n = {}, q = -1;
  a.lastActiveTreasury = !1;
  if(Travian.Player.data.isKing) {
    var p = c.S();
    a.subscribe(p, h)
  }
  a.transformToHiddenTreasury = function() {
    a.openOverlay("deactivateTreasury")
  };
  l();
  a.$on("activeVillageChanged", l);
  a.$on("transformTreasury", g);
  a.$on("$destroy", function() {
    0 <= q && f.unsubscribe(q)
  })
};
window.treasuryCtrl.$inject = ["$scope", "VillageService", "SessionService"];
window.celebrationsStartCtrl = function(a, c, b, l, h, g) {
  function e(b) {
    var e = a.building.data.lvl;
    if(a.building.data.buildingType == Building.TYPE.TOWN_HALL) {
      if(b.type == Travian.Config.celebrationConfig.celebrationTypeSmall && 1 <= e) {
        return!1
      }
      if(b.type == Travian.Config.celebrationConfig.celebrationTypeBig) {
        return e < Travian.Config.celebrationConfig.firstLevelOfTownHallForBigCelebration ? "level" : Travian.Player.data.villages.length < Travian.Config.celebrationConfig.villageCountForBigCelebration ? "villages" : !1
      }
    }else {
      if(a.building.isBreweryOrTeaHouse() && b.type == Travian.Config.celebrationConfig.celebrationTypeBrewery) {
        return!1
      }
    }
    return!0
  }
  function m() {
    g.R("type" + u, function(b) {
      if(null != b) {
        var e = {villageId:r.data.villageId, locationId:a.locationId};
        a.subscribe(a.building, function() {
          0 < a.building.data.lvl && Travian.request("building/getCelebrationList", e, n)
        });
        a.celebrationsOptions = {cols:a.building.isBreweryOrTeaHouse() ? 1 : 2};
        p()
      }else {
        a.closeWindow("building")
      }
    })
  }
  function f() {
    r = c.i();
    s = CelebrationQueue.get(r.data.villageId);
    a.subscribe(r, p);
    a.subscribe(s, p);
    m();
    p()
  }
  function n(b) {
    var c = [], f;
    for(f in b) {
      b[f].disabled = e(b[f]), b[f].type == Travian.Config.celebrationConfig.celebrationTypeBig && (b[f].requiredBuildings = [{buildingType:Building.TYPE.TOWN_HALL, currentLevel:a.w.building.data.lvl, requiredLevel:Travian.Config.celebrationConfig.firstLevelOfTownHallForBigCelebration, valid:a.w.building.data.lvl >= Travian.Config.celebrationConfig.firstLevelOfTownHallForBigCelebration}], b[f].otherRequirements = [{langKey:"TownHall.Celebration.VillageRequirement", currentValue:Travian.Player.data.villages.length, 
      requiredValue:Travian.Config.celebrationConfig.villageCountForBigCelebration, valid:Travian.Player.data.villages.length >= Travian.Config.celebrationConfig.villageCountForBigCelebration}]), b[f].type == Travian.Config.celebrationConfig.celebrationTypeBrewery && (b[f].isTeaHouse = !1, a.w.building.isTeaHouse() && (b[f].isTeaHouse = !0)), c.push(b[f])
    }
    a.celebrations = c;
    p()
  }
  function q(b) {
    for(var e = 0;e < a.celebrations.length;e++) {
      var c = a.celebrations[e];
      if(c.type == b) {
        return c
      }
    }
  }
  function p() {
    a.celebrationQueueFull = !1;
    if("undefined" !== typeof a.celebrations) {
      for(var b = 0;b < a.celebrations.length;b++) {
        a.celebrations[b].queue = {count:0, timeFinishedNext:0, timeFinishedLast:0, durationPerItem:0}
      }
      b = [];
      if(a.building.data.buildingType == Building.TYPE.TOWN_HALL) {
        b = s.getQueue(a.building.data.buildingType);
        a.totalCelebrationCount = 0;
        a.currentCulturePointReward = 0;
        a.queuedCelebrationType = 0;
        if("undefined" !== typeof b) {
          for(var e = 0;e < b.length;e++) {
            for(var c = b[e].type, f = b[e], m = 0;m < a.celebrations.length;m++) {
              a.celebrations[m].type == c && (a.celebrations[m].queue.count++, 1 === a.celebrations[m].queue.count && (a.celebrations[m].queue.timeFinishedFirst = f.endTime), a.celebrations[m].queue.timeFinishedLast = f.endTime)
            }
            a.totalCelebrationCount++;
            b[e].endTime == r.data.celebrationEnd ? a.currentCulturePointReward = b[e].culturePoints : a.queuedCelebrationType = b[e].type
          }
        }
        a.celebrationQueueFull = a.totalCelebrationCount >= q(Travian.Config.celebrationConfig.celebrationTypeSmall).maxCount;
        a.currentCelebrationEnd = r.data.celebrationEnd
      }
      a.building.isBreweryOrTeaHouse() && v.data.brewCelebration > l.K() && (b = q(Travian.Config.celebrationConfig.celebrationTypeBrewery), b.queue = {count:1, timeFinishedNext:v.data.brewCelebration, timeFinishedLast:v.data.brewCelebration, timeFinishedFirst:v.data.brewCelebration, durationPerItem:b.duration}, a.celebrationQueueFull = b.queue.count >= b.maxCount)
    }
  }
  a.tabConfig.disableScrollingForTabs = ["main"];
  a.plusAccount = Travian.Player.hasPlusAccount();
  a.celebrationCfg = Travian.Config.celebrationConfig;
  a.buildingTypes = Building.TYPE;
  a.totalCelebrationCount = 0;
  var r, s, v = h.l(), u = a.building.data.buildingType;
  f();
  a.ongoingCelebration = !1;
  a.$on("activeVillageChanged", f);
  a.startCelebration = function(a) {
    Travian.writeRequest("building/startCelebration", {villageId:r.data.villageId, type:a.type})
  }
};
window.celebrationsStartCtrl.$inject = "$scope VillageService $filter ServertimeService SessionService BuildingService".split(" ");
window.unitsResearchCtrl = function(a, c) {
  function b() {
    g = c.i();
    e = g.data.villageId;
    Village.isWWVillage(g.data.type) && (a.isWorldWonder = !0);
    a.unitsResearch = Research.get(e);
    a.unitsInResearch = UnitResearchQueue.get(e);
    var b = BuildingQueue.get(e);
    a.subscribe(b, l);
    a.subscribe(a.unitsResearch, h);
    a.subscribe(a.unitsInResearch, h)
  }
  function l() {
    Cache.A(a.unitsResearch);
    Cache.A(a.unitsInResearch);
    a.unitsResearch = Research.get(e);
    a.unitsInResearch = UnitResearchQueue.get(e)
  }
  function h() {
    if("undefined" != typeof a.unitsResearch.data.units) {
      a.units = a.unitsResearch.data.units.filter(a.filterUnitAvailable);
      for(var b = a.unitsInResearch.data.buildingTypes[a.building.data.buildingType], e = 0;e < a.units.length;e++) {
        a.units[e].troopInfo = getUnitTribeAndUnitNumber(a.units[e].unitType), a.units[e].canUpgrade || (a.units[e].disabledIcon = "lock", a.units[e].maxLevel == a.units[e].unitLevel && (a.units[e].disabledIcon = "star")), delete a.units[e].queue
      }
      if("undefined" == typeof b) {
        a.researchesInProgress = 0
      }else {
        a.researchesInProgress = b.length;
        for(var c = 0;c < b.length;c++) {
          for(var g = b[c].unitType, e = 0;e < a.units.length;e++) {
            var h = a.units[e];
            h.unitType == g && ("undefined" == typeof h.queue && (h.queue = []), h.queue.push(b[c]))
          }
        }
      }
    }
  }
  var g, e;
  a.buildingTypes = Building.TYPE;
  a.FinishNowFeatureName = PremiumFeature.FEATURE_NAME_FINISH_NOW;
  a.isWorldWonder = !1;
  a.research = function(b) {
    Travian.writeRequest("building/researchUnit", {villageId:e, locationId:a.building.data.locationId, buildingType:a.building.data.buildingType, unitType:b.unitType})
  };
  a.produceFirst = function(b) {
    if(!b.queue) {
      return!1
    }
    Travian.writeRequest("building/produceFirst", {villageId:g.data.villageId, locationId:a.building.data.locationId, buildingType:a.building.data.buildingType, unitsType:b.unitType})
  };
  a.filterUnitAvailable = function(b) {
    var e = a.building.data.buildingType;
    b.troopData = Travian.Config.troopConfig[b.unitType];
    if(e == Building.TYPE.ACADEMY) {
      if(-2 == b.unitLevel) {
        return!0
      }
    }else {
      if(e == Building.TYPE.BLACKSMITH && -2 != b.unitLevel && 0 != b.maxLevel) {
        return!0
      }
    }
    return!1
  };
  a.enoughResources = function(a) {
    if("undefined" !== typeof g && "undefined" !== typeof a) {
      var b = g.getResources(), e;
      for(e in a.costs) {
        if(0 < a.costs[e] && b[e] < a.costs[e]) {
          return!1
        }
      }
      return!0
    }
    return!1
  };
  b();
  a.$on("activeVillageChanged", b);
  a[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function(a) {
    return{villageId:g.data.villageId, buildingType:a, delayForNextRequest:2E3}
  }
};
window.unitsResearchCtrl.$inject = ["$scope", "VillageService"];
window.unitsTrainCtrl = function(a, c, b, l) {
  function h() {
    q = c.i();
    p = nrToUnitId(Troops.TYPE_SETTLER, q.data.tribeId);
    r = nrToUnitId(Troops.TYPE_LEADER, q.data.tribeId)
  }
  function g(a, b) {
    var e = Infinity;
    $.each(a.costs, function(a, b) {
      if(0 < b) {
        var c = Math.floor(t[a] / b);
        c < e && (e = c)
      }
    });
    var e = e + parseInt(a.amount), c = unitIdToNr(b);
    if(c == Troops.TYPE_SETTLER || c == Troops.TYPE_LEADER) {
      var f = 0, m = q.data.availableControlPoints - q.data.usedControlPoints;
      c == Troops.TYPE_SETTLER ? f = m : c == Troops.TYPE_LEADER && (f = Math.floor(m / 3));
      f < e && (e = f);
      0 >= f && (a.disabled || (a.disabled = !0, a.disabledIcon = "lock"), requestAngularApply())
    }
    l.l().isOnMap() || (e = Math.min(3, e));
    return Math.max(0, e)
  }
  function e() {
    for(var b = 0;b < a.units.length;b++) {
      delete a.units[b].queue
    }
    for(var e in s) {
      for(var c = s[e], b = 0;b < a.units.length;b++) {
        var f = a.units[b];
        if(f.unitType == c.unitType) {
          f.queue = c;
          f.queue.key = e;
          a.units.splice(b, 1);
          a.units.splice(e, 0, f);
          break
        }
      }
    }
  }
  function m() {
    if(a.units && a.unitsResearch && a.unitsResearch.filled) {
      for(var b = 0;b < a.units.length;b++) {
        a.units[b].unitLevel = a.unitsResearch.getUnitLevel(a.units[b].unitType), a.units[b].disabled && 0 <= a.units[b].unitLevel && delete a.units[b].disabled
      }
    }
  }
  function f() {
    a.units = [];
    null != z && z();
    var b = UnitQueue.get(q.data.villageId);
    z = a.subscribe(b, function() {
      s = b.data.buildingTypes[a.building.data.buildingType];
      e();
      var c = !1;
      "undefined" != typeof s && 0 < s.length && (c = !0);
      a.$parent.trainingInProgress = c
    });
    Travian.request("building/getRecruitList", {villageId:q.data.villageId, locationId:a.building.data.locationId}, function(b) {
      $.each(["buildable", "notResearched"], function(e, c) {
        for(var f in b[c]) {
          b[c][f].amount = 0, b[c][f].existing = 0, b[c][f].time = b[c][f].time, b[c][f].unitType = f, b[c][f].troopInfo = getUnitTribeAndUnitNumber(f), b[c][f].troopData = Travian.Config.troopConfig[f], "notResearched" === c && (b[c][f].disabled = !0, b[c][f].disabledIcon = "academy"), a.units.push(b[c][f])
        }
      });
      e();
      m();
      a.computeAvailableResources(a.units);
      var f = c.Wb();
      a.subscribe(f, function() {
        $.each(f.data.units, function(b, e) {
          var c = nrToUnitId(b, q.data.tribeId);
          for(b = 0;b < a.units.length;b++) {
            if(a.units[b].unitType == c) {
              a.units[b].existing = parseInt(e);
              break
            }
          }
        })
      })
    })
  }
  function n() {
    b.R("type22", function(b) {
      null != b && (a.academyLocationId = b.data.locationId)
    });
    q = c.i();
    a.unitsResearch = Research.get(q.data.villageId);
    a.subscribe(a.unitsResearch, m)
  }
  var q, p, r, s = {}, v = a.building;
  a.buildingTypes = Building.TYPE;
  a.units = [];
  a.activeItem = {};
  a.allValue = 0;
  a.allTime = 0;
  a.allCosts = 0;
  h();
  f();
  a.$watch("building", function(b) {
    v !== b && (v = b, h(), f(), u = q.getResources(), a.computeAvailableResources())
  });
  a.sliderChanged = function(b) {
    if("undefined" === typeof a.activeItem) {
      return!1
    }
    a.allValue = b;
    a.allTime = b * a.activeItem.time;
    var e = a.activeItem.costs, c = {}, f;
    for(f in e) {
      c[f] = b * e[f]
    }
    a.allCosts = c;
    a.$$phase || a.$digest()
  };
  a.academyLocationId = null;
  a.canBuildTroops = !1;
  var u = q.getResources();
  a.$on("resourcesChanged", function() {
    u = q.getResources();
    a.computeAvailableResources()
  });
  a.$watch("activeItem", function() {
    a.$broadcast("setSliderTo", 1);
    a.sliderChanged(1)
  });
  var t = {};
  $.each(u, function(a, b) {
    t[a] = b
  });
  a.computeAvailableResources = function(b) {
    var e = {1:0, 2:0, 3:0, 4:0}, c = !1;
    a.canBuildTroops = !0;
    for(var f = 0;f < a.units.length;f++) {
      var m = a.units[f];
      0 < m.amount ? ($.each(m.costs, function(a, b) {
        0 < m.amount && (c = !0);
        e[a] += m.amount * b
      }), unitIdToNr(f)) : m.amount = 0
    }
    $.each(e, function(a, b) {
      t[a] = u[a] - b
    });
    c && 0 != a.building.data.lvl && (a.canBuildTroops = q.hasEnoughResources(e));
    for(f = 0;f < a.units.length;f++) {
      m = a.units[f], m != b && (a.units[f].maxAvailable = g(m, m.unitType))
    }
  };
  Hero.get(l.getPlayerId());
  var z = null;
  a.startTraining = function(b) {
    if(!a.canBuildTroops || !b) {
      return!1
    }
    "undefined" != typeof a.units.buildable && "undefined" != typeof a.units.buildable[r] && "undefined" != typeof a.units.buildable[p] && 0 < a.units.buildable[r].amount && 0 < a.units.buildable[p].amount && (a.showSettlerLeaderError = !0);
    if(!a.showSettlerLeaderError) {
      var e = {};
      e[b.unitType] = a.allValue;
      Travian.writeRequest("building/recruitUnits", {villageId:q.data.villageId, locationId:a.building.data.locationId, buildingType:a.building.data.buildingType, units:e})
    }
  };
  a.produceFirst = function(b) {
    if(!b.queue) {
      return!1
    }
    Travian.writeRequest("building/produceFirst", {villageId:q.data.villageId, locationId:a.building.data.locationId, buildingType:a.building.data.buildingType, unitsType:b.unitType})
  };
  n();
  a.$on("activeVillageChanged", n)
};
window.unitsTrainCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService"];
window.worldWonderCtrl = function(a, c, b, l) {
  function h(a) {
    var b = a.data.playerId;
    "undefined" !== typeof s.resources[b] && (s.resources[b].data.playerName = a.getField("name"));
    "undefined" !== typeof s.troops[b] && (s.troops[b].playerName = a.getField("name"));
    e()
  }
  function g() {
    var b = p.u(), c = [];
    s.troops = {};
    b.forEach(function(a) {
      var b = a.getField("playerId"), e = -1;
      c.forEach(function(a, c) {
        a.playerId == b && (e = c)
      });
      if(0 > e) {
        f = {playerId:b, tribeId:a.getField("tribeId"), playerName:"", units:{}, unitSum:0}, angular.copy(a.data.units, f.units), c.push(f)
      }else {
        for(var f = c[e], m = 1;11 >= m;m++) {
          f.units[m] = parseInt(f.units[m] || 0) + parseInt(a.data.units[m] || 0)
        }
      }
    });
    c.forEach(function(b) {
      var e = b.playerId, c = Cache.get(Player, e);
      b.playerName = c.getField("name");
      for(var f = 1;11 >= f;f++) {
        b.unitSum += parseInt(b.units[f] || 0)
      }
      s.troops[b.playerId] = b;
      "" == b.playerName && "undefined" === typeof r[e] && (r[e] = c, a.subscribe(c, h))
    });
    e()
  }
  function e() {
    a.contributors.resources = [];
    for(var b in s.resources) {
      a.contributors.resources.push(s.resources[b])
    }
    a.contributors.resources.sort(function(a, b) {
      return a.data.resources.sum > b.data.resources.sum ? -1 : a.data.resources.sum < b.data.resources.sum ? 1 : 0
    });
    a.contributors.troops = [];
    var e = [];
    for(b in s.troops) {
      e.push(s.troops[b])
    }
    e.sort(function(a, b) {
      return a.unitSum > b.unitSum ? -1 : a.unitSum < b.unitSum ? 1 : 0
    });
    for(b = 0;3 > b && "undefined" !== typeof e[b];b++) {
      a.contributors.troops.push(e[b])
    }
  }
  function m() {
    var b = c.getActiveVillageId();
    null !== p && p.destroy();
    p = l.B([b], Troops.COLLECTION_STATIONARY, g, a)
  }
  var f = c.getActiveVillageId(), n = b.za(f, Building.TYPE.WONDER_OF_WORLD), q = WorldWonderResources.getCollection(f), p = null, r = {};
  a.worldWonder = {rank:0, currentLevel:n.getField("lvl"), maxLevel:Travian.Config.endWorldWithWorldWonderLevel, bonus:0, Ch:function(a) {
    this.rank = parseInt(a)
  }, sh:function(a) {
    this.bonus = 100 * a
  }, wh:function(a) {
    this.currentLevel = parseInt(a)
  }, Yg:function() {
    Travian.request("building/getWorldWonderRankByVillageId", {villageId:f}, function(b) {
      a.worldWonder.Ch(b.rank);
      a.worldWonder.sh(b.bonus)
    })
  }};
  a.contributors = {resources:[], troops:[]};
  var s = {resources:{}, troops:{}};
  m();
  a.$on("activeVillageChanged", m);
  a.$on("$destroy", a.cleanupSubscriptions);
  a.subscribe(n, function() {
    a.worldWonder.wh(n.getField("lvl"));
    a.worldWonder.Yg()
  });
  a.subscribe(q, function() {
    var b = q.data;
    s.resources = {};
    for(var c = 0;c < b.length;c++) {
      var f = b[c].data.playerId, m = new Resources(b[c].data.resources);
      b[c].data.resources.sum = m.getSum();
      m = new Resources(b[c].data.resourcesToday);
      b[c].data.resourcesToday.sum = m.getSum();
      m = Cache.get(Player, f);
      b[c].data.playerName = m.getField("name");
      s.resources[f] = b[c];
      "" === b[c].data.playerName && "undefined" === typeof r[f] && (r[f] = m, a.subscribe(m, h))
    }
    e()
  })
};
window.worldWonderCtrl.$inject = ["$scope", "VillageService", "BuildingService", "TroopsService"];
window.chatBarCtrl = function(a, c, b) {
  function l() {
    a.chat = c.getViewModel();
    a.chatInit = !0
  }
  a.chatInit = !1;
  a.chatMenuOpen = !1;
  a.toggleMenu = function() {
    a.chatMenuOpen = !a.chatMenuOpen;
    a.chatMenuOpen && a.$broadcast("openedChatMenu");
    a.$broadcast("checkDynTabs")
  };
  a.moreDropdownUnread = 0;
  a.isUnreadMessagesHidden = function(b) {
    a.moreDropdownUnread = 0;
    if(b && 0 < b.length) {
      for(var c = 0;c < b.length;c++) {
        b[c].data.chatInbox && (a.moreDropdownUnread += b[c].data.chatInbox.data.unread)
      }
    }
    return 0 !== a.moreDropdownUnread
  };
  a.chat = {};
  a.chat = c.getViewModel();
  a.chat.unreadMessages = 0;
  a.openChat = function(b, g) {
    c.Ca(b, g, a.activeTab == b);
    a.$root.$broadcast("setActiveChatRoom", b);
    a.$broadcast("checkDynTabs");
    requestAngularApply()
  };
  a.$on("chatConnected", l);
  b.we() && l();
  a.$on("setActiveChatRoom", function(b, c) {
    a.activeTab = c
  })
};
window.chatBarCtrl.$inject = ["$scope", "ChatService", "SocketService"];
window.chatMenuCtrl = function(a, c, b, l, h, g) {
  function e() {
    if(null !== D) {
      for(var b = 0;b < a.menuItems.length;b++) {
        a.menuItems[b].chatRoom.resetData()
      }
      for(b = 0;b < D.data.length;b++) {
        var e = D.data[b], c = m(e.data.roomId);
        c && (c.chatRoom.set(e.data), c.init || (e = c.chatRoom.data.roomId, l.cg(e), c.chatLines = l.Wa(e), c.init = !0, c.chatLines.subscribe(n), ChatCache.A("Collection:ChatRoomUser:" + e, !0)))
      }
    }
  }
  function m(b) {
    for(var e = 0;e < a.menuItems.length;e++) {
      if(a.menuItems[e].roomId === "" + b) {
        return a.menuItems[e]
      }
    }
    return null
  }
  function f(b, e) {
    var c = a.menuItems[b];
    if(c.chatLines) {
      ChatCache.A(c.chatLines, !0);
      for(var f = 0;f < c.chatLines.data.length;f++) {
        ChatCache.A(c.chatLines.data[f], !0)
      }
    }
    c.chatLines = null;
    c.init = !1;
    c.roomId = e;
    c.chatRoom = new ChatRoom(e)
  }
  function n(b) {
    var e = null;
    if(0 < b.data.length) {
      for(var c = b.data[0].data.roomId, f = m(c), e = f.chatRoom, g = 0, h = 0, n = b.data.length;h < n;h++) {
        b.data[h].data.timestamp > e.data.lastRead && (!a.chatMenuOpen || u != c) && (g++, -1 == f.indexOfFirstUnreadLine && (f.indexOfFirstUnreadLine = h))
      }
      a.chatMenuOpen && u == c ? l.Ba(c) : (a.chat.unreadMessages -= f.unreadLines, a.chat.unreadMessages += g, f.unreadLines = g, f.visible || (a.secretSocietyDropdownUnread += g))
    }
  }
  function q() {
    function b(e, c) {
      a.menuItems.push(angular.extend({}, A, {roomId:ChatRoom.TYPE_SECRET_SOCIETY + "." + C.data[e].data.societyId, icon:"chat_secret_society_small_illu", iconDisabled:"chat_secret_society_inactive_small_illu", chatRoom:new ChatRoom(ChatRoom.TYPE_SECRET_SOCIETY + "." + C.data[e].data.societyId), model:C.data[e], visible:c}))
    }
    a.menuItems.splice(v, a.menuItems.length);
    a.secretSocietyCount = C.data.length;
    s = [];
    a.secretSocietyDropdownUnread = 0;
    if(3 > C.data.length) {
      for(var c = 0;c < C.data.length;c++) {
        b(c, !0)
      }
    }else {
      for(var f = !1, c = 0;c < C.data.length;c++) {
        var m = !1;
        u === ChatRoom.TYPE_SECRET_SOCIETY + "." + C.data[c].data.societyId && (f = m = !0);
        b(c, m);
        C.data[c].menuIndex = v + c;
        m || s.push(C.data[c])
      }
      f || (s.shift(), a.menuItems[v].visible = !0)
    }
    e()
  }
  function p() {
    0 < a.room.unreadLines && a.chatMenuOpen && (a.chat.unreadMessages -= a.room.unreadLines, a.room.unreadLines = 0, l.Ba(a.room.roomId), B = g(function() {
      a.room.indexOfFirstUnreadLine = -1
    }, 5E3))
  }
  a.ChatRoom = ChatRoom;
  a.menuItems = [];
  a.secretSocietyCount = 0;
  a.secretSocietyDropdownUnread = 0;
  var r = null, s = [], v = 4, u = ChatRoom.GLOBAL;
  h = localStorage.getItem("selectedChatRoomId");
  null !== h && (u = h);
  var t = Travian.Player.data.kingdomId, z = Travian.Player.data.allianceId, A = {roomId:null, icon:"", iconDisabled:"", chatRoom:null, chatLines:null, init:!1, unreadLines:0, indexOfFirstUnreadLine:-1, visible:!0, markMessagesAsRead:p};
  a.menuItems.push(angular.extend({}, A, {roomId:ChatRoom.GLOBAL, icon:"chat_group_small_illu", iconDisabled:"chat_group_inactive_small_illu", chatRoom:new ChatRoom(ChatRoom.GLOBAL)}));
  a.menuItems.push(angular.extend({}, A, {roomId:ChatRoom.BEGINNER, icon:"chat_beginners_small_illu", iconDisabled:"chat_beginners_inactive_small_illu", chatRoom:new ChatRoom(ChatRoom.BEGINNER)}));
  a.menuItems.push(angular.extend({}, A, {roomId:ChatRoom.TYPE_ALLIANCE + "." + Travian.Player.data.allianceId, icon:"chat_alliance_small_illu", iconDisabled:"chat_alliance_inactive_small_illu", chatRoom:new ChatRoom(ChatRoom.TYPE_ALLIANCE + "." + Travian.Player.data.allianceId)}));
  a.menuItems.push(angular.extend({}, A, {roomId:ChatRoom.TYPE_KINGDOM + "." + Travian.Player.data.kingdomId, icon:"chat_kingdom_small_illu", iconDisabled:"chat_kingdom_inactive_small_illu", chatRoom:new ChatRoom(ChatRoom.TYPE_KINGDOM + "." + Travian.Player.data.kingdomId)}));
  a.ChatUser = ChatUser;
  var C = null, D = null;
  a.getSecretSocietyOptions = function() {
    for(var a = [], b = 0;b < s.length;b++) {
      a.push({clickable:"selectSecretSociety(" + s[b].menuIndex + ")", text:s[b].data.name})
    }
    return a
  };
  a.selectSecretSociety = function(b) {
    u = a.menuItems[b].roomId;
    q();
    a.selectMenuTab(b)
  };
  var y = null, B = null;
  a.selectMenuTab = function(b) {
    a.room = a.menuItems[b];
    u = a.room.roomId;
    0 === a.room.chatRoom.data.joined && l.zg(a.room.roomId);
    localStorage.setItem("selectedChatRoomId", u);
    y && g.cancel(y);
    B && g.cancel(B);
    y = g(function() {
      p();
      y = null
    }, 100)
  };
  a.getRoomOptions = function() {
    var a = [];
    a.push({clickable:"leaveChat()", text:Travian.translate("Chat.LeaveChat")});
    return a
  };
  a.joinChat = function() {
    l.Vg(a.room.chatRoom.data.roomId)
  };
  a.leaveChat = function() {
    ChatCache.A(a.room.chatLines, !0);
    for(var b = 0;b < a.room.chatLines.data.length;b++) {
      ChatCache.A(a.room.chatLines.data[b], !0)
    }
    l.Ae(a.room.chatRoom.data.roomId);
    a.room.chatLines = null;
    a.room.init = !1
  };
  (function() {
    C = Society.getCollection();
    C.subscribe(q);
    D = ChatRoom.getCollection();
    D.subscribe(e);
    a.$on("openedChatMenu", function() {
      for(var b = !1, e = 0;e < a.menuItems.length;e++) {
        if(a.menuItems[e].roomId === u) {
          a.selectMenuTab(e);
          b = !0;
          break
        }
      }
      b || a.selectMenuTab(0)
    });
    r = b.oe();
    r.on("onlinePlayers", function(a) {
      m(a.roomId).chatRoom.data.members = a.online
    });
    var g = c.l();
    g.subscribe(function() {
      a.isBannedFromMessaging = g.data.isBannedFromMessaging;
      g.data.allianceId !== z && (f(2, ChatRoom.TYPE_ALLIANCE + "." + g.data.allianceId), z = g.data.allianceId);
      g.data.kingdomId !== t && (f(3, ChatRoom.TYPE_KINGDOM + "." + g.data.kingdomId), t = g.data.kingdomId)
    })
  })()
};
window.chatMenuCtrl.$inject = "$scope SessionService SocketService ChatService ServertimeService $timeout".split(" ");
window.chatRoomHeaderCtrl = function(a, c, b) {
  a.ChatUser = ChatUser;
  a.Player = Player;
  var l = {};
  a.isPrivateChat = !0;
  "undefined" != typeof a.w && (a.chatInfo = a.getParam("chat", !0, !0));
  l = a.chatInfo.data;
  a.otherPlayerRole = Player.KINGDOM_ROLE_GOVERNOR;
  l.chatUser.data.kingdomRole == Player.KINGDOM_ROLE_KING && (a.otherPlayerRole = Player.KINGDOM_ROLE_KING);
  l.chatUser.data.kingdomRole == Player.KINGDOM_ROLE_DUKE && (a.otherPlayerRole = Player.KINGDOM_ROLE_DUKE);
  a.getPrivateChatRoomOptions = function(a, b) {
    var e = [];
    e.push({clickable:"reportConversation('" + b + "')", text:Travian.translate("Button.Chat.Report")});
    e.push({clickable:"openWindow('profile', {'playerId': " + a + ", 'profileTab': 'playerProfile'})", text:Travian.translate("Chat.OpenProfile")});
    return e
  };
  a.reportConversation = function(a) {
    b.nd(a)
  };
  a.minimizeChat = function() {
    b.jc(l.roomId);
    "undefined" != typeof a.w && a.closeWindow(a.w.name)
  };
  a.unDockChatWindow = function() {
    var c = {chat:a.chatInfo, windowName:l.roomId};
    a.$root.$broadcast("setActiveChatRoom", l.roomId);
    a.openWindow("chat", null, c);
    b.jc(l.roomId)
  };
  a.dockChatWindow = function() {
    b.jc(l.roomId, !0);
    a.closeWindow(a.w.name)
  };
  a.closeChat = function() {
    b.Ae(l.roomId);
    "undefined" != typeof a.w && a.closeWindow(a.w.name);
    c.$broadcast("setActiveChatRoom", null)
  }
};
window.chatRoomHeaderCtrl.$inject = ["$scope", "$rootScope", "ChatService"];
window.privateChatWindowCtrl = function(a, c, b) {
  function l() {
    0 < f && (f = 0, c.Ba(g), a.room.unreadLines = 0, p = b(function() {
      a.room.indexOfFirstUnreadLine = -1
    }, 5E3))
  }
  var h = {};
  "undefined" != typeof a.w ? (h = a.getParam("chat", !0, !0).data, a.w.chat = {}, a.w.windowName = h.roomViewName, a.w.isActive = !0) : h = a.chatInfo.data;
  var g = h.roomId, e = !1, m = null;
  a.roomId = g;
  var h = c.vb(g), f = 0, n = 0;
  h.data.chatInbox && (f = h.data.chatInbox.data.unread, n = h.data.chatInbox.data.lastOwnRead);
  var q = b(l, 100), p = null;
  a.room = {roomId:g, chatRoom:null, chatLines:c.Wa(g), unreadLines:f, indexOfFirstUnreadLine:-1, markMessagesAsRead:l};
  m = a.room.chatLines.subscribe(function() {
    if(e) {
      c.Ba(g)
    }else {
      e = !0;
      for(var b = a.room.chatLines, f = 0, m = b.data.length;f < m;f++) {
        b.data[f].data.timestamp > n && -1 == a.room.indexOfFirstUnreadLine && (a.room.indexOfFirstUnreadLine = f)
      }
    }
  });
  a.$on("setActiveChatRoom", function(b, e) {
    "undefined" != typeof a.w && (a.w.isActive = e == a.roomId)
  });
  a.$on("$destroy", function() {
    null !== m && a.room.chatLines.unsubscribe(m);
    q && b.cancel(q);
    p && b.cancel(p)
  })
};
window.privateChatWindowCtrl.$inject = ["$scope", "ChatService", "$timeout"];
window.reportConversationCtrl = function(a, c, b) {
  a.w.windowName = "ReportConversation.WindowName";
  var l = a.getParam("roomId");
  a.PlayerPunishment = PlayerPunishment;
  a.reportPlayer = !1;
  a.form = {reason:PlayerPunishment.STRIKE_REASON_SPAM};
  l !== ChatRoom.GLOBAL && l !== ChatRoom.BEGINNER || !Travian.Config.features.chatAutoBan || (a.reportPlayer = !0, a.w.windowName = "ReportPlayer.WindowName");
  a.submitReport = function() {
    a.reportPlayer ? b.nh(l, a.getParam("playerId"), a.form.reason, function(b) {
      "undefined" != typeof b.errors ? a.handleError(b) : c.closeWindow("reportConversation")
    }) : b.mh(l, a.comment)
  }
};
window.reportConversationCtrl.$inject = ["$scope", "$rootScope", "ChatService"];
window.cheatSheetCtrl = function(a) {
  a.w.windowName = "CheatSheet";
  a.tabConfig.tabs = ["Colors", "Buttons", "Modules", "Styles", "Icons"];
  a.tabConfig.bodyTemplatePrefix = "tpl/cheatSheet/tabs/";
  Travian.txt.CheatSheet = "Cheat sheet";
  Travian.txt["Tab.Colors"] = "Colors";
  Travian.txt["Tab.Buttons"] = "Buttons";
  Travian.txt["Tab.Modules"] = "Modules";
  Travian.txt["Tab.Styles"] = "Styles";
  Travian.txt["Tab.Icons"] = "Icons";
  Travian.txt["CheatSheet.TextButtons"] = "Text Buttons";
  Travian.txt["CheatSheet.HudButtons"] = "HUD Buttons";
  Travian.txt["CheatSheet.Tables"] = "Tables";
  Travian.txt["CheatSheet.WindowOverlay"] = "Window overlay";
  Travian.txt["CheatSheet.ContentBoxes"] = "Content boxes";
  Travian.txt["CheatSheet.FormElements"] = "Form elements";
  Travian.txt["CheatSheet.ChooseEntry"] = "Choose entry";
  Travian.txt["CheatSheet.CantChooseEntry"] = "Can't Choose entry";
  Travian.txt["CheatSheet.WideHeader"] = "This is a very wide header";
  Travian.txt["CheatSheet.NarrowHeader"] = "Narrow";
  Travian.txt["CheatSheet.DesignElements"] = "Design elements";
  Travian.txt["CheatSheet.UsabilityElements"] = "Usability elements";
  Travian.txt["CheatSheet.Clickables"] = "Clickables";
  Travian.txt["CheatSheet.Header"] = "Header";
  Travian.txt["CheatSheet.ContentBox"] = "Content box";
  Travian.txt["CheatSheet.Spacing"] = "Spacing";
  Travian.txt["CheatSheet.Layout"] = "Layout";
  Travian.txt["CheatSheet.Arrows"] = "Arrows";
  a.colorOverview = [];
  a.colors = {};
  var c = [];
  Travian.request("cheatSheet/getColorTable", null, function(b) {
    var g = 0;
    c = b.data.split("\n");
    for(b = 0;b < c.length;b++) {
      var e = c[b], m = e.match(/\$(.*): (#.*)/);
      ("" == e || "\r" == e || "\n" == e || "\r\n" == e) && 0 < a.colorOverview.length ? g++ : null != m && ("undefined" == typeof a.colorOverview[g] && (a.colorOverview[g] = []), a.colorOverview[g].push({name:m[1], hex:m[2]}), a.colors[m[1]] = m[2])
    }
  });
  a.dropdown = {placeholder:"CheatSheet.ChooseEntry", selected:null, options:{0:"first entry", 1:"second entry", 2:"third entry"}};
  a.dropdownDisabled = {placeholder:"CheatSheet.CantChooseEntry", selected:null, disabled:!0, options:{0:"first entry", 1:"second entry", 2:"third entry"}};
  a.dropdownWideHeader = {placeholder:"CheatSheet.WideHeader", selected:null, lazyRendering:!1, resize:!0, options:{0:"first entry", 1:"second entry", 2:"third entry"}};
  a.dropdownNarrowHeader = {placeholder:"CheatSheet.NarrowHeader", selected:null, lazyRendering:!1, resize:!0, options:{0:"first entry", 1:"second entry", 2:"third entry"}};
  a.sliderData1 = {value:0};
  a.sliderData2 = {value:200};
  a.sliderData3 = {value:0};
  a.sliderData4 = {value:200};
  for(var b = [], l = 0;17 > b.push(l++);) {
  }
  a.itemsPerPage = 5;
  a.currentPage = 1;
  a.startPosition = 5;
  a.numberOfItems = b.length;
  a.currentPage = 1;
  a.displayCurrentPage = function(c) {
    null == c && (c = 1);
    a.currentPage = c;
    c = a.itemsPerPage * (c - 1);
    var g = Math.min(c + a.itemsPerPage, b.length);
    a.rows = b.slice(c, g)
  };
  a.duration = 250;
  a.finishTime = a.currentServerTime + a.duration / 2;
  a.icons = {};
  Travian.request("cheatSheet/getSprites", null, function(b) {
    c = b.data.split("\n");
    for(b = 0;b < c.length;b++) {
      var g = c[b].match(/^\.(.*) \{ .* height\: (\d*)px\; width\: (\d*)px; \}/);
      null != g && -1 == g[1].indexOf("_illustration") && (-1 < g[1].indexOf("_illu") || -1 < g[1].indexOf("_flat")) && (a.icons[g[1]] = g[2] + "x" + g[3])
    }
  })
};
window.cheatSheetCtrl.$inject = ["$scope"];
window.cheatSheetOverlayCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"CheatSheet.OverlayExample", inWindowPopupContentTemplate:"tpl/cheatSheet/overlay/cheatSheetOverlay.html"});
  Travian.txt["CheatSheet.OverlayExample"] = "Overlay Example"
};
window.cheatSheetOverlayCtrl.$inject = ["$scope"];
window.cheatSheetOverlayCustomCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"CheatSheet.OverlayExample", inWindowPopupTemplate:"tpl/cheatSheet/overlay/cheatSheetOverlayCustom.html"});
  Travian.txt["CheatSheet.OverlayExample"] = "Overlay Example"
};
window.cheatSheetOverlayCustomCtrl.$inject = ["$scope"];
window.cheatSheetOverlayWarningCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"CheatSheet.WarningOverlayExample", inWindowPopupContentTemplate:"tpl/cheatSheet/overlay/cheatSheetOverlayWarning.html", isAWarning:!0});
  Travian.txt["CheatSheet.WarningOverlayExample"] = "Warning Overlay Example"
};
window.cheatSheetOverlayWarningCtrl.$inject = ["$scope"];
window.confirmGoldUsageCtrl = function(a) {
  a.w.windowName = "ConfirmGoldUsage.Title";
  a.PremiumFeature = PremiumFeature;
  a.featureName = a.getParam("feature");
  a.confirmationRequestId = a.getParam("crid");
  a.skipable = "true" === a.getParam("skipable");
  a.actionPrice = a.getParam("price");
  a.removeParam("feature", !0);
  a.removeParam("crid", !0);
  a.removeParam("skipable", !0);
  a.removeParam("price", !0);
  if(a.featureName) {
    Voucher.get(Travian.Player.data.playerId).data.hasVouchers[a.featureName] && (a.actionPrice = -1);
    if(!a.actionPrice) {
      switch(a.featureName) {
        case PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT:
          if(PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT)) {
            if(PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT)) {
              if(PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_THIRD_BUILD_MASTER_SLOT)) {
                a.closeWindow("confirmGoldUsage");
                return
              }
              a.actionPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price3
            }else {
              a.actionPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price2
            }
          }else {
            a.actionPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price
          }
          break;
        case PremiumFeature.FEATURE_NAME_TRADER_SLOT:
          if(PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST)) {
            if(PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_SECOND)) {
              a.closeWindow("confirmGoldUsage");
              return
            }
            a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price2
          }else {
            a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_SLOT].price
          }
          break;
        case PremiumFeature.FEATURE_NAME_NPC_TRADER:
          a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_NPC_TRADER].price;
          break;
        case PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE:
          a.actionPrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE].price;
          break;
        default:
          a.actionPrice = Travian.Config.PremiumFeatures[a.featureName].price
      }
    }
    a.featureClass = "NPCTrader" == a.featureName ? "premium_npcTrader" : "premium_" + a.featureName;
    a.confirm = function() {
      a.$root.$broadcast("confirmGoldUsage", a.confirmationRequestId);
      a.saveAndClose()
    };
    a.saveAndClose = function() {
      if(a.doNotShowAgain) {
        var c = Settings.get(Travian.Player.data.playerId);
        c.setPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_GOLD_USAGE_CONFIRMATION);
        c.setPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_PREMIUM_USAGE_CONFIRMATION);
        c.persist()
      }
      a.closeWindow("confirmGoldUsage")
    }
  }else {
    a.closeWindow("confirmGoldUsage")
  }
};
window.confirmGoldUsageCtrl.$inject = ["$scope"];
window.contextMenuCtrl = function(a, c, b, l, h, g, e, m) {
  function f() {
    Travian.Player.data.isKing && (D = GroupInvitation.getCollection("group", 3, Travian.Player.data.playerId), y = PlayerHatesKing.getCollection("king"))
  }
  function n() {
    "none" != a.contextStyle.display && (a.contextMenuClass = "", a.contextStyle = {display:"none"}, null !== A && 0 <= C && (A.unsubscribe(C), C = 0), null !== t && 0 <= z && (t.unsubscribe(z), z = 0), requestAngularApply())
  }
  function q(e, c, f, m) {
    if(l.Ib(b.getActiveVillageId(), Building.TYPE.RALLY_POINT)) {
      3 > arguments.length && (f = "sendTroops");
      4 > arguments.length && (m = "feature_sendTroops_medium_illu");
      var g = {x:c.x, y:c.y}, h = {};
      "movement_settle_medium_illu" == m && (g.type = Troops.MOVEMENT_TYPE_SETTLE, h.preselect = {}, h.preselect[Troops.TYPE_SETTLER] = 3);
      s(function() {
        a.openWindow("sendTroops", g, h)
      }, "ContextMenu.button." + f, e, m)
    }else {
      p("pos1", "feature_sendTroops_medium_illu", "ContextMenu.NoRallyPoint")
    }
  }
  function p(a, b, e) {
    null === e && (e = "ContextMenu.button.inactive");
    s(null, e, a, b + " disabled", {}, !0)
  }
  function r(m, g, r) {
    var u = c.l();
    a.menuItems = {};
    a.lastReport = r || null;
    a.oasis = null;
    t = a.villagePlayer = null;
    s(function() {
      var b = Alliance.get(Travian.Player.data.allianceId);
      null !== m.village && 100 <= m.playerId && (m.owner == Travian.Player.data.kingdomId || 0 != m.ownerAllianceId && m.ownerAllianceId == Travian.Player.data.allianceId || b.hasTreatyWith(m.ownerAllianceId, Alliance.BND));
      b = m.id;
      null != m.village && null != m.village.villageId && (b = m.village.villageId);
      a.openWindow("reports", {tab:"Search", villageId:b})
    }, "ContextMenu.button.reports", "pos4", "feature_report_medium_illu", {}, "lastReport == null");
    s(function() {
      a.openWindow("markerMenu", {cellId:m.id})
    }, "ContextMenu.button.marker", "pos3", "feature_marker_medium_illu");
    if(null !== m.village) {
      var A;
      A = 0 > m.village.villageId ? m.village.villageId : m.id;
      t = Village.get(A);
      a.selectedVillage = t;
      null !== t && 0 <= z && t.unsubscribe(z);
      z = t.subscribe(function() {
        t.data.belongsToKing != m.owner && (Cache.t(t, 10), t = Village.get(A));
        b.getActiveVillageId() != t.data.villageId ? (q("pos1", m), l.R("type17", function(b) {
          null !== b && 0 < t.data.villageId && 0 < b.data.lvl ? s(function() {
            a.openWindow("building", {location:b.data.locationId, tab:"Send", destId:m.id, destPlayerId:m.playerId})
          }, "ContextMenu.button.sendTraders", "pos2", "movement_trade_medium_illu") : p("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders")
        })) : (p("pos1", "feature_sendTroops_medium_illu", "ContextMenu.button.sendTroops"), p("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders"));
        u.data.playerId == t.data.playerId ? s(function() {
          h.m("villId", m.id);
          m.id != b.getActiveVillageId() ? b.ka(m.id) || !u.isOnMap() ? a.openPage("resources") : n() : a.openPage("resources")
        }, "ContextMenu.button.goToVillage", "pos0", "radialMenu_goToVillage_hover_layout") : (s(function() {
          a.openWindow("mapCellDetails", {cellId:m.id})
        }, "ContextMenu.button.details", "pos0", "radialMenu_cellDetails_layout"), 0 < t.data.playerId && (a.villagePlayer = Player.get(t.data.playerId), b.Zc(m.id, function(a) {
          s(null, "ContextMenu.button.addToFarmList", "pos6", "feature_farmlist_small_flat_black", {inFarmList:a}, "player.data.hasNoobProtection || villagePlayer.data.hasNoobProtection", "", "ContextMenu.button.farmList.noobProtection")
        })));
        if(u.data.isKing && u.data.playerId != t.data.playerId && t.data.belongsToKing == u.data.playerId && !t.hasActiveTreasury()) {
          var c = b.i();
          c.hasActiveTreasury() ? (t.getTributes(), s(function() {
            Travian.writeRequest("troops/fetchTributesForVillages", {villageId:c.data.villageId, destVillages:[t.data.villageId]})
          }, "ContextMenu.button.fetchTribute", "pos5", "movement_tribute_small_flat_black", {}, "!selectedVillage.data.canFetchTributes")) : p("pos5", "movement_tribute_small_flat_black", "Tributes.VillageNotGeneratingInfluence")
        }
        if(u.data.isKing && u.data.playerId != t.data.playerId && "undefined" != typeof m.influence) {
          var g = e.yg(t.data.playerId);
          if(null != g && g.kingdomId != u.data.playerId && 100 < t.data.playerId && t.data.playerId != g.kingdomId) {
            var g = 0, r;
            for(r in m.influence) {
              m.influence[r] > g && (g = m.influence[r])
            }
            if(m.influence[u.data.playerId] == g) {
              a.alreadyInvited = !1;
              null == D && f();
              for(r = 0;r < D.data.length;r++) {
                D.data[r].data.playerId == t.data.playerId && (a.alreadyInvited = !0)
              }
              s(function() {
                Travian.writeRequest("player/inviteToKingdom", {villageId:t.data.villageId}, function() {
                  t.callSubscribers()
                }, !0)
              }, "ContextMenu.button.inviteToKingdom", "pos7", "radialMenu_kingdomInvite_small_flat_black", {}, "!villagePlayer.data.active || alreadyInvited", "", "ContextMenu.button.inviteToKingdom.disabled")
            }
          }
        }
        if(u.data.isKing && u.data.playerId != t.data.playerId) {
          null == y && (y = PlayerHatesKing.getCollection("king"));
          g = null;
          for(r = 0;r < y.data.length;r++) {
            y.data[r].data.playerId == t.data.playerId && (g = y.data[r])
          }
          null != g && (0 < g.data.offerTime ? p("pos5", "feature_peace_small_flat_black", "ContextMenu.button.alreadyOfferedPeaceTreaty") : s(function() {
            Travian.writeRequest("player/offerPeaceTreaty", {playerId:t.data.playerId}, function() {
              t.callSubscribers()
            }, !0)
          }, "ContextMenu.button.offerPeaceTreaty", "pos5", "feature_peace_small_flat_black"))
        }
      })
    }else {
      null !== m.oasis ? (s(function() {
        a.openWindow("mapCellDetails", {cellId:m.id})
      }, "ContextMenu.button.details", "pos0", "radialMenu_cellDetails_layout"), q("pos1", m), b.Zc(m.id, function(a) {
        s(null, "ContextMenu.button.addToFarmList", "pos6", "feature_farmlist_small_flat_black", {inFarmList:a}, "player.data.hasNoobProtection", "", "ContextMenu.button.farmList.noobProtection")
      }), p("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders"), a.oasis = m) : (s(function() {
        a.openWindow("mapCellDetails", {cellId:m.id})
      }, "ContextMenu.button.details", "pos0", "radialMenu_cellDetails_layout"), 1 == g.data.isHabitable ? 3 <= b.Wb().data.units[Troops.TYPE_SETTLER] ? q("pos1", m, "foundVillage", "movement_settle_medium_illu") : p("pos1", "movement_settle_medium_illu", "ContextMenu.button.foundVillage") : p("pos1", "feature_sendTroops_medium_illu", "ContextMenu.button.sendTroops"), p("pos2", "movement_trade_medium_illu", "ContextMenu.button.sendTraders"))
    }
    v(m)
  }
  function s(b, e, f, m, g, h, l, n) {
    var p = c.l();
    null === b && (b = w());
    h || (h = "false");
    !0 === h && (h = "true");
    n || (n = e);
    if(p.isOnMap() || "pos1" == f || "pos0" == f) {
      a.menuItems[f] = {callback:b, translationKey:e, translationKeyDisabled:n, "class":f, iconClass:"cm-icon " + m, params:g, disabled:h, tooltipUrl:l, type:m}
    }
    "pos0" == f && (a.menuItems[f].hover = !0)
  }
  function v(b) {
    a.contextStyle = {top:b.Vb.top + b.j.height / 2 + "px", left:b.Vb.left + b.j.width / 2 + "px", display:"block"};
    doAngularApply();
    g(function() {
      a.contextMenuClass = "expanded"
    }, 10);
    g(w(), 500)
  }
  function u() {
    var a = $(".farmListRoundButton");
    0 !== a.length && (0 > a[0].getBoundingClientRect().left - 294 ? a.addClass("right") : a.removeClass("right"))
  }
  var t = null, z = -1, A = null, C = -1;
  a.display = "none";
  a.contextStyle = {display:"none"};
  a.$watch("page", n);
  a.$on("urlChanged", n);
  a.$on("contextMenuClose", n);
  var D = null, y = null;
  c.o(f);
  a.$on("contextMenuOpen", function(b, e, c) {
    "undefined" != typeof e && (A = MapDetails.get(e.id), a.cellId = e.id, a.mapCellData = e, C = A.subscribe(function() {
      r(a.mapCellData, A, c)
    }))
  });
  a.getTooltipPlacement = function(a) {
    switch(a) {
      case "pos0":
        return"after";
      case "pos1":
        return"above";
      case "pos2":
        return"after";
      case "pos3":
        return"below";
      case "pos4":
        return"before";
      case "pos5":
        return"after";
      case "pos6":
        return"before";
      default:
        return"below"
    }
  };
  m.$on("ContentMenu.overrideCallback", function(b, e) {
    var c = e[0], f = e[1];
    a.menuItems[c] && (a.menuItems[c].callback = f)
  });
  a.showAddToFarmList = !1;
  var B = null;
  a.openFarmListDialog = function(b) {
    c.l().data.hasNoobProtection || a.villagePlayer && a.villagePlayer.data.hasNoobProtection || (a.farmListTargetId = a.oasis ? a.oasis.id : t.data.villageId, b && !a.showAddToFarmList ? (u(), a.showAddToFarmList = !0, g(function() {
      a.$broadcast("addVillageToFarmList")
    }, 0)) : (b && a.$broadcast("addVillageToFarmList"), a.showAddToFarmList ? B && g.cancel(B) : (g(function() {
      a.showAddToFarmList = !0
    }, 500), u())))
  };
  a.closeFarmListDialog = function() {
    B = g(function() {
      a.showAddToFarmList = !1
    }, 500)
  };
  a.triggerPreselect = function() {
    a.$broadcast("farmListPreselect")
  };
  a.$on("farmListItemToggle", function(e, c) {
    b.Zc(c, function(b) {
      a.menuItems.pos6.params = {inFarmList:b}
    })
  })
};
window.contextMenuCtrl.$inject = "$scope SessionService VillageService BuildingService RoutingService $timeout MapService $rootScope".split(" ");
window.dummyCtrl = w();
window.dummyCtrl.$inject = ["$scope"];
window.allianceMemberListCtrl = function(a) {
  var c = Alliance.get(a.getParam("allianceId"));
  a.subscribe(c, function() {
    for(var b = 0;b < c.data.members.length;b++) {
      c.data.members[b].rank = b + 1
    }
    a.overlayConfig.k({inWindowPopupTitle:"", inWindowPopupTitleText:c.data.name, inWindowPopupContentTemplate:"tpl/worldEnded/memberListOverlay.html"})
  });
  a.itemsPerPage = 15;
  a.displayCurrentPage = function(b) {
    null == b && (b = 1);
    a.currentPage = b;
    if(0 < c.data.members.length) {
      a.numberOfItems = c.data.members.length;
      b = a.itemsPerPage * (b - 1);
      var l = Math.min(b + a.itemsPerPage, c.data.members.length);
      a.members = c.data.members.slice(b, l)
    }
  }
};
window.allianceMemberListCtrl.$inject = ["$scope"];
window.worldEndedCtrl = function(a) {
  function c(a, c) {
    return a.victoryPoints > c.victoryPoints ? -1 : a.victoryPoints < c.victoryPoints ? 1 : a.playerId - c.playerId
  }
  a.w.windowName = "WorldEnded.Title";
  a.tabConfig.tabs = ["WorldWonder", "AllianceRanking", "KingdomRanking", "PlayerRanking"];
  Travian.Config.features.prestige && a.tabConfig.tabs.push("Prestige");
  a.tabConfig.bodyTemplatePrefix = "tpl/worldEnded/tabs/";
  a.tabConfig.tabName = "tab";
  a.tabConfig.disableScrolling = !0;
  Travian.request("ranking/getRanking", {start:0, end:10, rankingType:"ranking_WorldWonder", rankingSubtype:""}, function(b) {
    a.worldWonders = b.results
  });
  Travian.request("ranking/getWorldEndStats", {}, function(b) {
    a.alliances = b.alliances;
    for(var l = 0;l < a.alliances.length;l++) {
      a.alliances[l].kings.sort(c)
    }
    a.playerRankings = [];
    a.playerRankings.push({type:"population", ranking:b.players.top3.population});
    a.playerRankings.push({type:"offPoints", ranking:b.players.top3.offPoints});
    a.playerRankings.push({type:"deffPoints", ranking:b.players.top3.deffPoints});
    a.playerRankings.push({type:"heroes", ranking:b.players.top3.heroes});
    a.ownRankings = b.players.own;
    a.kingdomRankings = [];
    a.kingdomRankings.push({type:"treasures", ranking:b.kingdoms.top3.treasures, icon:"unit_treasure_small_flat_black"});
    a.kingdomRankings.push({type:"population", ranking:b.kingdoms.top3.population, icon:"unit_population_small_flat_black"});
    a.kingdomRankings.push({type:"size", ranking:b.kingdoms.top3.size, icon:"unit_influence_small_flat_black"});
    a.ownKingdomRankings = b.kingdoms.own;
    Travian.Config.features.prestige && (b = b.prestige, a.defenderTooltipTitle = Travian.translate("WorldEndPrestige.Tooltip.DefenderTitle"), a.attackerTooltipTitle = Travian.translate("WorldEndPrestige.Tooltip.AttackerTitle"), a.populationTooltipTitle = Travian.translate("WorldEndPrestige.Tooltip.PopulationTitle"), a.allianceTooltipTitle = Travian.translate("WorldEndPrestige.Tooltip.AllianceTitle"), a.wwTooltipTitle = Travian.translate("WorldEndPrestige.Tooltip.wwTitle"), a.allianceTooltipNoAllianceText = 
    Travian.translate("WorldEndPrestige.Tooltip.noAlliance"), a.wwTooltipText = Travian.translate("WorldEndPrestige.Tooltip.wwTooltipText"), b.bonusPrestige = b.attackerPrestige + b.defenderPrestige + b.populationPrestige + b.wwPrestige + b.alliancePrestige, a.totalServerPrestige = b.totalServerPrestige = b.weeklyPrestige + b.bonusPrestige, a.serverName = b.serverName, a.prestige = b, a.hasAlliancePrestige = 0 != b.alliancePrestige)
  })
};
window.worldEndedCtrl.$inject = ["$scope"];
window.worldEndedSummaryCtrl = function(a) {
  Travian.request("ranking/getWorldEndSummary", {}, function(c) {
    a.endTime = c.endTime;
    a.winnerAllianceId = c.winnerAllianceId;
    null != a.$root && (a.$root.winnerAllianceTag = c.winnerAllianceTag);
    a.wwBuildName = "" != c.wwAllianceTag ? c.wwAllianceTag : c.wwPlayerName
  })
};
window.worldEndedSummaryCtrl.$inject = ["$scope"];
window.finishNowCtrl = function(a, c, b) {
  var l = null, l = a.finishNowVillageId ? c.pa(a.finishNowVillageId) : c.i();
  a.inBuilding = [];
  a.inDestruction = [];
  a.inResearch = [];
  a.inTraining = [];
  if(!a.finishNowBuildingType) {
    var h = BuildingQueue.get(l.data.villageId), g = b.na(l.data.villageId), e = g.subscribe(function() {
      a.buildingsByLocation = {};
      for(var b = 0;b < g.data.length;b++) {
        var e = g.data[b];
        a.buildingsByLocation[e.data.locationId] = e
      }
    }), m = h.subscribe(function() {
      a.inBuilding = [];
      a.inDestruction = [];
      a.inMasterBuilder = null;
      a.isWorldWonder = !1;
      a.hasInvalidBuilding = !1;
      Village.isWWVillage(l.data.type) && (a.isWorldWonder = !0);
      var b = Travian.Config.buildingConfig;
      if(!a.finishNowQueueType || a.finishNowQueueType == BuildingQueue.TYPE_VILLAGE) {
        for(var e = 0;e < h.data.queues[BuildingQueue.TYPE_VILLAGE].length;e++) {
          if("undefined" !== typeof h.data.queues[BuildingQueue.TYPE_VILLAGE][e]) {
            var c = h.data.queues[BuildingQueue.TYPE_VILLAGE][e].buildingType;
            b[c] && b[c].canFinishInstantly ? a.inBuilding.push(h.data.queues[BuildingQueue.TYPE_VILLAGE][e]) : a.hasInvalidBuilding = !0
          }
        }
      }
      if(!a.finishNowQueueType || a.finishNowQueueType == BuildingQueue.TYPE_RESOURCES) {
        for(e = 0;e < h.data.queues[BuildingQueue.TYPE_RESOURCES].length;e++) {
          "undefined" !== typeof h.data.queues[BuildingQueue.TYPE_RESOURCES][e] && a.inBuilding.push(h.data.queues[BuildingQueue.TYPE_RESOURCES][e])
        }
      }
      if(a.finishNowVillageId && 0 < h.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length && (e = h.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][0], Travian.Config.buildingConfig[e.buildingType] && Travian.Config.buildingConfig[e.buildingType].canFinishInstantly && (a.inMasterBuilder = {buildingType:e.buildingType}, a.buildingsByLocation && a.buildingsByLocation[e.locationId]))) {
        var c = a.buildingsByLocation[e.locationId], f = c.data.lvl, m = BuildingQueue.getQueueType(c);
        0 < h.data.queues[m].length && h.data.queues[m][0].locationId == e.locationId && f++;
        a.inMasterBuilder.level = f;
        m = !1;
        for(e = 0;e < c.queue.length;e++) {
          if(c.queue[e].queueType == BuildingQueue.TYPE_MASTER_BUILDER && c.queue[e].paid) {
            m = !0;
            break
          }
        }
        a.inMasterBuilder.enoughResources = m || l.hasEnoughResources(c.data.nextUpgradeCosts[f])
      }
      a.finishNowQueueType && a.finishNowQueueType != BuildingQueue.TYPE_DESTRUCTION || "undefined" === typeof h.data.queues[BuildingQueue.TYPE_DESTRUCTION][0] || (c = h.data.queues[BuildingQueue.TYPE_DESTRUCTION][0], b[c.buildingType] && b[c.buildingType].canFinishInstantly || 1 == c.isRubble ? a.inDestruction.push(c) : a.hasInvalidBuilding = !0)
    });
    a.$on("$destroy", function() {
      h.unsubscribe(m);
      g.unsubscribe(e)
    })
  }
  if(!a.finishNowQueueType) {
    var f = UnitResearchQueue.get(l.data.villageId), n = f.subscribe(function() {
      a.inResearch = [];
      a.inTraining = [];
      for(var b in f.data.buildingTypes) {
        if(!a.finishNowBuildingType || b == a.finishNowBuildingType) {
          for(var e = f.data.buildingTypes[b], c = 0;c < e.length && (-1 != e[c].pause || (0 == e[c].researchLevel ? a.inResearch.push(e[c]) : a.inTraining.push(e[c]), !a.finishNowBuildingType));c++) {
          }
        }
      }
    });
    a.$on("$destroy", function() {
      f.unsubscribe(n)
    })
  }
};
window.finishNowCtrl.$inject = ["$scope", "VillageService", "BuildingService"];
window.gameTimelineCtrl = function(a) {
  a.w.windowName = "GameTimeline.Header";
  a.tabConfig.disableScrolling = !0;
  a.selection = {step:0, hover:-1}
};
window.gameTimelineCtrl.$inject = ["$scope"];
window.gameRulesOverlayCtrl = function(a, c) {
  a.overlayConfig.k({inWindowPopupTitle:"HelpMenu.GameRules", inWindowPopupContentTemplate:"tpl/help/helpExternalContentOverlay.html"});
  a.link = c.trustAsResourceUrl("http://kingdoms.travian.com/" + getLocaleRegion(getLocale(Travian.Language)) + "/rules")
};
window.gameRulesOverlayCtrl.$inject = ["$scope", "$sce"];
window.imprintOverlayCtrl = function(a, c) {
  a.overlayConfig.k({inWindowPopupTitle:"HelpMenu.Imprint", inWindowPopupContentTemplate:"tpl/help/helpExternalContentOverlay.html"});
  var b = Settings.get(Travian.Player.data.playerId);
  a.link = c.trustAsResourceUrl("http://kingdoms.travian.com/" + getLocaleRegion(getLocale(b.data.lang)) + "/imprint")
};
window.imprintOverlayCtrl.$inject = ["$scope", "$sce"];
window.privacyOverlayCtrl = function(a, c) {
  a.overlayConfig.k({inWindowPopupTitle:"HelpMenu.Privacy", inWindowPopupContentTemplate:"tpl/help/helpExternalContentOverlay.html"});
  var b = Settings.get(Travian.Player.data.playerId);
  a.link = c.trustAsResourceUrl("http://agb.traviangames.com/privacy-" + getLocaleLanguage(getLocale(b.data.lang)) + ".pdf")
};
window.privacyOverlayCtrl.$inject = ["$scope", "$sce"];
window.termsAndConditionsOverlayCtrl = function(a, c) {
  a.overlayConfig.k({inWindowPopupTitle:"HelpMenu.AGB", inWindowPopupContentTemplate:"tpl/help/helpExternalContentOverlay.html"});
  var b = Settings.get(Travian.Player.data.playerId);
  a.link = c.trustAsResourceUrl("http://agb.traviangames.com/terms-" + getLocaleLanguage(getLocale(b.data.lang)) + ".pdf")
};
window.termsAndConditionsOverlayCtrl.$inject = ["$scope", "$sce"];
window.helpMenuCtrl = function(a, c, b) {
  function l(b) {
    b == IngameHelp.Building ? (a.imageTribeId = 0 < a.page.data.tribe ? a.page.data.tribe : Travian.Player.data.tribeId, a.buildingData = a.page.data) : b == IngameHelp.Unit && (a.troopData = a.page.data, a.troopTypes = a.subLevelNav[a.viewId.split("_")[0] + "_" + a.viewId.split("_")[1]].children, a.activeTroopType = a.viewId.split("_")[2], a.imageZoomed = !1);
    a.navigationLevel = b == IngameHelp.Index ? 0 : 1
  }
  function h(b) {
    for(var e = 1, c = 1;4 >= c;c++) {
      void 0 !== Travian.txt["InGameHelp." + b + ".Step" + c] && (e = c)
    }
    a.maxSteps = e
  }
  function g(b, c) {
    var f = e.getItemViewIdByItemIdAndCategory(b, c);
    a.subLevelNav = e.getById(f.split("_")[0]).children;
    a.pageId = f.split("_")[0];
    a.openHelp(f, IngameHelp.Unit)
  }
  a.w.windowName = "HelpMenu";
  a.tabConfig.tabs = ["Help"];
  a.tabConfig.disableScrollingForTabs = ["Help"];
  a.inHelpMenu = !0;
  a.isSitter = !0;
  c.o(function() {
    a.isSitter = c.L()
  });
  a.tribes = Player.TRIBE_NAME;
  a.resources = Resources.STRING;
  a.tribe = Player.TRIBE_NAME[Travian.Player.data.tribeId];
  a.page = {};
  var e = new IngameHelp;
  a.pageId = "index";
  a.viewId = "index";
  a.topLevelNav = e.getById(a.pageId);
  a.subLevelNav = null;
  a.page = null;
  a.maxSteps = 1;
  a.currentStep = 1;
  a.openHelpCenter = function() {
    window.open("/api/forwardToHelpcenter.php?sid=" + c.ac(), "_blank")
  };
  a.openForum = function() {
    window.open(Travian.translate("forumUrl"), "_blank")
  };
  a.showWiki = !1;
  var m = Travian.translate("wikiUrl");
  "!!wikiUrl!!" != m && (a.showWiki = !0);
  a.openWiki = function() {
    window.open(m, "_blank")
  };
  a.openWikiUrl = function() {
    var b = Travian.translate("InGameHelp." + a.viewId + ".WikiLink");
    window.open(b, "_blank")
  };
  a.nextStep = function() {
    var b = a.currentStep + 1;
    b > a.maxSteps && (b = 1);
    a.currentStep = b
  };
  a.prevStep = function() {
    var b = a.currentStep - 1;
    0 == b && (b = a.maxSteps);
    a.currentStep = b
  };
  a.openView = function(c) {
    var f = e.getById(c);
    if(f.type == IngameHelp.View || f.type == IngameHelp.Building || f.type == IngameHelp.Unit) {
      a.hasWikiUrl = Travian.txt["InGameHelp." + c + ".WikiLink"] ? !0 : !1, a.viewId = c, h(c), a.pageId = c.split("_")[0], a.page = e.getById(c), a.subLevelNav = e.getParentForId(c, !0).children, b.m("pageId", a.viewId), l(f.type), requestAngularApply()
    }
  };
  a.openHelp = function(c, f) {
    a.currentStep = 1;
    a.maxSteps = 1;
    a.page = {};
    a.hasWikiUrl = Travian.txt["InGameHelp." + c + ".WikiLink"] ? !0 : !1;
    f == IngameHelp.Index && (a.pageId = IngameHelp.Index, a.viewId = IngameHelp.Index, b.m("pageId", a.viewId), a.randomTopic = e.getRandomTopic());
    f == IngameHelp.Topic && (a.pageId = c, a.subLevelNav = e.getById(c).children);
    if(f == IngameHelp.View || f == IngameHelp.Building || f == IngameHelp.Unit) {
      a.viewId = c, a.page = e.getById(c), b.m("pageId", a.viewId), f == IngameHelp.View && h(c)
    }
    l(f);
    requestAngularApply()
  };
  a.goBackToTopLevelNav = function() {
    b.O("pageId", !1);
    a.openHelp(null, IngameHelp.Index);
    a.currentStep = 1;
    a.maxSteps = 1
  };
  a.goToBuilding = function(b) {
    b = e.getBuildingViewIdByType(b);
    a.subLevelNav = e.getById(b.split("_")[0]).children;
    a.pageId = b.split("_")[0];
    a.openHelp(b, IngameHelp.Building)
  };
  a.changeStep = function(b) {
    a.maxSteps >= b && (a.currentStep = b)
  };
  a.changeUnit = function(b) {
    var e = a.viewId.split("_");
    e[2] = b;
    a.currentStep = a.openView(e.join("_"))
  };
  a.$on("$destroy", function() {
    b.O("pageId", !1)
  });
  var f = b.getParam("pageId");
  if(f == IngameHelp.Index || !f) {
    a.randomTopic = e.getRandomTopic(), l(IngameHelp.Index)
  }else {
    if(f) {
      var n = f.split("_");
      a.pageId = n[0];
      var q = a.pageId.toLowerCase();
      if(-1 !== ["troops", "buildings"].indexOf(q) && 2 == n.length) {
        "buildings" == q ? a.goToBuilding(n[1]) : g(q, n[1]);
        return
      }
      n = e.getById(f);
      if(n.type == IngameHelp.View || n.type == IngameHelp.Building || n.type == IngameHelp.Unit) {
        a.viewId = f, h(f), a.page = e.getById(f), a.subLevelNav = e.getParentForId(f, !0).children, a.hasWikiUrl = Travian.txt["InGameHelp." + f + ".WikiLink"] ? !0 : !1, l(n.type)
      }
    }
  }
  a.$on("urlChanged", function(b, e) {
    e.hasOwnProperty("pageId") && a.openView(e.pageId)
  });
  requestAngularApply()
};
window.helpMenuCtrl.$inject = ["$scope", "SessionService", "RoutingService"];
window.heroCtrl = function(a, c, b) {
  a.w.contentHeaderTemplate = "tpl/hero/partials/contentHeader.html";
  a.tabConfig.tabs = ["Inventory", "Attributes", "Auctions", "Adventures"];
  Travian.Config.features.cardGame && a.tabConfig.tabs.push("CardGame");
  a.tabConfig.bodyTemplatePrefix = "tpl/hero/tabs/";
  a.tabConfig.routeNamedParam = "herotab";
  a.tabConfig.disableScrollingForTabs = ["Inventory", "Auctions", "Attributes", "CardGame"];
  a.hero = null;
  a.w.hero = a.hero;
  a.tribeId = c.l().data.tribeId;
  a.player = Player.get(c.getPlayerId());
  a.HeroItem = HeroItem;
  a.buildViewModels = function() {
    a.inventory = [];
    a.heroEquipment = {};
    for(var b = null, c = {}, f = 0, n = 0;n < h.data.length;n++) {
      var q = h.data[n];
      q.data.inSlot == HeroItem.SLOT_BAG && (b = q.data);
      0 < q.data.inSlot && (a.heroEquipment[q.data.inSlot] = q, q.setUseInfos(l), q.data.inSlot == HeroItem.SLOT_BAG && (b = q.data));
      q = h.data[n].data.inventorySlotNr;
      0 < q && (c[q] = h.data[n], q > f && (f = q))
    }
    0 < f % 4 && (f += 4 - f % 4);
    f += 4;
    24 > f && (f = 24);
    a.bagItem = b;
    for(n = 1;n <= f;n++) {
      q = c[n], null != q ? (q.setUseInfos(l, a.heroEquipment), a.hero && (q.data.clickDisabled = q.data.notUsableItem || 0 == q.data.maxCanUse || q.data.usedPerDay >= q.data.maxPerDay, null != b && (0 < q.data.maxPerDay && 0 == q.data.inSlot && b.itemType == q.data.itemType && b.amount >= b.maxPerDay - b.usedPerDay) && (q.data.clickDisabled = !0))) : (q = new HeroItem, q.data.inventorySlotNr = n), a.inventory.push(q)
    }
    a.bagItem = b;
    g && (a.avatar = angular.copy(g.getViewModel()))
  };
  var l = Hero.get(c.getPlayerId()), h = HeroItem.getCollection("own"), g = HeroFace.get(c.getPlayerId());
  a.subscribe(l, function() {
    a.isSitter = c.L();
    a.hero = l.data;
    a.w.hero = a.hero
  });
  a.subscribe(h, a.buildViewModels);
  a.subscribe(l, a.buildViewModels);
  a.subscribe(g, a.buildViewModels);
  b.$on("heroEditor.openOverlay", function() {
    a.inWindowPopupOpened || a.openOverlay("heroEditor", {})
  });
  a.buildViewModels()
};
window.heroCtrl.$inject = ["$scope", "SessionService", "$rootScope"];
window.confirmSellingCtrl = function(a, c, b, l) {
  a.overlayConfig.k({inWindowPopupTitle:"Auction.Sell", inWindowPopupContentTemplate:"tpl/hero/overlay/confirmSelling.html"});
  a.isStackable = !1;
  a.isNpcBuying = null;
  a.amount = 1;
  var h = "";
  "undefined" != typeof a.getParam("itemId") && (h = a.getParam("itemId"));
  "undefined" != typeof a.getParam("amount") && (a.amount = a.getParam("amount"));
  var g = HeroItem.get(h);
  a.subscribe(g, function() {
    a.equipped = !1;
    0 < g.data.inSlot && (a.equipped = !0);
    a.isStackable = g.data.stackable;
    a.owners = g.data.previousOwners;
    Travian.writeRequest("auctions/getSellerPayout", {itemId:h, amount:g.data.amount}, function(b) {
      a.isNpcBuying = b.isNpcBuying;
      a.isNpcBuying ? (a.price = b.pricePerItem, a.maxAmount = b.amount, a.strengthFactor = parseInt(100 * b.strengthFactor), a.tier = b.tier) : a.closeOverlay()
    })
  });
  a.sellItemAction = function() {
    Travian.writeRequest("auctions/sellItem", {itemId:h, amount:a.amount}, function(b) {
      "undefined" != typeof b.errors && "valueExceedsMax" == b.errors[0].message && (l.Qa(Travian.translate("Error.NpcOfferInvalid"), "error", 4E3), delete b.errors);
      c.$broadcast("auctionsSellingConfirmed");
      a.closeOverlay()
    })
  };
  a.$on("$destroy", function() {
    a.removeParam("itemId");
    a.removeParam("amount")
  })
};
window.confirmSellingCtrl.$inject = ["$scope", "$rootScope", "VillageService", "NotificationService"];
window.heroEditorCtrl = function(a, c, b) {
  function l() {
    a.selectedOption = e[a.editorAvatar.gender][a.editorDropdown.selected];
    for(var b = angular.copy(charCustomisations[a.editorAvatar.gender][a.selectedOption]), c = 0;c < b.length;c++) {
      b[c] = a.selectedOption + "/" + a.selectedOption + c
    }
    a.optionItems = b
  }
  function h() {
    a.editorDropdown.options = m[a.editorAvatar.gender];
    a.editorDropdown.selected = 0;
    l()
  }
  a.overlayConfig.k({inWindowPopupTitle:"Hero.ChangeAppearance", inWindowPopupContentTemplate:"tpl/hero/partials/editor.html"});
  var g = HeroFace.get(c.getPlayerId());
  a.heroFace = new HeroFace;
  a.editorAvatar = a.heroFace.getViewModel();
  a.somethingChanged = a.heroFace.somethingChanged;
  a.optionItems = [];
  var e = {male:[], female:[]}, m = {male:[], female:[]};
  a.editorDropdown = {options:[], bodyClass:"heroEditorDropDown", selected:0, callback:l};
  for(var f in e) {
    var n = 0, q;
    for(q in charCustomisations[f]) {
      e[f].push(q), n = e[f].length - 1, m[f].push(Travian.translate("Hero.Face_" + e[f][n]))
    }
  }
  a.subscribe(g, function() {
    a.heroFace.set(g.data);
    a.editorAvatar = a.heroFace.getViewModel();
    h()
  });
  a.changeAttribute = function(b, e) {
    "color" != b ? a.heroFace.data.face[b] = e : a.heroFace.data.hairColor = e;
    a.heroFace.updateViewModel()
  };
  a.changeGender = function(b) {
    0 <= b && (1 >= b && a.heroFace.data.gender != b) && (a.heroFace.data.gender = b, a.heroFace.selectRandomFace(), h())
  };
  a.save = function() {
    Travian.writeRequest("hero/saveFace", a.heroFace.data, function() {
      0 <= Travian.Player.data.uiStatus && b.$broadcast("heroEditor.saveFace")
    });
    -1 === Travian.Player.data.uiStatus && a.closeOverlay()
  };
  a.selectRandomFace = function() {
    a.heroFace.selectRandomFace()
  };
  a.resetChanges = function() {
    a.heroFace.somethingChanged && (g = HeroFace.get(c.getPlayerId()), a.heroFace.set(g.data), h())
  };
  a.previousOption = function() {
    a.editorDropdown.selected = 0 == parseInt(a.editorDropdown.selected, 0) ? e[a.editorAvatar.gender].length - 1 : parseInt(a.editorDropdown.selected, 0) - 1;
    l()
  };
  a.nextOption = function() {
    a.editorDropdown.selected = parseInt(a.editorDropdown.selected, 0) == e[a.editorAvatar.gender].length - 1 ? 0 : parseInt(a.editorDropdown.selected, 0) + 1;
    l()
  }
};
window.heroEditorCtrl.$inject = ["$scope", "SessionService", "$rootScope"];
window.sellStolenGoodsCtrl = function(a, c, b, l, h) {
  function g() {
    var b = c.getActiveVillageId();
    null !== r && r.destroy();
    r = h.B([b], null, q, a)
  }
  function e() {
    a.village = c.i();
    a.king.playerId = a.village.data.belongsToKing;
    m(a.useAmount.value);
    f()
  }
  function m(b) {
    a.treasurePrice = new Resources(p);
    a.king.stranger = !1;
    a.village.data.belongsToKing != Travian.Player.data.kingdomId && (a.king.stranger = !0, a.treasurePrice[Resources.CROP] = 0);
    a.treasurePrice.multiply(b)
  }
  function f() {
    "undefined" !== typeof a.treasurePrice && Travian.request("hero/getDurationToClosestVillageWithInfluence", {villageId:c.getActiveVillageId()}, function(b) {
      a.treasureDuration = b.data
    })
  }
  function n() {
    Travian.request("hero/getTreasureSellPrice", {}, function(b) {
      p = new Resources(b);
      m(a.useAmount.value);
      f()
    })
  }
  function q() {
    if(r && a.inboundTroopId) {
      for(var b = r.u(), e = 0;e < b.length;e++) {
        if(b[e].data.troopId == a.inboundTroopId) {
          return!1
        }
      }
      a.closeOverlay();
      return!0
    }
  }
  a.overlayConfig.k({inWindowPopupTitle:"Hero.SellTreasures", inWindowPopupContentTemplate:"tpl/hero/overlay/sellStolenGoods.html"});
  var p = new Resources;
  a.village = c.i();
  a.robber = Player.ID.ROBBER;
  a.king = {playerId:0, stranger:!1};
  a.cropWarning = !1;
  a.currentPlayer = Travian.Player;
  a.treasurePrice = new Resources;
  a.useAmount = {value:1};
  var r = null;
  g();
  a.$on("activeVillageChanged", g);
  a.$on("$destroy", a.cleanupSubscriptions);
  a.fittingInStorage = function(b) {
    if("undefined" !== typeof a.treasurePrice[b] && "" !== a.treasurePrice[b]) {
      var e = a.village.getResources();
      return parseInt(e[b]) + parseInt(a.treasurePrice[b]) <= a.village.data.storageCapacity[b]
    }
    return!0
  };
  if("undefined" != typeof a.getParam("itemId")) {
    var s = a.getParam("itemId")
  }
  a.item = HeroItem.get(s);
  a.sellTreasures = function() {
    Travian.writeRequest("hero/useItem", {id:a.item.data.id, amount:a.item.data.stackable ? a.useAmount.value : 1, villageId:c.getActiveVillageId()}, function(b) {
      a[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT] = function(b) {
        return{troopId:b, callback:function() {
          a.closeOverlay()
        }}
      };
      a.soldResources = new Resources(b.resources);
      a.soldAmount = b.amount;
      a.inboundTroopId = b.troopId;
      a.inboundTroopArriveTime = b.destTime;
      a.premiumFeaturePrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT].price
    })
  };
  a.subscribe(a.item, function() {
    n();
    var b = a.item.data, e = b.maxCanUse;
    b.maxPerDay && (e = Math.min(b.maxCanUse, b.maxPerDay - b.usedPerDay));
    a.maxAmount = e;
    a.useAmount = {value:1}
  });
  a.subscribe(a.village, e);
  a.$on("activeVillageChanged", e);
  a.$watch("useAmount.value", m);
  a.$on("$destroy", function() {
    a.removeParam("itemId")
  })
};
window.sellStolenGoodsCtrl.$inject = ["$scope", "VillageService", "SessionService", "$timeout", "TroopsService"];
window.unlockAdditionalLocationCtrl = function(a, c, b) {
  a.overlayConfig.k({inWindowPopupTitle:"Hero.BuildingGround.Header", inWindowPopupContentTemplate:"tpl/hero/overlay/unlockAdditionalLocation.html"});
  a.maxPremiumLocations = Building.PREMIUM_LOCATIONS.length;
  a.unlockedGrounds = c.Uc();
  a.$on("activeVillageChanged", function() {
    a.unlockedGrounds = c.Uc()
  });
  a.unlockGround = function() {
    "undefined" != typeof a.getParam("itemId") && (Travian.writeRequest("hero/useItem", {id:a.getParam("itemId"), amount:1, villageId:b.getActiveVillageId()}, w()), a.closeOverlay())
  }
};
window.unlockAdditionalLocationCtrl.$inject = ["$scope", "BuildingService", "VillageService"];
window.upgradeBandagesCtrl = function(a) {
  "undefined" === typeof a.getParam("bandageItemType") && a.closeOverlay();
  var c = a.getParam("bandageItemType"), b = HeroItem.getCollection("own");
  a.isSmallBandage = !0;
  a.bandages = null;
  a.healingPotions = null;
  b.subscribe(function() {
    for(var l = 0;l < b.data.length;l++) {
      if(b.data[l].data.inSlot == HeroItem.SLOT_INVENTORY) {
        switch(b.data[l].data.itemType) {
          case c:
            a.bandages = b.data[l];
            a.isSmallBandage = b.data[l].data.itemType === HeroItem.TYPE_BANDAGE_25;
            break;
          case HeroItem.TYPE_HEALING_POTION:
            a.healingPotions = b.data[l]
        }
      }
    }
    null != a.bandages && null != a.healingPotions || a.closeOverlay();
    a.maxUseableAmount = Math.min(a.bandages.data.amount, a.healingPotions.data.amount);
    a.useAmount = {value:Math.round(a.maxUseableAmount / 2)}
  });
  a.overlayConfig.k({inWindowPopupTitle:"Hero.ItemUpgradeBandagesHeadline", inWindowPopupContentTemplate:"tpl/hero/overlay/upgradeBandages.html"});
  a.upgradeBandage = function() {
    Travian.writeRequest("hero/bandagesUpgrade", {upgradedItemType:c, amount:a.useAmount.value});
    a.closeOverlay()
  };
  a.cancel = function() {
    a.closeOverlay();
    a.openOverlay("useItem", {itemId:a.healingPotions.data.id})
  };
  a.$on("$destroy", function() {
    a.removeParam("bandageItemId")
  })
};
window.upgradeBandagesCtrl.$inject = ["$scope", "SessionService", "$timeout"];
window.upgradeItemCtrl = function(a, c, b) {
  function l(a, b) {
    if(a.data.upgradeLevel > b.data.upgradeLevel) {
      return-1
    }
    if(a.data.upgradeLevel < b.data.upgradeLevel) {
      return 1
    }
    if(a.data.upgradeLevel == b.data.upgradeLevel) {
      if(a.data.inventorySlotNr > b.data.inventorySlotNr) {
        return 1
      }
      if(a.data.inventorySlotNr < b.data.inventorySlotNr) {
        return-1
      }
    }
    return 0
  }
  a.overlayConfig.k({inWindowPopupTitle:"Hero.UseUpgradeItem", inWindowPopupContentTemplate:"tpl/hero/overlay/upgradeItem.html"});
  a.HeroItem = HeroItem;
  a.targetItem = {};
  a.maxPossibleUpgrades = Travian.Config.heroItems.maxUpgrades;
  a.itemDropdown = {};
  a.itemDropdown.selected = null;
  a.itemDropdown.options = [];
  a.itemDropdown.resize = !0;
  a.itemDropdown.placeholder = "Hero.Item.Upgrade.Placeholder";
  a.itemDropdown.bodyClass = "itemDropdownBody";
  a.itemDropdown.callback = function() {
    a.targetItem = a.itemDropdown.options[a.itemDropdown.selected];
    a.effect = {strength:0, type:0};
    var b = a.item.data.bonuses, c = a.targetItem.data.bonuses, f = a.targetItem.data.itemTier, g;
    for(g in c) {
      b.hasOwnProperty(g) ? (Array.isArray(b[g]) ? a.effect.strength = b[g][f - 1] : a.effect.strength = b[g], a.effect.type = g) : (a.effect.strength = b[Object.keys(b)[0]][f - 1], a.effect.type = HeroItem.BONUS_FIGHT_STRENGTH)
    }
  };
  a.itemDropdown.disabledEntries = [];
  var h = HeroFace.get(b.getPlayerId());
  a.subscribe(h, function() {
    a.avatar = h.getViewModel()
  });
  c = "";
  "undefined" != typeof a.getParam("itemId") && (c = a.getParam("itemId"));
  a.item = HeroItem.get(c);
  a.upgradeItem = function() {
    Travian.writeRequest("hero/upgradeItem", {upgradeItemId:a.item.data.id, targetItemId:a.targetItem.data.id});
    a.closeOverlay()
  };
  var g = HeroItem.getCollection("own");
  a.subscribe(g, function() {
    for(var b = a.itemDropdown, c = a.item.data.upgradableItemType, f = Travian.Filter.bidiRatio(), h = {enabled:[], disabled:[], maxUpgrade:[]}, q = 0;q < g.data.length;q++) {
      var p = g.data[q].data;
      if(p.slot == c) {
        var r = "", r = p.upgradeLevel >= a.maxPossibleUpgrades ? Travian.translate("Hero.Item.Upgrade.maxLevel") : f("", p.upgradeLevel, a.maxPossibleUpgrades, !1), r = {text:Travian.translate("Hero.Item.Upgrade.DropdownOption", {itemName:Travian.translate("Hero.Item_" + p.itemType), value:r}), nextUpgradeLevel:p.upgradeLevel + 1, disabled:!1, data:p};
        p.upgradeLevel >= a.maxPossibleUpgrades ? h.maxUpgrade.push(r) : p.clickDisabled && 0 < p.inSlot ? (r.disabled = !0, h.disabled.push(r)) : h.enabled.push(r)
      }
    }
    h.enabled.sort(l);
    h.disabled.sort(l);
    h.maxUpgrade.sort(l);
    b.options = h.enabled.concat(h.disabled, h.maxUpgrade);
    for(b = 0;b < a.itemDropdown.options.length;b++) {
      c = a.itemDropdown.options[b], (c.disabled || c.data.upgradeLevel >= a.maxPossibleUpgrades) && a.itemDropdown.disabledEntries.push(b)
    }
  });
  a.$on("$destroy", function() {
    a.removeParam("itemId")
  })
};
window.upgradeItemCtrl.$inject = ["$scope", "VillageService", "SessionService", "$timeout"];
window.useItemCtrl = function(a, c, b) {
  var l = HeroFace.get(b.getPlayerId());
  a.subscribe(l, function() {
    a.avatar = l.getViewModel()
  });
  b = "";
  "undefined" != typeof a.getParam("itemId") && (b = a.getParam("itemId"));
  a.item = HeroItem.get(b);
  var h = "Hero.ItemEnterAmount";
  a.isHealingPotion = !1;
  a.isArtwork = !1;
  a.useItem = function() {
    Travian.writeRequest("hero/useItem", {id:a.item.data.id, amount:a.item.data.stackable ? a.useAmount.value : 1, villageId:c.getActiveVillageId()});
    a.closeOverlay()
  };
  a.subscribe(a.item, function() {
    switch(a.item.data.itemType) {
      case HeroItem.TYPE_HEALING_POTION:
        h = "Hero.ItemUsePotionsHeadline";
        a.isHealingPotion = !0;
        a.smallBandagesId = HeroItem.TYPE_BANDAGE_25;
        a.largeBandagesId = HeroItem.TYPE_BANDAGE_33;
        break;
      case HeroItem.TYPE_ARTWORK:
        for(var b = c.S().data, e, m = 0, f = 0;f < b.length;f++) {
          e = b[f].data, m += e.culturePointProduction
        }
        a.cultureProduction = Math.min(m, a.item.data.bonuses[HeroItem.BONUS_CULTURE_POINTS]);
        h = "Hero.UseArtwork";
        a.isArtwork = !0;
        break;
      case HeroItem.TYPE_ADVENTURE_POINT:
        h = "Hero.UseAdventurePoint";
        break;
      case HeroItem.TYPE_BOOK:
        h = "Hero.UseBookOfWisdom";
        break;
      case HeroItem.TYPE_WATERBUCKET:
        h = "Hero.UseWaterbucket"
    }
    a.overlayConfig.k({inWindowPopupTitle:h, inWindowPopupContentTemplate:"tpl/hero/overlay/useItem.html"});
    a.itemName = Travian.translate("Hero.Item_" + a.item.data.itemType);
    a.stackable = a.item.data.stackable && 1 != a.item.data.maxPerDay;
    if(!0 == a.item.data.stackable) {
      var b = a.item.data, l = b.maxCanUse;
      b.maxPerDay && (l = Math.min(b.maxCanUse, b.maxPerDay - b.usedPerDay));
      a.maxAmount = l;
      a.useAmount = {value:l};
      var q = HeroItem.getCollection("own");
      if(b.itemType == HeroItem.TYPE_OINTMENT && b.maxPerDay) {
        var p = !1;
        a.subscribe(q, function() {
          if(!p) {
            for(var b = q.data.length - 1;0 <= b;b--) {
              if(q.data[b].data.inSlot == HeroItem.SLOT_BAG) {
                q.data[b].data.itemType == HeroItem.TYPE_OINTMENT && (b = q.data[b].data, a.maxAmount = Math.min(l, b.maxPerDay - (b.usedPerDay + b.amount)));
                break
              }
            }
            p = !0
          }
        })
      }
      a.smallBandagesAmount = 0;
      for(f = a.largeBandagesAmount = 0;f < q.data.length;f++) {
        if(q.data[f].data.inSlot == HeroItem.SLOT_INVENTORY) {
          switch(q.data[f].data.itemType) {
            case HeroItem.TYPE_BANDAGE_25:
              a.smallBandagesAmount = q.data[f].data.amount;
              break;
            case HeroItem.TYPE_BANDAGE_33:
              a.largeBandagesAmount = q.data[f].data.amount
          }
        }
      }
    }
  });
  a.$on("$destroy", function() {
    a.removeParam("itemId")
  });
  a.showUpgradeBandageDialog = function(b) {
    a.closeOverlay();
    a.openOverlay("upgradeBandages", {bandageItemType:b})
  };
  a.HeroItem = HeroItem
};
window.useItemCtrl.$inject = ["$scope", "VillageService", "SessionService", "$timeout"];
window.useResourceBonusCtrl = function(a, c, b, l) {
  a.overlayConfig.k({inWindowPopupTitle:"Hero.UseResourceBonus", inWindowPopupContentTemplate:"tpl/hero/overlay/useResourceBonus.html"});
  var h = HeroFace.get(b.getPlayerId());
  a.subscribe(h, function() {
    a.avatar = h.getViewModel()
  });
  a.resources = {1:0, 2:0, 3:0, 4:0};
  a.screenState = "UseItem";
  a.timeForNextUse = function() {
    var a = new Date(1E3 * l.K());
    a.setHours(24, 0, 0, 0);
    return a.getTime() / 1E3
  }();
  b = "";
  "undefined" != typeof a.getParam("itemId") && (b = a.getParam("itemId"));
  a.item = HeroItem.get(b);
  a.bonusValue = 1;
  a.subscribe(a.item, function() {
    var b = 0, e;
    for(e in a.item.data.bonuses) {
      b = e, a.bonusValue = a.item.data.bonuses[e]
    }
    Travian.request("hero/getResourceForResourceChest", {percent:a.bonusValue, type:b}, function(b) {
      if(a.handleError(b)) {
        a.timeForNextUse = l.K() + parseInt(b.deltaForNextUse);
        for(var e = 1;4 >= e;e++) {
          a.resources[e] = b.resources[e]
        }
      }
    })
  });
  a.village = c.i();
  a.$on("activeVillageChanged", function() {
    a.village = c.i()
  });
  a.changeScreenStateToMerge = function() {
    a.screenState = "MergeItem";
    a.useAmount = {value:2}
  };
  a.mergeItem = function() {
    Travian.writeRequest("hero/mergeItem", {id:a.item.data.id, amount:a.useAmount.value, villageId:c.getActiveVillageId()});
    a.closeOverlay()
  };
  a.useItem = function() {
    Travian.writeRequest("hero/useItem", {id:a.item.data.id, amount:1, villageId:c.getActiveVillageId()});
    a.closeOverlay()
  }
};
window.useResourceBonusCtrl.$inject = ["$scope", "VillageService", "SessionService", "ServertimeService"];
window.attributesCtrl = function(a, c, b) {
  function l() {
    for(var b = 0, e = 0;e < a.attributes.length;e++) {
      var c = a.attributes[e], b = b + parseInt(a.changes[c])
    }
    for(e = 0;e < a.attributes.length;e++) {
      c = a.attributes[e], a.maxFreePoints[c] = Math.min(100 - a.hero[c], a.hero.freePoints + a.changes[c] - b)
    }
    a.freePoints = parseInt(a.hero.freePoints) - b
  }
  function h() {
    a.storage = m.getResources();
    a.newHomeVillage = m.data.name;
    a.hero = e.data;
    a.w.hero = a.hero;
    for(var c = 0;c < a.attributes.length;c++) {
      a.hero[a.attributes[c]] = parseInt(a.hero[a.attributes[c]]), a.disabledAttributes[a.attributes[c]] = ("attBonusPoints" === a.attributes[c] || "defBonusPoints" === a.attributes[c]) && 10 > a.hero.level ? !0 : !1
    }
    a.hero.resBonusName = Resources.STRING[e.data.resBonusType];
    a.hero.resBonusValue = 0 == e.data.resBonusType ? a.valuePoints.resBonusAll * a.hero.resBonusPoints : a.valuePoints.resBonusSingle * a.hero.resBonusPoints;
    a.hero.bonuses.hasOwnProperty(HeroItem.BONUS_XP) && (a.hero.bonusXp = a.hero.bonuses[HeroItem.BONUS_XP]);
    var c = a.hero.xp, g = a.hero.xpThisLevel, h = a.hero.xpNextLevel;
    a.hero.xpPerc = Math.floor(100 * ((c - g) / (h - g)));
    a.hero.xpToNextLevel = h - c;
    a.hero.nextLevel = a.hero.level + 1;
    a.dest = id2xy(a.hero.destVillageId);
    a.freePoints = a.hero.freePoints;
    a.changes.resBonusType = a.hero.resBonusType;
    c = b.pa(e.data.villageId);
    null != c && (a.homeVillageName = c.data.name);
    a.heroItemsHealthRegen = a.hero.bonuses[HeroItem.BONUS_HEALTH_REGEN] || 0;
    l()
  }
  function g() {
    a.hero && (l(), a.checkButtonClass())
  }
  a.HeroItem = HeroItem;
  a.HeroModel = Hero;
  a.saveBtnDisabled = !0;
  a.freePoints = 0;
  a.resBonusType = 0;
  a.attributes = ["fightStrengthPoints", "attBonusPoints", "defBonusPoints", "resBonusPoints"];
  a.changes = {fightStrengthPoints:0, attBonusPoints:0, defBonusPoints:0, resBonusPoints:0, resBonusType:0};
  a.total = {fightStrengthPoints:0, attBonusPoints:0, defBonusPoints:0, resBonusPoints:0, resBonusType:0};
  a.valuePoints = {fightStrengthPoints:0, attBonusPoints:0, defBonusPoints:0, resBonusPoints:1, resBonusAll:0, resBonusSingle:0, resBonusBaseAll:0, resBonusBaseSingle:0};
  a.maxFreePoints = {fightStrengthPoints:0, attBonusPoints:0, defBonusPoints:0, resBonusPoints:0};
  a.disabledAttributes = {fightStrengthPoints:!1, attBonusPoints:!1, defBonusPoints:!1, resBonusPoints:!1};
  a.resTypes = Resources.STRING;
  a.newHomeVillage = "";
  a.playerId = c.getPlayerId();
  var e = Hero.get(a.playerId), m = b.i();
  a.isRevivable = function() {
    return m ? m.hasEnoughResources(e.data.reviveCosts) : !1
  };
  a.saveChanges = function() {
    Travian.writeRequest("hero/addAttributePoints", a.changes, function() {
      a.changes.fightStrengthPoints = 0;
      a.changes.attBonusPoints = 0;
      a.changes.defBonusPoints = 0;
      a.changes.resBonusPoints = 0;
      a.changes.resBonusType = a.hero.resBonusType;
      a.checkButtonClass()
    })
  };
  a.checkButtonClass = function() {
    a.saveBtnDisabled = !(0 < a.changes.fightStrengthPoints || 0 < a.changes.attBonusPoints || 0 < a.changes.defBonusPoints || 0 < a.changes.resBonusPoints || a.changes.resBonusType != a.hero.resBonusType)
  };
  a.revive = function() {
    Travian.writeRequest("hero/revive", {villageId:m.data.villageId}, function(b) {
      a.handleError(b, "reviveError")
    })
  };
  a.changeResourceType = function(b) {
    0 <= b && (5 > b && a.changes.resBonusType != b) && (a.changes.resBonusType = b, a.checkButtonClass())
  };
  a.subscribe(e, h);
  a.$on("activeVillageChanged", function() {
    m = b.i();
    h()
  });
  a.$watch("changes.fightStrengthPoints", g);
  a.$watch("changes.attBonusPoints", g);
  a.$watch("changes.defBonusPoints", g);
  a.$watch("changes.resBonusPoints", g);
  (function() {
    Travian.request("hero/getValuePoints", null, function(b) {
      a.valuePoints.fightStrengthPoints = parseFloat(b.fightStrength);
      a.valuePoints.fightStrengthBaseLevel = parseFloat(b.fightStrengthBaseLevel);
      a.valuePoints.attBonusPoints = parseFloat(b.attBonus);
      a.valuePoints.defBonusPoints = parseFloat(b.defBonus);
      a.valuePoints.resBonusSingle = parseFloat(b.resBonusSingle);
      a.valuePoints.resBonusAll = parseFloat(b.resBonusAll);
      a.valuePoints.resBonusBaseSingle = parseFloat(b.resBonusBaseSingle);
      a.valuePoints.resBonusBaseAll = parseFloat(b.resBonusBaseAll);
      h()
    })
  })();
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_HERO + "_" + PlayerProgressTrigger.HELP_PAGE_HERO_PRODUCTION)
};
window.attributesCtrl.$inject = ["$scope", "SessionService", "VillageService"];
window.auctionsBidsCtrl = function(a, c) {
  function b() {
    g = [];
    for(var b = 0;b < l.data.length;b++) {
      var e = l.data[b].data, c;
      c = -1 == e.slot || 7 == e.slot ? e.itemTypeId : "Slot" + e.slot;
      e.finished = a.currentServerTime >= e.timeEnd ? !0 : !1;
      c = c == a.showItemsType;
      (-2 == a.showItemsType || c) && g.push(e)
    }
    a.displayCurrentPage(a.currentPage)
  }
  a.itemsPerPage = 10;
  a.currentPage = 1;
  a.showItemsType = -2;
  a.player = c.l();
  a.bid = {error:""};
  var l = Auction.getCollection("bidden"), h = Bid.getCollection("own"), g = [], e = [];
  a.displayCurrentPage = function(b) {
    null == b && (b = 1);
    a.numberOfItems = g.length;
    a.currentPage = b;
    g.sort(function(a, b) {
      return a.finished != b.finished ? a.finished ? 1 : -1 : b.timeEnd == a.timeEnd ? b.id - a.id : a.finished ? b.timeEnd - a.timeEnd : a.timeEnd - b.timeEnd
    });
    b = a.itemsPerPage * (b - 1);
    var c = Math.min(b + a.itemsPerPage, g.length);
    a.auctions = g.slice(b, c);
    for(b = 0;b < a.auctions.length;b++) {
      c = a.auctions[b], c.stackable && (c.pricePerItem = Math.round(100 * (c.price / c.amount)) / 100), "undefined" == typeof e[c.id] || c.priceInput || (c.priceInput = e[c.id].maxBid), c.finished && "undefined" != typeof e[c.id] && (c.bidPlaceholder = e[c.id].maxBid)
    }
  };
  a.subscribe(l, b);
  a.subscribe(h, function() {
    e = [];
    for(var a = 0;a < h.data.length;a++) {
      var c = h.data[a].data;
      e[c.auctionId] = c
    }
    b()
  });
  a.filter = function(e, c) {
    a.foundAuctions = {active:!1, finished:!1};
    if("undefined" !== typeof c) {
      var g = Travian.Config.heroItems[e].slot;
      -1 != g && 7 != g && (e = "Slot" + g)
    }
    a.showItemsType = a.showItemsType != e ? e : -2;
    b()
  };
  a.placeBid = function(b) {
    for(var e, c = 0;c < a.auctions.length;c++) {
      if(a.auctions[c].id == b) {
        e = a.auctions[c];
        break
      }
    }
    (e.priceInput || 0) > a.player.data.silver + e.highestBid ? (a.error = "Error.NotEnoughSilver", e.error = !0) : (e.priceInput || 0) <= e.price ? (a.error = "Auction.MinBidError", a.bid.minPrice = e.price) : Travian.writeRequest("auctions/placeBid", {auctionId:e.id, bidAmount:e.priceInput}, function(b) {
      "undefined" != typeof b.errors && (a.bid.error = "Error." + b.errors[0].message, delete b.errors)
    })
  };
  Cache.t(l, 1);
  Cache.t(h, 1)
};
window.auctionsBidsCtrl.$inject = ["$scope", "SessionService"];
window.auctionsBuyCtrl = function(a, c) {
  function b() {
    a.bidsById = {};
    for(var b = 0;b < g.data.length;b++) {
      a.hasBidById[g.data[b].data.id] = !0
    }
  }
  function l() {
    a.displayCurrentPage(a.currentPage)
  }
  a.itemsPerPage = 10;
  a.currentPage = 1;
  a.showItemsType = -2;
  a.bid = {error:""};
  a.player = c.l();
  a.hasBidById = {};
  var h = Cache.Ja(Auction.getCollection, ["running"]);
  h.filled = !0;
  a.auctions = h;
  var g = Auction.getCollection("bidden"), e = Bid.getCollection("own"), m = [], f = 0, n = -2, q = "", p = "";
  a.displayCurrentPage = function(e) {
    null == e && (e = 1);
    var c = {filterItemType:f, filterSlot:n};
    JSON.stringify(c) != q && (q = JSON.stringify(c), Travian.request("auctions/getRunningAuctionAmount", c, function(b) {
      a.numberOfItems = b.data
    }));
    c.page = e - 1;
    a.currentPage = e;
    JSON.stringify(c) != p && (p = JSON.stringify(c), Travian.request("auctions/getRunningAuctionPage", c, function() {
      for(var b = 0;b < a.auctions.data.length;b++) {
        var e = a.auctions.data[b];
        m[e.data.id] && !e.priceInput && (e.priceInput = m[e.data.id].maxBid)
      }
    }, w(), !0));
    b()
  };
  a.subscribe(h, l);
  a.subscribe(g, b);
  a.subscribe(e, function() {
    m = [];
    for(var a = 0;a < e.data.length;a++) {
      var b = e.data[a].data;
      m[b.auctionId] = b
    }
    l()
  });
  a.filter = function(b, e) {
    "Slot" == ("" + b).substr(0, 4) ? (f = 0, n = parseInt(b.substr(4))) : (f = b, n = -2);
    if("undefined" !== typeof e) {
      var c = Travian.Config.heroItems[b].slot;
      -1 != c && 7 != c && (b = "Slot" + c)
    }
    a.showItemsType != b ? a.showItemsType = b : (a.showItemsType = -2, f = 0, n = -2);
    a.currentPage = 1;
    l()
  };
  a.placeBid = function(b) {
    for(var e, c = 0;c < a.auctions.data.length;c++) {
      if(a.auctions.data[c].data.id == b) {
        e = a.auctions.data[c];
        break
      }
    }
    (e.priceInput || 0) > a.player.data.silver + e.data.highestBid ? (a.error = "Error.NotEnoughSilver", e.error = !0) : (b = e.data.price, 0 < e.data.highestBidderPlayerId && b++, (e.priceInput || 0) < b ? (a.error = "Auction.MinBidError", a.bid.minPrice = b) : (a.hasBidById[e.data.id] = !0, Travian.writeRequest("auctions/placeBid", {auctionId:parseInt(e.data.id), bidAmount:e.priceInput}, function(b) {
      "undefined" != typeof b.errors && (a.bid.error = "Error." + b.errors[0].message, delete b.errors)
    })))
  };
  Cache.t(g, 1)
};
window.auctionsBuyCtrl.$inject = ["$scope", "SessionService"];
window.auctionsCtrl = function(a, c) {
  a.auctionsTabs = {};
  a.auctionsTabs.tabs = ["Buy", "Sell", "Bids", "Silver", "ExchangeOffice"];
  a.auctionsTabs.bodyTemplatePrefix = "tpl/hero/tabs/auctions/";
  a.auctionsTabs.routeNamedParam = "subtab";
  a.auctionsTabs.scrollContentHeightOffset = 60;
  a.auctionsTabs.tabName = "subtab";
  a.auctionsTabs.tabType = "subtab";
  a.auctionsTabs.disableScrolling = !0;
  a.auctionsTabs.disableScrollingForTabs = ["Buy", "Silver"];
  a.player = c.l();
  a.blockedSilver = 0;
  a.silverBlockingAuctions = Auction.getCollection("highestBidder");
  a.subscribe(a.silverBlockingAuctions, function() {
    for(var b = a.blockedSilver = 0;b < a.silverBlockingAuctions.data.length;b++) {
      a.blockedSilver += a.silverBlockingAuctions.data[b].data.highestBid
    }
  });
  Cache.t(a.silverBlockingAuctions, 1);
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_HERO + "_" + PlayerProgressTrigger.HELP_PAGE_AUCTIONS)
};
window.auctionsCtrl.$inject = ["$scope", "SessionService"];
window.auctionsSellCtrl = function(a, c) {
  function b() {
    a.totalAmount = a.price * a.sellAmount.value
  }
  a.currentItem = null;
  a.sellAmount = {value:0};
  a.price = 0;
  a.$watch("sellAmount.value", b);
  a.displayItem = function(l) {
    a.currentItem = l;
    a.currentItem.auction = !1;
    Travian.writeRequest("auctions/getSellerPayout", {itemId:a.currentItem.data.id, amount:1}, function(h) {
      a.handleError(h, "exchangeError") && (a.isNpcBuying = h.isNpcBuying, a.isNpcBuying ? (a.price = h.pricePerItem, a.maxAmount = h.amount, b()) : (a.maxAmount = l.data.amount, a.price = 0, a.calcTimeEnd = +h.calcTimeEnd), c(function() {
        a.sellAmount.value = 1
      }, 1))
    })
  };
  a.displayAuction = function(b) {
    a.currentItem = b;
    a.currentItem.auction = !0
  };
  a.sellItem = function() {
    var b = 1;
    a.currentItem.data.stackable && (b = a.sellAmount.value);
    a.$on("auctionsSellingConfirmed", function() {
      a.currentItem = null
    });
    a.openOverlay("confirmSelling", {itemId:a.currentItem.data.id, amount:b})
  };
  a.clickHandling = a.displayItem
};
window.auctionsSellCtrl.$inject = ["$scope", "$timeout"];
window.auctionsSilverBookkeepingCtrl = function(a) {
  function c() {
    var b = a.player.data.silver + a.blockedSilver, c = a.silverEvents.data;
    if(0 != c.length) {
      for(var h = c.length - 1;0 <= h;h--) {
        c[h].data.calcPreviousSilver = b, b -= c[h].data.silver
      }
      a.startingBalance = b
    }
  }
  a.showBlockedSilver = !1;
  a.startingBalance = 0;
  a.silverEvents = SilverChange.getCollection("lastWeek");
  a.subscribe(a.silverEvents, c);
  a.subscribe(a.player, c);
  Cache.t(a.silverEvents, 1);
  a.switchShowBlockedSilver = function() {
    a.showBlockedSilver = !a.showBlockedSilver
  }
};
window.auctionsSilverBookkeepingCtrl.$inject = ["$scope"];
window.cardGameCtrl = function(a, c, b, l) {
  function h(b) {
    if("undefined" != typeof b.result) {
      for(var e = 1;5 >= e;e++) {
        a.cardResults[e] = b.result[e]
      }
      "CardgameSingle" == b.type ? g(a.gameStates.yourWonCard) : "Cardgame4of5" == b.type && g(a.gameStates.play4of5selectCards)
    }
  }
  function g(b) {
    a.currentState = b;
    b == a.gameStates.startPlay && (a.cardResults = {1:{rewardTypeId:0, rewardAmount:0}, 2:{rewardTypeId:0, rewardAmount:0}, 3:{rewardTypeId:0, rewardAmount:0}, 4:{rewardTypeId:0, rewardAmount:0}, 5:{rewardTypeId:0, rewardAmount:0}})
  }
  function e() {
    var b = !1, e = !1, c = !1;
    0 < a.chosenCard && ("prize_freePlay_huge_illu" == a.iconClasses[a.cardResults[a.chosenCard].rewardTypeId] ? e = !0 : "prize_gold_huge_illu" == a.iconClasses[a.cardResults[a.chosenCard].rewardTypeId] || "prize_silver_huge_illu" == a.iconClasses[a.cardResults[a.chosenCard].rewardTypeId] ? c = !0 : b = !0);
    for(var f = 1;5 >= f;f++) {
      a.chosenCards4of5[f - 1] && ("prize_freePlay_huge_illu" == a.iconClasses[a.cardResults[f].rewardTypeId] ? e = !0 : "prize_gold_huge_illu" == a.iconClasses[a.cardResults[f].rewardTypeId] || "prize_silver_huge_illu" == a.iconClasses[a.cardResults[f].rewardTypeId] ? c = !0 : b = !0)
    }
    b && (z = l(n, 500));
    e && (A = l(p, 500));
    c && (C = l(r, 500))
  }
  function m() {
    if(a.cardgameRolls.data.hasDailyRoll) {
      Cache.A("Voucher:" + c.getPlayerId()), Voucher.get(c.getPlayerId())
    }else {
      var e = b.K(), f = 60 * getStdTimezoneOffset();
      a.midnight = e - e % 86400 + 86400 - 3600 * Travian.Config.tzone_offset + f
    }
  }
  function f() {
    a.chosenCard = 0;
    a.disablePremium = !1;
    a.chosenCards4of5 = [!1, !1, !1, !1, !1];
    a.amountChosen4of5 = 0;
    g(a.gameStates.startPlay)
  }
  function n() {
    $(".tabulation.maintab .tab:first-child").addClass("marked");
    t = l(function() {
      q()
    }, 400)
  }
  function q() {
    $(".tabulation.maintab .tab:first-child").removeClass("marked")
  }
  function p() {
    Cache.A("CardgameRolls:" + c.getPlayerId());
    a.cardgameRolls = CardgameRolls.get(c.getPlayerId());
    m()
  }
  function r() {
    Cache.A("Player:" + c.getPlayerId());
    Player.get(c.getPlayerId())
  }
  var s = 0, v = null, u = null, t = null, z = null, A = null, C = null;
  a.player = c.l();
  a.goldCost = Travian.Config.goldConfig;
  a.premiumFeatureNameSingle = PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE;
  a.premiumFeatureName4of5 = PremiumFeature.FEATURE_NAME_CARDGAME_4OF5;
  a.disablePremium = !1;
  a.chosenCard = 0;
  a.iconClasses = {1:"prize_healingPotion_huge_illu", 2:"upgrade_armor_huge_illu", 3:"upgrade_weapon_huge_illu", 4:"upgrade_accessory_huge_illu", 5:"upgrade_helmet_huge_illu", 6:"upgrade_shoes_huge_illu", 7:"prize_resourceBonusBronze_huge_illu", 8:"prize_resourceBonusSilver_huge_illu", 9:"prize_resourceBonusGold_huge_illu", 10:"prize_cropBonusBronze_huge_illu", 11:"prize_cropBonusSilver_huge_illu", 12:"prize_cropBonusGold_huge_illu", 13:"prize_adventurePoint_huge_illu", 14:"prize_gold_huge_illu", 
  15:"prize_silver_huge_illu", 16:"prize_freePlay_huge_illu", 17:"prize_buildingArea_huge_illu", 18:"prize_finishNow_huge_illu", 19:"prize_npcTrader_huge_illu", 20:"prize_traderArriveInstantly_huge_illu"};
  a.noAmountStarTypes = [14, 15];
  a.cardResults = {1:{rewardTypeId:0, rewardAmount:0}, 2:{rewardTypeId:0, rewardAmount:0}, 3:{rewardTypeId:0, rewardAmount:0}, 4:{rewardTypeId:0, rewardAmount:0}, 5:{rewardTypeId:0, rewardAmount:0}};
  a.chosenCards4of5 = [!1, !1, !1, !1, !1];
  a.amountChosen4of5 = 0;
  a.amountMax4of5 = 4;
  a.gameStates = {initial:0, startPlay:1, selectCard:2, play4of5selectCards:3, yourWonCard:4, discardedCards:5, discardedCardsRemove:6, play4of5GainCards:7};
  a.currentState = a.gameStates.initial;
  Cache.A("CardgameRolls:" + c.getPlayerId());
  a.cardgameRolls = CardgameRolls.get(c.getPlayerId());
  a.subscribe(a.cardgameRolls, m);
  Travian.request("player/getCardgameResult", {}, function(b) {
    null != b.result && (a.disablePremium = !0, g(a.gameStates.play4of5selectCards), h(b))
  });
  a[PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE] = function(b) {
    a.disablePremium = !0;
    a.chosenCard = b;
    a.cardgameRolls.data.hasDailyRoll ? (a.cardgameRolls.data.hasDailyRoll = 0, a.cardgameRolls.data.freeRolls -= 1, m()) : 0 < a.cardgameRolls.data.freeRolls && (a.cardgameRolls.data.freeRolls -= 1);
    return{selectedCard:b, callback:h, notEnoughGoldCallback:f}
  };
  a[PremiumFeature.FEATURE_NAME_CARDGAME_4OF5] = function() {
    a.disablePremium = !0;
    return{callback:h, notEnoughGoldCallback:f}
  };
  a.chooseCard4of5 = function(b) {
    if(a.currentState == a.gameStates.play4of5selectCards) {
      b -= 1;
      a.chosenCards4of5[b] = !a.chosenCards4of5[b];
      for(b = a.amountChosen4of5 = 0;b < a.chosenCards4of5.length;b++) {
        a.chosenCards4of5[b] && a.amountChosen4of5++
      }
      4 == a.amountChosen4of5 && Travian.writeRequest("player/selectCards", {selectedCards:a.chosenCards4of5}, function() {
        g(a.gameStates.play4of5GainCards);
        e();
        v = l(a.resetToStartPlay, 500)
      })
    }
  };
  a["continue"] = function() {
    g(a.gameStates.discardedCards);
    e()
  };
  a.resetToStartPlay = function() {
    g(a.gameStates.discardedCardsRemove);
    u = l(f, 1E3)
  };
  a.cardHoverStart = function() {
    if(a.currentState == a.gameStates.startPlay || a.currentState == a.gameStates.initial) {
      s = a.currentState, g(a.gameStates.selectCard)
    }
  };
  a.cardHoverStop = function() {
    a.currentState == a.gameStates.selectCard && g(s)
  };
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_PREMIUM + "_" + PlayerProgressTrigger.HELP_PAGE_CARD_GAME);
  a.$on("$destroy", function() {
    l.cancel(v);
    l.cancel(u);
    l.cancel(z);
    l.cancel(A);
    t && (l.cancel(t), q());
    C && (l.cancel(C), r())
  })
};
window.cardGameCtrl.$inject = ["$scope", "SessionService", "ServertimeService", "$timeout"];
window.exchangeOfficeCtrl = function(a, c, b) {
  function l() {
    a.exchangeSuccess = {message:"", gold:0, silver:0}
  }
  function h(b) {
    var e = b.getType(), c = b.getAmount();
    a.exchangeError = "";
    a.exchangeErrorParam = "";
    b.result = e === ExchangeOffice.TYPE_SILVER ? Math.round(c / b.getRate()) : Math.round(c * b.getRate())
  }
  var g = c.l();
  this.ce = function(b) {
    l();
    a.handleError(b, "exchangeError");
    "undefined" !== typeof b.success && (a.exchangeSuccess.message = b.success.message, a.exchangeSuccess.silver = b.success.silver, a.exchangeSuccess.gold = b.success.gold)
  };
  a.exchangeSilver = new ExchangeOffice(g, this.ce);
  a.exchangeSilver.init(ExchangeOffice.TYPE_SILVER);
  a.exchangeGold = new ExchangeOffice(g, this.ce);
  a.exchangeGold.init(ExchangeOffice.TYPE_GOLD);
  a[PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE] = function(b) {
    return"gold" == b ? a.exchangeGold.premiumParamsCallback() : a.exchangeSilver.premiumParamsCallback()
  };
  a.PremiumFeatureName = PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE;
  l();
  h(a.exchangeSilver);
  h(a.exchangeGold);
  var e = g.subscribe(function() {
    a.exchangeSilver.calculateMaxAmount();
    a.exchangeGold.calculateMaxAmount();
    b(function() {
      a.exchangeSilver.initAmount();
      a.exchangeGold.initAmount()
    }, 10);
    h(a.exchangeSilver);
    h(a.exchangeGold)
  });
  a.$on("$destroy", function() {
    g.unsubscribe(e)
  });
  a.$watch("exchangeSilver.amount.value", function() {
    a.silverToGoldButtonTooltip = 0 == a.exchangeSilver.amount.value ? "ExchangeOffice.exchangeSilverToGoldDisabled" : "ExchangeOffice.exchangeSilverToGoldNow";
    h(a.exchangeSilver)
  });
  a.$watch("exchangeGold.amount.value", function() {
    a.goldToSilverButtonTooltip = 0 == a.exchangeGold.amount.value ? "ExchangeOffice.exchangeGoldToSilverDisabled" : "ExchangeOffice.exchangeGoldToSilverNow";
    h(a.exchangeGold)
  })
};
window.exchangeOfficeCtrl.$inject = ["$scope", "SessionService", "$timeout"];
window.inventoryCtrl = function(a, c, b, l) {
  function h(b) {
    "undefined" != typeof b.errors && (a.itemError = b.errors[0].message, delete b.errors)
  }
  a.lastView = 0;
  a.viewedItems = {};
  a.newHomeVillage = "";
  a.playerId = b.getPlayerId();
  var g = c.i(), e = l(function() {
    Travian.writeRequest("hero/setLastInventoryView", {})
  }, 5E3);
  a.checkDrop = function(b) {
    b = b();
    if("heroitem" == b.name.toLowerCase()) {
      if(b.data.notUsableItem || 0 < b.data.inSlot) {
        return!1
      }
      a.useItem(b);
      requestAngularApply();
      return!0
    }
    return!1
  };
  a.dragObj = {dragStart:function() {
    a.dragItem = !0;
    requestAngularApply()
  }, dragStop:function() {
    a.dragItem = !1;
    a.changeSlotHighlight(0)
  }, dropable:function(b, e) {
    var c = b();
    if("heroitem" == c.name.toLowerCase() && "heroitem" == e.name.toLowerCase()) {
      var g = c.data.itemType == HeroItem.TYPE_OINTMENT ? HeroItem.SLOT_BAG : c.data.slot, h = e.data.itemType == HeroItem.TYPE_OINTMENT ? HeroItem.SLOT_BAG : e.data.slot;
      if(c.data.inSlot > HeroItem.SLOT_INVENTORY && e.filled && g != h || c.data.slot == HeroItem.SLOT_INSTANT_USE && e.data.inSlot > HeroItem.SLOT_INVENTORY && c.data.itemType !== HeroItem.TYPE_OINTMENT) {
        return!1
      }
      if(h == HeroItem.SLOT_BAG && c.data.itemType != e.data.itemType && (e.data.inSlot == HeroItem.SLOT_BAG || c.data.inSlot == HeroItem.SLOT_BAG)) {
        return e.data.inSlot == HeroItem.SLOT_INVENTORY && a.useItem(e), c.data.inSlot == HeroItem.SLOT_INVENTORY && a.useItem(c), !0
      }
      h = !0 == c.data.notUsableItem && "NoEquipItemHeroMoving" == c.data.notUsableReason;
      g = !0 == e.data.notUsableItem && "NoEquipItemHeroMoving" == e.data.notUsableReason;
      if(c.data.hasSpeedBonus && h || e.data.hasSpeedBonus && g || c.data.clickDisabled && e.data.inSlot > HeroItem.SLOT_INVENTORY) {
        return!1
      }
      var g = {id1:c.data.id, id2:e.data.id}, l = e.data.inventorySlotNr;
      e.data.inSlot > HeroItem.SLOT_INVENTORY ? (g = {id1:e.data.id, id2:c.data.id, newSlotNr:0, equip:!0}, c.data.inSlot = e.data.slot, e.data.inventorySlotNr = c.data.inventorySlotNr, e.data.inSlot = 0, c.data.inventorySlotNr = 0, a.buildViewModels()) : (0 < c.data.inSlot && (e.data.inSlot = c.data.slot, c.data.inventorySlotNr = e.data.inventorySlotNr, c.data.inSlot = 0, e.data.inventorySlotNr = 0, a.buildViewModels()), h = e.data.inventorySlotNr, c.data.inventorySlotNr && (e.data.inventorySlotNr = 
      c.data.inventorySlotNr), h ? c.data.inventorySlotNr = h : c.data.inSlot = e.data.slot);
      doAngularApply();
      0 == g.id2 && (g.newSlotNr = l);
      Travian.writeRequest("hero/switchItems", g, function() {
        U.kb();
        a.buildViewModels();
        requestAngularApply()
      });
      return!0
    }
    return!1
  }};
  a.useItem = function(b) {
    U.kb();
    a.dragItem = !1;
    a.viewedItems[b.data.id] = !0;
    if(b.data.premiumItem) {
      b.data.itemType == HeroItem.TYPE_NPC_TRADER && a.openWindow("npcTrader")
    }else {
      if(0 < b.data.inSlot) {
        a.disequip(b)
      }else {
        if(("undefined" == typeof b.data.stackable || !1 == b.data.stackable) && -1 != b.data.slot) {
          Travian.writeRequest("hero/useItem", {id:b.data.id, amount:1, villageId:g.data.villageId}, function(b) {
            a.$root.$broadcast("heroItemUsed");
            h(b)
          })
        }else {
          if(!b.data.notUsableItem && 0 < b.data.maxCanUse && ("undefined" == typeof b.data.maxPerDay || b.data.usedPerDay < b.data.maxPerDay)) {
            switch(a.closeOverlay(), b.data.itemType) {
              case HeroItem.TYPE_TREASURES:
                a.openOverlay("sellStolenGoods", {itemId:b.data.id});
                break;
              case HeroItem.TYPE_ARMOR_UPGRADE:
              ;
              case HeroItem.TYPE_WEAPON_UPGRADE:
              ;
              case HeroItem.TYPE_LEFT_HAND_UPGRADE:
              ;
              case HeroItem.TYPE_HELMET_UPGRADE:
              ;
              case HeroItem.TYPE_SHOE_UPGRADE:
                a.openOverlay("upgradeItem", {itemId:b.data.id});
                break;
              case HeroItem.TYPE_RESOURCE_BONUS_3:
              ;
              case HeroItem.TYPE_RESOURCE_BONUS_4:
              ;
              case HeroItem.TYPE_RESOURCE_BONUS_5:
              ;
              case HeroItem.TYPE_CROP_BONUS_3:
              ;
              case HeroItem.TYPE_CROP_BONUS_4:
              ;
              case HeroItem.TYPE_CROP_BONUS_5:
                a.openOverlay("useResourceBonus", {itemId:b.data.id});
                break;
              case HeroItem.TYPE_BUILDING_GROUND:
                a.openOverlay("unlockAdditionalLocation", {itemId:b.data.id});
                break;
              default:
                a.openOverlay("useItem", {itemId:b.data.id})
            }
          }
        }
      }
    }
  };
  a.disequip = function(b) {
    b = b.data.id;
    "undefined" !== typeof b && Travian.writeRequest("hero/useItem", {id:b, villageId:g.data.villageId}, function(b) {
      a.$root.$broadcast("heroItemUsed");
      h(b)
    })
  };
  a.revive = function() {
    Travian.writeRequest("hero/revive", {villageId:g.data.villageId}, function(b) {
      a.handleError(b, "reviveError")
    })
  };
  a.changeSlotHighlight = function(b) {
    a.dragItem || (b > HeroItem.SLOT_INVENTORY ? a.highlightedSlot = b : delete a.highlightedSlot, requestAngularApply())
  };
  a.highlightObj = {turnOn:a.changeSlotHighlight, turnOff:a.changeSlotHighlight};
  a.clickHandling = a.useItem;
  a.filterTypes = ["cardGame", "consumable", "equipment"];
  a.activeFilter = null;
  a.setItemFilter = function(b) {
    a.activeFilter = a.activeFilter == b ? null : b
  };
  a.itemFilter = function(b) {
    switch(a.activeFilter) {
      case "cardGame":
        return b.data.cardGameItem;
      case "consumable":
        return!b.data.cardGameItem && (b.data.slot == HeroItem.SLOT_INSTANT_USE || b.data.slot == HeroItem.SLOT_BAG);
      case "equipment":
        return!b.data.cardGameItem && b.data.slot > HeroItem.SLOT_INVENTORY && b.data.slot < HeroItem.SLOT_BAG;
      default:
        return!0
    }
  };
  Travian.request("hero/getLastInventoryView", {}, function(b) {
    a.lastView = b.data
  });
  a.$on("activeVillageChanged", function() {
    g = c.i()
  });
  a.$on("$destroy", function() {
    clearTimeout(e)
  })
};
window.inventoryCtrl.$inject = ["$scope", "VillageService", "SessionService", "$timeout"];
window.igmSystemCtrl = function(a, c, b) {
  function l() {
    a.filteredInbox = [];
    for(var b = 0, e = a.chat.inbox.data.length;b < e;b++) {
      var c = a.chat.inbox.data[b];
      if(0 < c.data.timestamp && (c.data.isPrivateChat || c.data.isMassMail) && (a.filteredInbox.push(c), a.filteredInbox.length == a.countConversationsDisplayed)) {
        break
      }
    }
  }
  a.tabConfig.tabs = [];
  a.tabConfig.disableScrolling = !0;
  a.w.windowName = "Chat.IgmSystem.Title";
  a.w.setToMaxSize = !0;
  a.w.params.modalParams.additionalClass = "igmSystemWindow";
  var h = null, g = null, e = null, m = null, f = null;
  a.selectedConversation = null;
  a.isAllianceLeader = !1;
  a.chatInputState = 0;
  a.chat = c.getViewModel();
  a.chatLines = null;
  a.unsentLines = [];
  a.input = {textToSend:""};
  a.answerPlaceholder = Travian.translate("Chat.ClickToAnswer");
  a.countConversationsDisplayed = 60;
  a.isBannedFromMessaging = !1;
  a.bannedFromMessagingUntil = 0;
  a.isActivated = !1;
  a.isMonologue = !1;
  a.openConversation = function(h) {
    null != m && (c.Ba(m), m = null);
    null != f && (window.clearTimeout(f), f = null);
    var l = a.w.params.roomId = h.data.roomId, p = !0;
    a.chatInputState = 0;
    a.selectedConversation = h;
    a.isMonologue = ChatRoom.isMonologue(l);
    null != e && g.unsubscribe(e);
    g = c.Wa(l);
    e = g.subscribe(function() {
      a.unsentLines.length = 0;
      a.chatLines = g.data;
      if(p) {
        p = !1;
        for(var e = 0, s = 0, v = g.data.length;s < v;s++) {
          var u = g.data[s].data;
          u.timestamp > h.data.lastOwnRead && (e++, u.newLine = 1)
        }
        0 < e && (f = window.setTimeout(function() {
          m = l
        }, 1E3));
        a.$broadcast("scrollbarApi", "resetSettings")
      }else {
        null != m || ChatRoom.isMonologue(l) || c.Ba(l)
      }
      e = !1;
      for(s = 0;s < a.chatLines.length;s++) {
        if(a.chatLines[s].data.isFirst) {
          e = !0;
          break
        }
      }
      10 > a.chatLines.length && (e = !0);
      b(function() {
        if(null != m) {
          for(var a = 0, b = g.data.length;a < b;a++) {
            var e = g.data[a].data;
            1 == e.newLine && (e.newLine = 2)
          }
          c.Ba(m);
          m = null
        }
      }, 1E3);
      a.haveFirst = e;
      requestAngularApply()
    })
  };
  a.filteredInbox = [];
  null != a.chat.inbox ? a.subscribe(a.chat.inbox, l) : a.$root.$on("chatServiceReady", function() {
    a.subscribe(a.chat.inbox, l)
  });
  a.setChatInputState = function(e) {
    a.chatInputState = e;
    b(function() {
      a.$broadcast("scrollbarApi", "handleResize")
    }, 50)
  };
  a.loadOlder = function() {
    for(var b = -1, e = 0;e < a.chatLines.length;e++) {
      var f = a.chatLines[e].data;
      if(-1 == b || f.timestamp < b) {
        b = f.timestamp
      }
    }
    c.Wa(a.selectedConversation.data.roomId, b)
  };
  a.getConversationOptions = function() {
    var b = [];
    b.push({clickable:"reportConversation('" + a.selectedConversation.data.roomId + "')", text:Travian.translate("Button.Chat.Report")});
    if(null != a.selectedConversation.data.otherPlayer) {
      var e = a.selectedConversation.data.otherPlayer.data.playerId, f = c.ub(e), g = c.Yb(e);
      g ? g.data.sourceId != Travian.Player.data.playerId ? (b.push({clickable:"declineFriend(" + e + ")", text:Travian.translate("Chat.DeclineFriend")}), b.push({clickable:"acceptFriend(" + e + ")", text:Travian.translate("Chat.AcceptFriend")})) : b.push({clickable:"cancelFriendRequest(" + e + ")", text:Travian.translate("Chat.CancelFriend")}) : f ? b.push({clickable:"deleteFriend(" + e + ")", text:Travian.translate("Chat.RemoveFriend")}) : b.push({clickable:"addFriend(" + e + ")", text:Travian.translate("Chat.AddFriend")});
      b.push({clickable:"openWindow('profile', {'playerId': " + e + ", 'profileTab': 'playerProfile'})", text:Travian.translate("Chat.OpenProfile")});
      b.push({clickable:"deleteInboxEntry('" + a.selectedConversation.data.roomId + "')", text:Travian.translate("Chat.DeleteConversation")})
    }
    return b
  };
  a.addFriend = c.Ec;
  a.cancelFriendRequest = c.Sd;
  a.acceptFriend = c.Nd;
  a.deleteFriend = c.Yd;
  a.declineFriend = c.Wd;
  a.deleteInboxEntry = function(b) {
    c.Pf(b);
    a.selectedConversation = null;
    null != e && g.unsubscribe(e)
  };
  a.reportConversation = function(a) {
    c.nd(a)
  };
  a.deleteThread = function(a) {
    Travian.writeRequest("messageBoard/deleteThread", {boardType:boardType, boardId:boardId, threadId:a})
  };
  a.newThread = function() {
    a.openOverlay("igmSystemNewConversation", {isAllianceLeader:a.isAllianceLeader})
  };
  a.triggerSend = function() {
    if(!a.isBannedFromMessaging && a.isActivated) {
      var b = a.input.textToSend;
      0 < b.replace(/^\s+|\s+$/g, "").length && (a.send(b), a.input.textToSend = "")
    }
  };
  a.send = function(b) {
    a.input.textToSend = "";
    c.sendMessage(a.selectedConversation.data.roomId, b);
    a.chatInputState = 0;
    null != m && (c.Ba(m), m = null)
  };
  a.loadOlderConversations = function() {
    a.countConversationsDisplayed += 60;
    l()
  };
  a.subscribe(Travian.Player, function() {
    a.isAllianceLeader = !1;
    if(Travian.Player.data.isKing || 0 < (Travian.Player.data.allianceRights & Alliance.RIGHT_KING_CHAT)) {
      a.isAllianceLeader = !0
    }
    h != a.isAllianceLeader && (null !== h && Cache.t(a.messageBoard, 1), h = a.isAllianceLeader);
    a.isBannedFromMessaging = Travian.Player.data.isBannedFromMessaging;
    a.bannedFromMessagingUntil = Travian.Player.data.bannedFromMessaging;
    a.isActivated = Travian.Player.data.isActivated;
    a.isBannedFromMessaging && (a.answerPlaceholder = Travian.translate("Chat.BannedFromMessaging.AnswerPlaceholder"));
    a.isActivated || a.isBannedFromMessaging || (a.answerPlaceholder = Travian.translate("Chat.IsNotActivated"))
  });
  a.$on("$destroy", function() {
    delete a.w.setToMaxSize;
    null != e && g.unsubscribe(e)
  })
};
window.igmSystemCtrl.$inject = ["$scope", "ChatService", "$timeout"];
window.igmSystemNewConversationCtrl = function(a, c, b) {
  a.overlayConfig.k({inWindowPopupTitle:"Chat.StartConversation", inWindowPopupContentTemplate:"tpl/igm/igmSystemNewConversation.html"});
  var l = {};
  a.shareWith = "";
  a.secretSociety = 0;
  a.input = {shareMessage:"", adminOnly:!1};
  a.shareWithPlayerName = "";
  a.shareWithPlayerId = "";
  a.user = c.l();
  a.societies = Society.getCollection();
  a.isAllianceLeader = "true" == a.getParam("isAllianceLeader");
  a.subscribe(a.societies, function(a) {
    a = a.data;
    for(var b = 0;b < a.length;b++) {
      var e = a[b].data;
      l[e.groupId] = e.name
    }
  });
  a.shareWith = "player";
  a.dropdownData = {bodyClass:"shareWithSocietyDropDown", options:l, selected:a.secretSociety, callback:function(b) {
    a.secretSociety = b
  }};
  a.selectSharePlayer = function(b) {
    b ? (a.shareWith = "player", a.shareWithPlayerId = b.playerId) : a.shareWithPlayerId = ""
  };
  a.clearPlayerId = function() {
    a.shareWithPlayerId = ""
  };
  a.setShareWith = function(b) {
    a.shareWith = b
  };
  a.share = function() {
    if("" != a.input.shareMessage.trim()) {
      "player" == a.shareWith && (b.qh(a.shareWithPlayerId, a.input.shareMessage), a.closeOverlay());
      if("alliance" == a.shareWith) {
        var c = ChatRoom.TYPE_ALLIANCE;
        a.input.adminOnly && (c = ChatRoom.TYPE_ALLIANCE_LEADERS);
        b.sendMessage(c + "." + Travian.Player.data.allianceId + "." + (new Date).getTime(), a.input.shareMessage);
        a.closeOverlay()
      }
      "kingdom" == a.shareWith && (b.sendMessage(ChatRoom.TYPE_KINGDOM + "." + Travian.Player.data.kingdomId + "." + (new Date).getTime(), a.input.shareMessage), a.closeOverlay());
      "secretSociety" == a.shareWith && (b.sendMessage(ChatRoom.TYPE_SECRET_SOCIETY + "." + a.secretSociety + "." + (new Date).getTime(), a.input.shareMessage), a.closeOverlay())
    }
  }
};
window.igmSystemNewConversationCtrl.$inject = ["$scope", "SessionService", "ChatService"];
window.infoPopupCtrl = function(a) {
  a.context = a.getParam("context");
  a.w.windowName = "Notification.Info.Title." + a.context
};
window.infoPopupCtrl.$inject = ["$scope"];
window.introCtrl = function(a) {
  a.step = 1;
  a.nextStep = function() {
    a.step++;
    5 < a.step && a.closeWindow("intro")
  }
};
window.introCtrl.$inject = ["$scope"];
window.heroQuickInfoCtrl = function(a, c, b) {
  function l() {
    c.heroQuickInfo.prestigeStars = h.data.stars
  }
  var h = null, g = null;
  c.heroQuickInfo = {};
  c.hero = null;
  b.o(function() {
    c.playerId = b.getPlayerId();
    c.hero = Hero.get(c.playerId);
    h = b.l();
    h.subscribe(l);
    c.hero.subscribe(function() {
      g = c.hero.data;
      c.heroQuickInfo.status = {alive:g.status != Hero.STATUS_DEAD && g.status != Hero.STATUS_REVIVING, dead:g.status == Hero.STATUS_DEAD, reviving:g.status == Hero.STATUS_REVIVING};
      var a = g.baseRegenerationRate, a = a + (parseInt(g.bonuses[HeroItem.BONUS_HEALTH_REGEN]) || 0);
      c.heroQuickInfo.healthRegeneration = a;
      var a = g.xp - g.xpThisLevel, b = g.xpNextLevel - g.xpThisLevel, f = Math.floor(100 * (a / b));
      c.heroQuickInfo.xpAchieved = a;
      c.heroQuickInfo.xpNeeded = b;
      c.heroQuickInfo.xpPerc = f
    })
  })
};
window.heroQuickInfoCtrl.$inject = ["$rootScope", "$scope", "SessionService"];
window.layoutHeaderCtrl = function(a, c, b, l, h, g, e, m) {
  function f() {
    a.activeButton = b.getParam("page")
  }
  function n(b) {
    if("object" == typeof b) {
      var e = Fa(m.getActiveVillageId());
      a.villageCentered = e.x == b.x && e.y == b.y;
      requestAngularApply()
    }
  }
  a.buttons = ["village", "resources", "map"];
  a.setPage = function(b) {
    a.activeButton != b || ("map" != b || a.villageCentered) || e.Se(m.getActiveVillageId());
    a.openPage(b)
  };
  l.$on("sessionRightsChanged", function() {
    h(function() {
      a.goldActive = c.hasRight(Session.RIGHT_SPEND_GOLD)
    }, 3E3)
  });
  a.$on("urlChanged", function() {
    f()
  });
  c.o(function() {
    var b = c.getPlayerId(), e = Player.get(b);
    a.player = e;
    a.goldActive = c.hasRight(Session.RIGHT_SPEND_GOLD);
    e.subscribe(function() {
      a.silver && a.silver != e.data.silver && g.zd("#topMenu #subNavigation .subButton.silver i", "silverChanged", "animation_silver_large_illu");
      a.gold && a.gold != e.data.gold && g.zd("#topMenu #subNavigation .subButton.gold i", "goldChanged", "animation_gold_large_illu");
      a.gold = e.data.gold;
      a.silver = e.data.silver
    })
  });
  e.xh(n);
  n(e.Xb());
  f()
};
window.layoutHeaderCtrl.$inject = "$scope SessionService RoutingService $rootScope $timeout AnimationService MapService VillageService".split(" ");
window.notificationCtrl = function(a, c, b, l, h, g) {
  a.countLimit = 99;
  a.notifications = h.xg();
  a.notificationsFilter = {data:{type:"!" + Notifications.HELP_CENTER_MESSAGE_RECEIVED}};
  b.o(function() {
    b.L() || delete a.notificationsFilter
  });
  a.openNotification = function(e) {
    for(var c = null, f = 0;f < a.notifications.data.length;f++) {
      var h = a.notifications.data[f];
      h.data.type == e && (!h.deleted || h.deleted < h.data.time) && (c = h)
    }
    if(null != c) {
      h = !1;
      if(30 < e && 51 > e || 64 < e && 124 > e) {
        h = !0
      }
      f = !1;
      0 <= [Notifications.REPORT_FARMLIST_RAID, Notifications.REPORT_FARMLIST_COMPLETED_WITHOUT_LOSSES, Notifications.REPORT_FARMLIST_COMPLETED_WITH_LOSSES, Notifications.REPORT_FARMLIST_COMPLETED_WITH_FULL_LOSSES].indexOf(e) && (h = !1, f = !0);
      if(h) {
        if(e == Notifications.ALLIANCE_INVITATION_RECEIVED || e == Notifications.SOCIETY_INVITATION_RECEIVED || e == Notifications.DUKE_REQUEST_RECEIVED || e == Notifications.KING_REQUEST_RECEIVED) {
          var q = "Alliance";
          e == Notifications.SOCIETY_INVITATION_RECEIVED && (q = "SecretSociety");
          if(e == Notifications.DUKE_REQUEST_RECEIVED || e == Notifications.KING_REQUEST_RECEIVED) {
            q = "Kingdom"
          }
          l.R("type" + Building.TYPE.EMBASSY, function(b) {
            if(null != b && 0 < b.data.lvl) {
              a.openWindow("building", {location:b.data.locationId, tab:"Communities", subtab:q})
            }else {
              b = g.S();
              for(var e = !1, c = 0;c < b.data.length && !(e = l.za(b.data[c].data.villageId, Building.TYPE.EMBASSY), !1 !== e && 0 < e.data.lvl);c++) {
              }
              !1 !== e && 0 < e.data.lvl ? (g.ka(b.data[c].data.villageId), a.openWindow("building", {location:e.data.locationId, tab:"Communities", subtab:q})) : a.openWindow("infoPopup", {}, {context:"EmbassyNotFound"})
            }
          })
        }
        e == Notifications.FRIEND_REQUEST_RECEIVED && a.openWindow("society", {tab:"Friends"});
        e == Notifications.ACHIEVEMENT && a.openWindow("achievementNotifications", {});
        e != Notifications.AUCTION_WON && e != Notifications.AUCTION_OVERBID || a.openWindow("hero", {herotab:"Auctions", subtab:"Bids"});
        e != Notifications.KINGDOM_TAX_CHANGED && e != Notifications.KINGDOM_CHANGED || a.openWindow("society", {tab:"Kingdom"});
        e != Notifications.ALLIANCE_PROMOTION_RECEIVED && e != Notifications.ALLIANCE_DEGRADED || a.openWindow("society", {tab:"Alliance"});
        e == Notifications.SYSTEM_MESSAGE && a.openWindow("systemMessage");
        e != Notifications.KINGDOM_OASIS_WON && e != Notifications.KINGDOM_OASIS_LOST || a.openPage("map", "centerId", c.data.itemId + "_" + (new Date).getTime());
        e == Notifications.OASIS_BONUS_CHANGED && a.openWindow("mapCellDetails", {cellId:c.data.itemId});
        e == Notifications.HELP_CENTER_MESSAGE_RECEIVED && window.open("/api/forwardToHelpcenter.php?sid=" + b.ac() + "&ticketId=" + c.data.itemId, "_blank");
        e == Notifications.ADDED_CARDGAME_FREE_ROLL && a.openWindow("hero", {herotab:"CardGame"});
        e == Notifications.REFERRAL_REWARD_CAN_COLLECT && a.openWindow("payment", {paymenttab:"InviteFriend", subtab:"overview"});
        e != Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE && e != Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE_SOON || l.R("type" + Building.TYPE.RESIDENCE, function(b) {
          null != b && a.openWindow("building", {location:b.data.locationId, tab:"CulturePoints"})
        });
        e == Notifications.NEW_ROBBER_CAMPS && a.openPage("map", "centerId", c.data.itemId + "_" + (new Date).getTime());
        e != Notifications.DUKE_REQUEST_ACCEPTED && e != Notifications.DUKE_REQUEST_DECLINED && e != Notifications.DUKE_ABDICATED && e != Notifications.DUKE_DISMISSED || a.openWindow("society", {tab:"Kingdom", subtab:"Info"})
      }else {
        var p = Report.COLLECTION_PERSONAL, h = "Own";
        c.data.type == Notifications.REPORT_SHARED_KINGDOM && (h = "Kingdom", p = Report.COLLECTION_KING);
        c.data.type == Notifications.REPORT_SHARED_ALLIANCE && (h = "Alliance", p = Report.COLLECTION_ALLIANCE);
        c.data.type == Notifications.REPORT_SHARED_SOCIETIES && (h = "Society", p = Report.COLLECTION_SOCIETY);
        if(1 == c.data.count) {
          a.openWindow("reports", {tab:h, reportId:c.data.itemId, collection:p, overlayreports:"reportSingle"})
        }else {
          if(10 == e) {
            a.openWindow("reports", {tab:"Own", reportTypes:"10,11,12,13,14", lastTime:c.data.time})
          }else {
            p = c.data.type;
            if(c.data.type == Notifications.REPORT_SHARED_OWN || c.data.type == Notifications.REPORT_SHARED_ALLIANCE || c.data.type == Notifications.REPORT_SHARED_KINGDOM || c.data.type == Notifications.REPORT_SHARED_SOCIETIES) {
              p = Notifications.REPORT_SHARED
            }
            f && (p = Notifications.REPORT_FARMLIST_RAID);
            a.openWindow("reports", {tab:h, reportTypes:p, lastTime:c.data.time})
          }
        }
      }
      a.deleteNotification(e)
    }
  };
  a.deleteNotification = function(a) {
    Travian.writeRequest("player/deleteNotification", {type:a})
  };
  a.deleteAllNotifications = function() {
    Travian.writeRequest("player/deleteAllNotifications")
  }
};
window.notificationCtrl.$inject = "$scope $rootScope SessionService BuildingService NotificationService VillageService ServertimeService".split(" ");
window.notificationFlashCtrl = function(a, c, b, l, h, g) {
  a.kingdomRole = {governor:Player.KINGDOM_ROLE_GOVERNOR, king:Player.KINGDOM_ROLE_KING, duke:Player.KINGDOM_ROLE_DUKE};
  a.notifications = b.og();
  a.chatNotifications = b.kg();
  a.close = function(a) {
    b.remove(a)
  };
  a.chatNotificationOver = function(a) {
    a["class"] = "fadeIn fullOpacity";
    b.Jc(a)
  };
  a.chatNotificationOut = function(a) {
    a["class"] = "fadeIn";
    b.setTimeout(a)
  };
  a.openConversation = function(a) {
    c.openWindow("igm", {}, {roomId:a})
  };
  a.closeChatNotification = function(a) {
    b.Jc(a);
    b.remove(a, Notifications.TYPE_CHAT)
  };
  a.$on("chatInboxUpdated", function(a, c) {
    var f = null, g = null, l = {}, p = {}, g = h.Wa(c.roomId), f = g.subscribe(function() {
      var a = g.data[g.data.length - 1];
      if(a.data.playerId != Travian.Player.data.playerId) {
        var e = {playerId:a.data.playerId, playerName:a.data.playerName, roomId:a.data.roomId, text:a.data.text, timestamp:a.data.timestamp};
        void 0 !== l[a.data.playerId] && p[a.data.playerId].unsubscribe(l[a.data.playerId]);
        p[a.data.playerId] = ChatUser.get(a.data.playerId);
        l[a.data.playerId] = p[a.data.playerId].subscribe(function(a) {
          e.kingdomRole = a.data.kingdomRole;
          e.allianceId = a.data.allianceId;
          b.zf(e);
          p[a.data.playerId].unsubscribe(l[a.data.playerId]);
          delete l[a.data.playerId]
        });
        p[a.data.playerId].filled && (p[a.data.playerId].unsubscribe(l[a.data.playerId]), delete l[a.data.playerId]);
        g.unsubscribe(f)
      }
    })
  });
  a.$on(Notifications.TYPE_FLASH, function(a, c) {
    var f = "information", h = 0, q = "";
    isNaN(c) ? (q = Travian.translate("Notification_" + c.notificationId, {option:c.option}), h = c.notificationId) : (q = Travian.translate("Notification_" + c), h = c);
    l.Le(c);
    var p = [Notifications.ATTACK_VILLAGE_STARTED, Notifications.AUCTION_OVERBID, Notifications.CELEBRATION_ENDED, Notifications.PLAYER_IS_ATTACKED];
    "object" == typeof c && c.type == Notifications.ACHIEVEMENT ? g.showScreenFlashNotification("achievement", {key:c.key, special:c.special, level:c.level, reward:c.reward, extraData:c.extraData}) : (0 <= p.indexOf(h) && (f = "warning"), b.Qa(q, f, 4E3))
  })
};
window.notificationFlashCtrl.$inject = "$scope $rootScope NotificationService AudioService ChatService AnimationService".split(" ");
window.notificationHelpCtrl = function(a, c, b, l) {
  var h = new IngameHelp;
  c.o(function() {
    a.settings = Settings.get(c.getPlayerId());
    a.helpNotifications = Notifications.getCollection(Notifications.TYPE_IN_GAME_HELP);
    a.helpNotifications.subscribe(function() {
      a.helpTopic = null;
      0 < a.helpNotifications.data.length && (a.helpTopic = a.helpNotifications.data[a.helpNotifications.data.length - 1].data.type, h.getById(a.helpTopic) || (a.closeHelpNotification(), a.helpTopic = null))
    })
  });
  a.closeHelpNotification = function() {
    Travian.writeRequest("player/deleteNotification", {type:a.helpTopic, notificationType:Notifications.TYPE_IN_GAME_HELP})
  };
  a.openHelpNotification = function() {
    null != a.helpTopic && (b.Za("help") ? l.m("pageId", a.helpTopic) : a.openWindow("help", {pageId:a.helpTopic}), Travian.writeRequest("player/deleteNotification", {type:a.helpTopic, notificationType:Notifications.TYPE_IN_GAME_HELP}))
  }
};
window.notificationHelpCtrl.$inject = ["$scope", "SessionService", "WindowService", "RoutingService"];
window.notificationTimedCtrl = function(a, c, b, l, h, g, e, m, f) {
  function n() {
    "questBook" == m.getParam("window") ? (f.cancel(r), r = f(n, 500)) : (a.openWindow("welcomePackage"), f.cancel(r))
  }
  function q() {
    if("undefined" != typeof a.player && "undefined" != typeof a.notifications) {
      for(var b = 0;b < a.notifications.data.length;b++) {
        a.notifications.data[b].data.icon = Notifications.getNotificationIcon(a.notifications.data[b].data.type, "medium"), a.notifications.data[b].data.type == Notifications.GLOBAL_WORLD_ENDED && a.openWindow("worldEndedModal"), -1 == a.player.data.uiStatus && a.notifications.data[b].data.type == Notifications.COOP_PACKAGE_GRANTED && ("questBook" != m.getParam("window") ? a.openWindow("welcomePackage") : r = f(n, 500))
      }
    }
  }
  var p = [Notifications.TIMER_PLUS_RUNS_OUT, Notifications.TIMER_GOLD_PROMOTION, Notifications.TIMER_RES_BONUS_RUNS_OUT, Notifications.TIMER_CROP_BONUS_RUNS_OUT, Notifications.TIMER_NATAR_SPIES_ATTACK, Notifications.GLOBAL_WORLD_ENDED, Notifications.COOP_PACKAGE_GRANTED, Notifications.SYSTEM_MESSAGE, Notifications.RELOCATION];
  a.activationIcon = Notifications.getNotificationIcon(Notifications.ACTIVATION_NEEDED, "medium");
  var r = null, s = null;
  b.o(function() {
    a.notifications = Notifications.getCollection(Notifications.TYPE_TIMED);
    a.notifications.subscribe(q);
    null == s && (s = a.player.subscribe(q));
    var b = e.ba();
    "undefined" != typeof b.getMarketingTracking && (b = b.getMarketingTracking(), window.mellonBridgeInit(b))
  });
  a.openNotification = function(b) {
    if(a.isClickable(b)) {
      switch(b) {
        case Notifications.TIMER_PLUS_RUNS_OUT:
        ;
        case Notifications.TIMER_GOLD_PROMOTION:
        ;
        case Notifications.TIMER_RES_BONUS_RUNS_OUT:
        ;
        case Notifications.TIMER_CROP_BONUS_RUNS_OUT:
          a.openWindow("payment", {});
          break;
        case Notifications.TIMER_NATAR_SPIES_ATTACK:
          a.openPage("map", "centerId", xy2id(0, 0) + "_" + (new Date).getTime());
          break;
        case Notifications.GLOBAL_WORLD_ENDED:
          a.openWindow("worldEndedModal");
          break;
        case Notifications.COOP_PACKAGE_GRANTED:
          a.openWindow("welcomePackage");
          break;
        case Notifications.SYSTEM_MESSAGE:
          a.openWindow("systemMessage");
          break;
        case Notifications.RELOCATION:
          a.openWindow("relocation")
      }
    }
  };
  a.useMellon = config.mellon.useMellon;
  a.openActivation = function() {
    if(a.useMellon) {
      var b = e.ba().getActivation();
      e.ia(b).open()
    }else {
      window.open(config.portal + config.activation + "-" + (new Date).getTime(), "_blank")
    }
  };
  a.isClickable = function(a) {
    return-1 < p.indexOf(a) ? !0 : !1
  }
};
window.notificationTimedCtrl.$inject = "$scope $rootScope SessionService BuildingService MapService ServertimeService MellonService RoutingService $timeout".split(" ");
window.populationCtrl = function(a, c, b, l) {
  function h() {
    null != m && m.unsubscribe(f);
    m = c.i();
    f = m.subscribe(e);
    n = b.B([m.data.villageId], [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING], g, a)
  }
  function g() {
    var b, e, c = 0, f = m.data.villageId;
    if(null != n) {
      var g = n.u(null, [Troops.COLLECTION_STATIONARY]);
      for(b = 0;b < g.length;b++) {
        e = g[b].data, c += e.supplyTroops
      }
      g = n.u(null, [Troops.COLLECTION_ELSEWHERE]);
      for(b = 0;b < g.length;b++) {
        e = g[b].data, "trap" == e.status && (c += e.supplyTroops), "support" == e.status && e.villageIdSupply == f && (c += e.supplyTroops)
      }
      g = n.u(null, [Troops.COLLECTION_MOVING]);
      for(b = 0;b < g.length;b++) {
        e = g[b].data, e.playerId == q.data.playerId && e.villageIdSupply == f && (c += e.supplyTroops)
      }
      a.cropConsumption = c
    }
  }
  function e() {
    a.population = m.data.supplyBuildings;
    a.supply = m.data.supplyBuildings
  }
  a.Building = Building;
  a.cropConsumption = 0;
  var m = null, f = null, n = null, q = l.l();
  h();
  a.$on("activeVillageChanged", h)
};
window.populationCtrl.$inject = ["$scope", "VillageService", "TroopsService", "SessionService"];
window.serverTimeCtrl = function(a, c) {
  a.timeZoneOffset = 0;
  c.o(function() {
    var b = Settings.get(Travian.Player.data.playerId);
    b.subscribe(function() {
      a.timeZoneOffset = b.data.timeZone - Travian.Config.tzone_offset;
      0 < a.timeZoneOffset && (a.timeZoneOffset = "+" + a.timeZoneOffset)
    })
  });
  Travian.tick.bind(function() {
    Math.round(a.serverTime) != Math.round(a.currentServerTime) && (a.serverTime = a.currentServerTime, a.$$phase || a.$digest())
  })
};
window.serverTimeCtrl.$inject = ["$scope", "SessionService"];
window.sidebarMenuCtrl = function(a, c, b, l, h, g) {
  function e() {
    0 < n.data.kingdomId && (a.treasures = KingdomTreasures.get(n.data.kingdomId));
    if(0 < n.data.allianceId) {
      var b = Alliance.get(n.data.allianceId);
      a.victoryPoints = b.data.victoryPoints || 0
    }
  }
  function m() {
    if(n && q) {
      r = q.Hc(p);
      a.total = {alliance:0, kingdom:0};
      a.attacksCounter = 0;
      for(var b in r) {
        for(var e in r[b].villages) {
          var c = r[b].villages[e], f = "alliance";
          null != s && (g.cancel(s), s = null);
          if(!1 === c.kingdom) {
            s = g(m, 100);
            break
          }
          0 !== c.kingdom && c.kingdom == n.data.kingdomId && (f = "kingdom");
          a.total[f]++
        }
      }
      a.show.alliance ? a.attacksCounter = a.total.alliance + a.total.kingdom : !a.show.alliance && a.show.kingdom && (a.attacksCounter = a.total.kingdom)
    }
  }
  function f() {
    for(var b, e, c = 0, f = [v, u], g = 0;g < f.length;g++) {
      var m = f[g];
      if(null != m) {
        for(b = 0;b < m.data.length;b++) {
          e = m.data[b], Quest.isAdventure(e.data.id) || (Quest.isEnvoyQuest(e.data.id) || e.data.status != Quest.STATUS_ACTIVATABLE && e.data.status != Quest.STATUS_DONE) || c++
        }
      }
    }
    a.questBookCount = c
  }
  var n = null, q = null, p, r = {}, s = null;
  a.attacksCounter = 0;
  a.members = {alliance:{}, kingdom:{}};
  a.total = {alliance:0, kingdom:0};
  a.show = {kingdom:!0, alliance:!0};
  a.chat = h.getViewModel();
  a.animateIgm = !1;
  a.$on("chatInboxUpdated", function() {
    a.animateIgm || (a.animateIgm = !0, g(function() {
      a.animateIgm = !1
    }, 1E3))
  });
  a.attackLimit = 99;
  var v = null, u = null;
  b.o(function() {
    n = b.l();
    n.subscribe(m);
    n.subscribe(e);
    a.settings = Settings.get(n.data.playerId);
    a.settings.subscribe(function() {
      a.show = a.settings.getAttackSettings();
      m()
    });
    q = l.B(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], m, a);
    p = c.getActiveVillageId();
    v = Quest.getCollection();
    u = Quest.getCollection(QuestGiver.DAILY);
    Cache.cb([v, u], f)
  });
  a.$on("activeVillageChanged", function() {
    p = c.getActiveVillageId()
  });
  a.$on("$destroy", function() {
    null != s && (g.cancel(s), s = null)
  })
};
window.sidebarMenuCtrl.$inject = "$scope VillageService SessionService TroopsService ChatService $timeout".split(" ");
window.troopMovementsCtrl = function(a, c, b, l) {
  function h() {
    f = c.getActiveVillageId();
    0 != f && (n = c.i(), g())
  }
  function g() {
    if(0 != f && null != m) {
      for(var b = {incoming_attacks:[], incoming_support:[], incoming_adventure:[], incoming_tribute:[], incoming_merchant:[], incoming_merchant_return:[], incoming_treasureResources:[], incoming_oasisResources:[], "return":[], incoming_healing:[], outgoing_attacks:[], outgoing_support:[], outgoing_settlement:[], outgoing_adventure:[], outgoing_merchant:[], outgoing_merchant_return:[]}, c = function(a, b) {
        return a.data.movement.timeFinish >= b.data.movement.timeFinish ? a.data.movement.timeFinish == b.data.movement.timeFinish && a.data.troopId < b.data.troopId ? -1 : 1 : -1
      }, g = m.u([f], [Troops.COLLECTION_MOVING]), h, n, r = 0;r < g.length;r++) {
        h = g[r], n = h.getMovementGroup(f), h.fetchNames(), null !== n && "undefined" != typeof b[n] && (b[n].movementIcon = Troops.MOVEMENT_ICON[h.data.movement.movementType], b[n].push(h))
      }
      null != q && (l.cancel(q), q = null);
      h = g = null;
      for(n in b) {
        b[n].sort(c), 0 < b[n].length && 0 > n.indexOf("merchant") && (r = b[n][0], (g > r.data.movement.timeFinish || null == g) && 0 < r.data.movement.timeFinish && (g = r.data.movement.timeFinish, h = r))
      }
      null != h && e(h, g - Travian.ServerTime);
      3 <= b.outgoing_attacks.length && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_FARM_LISTS);
      p = [];
      for(var C in b) {
        c = b[C], c.name = C, -1 !== c.name.indexOf("incoming") || -1 !== c.name.indexOf("return") ? ("incoming_merchant" == c.name ? c.tooltipTemplate = "tpl/mainlayout/partials/troopMovementIncomingTradeTooltip.html" : (c.tooltipTemplate = "tpl/mainlayout/partials/troopMovementIncomingTooltip.html", -1 !== c.name.indexOf("return") && (c.tooltipTemplate = "tpl/mainlayout/partials/troopMovementReturnTooltip.html")), c.movementDirection = "incoming") : (c.tooltipTemplate = "outgoing_merchant" == c.name ? 
        "tpl/mainlayout/partials/troopMovementOutgoingTradeTooltip.html" : "tpl/mainlayout/partials/troopMovementOutgoingTooltip.html", c.movementDirection = "outgoing"), 0 < c.length && p.push(c)
      }
      a.troopMovements = p;
      "undefined" != typeof a.updateOverviewHeight && a.updateOverviewHeight()
    }
  }
  function e(a, b) {
    q = l(function() {
      Travian.sanityCheck({villageId:f, eventType:"Troops", eventId:a.data.troopId, eventData:a.data})
    }, 1E3 * (b + 300))
  }
  a.troopMovements = [];
  a.troopMovementLimit = 999;
  var m = null, f = 0, n = null, q = null, p = [];
  a.openRallypoint = function(b) {
    "undefined" != typeof b ? (b = b.charAt(0).toUpperCase() + b.slice(1), a.openWindow("building", {location:32, tab:"Overview", subtab:b})) : a.openWindow("building", {location:32})
  };
  a.$on("activeVillageChanged", h);
  h();
  var m = b.B(null, [Troops.COLLECTION_MOVING], g, a), n = c.i(), r = n.subscribe(g);
  a.$on("$destroy", function() {
    n.unsubscribe(r)
  })
};
window.troopMovementsCtrl.$inject = ["$scope", "VillageService", "TroopsService", "$timeout"];
window.troopsStationedCtrl = function(a, c, b, l, h) {
  function g() {
    q = b.getActiveVillageId();
    var a = h.l();
    0 != q && null != a && (f = a.data.tribeId, m())
  }
  function e(a, b) {
    return parseInt(b.amount) > parseInt(a.amount) ? 1 : parseInt(b.amount) < parseInt(a.amount) ? -1 : 0
  }
  function m() {
    for(var b = 0;b < s.length;b++) {
      s[b].heroObj.unsubscribe(s[b].heroObjSubscription)
    }
    s = [];
    var g = {sum:0, distribution:{support:[], others:{sum:0, count:0}}}, b = {sum:0, tribe:"", units:[]};
    p.length = 0;
    p = [null, angular.copy(b), angular.copy(b), angular.copy(b), angular.copy(b)];
    b = n.u([q]);
    $.each(b, function(b, h) {
      var m = h.data, l = m.tribeId, n = m.status, q = m.playerId, r = m.villageId;
      p[l].tribeId = l;
      p[l].tribe = Player.TRIBE_NAME[l];
      $.each(h.data.units, function(a, b) {
        var c = p[l].units[a] || angular.copy(g);
        c.sum += parseInt(b);
        p[l].sum += parseInt(b);
        var m = {player:q, village:r, amount:b};
        n == Troops.STATUS_HOME ? c.distribution.own = m : c.distribution.support.push(m);
        c.distribution.support.sort(e);
        c.distribution.support.length > (l == f ? 2 : 3) && (m = c.distribution.support.pop(), c.distribution.others.sum += parseInt(m.amount), c.distribution.others.count++);
        p[l].units[a] = c
      });
      if("undefined" != typeof p[l].units && "undefined" != typeof p[l].units[Troops.TYPE_HERO]) {
        p[l].unitValues = {};
        p[l].unitValues[Troops.TYPE_HERO] = {attack:-1, defence:-1, defenceCavalry:-1};
        q != Travian.Player.data.playerId && Cache.A("Hero:" + q);
        var v = Hero.get(q), m = v.subscribe(function(b, e) {
          c(function() {
            for(var c = null, f = 0;f < a.troopsStationed.length;f++) {
              a.troopsStationed[f] && a.troopsStationed[f].tribeId == e && (c = f)
            }
            if(null !== c) {
              var f = -1, g = !1;
              b == Travian.Player.data.playerId && (1 == a.troopsStationed[c].units[Troops.TYPE_HERO].sum && (f = parseInt(v.data.fightStrength + (v.data.bonuses[HeroItem.BONUS_FIGHT_STRENGTH] || 0))), "undefined" !== typeof a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.own && (a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.own.heroLvl = v.data.level, g = !0));
              if(!g) {
                for(g = 0;g < a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.support.length;g++) {
                  a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.support[g].player == b && (a.troopsStationed[c].units[Troops.TYPE_HERO].distribution.support[g].heroLvl = v.data.level)
                }
              }
              a.troopsStationed[c].unitValues[Troops.TYPE_HERO] = {attack:f, defence:f, defenceCavalry:f}
            }
          })
        }.bind(this, q, l));
        s.push({heroObj:v, heroObjSubscription:m})
      }
      "undefined" != typeof a.updateOverviewHeight && a.updateOverviewHeight()
    });
    p[0] = p[f];
    p.splice(f, 1);
    a.troopsStationed = p;
    a.openGroup()
  }
  a.troopsStationed = [];
  a.troopsStationedLimit = 99;
  a.Troops = Troops;
  a.troopConfig = Travian.Config.troopConfig;
  a.heroFightStrength = 0;
  var f = null, n = null, q = null, p = [], r = {}, s = [];
  a.openGroup = function(b) {
    "undefined" != typeof b && (0 < a.troopsStationed[b].sum && (b in r || (r[b] = !1), r[b] = !r[b]), a.groupsStatus = r, a.updateOverviewHeight())
  };
  a.getTroopId = function(a, b) {
    return b == Troops.TYPE_HERO ? "hero" : nrToUnitId(b, a)
  };
  n = l.B(null, [Troops.COLLECTION_STATIONARY], m, a);
  a.$on("activeVillageChanged", g);
  a.$on("$destroy", function() {
    for(var a = 0;a < s.length;a++) {
      s[a].heroObj.unsubscribe(s[a].heroObjSubscription)
    }
  });
  g()
};
window.troopsStationedCtrl.$inject = ["$scope", "$timeout", "VillageService", "TroopsService", "SessionService"];
window.maintenanceCtrl = function(a) {
  a.w.windowName = "Maintenance";
  a.maintenance = Gameworld.get();
  var c = null;
  a.subscribe(a.maintenance, function() {
    null == c ? (c = a.maintenance.hasMaintenance()) || a.closeWindow("maintenance") : !0 != c || a.maintenance.hasMaintenance() || window.setTimeout(function() {
      window.location.href = "/"
    }, 1E3 + 6E4 * Math.random())
  })
};
window.maintenanceCtrl.$inject = ["$scope", "RoutingService", "SessionService", "$rootScope"];
window.manualBuildingsCtrl = function(a) {
  var c = 0;
  a.showOverview = !0;
  var b = Travian.Config.buildingConfig, l = [0];
  delete b[0];
  Travian.Config.teahouse ? delete b[Building.TYPE.BREWERY] : delete b[Building.TYPE.TEAHOUSE];
  $.each(b, function(a, b) {
    l.push(b.buildingType)
  });
  a.setEntries(l);
  a.$parent.$watch("glossarId", function() {
    c = a.$parent.glossarId;
    if(0 == c) {
      a.showOverview = !0, a.buildingsData = b
    }else {
      a.showOverview = !1;
      a.buildingData = b[c];
      a.resources = Resources.STRING;
      var h = Travian.Player.data.tribeId;
      0 < a.buildingData.tribeId && (h = a.buildingData.tribeId);
      a.imageTribeId = h
    }
  })
};
window.manualBuildingsCtrl.$inject = ["$scope"];
window.manualCtrl = function(a) {
  function c() {
    g = "undefined" != typeof a.getParam(l) ? void 0 != typeof m.indexOf(a.getParam(l)) ? a.getParam(l) : e : e;
    a.m(l, m[g]);
    "undefined" != typeof a.getParam(h) ? b(a.getParam(h)) : b(0)
  }
  function b(b) {
    $.inArray(f, b) ? a.glossarId !== b && (a.glossarId = b, a.m(h, b)) : a.toOverview()
  }
  var l = "overlaytab", h = "glossarId", g = "";
  a.glossarId = "";
  var e = 1, m = [];
  m[e] = "Units";
  m[2] = "Buildings";
  m[3] = "Misc";
  var f = [];
  a.setEntries = function(a) {
    f = a
  };
  a.manualTabConfig = {};
  a.manualTabConfig.tabs = [m[e], m[2], m[3]];
  a.manualTabConfig.bodyTemplatePrefix = "tpl/manual/tabs/";
  a.manualTabConfig.routeNamedParam = l;
  a.manualTabConfig.tabName = "subtab";
  a.manualTabConfig.tabType = "subtab";
  a.manualTabConfig.disableScrolling = !0;
  a.overlayConfig.k({inWindowPopupTemplate:"tpl/manual/Manual.html"});
  c();
  a.forward = function() {
    var c = f.indexOf(a.glossarId) + 1;
    c >= f.length && (c = 0);
    b(f[c])
  };
  a.back = function() {
    var c = f.indexOf(a.glossarId) - 1;
    0 > c && (c = f.length - 1);
    b(f[c])
  };
  a.toOverview = function() {
    b(0)
  };
  a.goToEntry = function(a) {
    b(a)
  };
  a.goToBuilding = function(c) {
    if(2 == g) {
      b(c)
    }else {
      var e = {};
      e[l] = m[2];
      e[h] = c;
      a.openOverlay("manual", e)
    }
  };
  a.$on("urlChanged", function(b, e) {
    e[l] && a.removeParam(h);
    c()
  });
  a.$on("$destroy", function() {
    a.removeParam(h)
  })
};
window.manualCtrl.$inject = ["$scope"];
window.manualMiscCtrl = function(a) {
  var c = 0;
  a.showOverview = !0;
  a.links = {};
  a.links.Adventure = ["Hero", "Items"];
  a.links.Alliance = "Kingdoms Kings Governors Alliance StolenGoodsAndTreasures WonderOfTheWorld".split(" ");
  a.links.Auctions = ["Adventure", "Hero", "Items"];
  a.links.Siege = [];
  a.links.StolenGoodsAndTreasures = ["RobberCamps", "Governors", "Kings", "TributeStorage", "Hero"];
  a.links.TerritoryInfluence = ["Kings", "StolenGoodsAndTreasures", "Kingdoms", "Alliance"];
  a.links.Items = ["Adventure", "Hero", "Auctions"];
  a.links.SecretSocieties = ["Kingdoms", "Alliance"];
  a.links.Hero = ["Adventure", "Items", "Governors", "StolenGoodsAndTreasures", "Kings"];
  a.links.Kings = ["TerritoryInfluence", "Governors", "Kingdoms", "Alliance"];
  a.links.Kingdoms = ["Kings", "TerritoryInfluence", "Alliance", "RobberCamps", "Oases"];
  a.links.Oases = ["Kingdoms"];
  a.links.RobberCamps = ["Kingdoms", "StolenGoodsAndTreasures"];
  a.links.Raid = ["StolenGoodsAndTreasures"];
  a.links.Governors = ["Kings", "Kingdoms", "Alliance", "RobberCamps", "StolenGoodsAndTreasures"];
  a.links.TributeStorage = ["Governors", "Kings", "StolenGoodsAndTreasures"];
  a.links.WonderOfTheWorld = ["Alliance"];
  var b = [], l;
  for(l in a.links) {
    b.push(l)
  }
  a.entries = b;
  a.setEntries(b);
  a.$parent.$watch("glossarId", function() {
    c = a.$parent.glossarId;
    a.showOverview = 0 == c ? !0 : !1
  })
};
window.manualMiscCtrl.$inject = ["$scope"];
window.manualUnitsCtrl = function(a) {
  var c = 0;
  a.showOverview = !0;
  a.Troops = Troops;
  var b = [];
  for(Y = 0;30 >= Y;Y++) {
    b.push(Y)
  }
  a.setEntries(b);
  a.$parent.$watch("glossarId", function() {
    c = a.$parent.glossarId;
    0 == c ? a.showOverview = !0 : (a.showOverview = !1, a.troopData = Travian.Config.troopConfig[c], a.tribes = Player.TRIBE_NAME, a.resources = Resources.STRING)
  });
  a.getGlossarId = function(a, b) {
    return 10 * (a - 1) + b
  }
};
window.manualUnitsCtrl.$inject = ["$scope"];
window.mapCellDetailsCtrl = function(a, c, b, l, h) {
  function g() {
    a.troopsHere = [];
    for(var b = u.u(), c = 0;c < b.length;c++) {
      var e = b[c].data;
      (e.villageIdLocation == q || "undefined" != typeof a.village && a.village.villageId == e.villageIdLocation) && a.troopsHere.push(e)
    }
  }
  function e() {
    a.attackingTroops = {cnt:0, first:0};
    for(var b = t.u(), c = 0;c < b.length;c++) {
      var e = b[c].data;
      e.villageIdTarget == q && (a.attackingTroops.cnt++, 0 == a.attackingTroops.first || a.attackingTroops.first > e.timeFinish) && (a.attackingTroops.first = e.timeFinish)
    }
    0 != r.data.hasNPC && "undefined" != typeof r.data.npcInfo && (a.attackingTroops = r.data.npcInfo.attacks)
  }
  function m() {
    z || (z = !0, Travian.request("society/getSharedInformations", {villageId:q}, function(b) {
      a.sharedInformations = b;
      if("undefined" != typeof b.cropDetails && null != b.cropDetails) {
        a.productionSign = "+";
        a.cropClass = "positive";
        if(b.cropDetails.current == b.cropDetails.max || 0 > b.cropDetails.production) {
          a.cropClass = "negative"
        }
        0 > b.cropDetails.production && (a.productionSign = "");
        a.cropPerc = 100 * (b.cropDetails.current / b.cropDetails.max);
        a.sharedInformations.cropDetails.current = Math.floor(a.sharedInformations.cropDetails.current)
      }
      "undefined" != typeof b.nextAttack && !1 != b.nextAttack && (a.showAttack = !0)
    }))
  }
  function f() {
    var c = b.i();
    if(null != c.data.villageId) {
      a.hasRallyPoint = h.Ib(b.getActiveVillageId(), Building.TYPE.RALLY_POINT);
      a.mapDetails = r.data;
      a.mapDetails.ownTroops && p.set(a.mapDetails.ownTroops);
      null != r.data.resType && (a.resources = getResourceAllocation(r.data.resType.toString()));
      a.resDistribution = r.data.resType;
      a.options = [];
      a.options.push({clickable:"openWindow('markerMenu',{'cellId': " + q + "})", text:Travian.translate("ContextMenu.button.marker")});
      3 <= b.Wb().data.units[Troops.TYPE_SETTLER] ? a.enoughSettlers = !0 : a.enoughSettlers = !1;
      if(1 == r.data.hasVillage) {
        s.getTributes(), a.village = s.data, m(), a.image = "village/f2-ltr.png", a.fieldType = "village", a.villageName = s.data.name, v.data.isKing && (v.data.playerId != s.data.playerId && s.data.belongsToKing == v.data.playerId && !s.hasActiveTreasury()) && (a.showTributes = !0, a.activeTreasury = c.hasActiveTreasury(), Cache.t(s, 60)), a.options.push({clickable:"openWindow('reports',{'tab': 'Search', 'villageId': " + q + "})", text:Travian.translate("ContextMenu.button.reports")}), h.R("type" + 
        Building.TYPE.MARKET, function(b) {
          null !== b && 0 < s.data.villageId && a.options.push({clickable:"openWindow('building',{'location': " + b.data.locationId + ", 'tab': 'Send', 'destId': " + q + ", destPlayerId: " + s.data.playerId + "})", text:Travian.translate("ContextMenu.button.sendTraders")})
        }), r.data.isWonder && (r.data.isConquered = !Player.isNPC(s.data.playerId), a.wonderMaxLvl = Travian.Config.endWorldWithWorldWonderLevel)
      }else {
        if(!0 == r.data.isOasis) {
          Cache.t(r, 60);
          a.image = "oasis/w" + r.data.oasisType + "-ltr.jpg";
          a.fieldType = "oasis";
          a.animals = !1;
          a.isInTop5 = !1;
          a.inOwnKingdom = 0 < Travian.Player.data.kingdomId && Travian.Player.data.kingdomId == r.data.kingdomId;
          a.inVillageReach = n(q);
          if(r.data.oasisStatus == Village.OASIS_STATUS_WILD) {
            a.villageName = Travian.translate("Oasis.unoccupied");
            var f = PlayerProgressTrigger.TOPIC_OASES + "_" + PlayerProgressTrigger.HELP_PAGE_WILD_OASES, l = null
          }else {
            a.villageName = Travian.translate("Oasis.occupied");
            var f = PlayerProgressTrigger.TOPIC_OASES + "_" + PlayerProgressTrigger.HELP_PAGE_TROOPS_IN_OASIS, l = PlayerProgressTrigger.CHECK_ASSIGN_OASIS_QUEST_SOLVED
          }
          PlayerProgressTrigger.triggerInGameHelp(f, l);
          if(4 == r.data.troops.tribeId && "undefined" == typeof r.data.troops.units.length) {
            a.units = {};
            a.troopDetails = r.data.troops;
            a.oasisTroops = r.data.troops;
            a.oasisTroops.originalTroops = a.oasisTroops.units;
            for(var t in a.oasisTroops.units) {
              f = 10 * (r.data.troops.tribeId - 1) + parseInt(t), a.units[t] = {}, a.units[t].amount = a.oasisTroops.units[t], a.units[t].name = Travian.translate("Troop_" + f), a.units[t].number = parseInt(t), 0 < a.units[t].amount && (a.animals = !0)
            }
            a.selectedCharge = r.data;
            a.options.push({clickable:"openInSim()", text:Travian.translate("ContextMenu.button.openInSim")})
          }
          a.playerRank = {};
          for(t = 0;t < r.data.playersWithTroops.length;t++) {
            f = r.data.playersWithTroops[t], a.playerRank[f.playerId] = {rank:t, bonus:f.bonus}
          }
          a.villageProductionBonus = {};
          null != r.data.ownTroops && 1 <= r.data.ownTroops.rank && (a.isInTop5 = !0, a.villageProductionBonus = b.gg(r.data.ownTroops.usedByVillage, r.data.ownTroops.bonus));
          a.embassyLocationId = -1;
          a.isInTop5 || (a.activeVillageInReach = Ea(c.data.villageId, q), a.activeVillageInReach && h.R("type" + Building.TYPE.EMBASSY, function(b) {
            b && 0 < b.data.lvl && (a.embassyLocationId = b.data.locationId)
          }));
          a.requestInfluenceData = function(a, b) {
            if(!(0 >= b)) {
              var c = +new Date;
              Travian.request("village/getVillagesWithInfluenceOnOasisForPlayer", {oasisId:q, playerId:b}, function(e) {
                var f = {};
                f.influenceData = e;
                for(e = f.totalInfluence = 0;e < f.influenceData.length;e++) {
                  f.totalInfluence += f.influenceData[e].influence, f.influenceData[e].influence = Math.round(f.influenceData[e].influence)
                }
                f.troopsInfluence = "?";
                r.data.ownTroops && b == r.data.ownTroops.playerId && (f.troopsInfluence = r.data.ownTroops.amount, f.totalInfluence += f.troopsInfluence);
                f.totalInfluence = Math.round(f.totalInfluence);
                a(f, new Date - c)
              })
            }
          }
        }else {
          if("undefined" != typeof r.data.hasNPC && 0 != r.data.hasNPC) {
            a.fieldType = "npcVillageRobber";
            r.data.npcInfo.type == Village.TYPE_GOVERNOR_NPC_VILLAGE && (a.fieldType = "npcVillageGovernor", s = Village.get(r.data.npcInfo.villageId), r.data.hasVillage = 1, c.hasActiveTreasury() ? a.activeTreasury = !0 : a.activeTreasury = !1, a.showTributes = !0);
            s.getTributes();
            a.village = s.data;
            a.villageName = r.data.npcInfo.name;
            if("undefined" == typeof r.data.npcInfo.charges) {
              a.selectedCharge = r.data.npcInfo
            }else {
              c = 1;
              f = r.data.npcInfo.charges;
              for(t = 0;t < f.length;t++) {
                f[t].cleared || f[t].locked || (c = f[t].number)
              }
              a.selectCharge(c)
            }
            r.data.npcInfo.type == Village.TYPE_ROBBER_VILLAGE && (a.options.push({clickable:"openInSim()", text:Travian.translate("ContextMenu.button.openInSim")}), f = PlayerProgressTrigger.TOPIC_ROBBERS + "_" + PlayerProgressTrigger.HELP_PAGE_ROBBER_HIDEOUTS, PlayerProgressTrigger.triggerInGameHelp(f))
          }else {
            1 == r.data.isHabitable ? (a.image = "village/f2-ltr.png", a.fieldType = "habitable", a.villageName = Travian.translate("HabitableField")) : ("undefined" != typeof r.data.landscape && (a.image = "landscape/" + ["", "forest", "clay", "hill", "lake"][r.data.landscape.toString().substring(0, 1)] + "-ltr.jpg"), a.fieldType = "unhabitable", a.villageName = Travian.translate("UnhabitableField"))
          }
        }
      }
      e();
      g();
      a.w.villageName = a.villageName
    }
  }
  function n(a) {
    a = id2xy(a);
    for(var b = Travian.Player.data.villages, c = 0;c < b.length;c++) {
      var e = b[c].coordinates, f = Math.abs(e.x) - Math.abs(a.x), e = Math.abs(e.y) - Math.abs(a.y);
      if(3 >= f && 3 >= e && -3 <= f && -3 <= e) {
        return!0
      }
    }
    return!1
  }
  a.w.contentHeaderTemplate = "tpl/mapCellDetails/partials/mapCellHeader.html";
  a.tabConfig.tabs = [];
  a.tabConfig.disableScrolling = !0;
  a.Village = Village;
  var q = a.getParam("cellId");
  if(0 < Travian.Player.data.playerId && !Travian.Player.isOnMap() || 0 > q) {
    a.closeWindow("mapCellDetails")
  }else {
    var p = new OasisTroopRanking, r = MapDetails.get(q), s = null, v = c.l();
    a.cellId = q;
    a.coordinates = id2xy(q);
    a.w.coordinates = a.coordinates;
    a.troops = !1;
    a.resources = {wood:0, clay:0, iron:0, crop:0};
    a.showTributes = !1;
    a.activeTreasury = !1;
    a.showAttack = !1;
    a.PlayerModel = Player;
    a.ResourcesModel = Resources;
    a.Math = Math;
    a.getOptions = function() {
      return a.options
    };
    a.selectedCharge = {};
    var u = l.B(null, [Troops.COLLECTION_ELSEWHERE], g, a), t = l.B(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], e, a);
    a.$on("activeVillageChanged", f);
    a.attackingTroops = {cnt:0, first:0};
    a.sendTroops = function(b, c) {
      "Disband" == c ? Travian.writeRequest("troops/disband", {troopId:b.troopId}) : a.openWindow("sendTroops", {}, {troopId:b.troopId, moveHomeType:c})
    };
    a.selectCharge = function(b) {
      for(var c = 0;c < r.data.npcInfo.charges.length;c++) {
        var e = r.data.npcInfo.charges[c];
        e.number == b && (a.selectedCharge = e, a.selectedCharge.updated = !0)
      }
      "undefined" != typeof a.w.updateWindowHeight && a.w.updateWindowHeight()
    };
    a.settleHere = function() {
      var b = {x:a.coordinates.x, y:a.coordinates.y, type:Troops.MOVEMENT_TYPE_SETTLE}, c = {preselect:{}};
      c.preselect[Troops.TYPE_SETTLER] = 3;
      a.openWindow("sendTroops", b, c)
    };
    var z = !1;
    a.openInSim = function() {
      var c = Research.get(b.getActiveVillageId());
      a.subscribe(c, function() {
        a.openWindow("building", {location:32, tab:"CombatSimulator"}, {combatSimulatorData:{attacker:{tribeId:Travian.Player.data.tribeId, attackType:Troops.MOVEMENT_TYPE_ATTACK, research:c}, defender:{tribeId:a.selectedCharge.troops.tribeId, troops:a.selectedCharge.troops.units}}})
      })
    };
    a.subscribe(r, function() {
      1 == r.data.hasVillage || 0 != r.data.hasNPC ? (s = 0 != r.data.hasNPC ? Village.get(r.data.npcInfo.villageId) : Village.get(q), a.subscribe(s, f)) : f()
    });
    a.fetchTributes = function() {
      Travian.writeRequest("troops/fetchTributesForVillages", {villageId:b.getActiveVillageId(), destVillages:[s.data.villageId]}, a.handleError)
    }
  }
};
window.mapCellDetailsCtrl.$inject = "$scope SessionService VillageService TroopsService BuildingService MapService $timeout".split(" ");
window.mapCtrl = function(a, c, b, l, h, g, e, m) {
  var f = b.init(a);
  a.Alliance = Alliance;
  var n = "borders cropFinder mainVillages markers fieldMarkersGlobal fieldMarkersPersonal".split(" "), q = Settings.get(Travian.Player.data.playerId);
  q.subscribe(function() {
    if(0 <= q.data.mapFilter) {
      for(var a = 0;a < n.length;a++) {
        f.ib(n[a], 0 < (q.data.mapFilter & Math.pow(2, a)), !0)
      }
    }
    f.Fh(q.getAttackSettings());
    f.fa()
  });
  "undefined" != typeof l.getParam("centerId") ? (b = l.getParam("centerId"), b = b.split("_", 1)[0], b = id2xy(b), f.ga(b.x, b.y)) : (b = id2xy(h.getActiveVillageId()), f.ga(b.x, b.y, !1, !0));
  f.fa();
  a.zoomLevel = f.lg();
  a.zoom = function(b) {
    a.zoomLevel = b;
    f.qd(b)
  };
  a.goTo = function() {
    a.goToLocation.show = !a.goToLocation.show;
    a.filters.showFilters = !1;
    m(function() {
      $(".goToButton input").focus()
    }, 0)
  };
  a.setFilter = function(b, c, e) {
    f.ib(b, c, e);
    for(c = b = 0;c < n.length;c++) {
      a.filters[n[c]] && (b += Math.pow(2, c))
    }
    if(q.filled && q.data.mapFilter != b) {
      var g = q.hasMapFilterFlag(n.indexOf("fieldMarkersGlobal")), m = q.hasMapFilterFlag(n.indexOf("fieldMarkersPersonal"));
      q.data.mapFilter = b;
      q.persist(function() {
        var a = q.hasMapFilterFlag(n.indexOf("fieldMarkersGlobal")), b = q.hasMapFilterFlag(n.indexOf("fieldMarkersPersonal"));
        if(g != a) {
          for(var c = Cache.rb("Collection:FieldMarkerGlobal"), a = 0;a < c.length;a++) {
            for(var e = 0;e < c[a].data.length;e++) {
              c[a].data[e].data.minimizedState = FieldMarkerPersonal.MINIMIZED_DEFAULT
            }
            c[a].callSubscribers()
          }
        }
        if(m != b) {
          b = Cache.rb("Collection:FieldMarkerPersonal");
          b = b[0];
          for(a = 0;a < b.data.length;a++) {
            b.data[a].data.minimizedState = FieldMarkerPersonal.MINIMIZED_DEFAULT
          }
          b.callSubscribers()
        }
      })
    }
  };
  "undefined" != typeof l.getParam("zoomLevel") && (b = l.getParam("zoomLevel"), a.zoom(b));
  a.$on("urlChanged", function(a, b) {
    if("undefined" != typeof b.centerId && null != b.centerId) {
      var c = b.centerId, c = c.split("_", 1)[0], c = id2xy(c);
      f.ga(c.x, c.y);
      f.fa();
      f.rd({x:c.x, y:c.y})
    }
  });
  g.Xg(function(a, b) {
    "map" == a ? (f.init(), 0 < Travian.Player.data.playerId && Travian.Player.isOnMap() && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_KINGDOM + "_" + PlayerProgressTrigger.HELP_PAGE_MAP_DETAIL_VIEW)) : "map" == b && (f.jh(), l.O("centerId"))
  });
  var p = {show:!1, index:1, model:"", searchObj:{}, jump:function(b) {
    "undefined" !== typeof p.searchObj.data && 0 < p.searchObj.data.length ? (!0 !== b && (p.index = 1), a.openPage("map", "centerId", p.searchObj.data[p.index - 1].villageId + "_" + e.K())) : (p.searchObj = {}, p.index = 1)
  }, forward:function() {
    !("undefined" === typeof p.searchObj.data && 0 < p.searchObj.data.length) && p.index < p.searchObj.data.length && (p.index++, p.jump(!0))
  }, backward:function() {
    !("undefined" === typeof p.searchObj.data && 0 < p.searchObj.data.length) && 1 < p.index && (p.index--, p.jump(!0))
  }};
  a.goToLocation = p;
  a.fieldMarkerToggle = function(a) {
    var b = a.markers[a.selectedMarker].data;
    a.minimized = !a.minimized;
    b.minimizedState = a.minimized ? FieldMarkerPersonal.MINIMIZED_MINIMIZED : FieldMarkerPersonal.MINIMIZED_MAXIMIZED;
    Travian.writeRequest("map/fieldMarkerMinimize", {cellId:b.cellId, isGlobal:a.markers[0].data.isGlobal, minimizeState:a.minimized ? 1 : 0});
    a.selectedMarker = 0;
    return!1
  };
  a.fieldMarkerDelete = function(b, c) {
    var e = b[c], f = e.markers[e.selectedMarker].data;
    Travian.writeRequest("map/fieldMarkerClose", {id:f.id, isGlobal:f.isGlobal});
    if(f.isGlobal) {
      for(var g = Cache.rb("Collection:FieldMarkerGlobal"), m = 0;m < g.length;m++) {
        for(var h = 0;h < g[m].data.length;h++) {
          if(g[m].data[h].data.id == f.id) {
            g[m].data[h].data.isClosed = 1;
            g[m].callSubscribers();
            break
          }
        }
      }
    }
    e.selectedMarker >= e.markers.length && (e.selectedMarker = 0);
    0 == e.markers.length && delete a.fieldMarkers[c];
    return!1
  };
  a.fieldMarkerSwitch = function(a, b) {
    a.selectedMarker += b;
    0 > a.selectedMarker && (a.selectedMarker = a.markers.length - 1);
    a.selectedMarker >= a.markers.length && (a.selectedMarker = 0);
    return!1
  };
  a.openPlayerWindow = function(a) {
    c.openWindow("profile", {playerId:a, profileTab:"playerProfile"}, null, !0);
    return!1
  };
  a.goHome = function() {
    a.openPage("map", "centerId", h.getActiveVillageId() + "_" + e.K())
  }
};
window.mapCtrl.$inject = "$scope $rootScope MapService RoutingService VillageService WindowService ServertimeService $timeout".split(" ");
window.markerMenuCtrl = function(a, c) {
  function b(a, b) {
    var c = {owner:a.owner, type:b, color:a.color, editType:a.editType};
    c.ownerId = c.owner == Marker.TYPE_ALLIANCE ? e.data.allianceId : e.data.playerId;
    b == Marker.TYPE_PLAYER ? c.targetId = g.data.playerId : b == Marker.TYPE_ALLIANCE ? c.targetId = g.data.allianceId : b == Marker.TYPE_COORDINATES && (c.targetId = h);
    a.alreadyExisting ? c.id = a.id : a.markedForDeletion && (c.id = a.idForDeletion);
    return c
  }
  function l() {
    var b = {id:0, ci:!1, ui:!1, ri:0, show:!1, gi:!1, color:0, owner:1, typeName:"", pi:0};
    a.playerMarker = angular.copy(b);
    a.allianceMarker = angular.copy(b);
    a.tileMarker = angular.copy(b);
    a.typeTable = ["", a.playerMarker, a.allianceMarker, a.tileMarker];
    a.typeTable[Marker.TYPE_PLAYER].typeName = "player";
    a.typeTable[Marker.TYPE_ALLIANCE].typeName = "alliance";
    a.typeTable[Marker.TYPE_COORDINATES].typeName = "tile"
  }
  a.w.windowName = "ContextMenu.MarkerMenu.Title";
  a.tabConfig.tabs = ["EditMarker", "AllMarker"];
  a.tabConfig.bodyTemplatePrefix = "tpl/markerMenu/tabs/";
  var h = a.getParam("cellId"), g = MapDetails.get(h), e = c.l(), m = Marker.getCollection();
  a.typePlayer = Marker.TYPE_PLAYER;
  a.typeAlliance = Marker.TYPE_ALLIANCE;
  a.typeCoordinates = Marker.TYPE_COORDINATES;
  a.playerHasAlliance = !1;
  a.hasAllianceRights = !1;
  a.playerInAlliance = !1;
  a.playerInKingdom = !1;
  a.markerOwnerDirectories = {};
  a.markerOwnerDirectories[Marker.TYPE_PLAYER] = "player";
  a.markerOwnerDirectories[Marker.TYPE_ALLIANCE] = "alliance";
  a.markerChanged = !1;
  a.typeTable = [];
  a.FieldMarkerPersonal = FieldMarkerPersonal;
  a.fieldMessage = {text:"", type:0, duration:12, cellId:h, targetId:0};
  a.fieldMessageDurationDropdown = {selected:a.fieldMessage.duration, options:{6:"6h", 12:"12h", 24:"24h", 48:"48h"}, callback:function(b) {
    a.fieldMessage.duration = b
  }};
  a.secretSocietyDropdown = {selected:0, options:{}, callback:function(b) {
    a.fieldMessage.targetId = b
  }};
  var f = Society.getCollection();
  a.subscribe(f, function() {
    a.secretSocietyDropdown.options = {};
    for(var b = 0;b < f.data.length;b++) {
      var c = f.data[b];
      a.secretSocietyDropdown.options[c.data.groupId] = c.data.name;
      a.secretSocietyDropdown.selected || (a.secretSocietyDropdown.selected = c.data.groupId)
    }
  });
  a.onFieldMessageTextChange = function() {
    a.markerChanged = !0
  };
  a.playerSearch = {name:null, obj:null, autocompleteParam:"player"};
  a.setSearchName = function(b) {
    a.playerSearch.name = b.name;
    a.playerSearch.obj = b;
    a.fieldMessage.targetId = parseInt(b.playerId, 10)
  };
  a.onPlayerSearchFocus = function() {
    a.fieldMessage.type = FieldMarkerPersonal.PLAYER
  };
  a.onFieldMessageTypeChange = function() {
    a.fieldMessage.type !== FieldMarkerPersonal.PLAYER && (a.playerSearch.name = null, a.playerSearch.obj = null);
    a.fieldMessage.targetId = a.fieldMessage.type === FieldMarkerPersonal.SOCIETY ? a.secretSocietyDropdown.selected : 0
  };
  l();
  a.subscribe(g, function() {
    0 == g.data.hasVillage ? a.hasVillage = !1 : (a.hasVillage = !0, 0 < g.data.allianceId && (a.playerHasAlliance = !0))
  });
  a.setColor = function(b, c) {
    a.typeTable[c].color != b ? (a.typeTable[c].changed = !0, a.typeTable[c].color = b, a.markerChanged = !0) : (a.typeTable[c].alreadyExisting && (a.typeTable[c].markedForDeletion = !0, a.typeTable[c].idForDeletion = a.typeTable[c].id, a.markerChanged = !0), a.typeTable[c].id = 0, a.typeTable[c].alreadyExisting = !1, a.typeTable[c].show = !1, a.typeTable[c].changed = !1, a.typeTable[c].color = 0, a.typeTable[c].owner = 1)
  };
  a.saveMarkers = function() {
    for(var c = [], f = 1;f < a.typeTable.length;f++) {
      var g = f, m = a.typeTable[g];
      m.markedForDeletion ? (m.editType = m.changed ? Marker.editTypes.TYPE_EDIT : Marker.editTypes.TYPE_DELETE, c.push(b(m, g))) : m.changed && 0 < m.color && (m.editType = m.alreadyExisting ? Marker.editTypes.TYPE_EDIT : Marker.editTypes.TYPE_CREATE, c.push(b(m, g)))
    }
    f = angular.copy(a.fieldMessage);
    0 === f.type && (f.type = FieldMarkerPersonal.PLAYER, f.targetId = e.data.playerId);
    Travian.writeRequest("map/editMapMarkers", {markers:c, fieldMessage:f}, function(b) {
      "undefined" != typeof b.errors ? a.handleError(b, "error") : a.closeWindow("markerMenu")
    })
  };
  a.showColors = function(b) {
    a.markerAvailable(b) && (a.typeTable[b].show = !0)
  };
  a.hideColors = function(b) {
    a.typeTable[b].alreadyExisting || a.typeTable[b].changed || (a.typeTable[b].show = !1)
  };
  a.deleteMarkerTabAll = function(a) {
    var b = {};
    b.markers = [{editType:Marker.editTypes.TYPE_DELETE, id:a}];
    Travian.writeRequest("map/editMapMarkers", b)
  };
  a.toggleShareWithAlliance = function(b) {
    a.typeTable[b].owner = a.typeTable[b].owner == Marker.TYPE_ALLIANCE ? a.typePlayer : a.typeAlliance;
    a.typeTable[b].changed = !0;
    a.markerChanged = !0
  };
  var n = null;
  a.subscribe(e, function() {
    a.playerId = e.data.playerId;
    a.playerInAlliance = 0 !== e.data.allianceId;
    a.playerInKingdom = 0 !== e.data.kingdomId;
    n = Alliance.get(e.data.allianceId);
    a.subscribe(n, function() {
      var b = n.getPlayerRights(e.data.playerId);
      "undefined" != typeof b && 0 < (b & Alliance.RIGHT_FLAGS) && (a.hasAllianceRights = !0)
    })
  });
  a.selectionAvailable = function(a) {
    return a == Marker.TYPE_ALLIANCE ? !1 : !0
  };
  a.markerAvailable = function(b) {
    return b == Marker.TYPE_PLAYER ? a.hasVillage ? !0 : !1 : b == Marker.TYPE_ALLIANCE ? a.playerHasAlliance ? !0 : !1 : !0
  };
  a.colors = [Marker.COLOR_BROWN, Marker.COLOR_YELLOW, Marker.COLOR_TEAL, Marker.COLOR_BLUE, Marker.COLOR_DARK_BLUE, Marker.COLOR_LIGHT_GREEN, Marker.COLOR_PINK, Marker.COLOR_PURPLE, Marker.COLOR_DARK_GREEN, Marker.COLOR_RED];
  a.defaultColors = {kingdom:Marker.COLOR_OWN, alliance:Marker.COLOR_ALLIANCE, confederacies:Marker.TREATY_COLOR_BND, nap:Marker.TREATY_COLOR_NAP, neutral:Marker.COLOR_NEUTRAL, enemies:Marker.COLOR_ENEMY};
  a.colorByIndex = {};
  for(var q = 0;q < a.colors.length;q++) {
    var p = a.colors[q];
    a.colorByIndex[p.index] = p
  }
  a.subscribe(m, function() {
    a.allPlayerMarkers = [];
    a.allAllianceMarkers = [];
    a.allTileMarkers = {};
    a.allTileMarkers[Marker.TYPE_PLAYER] = [];
    a.allTileMarkers[Marker.TYPE_ALLIANCE] = [];
    l();
    for(var b = 0;b < m.data.length;b++) {
      var c = m.data[b];
      c.data.colorData = Marker.COLORS[c.data.color];
      if(c.data.type == Marker.TYPE_PLAYER) {
        a.allPlayerMarkers.push(c.data)
      }else {
        if(c.data.type == Marker.TYPE_ALLIANCE) {
          a.allAllianceMarkers.push(c.data)
        }else {
          if(c.data.type == Marker.TYPE_COORDINATES) {
            var e = id2xy(c.data.targetId);
            c.data.x = e.x;
            c.data.y = e.y;
            a.allTileMarkers[c.data.owner].push(c.data)
          }
        }
      }
      e = null;
      c.data.type == Marker.TYPE_PLAYER && c.data.targetId == g.data.playerId ? e = a.playerMarker : c.data.type == Marker.TYPE_ALLIANCE && c.data.targetId == PlayerAllianceMapper.ha(g.data.playerId) && (e = a.allianceMarker);
      c.data.type == Marker.TYPE_COORDINATES && c.data.targetId == h && (e = a.tileMarker);
      null != e && (e.id = c.data.id, e.alreadyExisting = !0, e.show = !0, e.color = c.data.color, e.owner = c.data.owner)
    }
  });
  var r = FieldMarkerPersonal.getCollection();
  a.settings = Settings.get(Travian.Player.data.playerId);
  a.subscribe(r, function() {
    angular.forEach(r.data, function(a) {
      var b = id2xy(a.data.cellId);
      a.data.x = b.x;
      a.data.y = b.y;
      a.timeAgo = a.getTimeAgoString();
      a.disappearIn = a.getDisappearTime()
    });
    a.fieldMessages = r.data
  });
  a.deleteFieldMessage = function(a) {
    Travian.writeRequest("map/fieldMarkerDelete", {id:a.data.id, isGlobal:a.data.isGlobal})
  };
  a.toggleFieldMessageClose = function(a) {
    Travian.writeRequest("map/fieldMarkerClose", {id:a.data.id, isGlobal:a.data.isGlobal});
    a.data.isClosed = !a.data.isClosed
  };
  a.$on("$destroy", function() {
    a.Ta()
  })
};
window.markerMenuCtrl.$inject = ["$scope", "SessionService"];
window.notepadCtrl = function(a, c) {
  a.notepads = null;
  a.$on("toggleNotepads", function() {
    0 == a.notepads.data.length && Travian.request("player/addNote", {})
  });
  c.o(function() {
    player = c.l();
    a.notepads = Notepad.getCollection();
    a.settings = Settings.get(Travian.Player.data.playerId)
  })
};
window.notepadCtrl.$inject = ["$scope", "SessionService"];
window.npcTraderCtrl = function(a, c) {
  a.w.windowName = "Tab.NpcTrade";
  a.Math = Math;
  null != a.getParam(Resources.STRING["1"], !0, !1) ? a.predistribution = {1:parseInt(a.getParam(Resources.STRING["1"])), 2:parseInt(a.getParam(Resources.STRING["2"])), 3:parseInt(a.getParam(Resources.STRING["3"])), 4:parseInt(a.getParam(Resources.STRING["4"]))} : a.predistribution = c.i().getResources();
  a.closeNpcWindow = a.getParam("closeWindow")
};
window.npcTraderCtrl.$inject = ["$scope", "VillageService"];
window.notEnoughGoldCtrl = function(a) {
  function c() {
    Travian.request("payment/getSmallestPackage", {featurePrice:b.price}, function(b) {
      "undefined" !== typeof b && ("undefined" !== typeof b.errors ? (a.handleError(b), a.shopAvailable = !1) : a["package"] = b)
    })
  }
  a.w.windowName = "Payment.NotEnoughGold.Headline";
  a.shopAvailable = !0;
  a["package"] = null;
  var b = a.windows.notEnoughGold.params;
  a.openShop = function(b) {
    a.closeWindow("notEnoughGold");
    null != b ? a.openWindow("payment", {paymenttab:"PaymentShop"}, {productId:b}) : a.openWindow("payment", {paymenttab:"PaymentShop"})
  };
  a.shopEnabled = !0;
  Travian.Config.paymentShopDisabled && (a.shopAvailable = !1, a.shopEnabled = !1);
  "undefined" !== typeof b.price && a.shopEnabled && c()
};
window.notEnoughGoldCtrl.$inject = ["$scope"];
window.sendEmailCtrl = function(a, c) {
  a.overlayConfig.k({overlayName:"sendEmail", inWindowPopupTitle:"InviteFriend.Email.SendInvitation", inWindowPopupContentTemplate:"tpl/payment/overlay/sendEmail.html"});
  a.valid = !1;
  a.input = {friendName:"", email:"", ownName:"", message:""};
  a.placeholder = {friendName:Travian.translate("InviteFriend.Email.FriendName.Placeholder"), email:Travian.translate("InviteFriend.Email.Email.Placeholder"), ownName:Travian.translate("InviteFriend.Email.OwnName.Placeholder"), message:Travian.translate("InviteFriend.Email.Message.Placeholder")};
  a.checkInput = function() {
    a.valid = !0;
    if(1 > a.input.friendName.length || 1 > a.input.email.length || 1 > a.input.ownName.length) {
      a.valid = !1
    }
    if(4 > a.input.email.length || 0 > a.input.email.indexOf("@") || 0 > a.input.email.indexOf(".")) {
      a.valid = !1
    }
  };
  a.invite = function() {
    Travian.request("player/sendInvitation", a.input, function(b) {
      "undefined" != typeof b.errors ? a.handleError(b) : (c.$broadcast("referralEmailSent"), a.closeOverlay())
    })
  }
};
window.sendEmailCtrl.$inject = ["$scope", "$rootScope"];
window.paymentCtrl = function(a) {
  a.w.windowName = "Payment";
  a.tabConfig.tabs = ["PremiumFeatures", "PaymentShop"];
  Travian.Config.features.inviteFriend && (a.tabConfig.tabs.push("InviteFriend"), Travian.request("player/getInvitationRefLink", {}, function(c) {
    null != c.refLink && (a.refLink = c.refLink)
  }));
  a.tabConfig.bodyTemplatePrefix = "tpl/payment/tabs/";
  a.tabConfig.routeNamedParam = "paymenttab";
  a.tabConfig.disableScrollingForTabs = ["PremiumFeatures", "PaymentShop", "InviteFriend"]
};
window.paymentCtrl.$inject = ["$scope", "$sce"];
window.inviteFriendCtrl = function(a, c, b) {
  function l() {
    Travian.request("player/getInvitationsList", {}, function(b) {
      null != b.pendingBonusCount && (a.bonusesToCollect = b.pendingBonusCount);
      null != b.open && (a.invitations.open = b.open);
      if(null != b.accepted) {
        var c = b.accepted, m = [];
        for(b = 1;4 >= b;b++) {
          m.push({id:b, state:h.NOT_GRANTED, Ci:""})
        }
        angular.forEach(c, function(a, b) {
          c[b].bonuses = angular.copy(m);
          c[b].collectible = !1;
          c[b].collectibleAmount = 0;
          c[b].invitedAccountName || (c[b].invitedAccountName = c[b].invitedEmail);
          a.bonus.length && angular.forEach(a.bonus, function(a) {
            c[b].bonuses[a.id - 1].state = a.state;
            c[b].bonuses[a.id - 1].worldName = a.grantedBy.worldName;
            a.state == h.GRANTED && (c[b].collectible = !0, c[b].collectibleAmount++)
          })
        });
        a.invitations.accepted = c
      }
    })
  }
  b.yd("ui.tab.inviteFriend");
  a.selectedTab = "invite";
  a.bonusesToCollect = 0;
  (b = c.getParam("subtab")) && (a.selectedTab = b);
  a.changeActiveTab = function(b) {
    a.selectedTab = b;
    c.m("subtab", b)
  };
  a.openSendEmailOverlay = function() {
    a.Lf();
    a.openOverlay("sendEmail")
  };
  a.copyLink = function() {
    copyTextToClipboard(a.refLink)
  };
  var h = {NOT_GRANTED:0, GRANTED:3, COLLECTED:4};
  a.BONUS_STATE = h;
  a.BONUS_CONSTANT_MAP = {0:"rewardSecondVillage", 1:"rewardThirdVillage", 2:"rewardFirstPayment", 3:"reward1000PrestigeReached"};
  a.invitations = {open:[], accepted:[]};
  l();
  a.collectBonus = function(a) {
    var b = {invitedAccountIdentifier:a.invitedAccountId, bonusIdentifiers:[]};
    angular.forEach(a.bonuses, function(a) {
      a.state == h.GRANTED && b.bonusIdentifiers.push(a.id)
    });
    Travian.request("player/fetchReferralBonus", b, function() {
      a.collectible = !1;
      angular.forEach(a.bonuses, function(b, c) {
        b.state == h.GRANTED && (a.bonuses[c].state = h.COLLECTED)
      })
    })
  };
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_PREMIUM + "_" + PlayerProgressTrigger.HELP_PAGE_INVITE_FRIEND);
  a.$on("$destroy", function() {
    a.removeParam("subtab")
  });
  a.$on("referralEmailSent", function() {
    l()
  })
};
window.inviteFriendCtrl.$inject = ["$scope", "RoutingService", "TrackingService"];
window.paymentShopCtrl = function(a, c, b) {
  function l() {
    Travian.Player.data.isPunished || Travian.request("payment/getPaymentShopUrl", {shopVersion:Travian.Config.tgPaymentDefaultShopVersion}, function(b) {
      "undefined" !== typeof b.data && ("undefined" !== typeof h.productId && (b.data = -1 < b.data.indexOf("?") ? b.data + "&productid=" + h.productId : b.data + "?productid=" + h.productId), a.iFrame = c.trustAsResourceUrl(b.data))
    })
  }
  b.yd("ui.tab.purchaseGold");
  a.iFrame = null;
  a.shopEnabled = !Travian.Config.paymentShopDisabled;
  var h = a.windows.payment.params;
  a.shopEnabled && l()
};
window.paymentShopCtrl.$inject = ["$scope", "$sce", "TrackingService"];
window.premiumFeaturesCtrl = function(a, c, b) {
  function l(b, e) {
    function g() {
      if(!0 === Travian.Config.PremiumFeatures[m.name].bookableWholeGameRound && 1 == Travian.Config.TG_SPEED && (m.wholeGameRound.bookable = !0, m.wholeGameRound.booked = -1 == m.endTime, !m.wholeGameRound.booked)) {
        var b = c.K(), e = Math.max(1, Math.round((b - Travian.Config.worldStart) / 86400)), b = Math.max(0, Math.round((m.endTime - b) / 86400));
        m.wholeGameRound.price = Math.max(Travian.Config.PremiumFeatures.minimumPriceMultiplier * m.price, Math.round((Travian.Config.PremiumFeatures.estimatedWorldAge - e - b) * m.price * Travian.Config.PremiumFeatures.discountPriceFactor / (m.duration / 86400)));
        a[m.name] = function(a) {
          a = !0 === a || "true" == a;
          return{bookGameRound:a, price:a ? m.wholeGameRound.price : m.price}
        }
      }
    }
    var m = this;
    this.name = "";
    this.order = 0;
    this.iconsPartial = this.partial = "";
    this.canActivate = !0;
    this.duration = 0;
    this.showDurationFlag = !1;
    this.price = 999;
    this.autoExtend = this.autoExtendFlag = this.isDisabled = this.active = this.endTime = !1;
    this.wholeGameRound = {bookable:!1, booked:!1, price:999};
    this.bought = !1;
    this.disabledAt = this.limitedFlag = null;
    this.getDays = function() {
      return!1 === m.endTime ? "0" : ((m.endTime - c.K()) / 86400).toFixed(1)
    };
    this.Ve = function() {
      null !== m.disabledAt && (m.isDisabled = !(m.disabledAt >= c.K()))
    };
    this.getDisableDurationInDays = function() {
      return null === m.disabledAt ? "-1" : (parseInt(m.disabledAt - c.K()) / 86400).toFixed(1)
    };
    this.saveAutoExtend = function() {
      !1 !== m.autoExtendFlag && PremiumFeature.toggleAutoExtendFlag(m.autoExtendFlag)
    };
    (function(a) {
      if("undefined" == typeof a.name) {
        throw Error("PremiumFeatureName missed");
      }
      if("undefined" == typeof a.order) {
        throw Error("order missed");
      }
      m.name = a.name;
      m.order = a.order;
      "undefined" !== typeof a.limitedFlag && (m.limitedFlag = a.limitedFlag);
      "undefined" !== typeof a.autoExtendFlag && (m.autoExtendFlag = a.autoExtendFlag);
      "undefined" !== typeof a.canActivate && (m.canActivate = a.canActivate);
      "undefined" !== typeof a.iconsPartial && (m.iconsPartial = a.iconsPartial);
      m.partial = "tpl/payment/partials/" + m.name + ".html";
      if("undefined" !== typeof Travian.Config.PremiumFeatures[m.name] && (1 < Travian.Config.TG_SPEED && "undefined" !== typeof Travian.Config.PremiumFeatures[m.name].durationSpeed ? (m.duration = Travian.Config.PremiumFeatures[m.name].durationSpeed, m.showDurationFlag = !0) : "undefined" !== typeof Travian.Config.PremiumFeatures[m.name].duration && (m.duration = Travian.Config.PremiumFeatures[m.name].duration, m.showDurationFlag = !0), m.canActivate)) {
        if("undefined" === typeof Travian.Config.PremiumFeatures[m.name].price) {
          throw Error("feature Needs a price");
        }
        m.price = Travian.Config.PremiumFeatures[m.name].price
      }
      switch(m.name) {
        case PremiumFeature.FEATURE_NAME_STARTER_PACKAGE:
          m.bought = m.active = PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_STARTER_PACKAGE, b);
          m.version = Travian.Config.premiumFeatureStarterPackage;
          m.showDurationFlag = !1;
          break;
        case PremiumFeature.FEATURE_NAME_PLUS_ACCOUNT:
          m.active = PremiumFeature.hasPlayerPlusAccount(b);
          m.active && (m.endTime = b.data.plusAccountTime);
          break;
        case PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS:
          m.active = PremiumFeature.hasProductionBonus(b);
          m.active && (m.endTime = b.data.productionBonusTime);
          break;
        case PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS:
          m.active = PremiumFeature.hasCropProductionBonus(b), m.active && (m.endTime = b.data.cropProductionBonusTime)
      }
      "undefined" !== typeof Travian.Config.PremiumFeatures[m.name] && ("undefined" !== typeof Travian.Config.PremiumFeatures[m.name].bonusValue && (m.productionBonusValue = Travian.Config.PremiumFeatures[m.name].bonusValue), !1 !== m.autoExtendFlag && (m.autoExtend = PremiumFeature.hasAutoExtendFlag(m.autoExtendFlag, b)), "undefined" !== typeof Travian.Config.PremiumFeatures[m.name].deactivateAfterSignUp && (m.disabledAt = b.data.signupTime + Travian.Config.PremiumFeatures[m.name].deactivateAfterSignUp), 
      m.Ve(), g())
    })(e)
  }
  function h() {
    a.featureList = [];
    var b = "";
    null !== a.activeFeature && (b = a.activeFeature.name, a.activeFeature = null);
    for(var c in Travian.Config.PremiumFeatures) {
      if(Travian.Config.PremiumFeatures.hasOwnProperty(c)) {
        var m = {name:c};
        switch(c) {
          case PremiumFeature.FEATURE_NAME_STARTER_PACKAGE:
            m.order = 1;
            m.limitedFlag = PremiumFeature.LIMITED_FLAG_STARTER_PACKAGE;
            break;
          case PremiumFeature.FEATURE_NAME_PLUS_ACCOUNT:
            m.order = 2;
            m.autoExtendFlag = PremiumFeature.AUTO_EXTEND_FLAG_PLUS_BONUS;
            break;
          case PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS:
            m.order = 3;
            m.autoExtendFlag = PremiumFeature.AUTO_EXTEND_FLAG_RES_BONUS;
            break;
          case PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS:
            m.order = 4;
            m.autoExtendFlag = PremiumFeature.AUTO_EXTEND_FLAG_CROP_BONUS;
            break;
          default:
            m = null
        }
        null !== m && (e = new l(g, m), !e.isDisabled || e.active) && (b == e.name && (a.activeFeature = e), a.featureList.push(e))
      }
    }
    m = {name:"others", order:99, canActivate:!1, iconsPartial:"tpl/payment/partials/othersIcons.html"};
    e = new l(g, m);
    a.featureList.push(e);
    a.featureList.sort(function(a, b) {
      return a.order > b.order ? 1 : a.order < b.order ? -1 : 0
    });
    null === a.activeFeature && a.changeActiveFeature(a.featureList[0])
  }
  var g = Travian.Player, e, m = PlayerProgressTrigger.get(g.data.playerId + "_" + PlayerProgressTrigger.TYPE_OPEN_PREMIUM_MENU);
  a.activeFeature = null;
  a.PremiumFeature = PremiumFeature;
  b.yd("ui.tab.useGold");
  a.changeActiveFeature = function(b) {
    b.Ve();
    a.activeFeature = b
  };
  a.subscribe(g, h);
  !1 === m.data.triggered && Travian.writeRequest("quest/dialogAction", {questId:Quest.DAILY_CONDITIONAL_OPEN_PREMIUM_MENU, dialogId:0, command:"setLastUse"});
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_PREMIUM + "_" + PlayerProgressTrigger.HELP_PAGE_RUNTIME_FEATURES);
  a.HeroItem = HeroItem;
  h()
};
window.premiumFeaturesCtrl.$inject = ["$scope", "ServertimeService", "TrackingService"];
window.playerLockedCtrl = function(a, c, b, l) {
  var h = l.l();
  c.playerAvatarName = c.getParam("playerName");
  c.punishment = c.getParam("punishment");
  c.PlayerPunishment = PlayerPunishment;
  c.suspensionTime = c.getParam("suspensionTime") || 0;
  c.w.windowName = "PlayerLocked.WindowName";
  c.isSitter = "true" == c.getParam("isSitter") ? !0 : !1;
  l.o(function() {
    c.isSitter = l.L()
  });
  c.reasons = [];
  var g = c.getParam("reasons");
  if("undefined" !== typeof g) {
    for("string" == typeof g && (g = g.split(",")), "number" == typeof g && (g = [g]), a = 0;a < g.length;a++) {
      var e = !1;
      0 == a && (e = !0);
      c.reasons.push({type:g[a], expanded:e})
    }
  }
  c.openHelpCenter = function() {
    window.open("/api/forwardToHelpcenter.php?sid=" + l.ac(), "_blank")
  };
  c.expandReason = function(a) {
    for(var e = 0;e < c.reasons.length;e++) {
      c.reasons[e].expanded && (c.reasons[e].expanded = !1)
    }
    c.reasons[a].expanded = !0;
    b(function() {
      c.$broadcast("scrollbarApi", "handleResize")
    }, 10)
  };
  c.subscribe(h, function() {
    c.playerAvatarName = h.data.name;
    var a = !1;
    if(void 0 == c.paymentDetails && "undefined" !== typeof g) {
      for(var b = 0;b < g.length;b++) {
        g[b] == PlayerPunishment.STRIKE_REASON_PAYMENT && (a = !0)
      }
    }
    a && Travian.request("payment/getPaymentErrors", {}, function(a) {
      if(a) {
        c.paymentDetails = {};
        c.paymentDetails.orders = {};
        c.paymentDetails.total = 0;
        c.paymentDetails.clickAndBuyOrders = 0;
        c.paymentDetails.providers = "";
        for(var b = [], e = 0;e < a.length;e++) {
          "clickandbuy" != a[e].custom1.toLowerCase() ? (c.paymentDetails.orders[e] = {}, c.paymentDetails.orders[e].provider = a[e].custom1, c.paymentDetails.orders[e].price = a[e].gross, c.paymentDetails.orders[e].fee = a[e].custom2, c.paymentDetails.total += parseFloat(a[e].gross) + parseFloat(a[e].custom2)) : c.paymentDetails.clickAndBuyOrders++, 0 > $.inArray(a[e].custom1, b) && b.push(a[e].custom1)
        }
        c.paymentDetails.providers = b.join(", ");
        c.paymentDetails.ordersCount = a.length;
        c.paymentDetails.worldhost = a[0].worldhost;
        c.paymentDetails.instanceId = a[0].instanceId;
        c.paymentDetails.userId = h.data.playerId
      }
    });
    h.data.isPunished || c.closeWindow("playerLocked")
  })
};
window.playerLockedCtrl.$inject = ["$rootScope", "$scope", "$timeout", "SessionService"];
window.playerProfileCtrl = function(a, c, b) {
  function l() {
    h && (a.playerData = h.data, a.w.playerData = a.playerData, angular.forEach(h.data.villages, function(a) {
      a.population = parseInt(a.population)
    }))
  }
  a.myPlayerId = c.getPlayerId();
  a.playerId = a.getParam("playerId");
  a.tabData.scrollContentHeightOffset = 135;
  a.canEditDescription = !1;
  a.myPlayerId != a.playerId || c.L() || (a.canEditDescription = !0);
  if("undefined" != typeof a.playerId) {
    var h = Player.get(a.playerId);
    Cache.t(h, 60);
    a.subscribe(h, l);
    var g = PlayerProfile.get(a.playerId);
    a.subscribe(g, function() {
      a.playerProfile = g.data
    });
    a.goMap = function(b, c) {
      a.openPage("map", "centerId", xy2id(b, c) + "_" + (new Date).getTime());
      a.ji("profile")
    };
    a.openChat = b.Ca;
    a.getPrivateRoomName = b.Ya;
    a.isFriend = b.ub;
    a.isPendingFriend = b.Yb;
    a.addFriend = b.Ec;
    a.userAddable = function(b) {
      return!a.isFriend(b) && !a.isPendingFriend(b)
    }
  }
};
window.playerProfileCtrl.$inject = ["$scope", "SessionService", "ChatService"];
window.playerProfileEditDescriptionCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Player.EditDescription", inWindowPopupContentTemplate:"tpl/profile/playerProfile/playerProfileEditDescription.html"});
  var c = PlayerProfile.get(Travian.Player.data.playerId);
  Travian.request("player/updatePlayerProfileContent");
  a.subscribe(Travian.Player, function() {
    0 != Travian.Player.data.playerId && (a.medals = Medal.getCollection(Travian.Player.data.playerId), a.achievements = Achievement.getCollection(Travian.Player.data.playerId))
  });
  a.playerProfile = {data:angular.copy(c.get())};
  a.send = function() {
    Travian.request("player/editProfile", {description:a.playerProfile.data.description}, function() {
      a.closeOverlay()
    })
  };
  a.cancel = function() {
    a.playerProfile = {data:angular.copy(c.get())};
    a.closeOverlay()
  };
  a.addMedal = function(b, c, h, g) {
    var e = document.getElementById("desc");
    b = "[medal:" + b + "|" + c + "|" + h + "|" + g + "]";
    c = a.playerProfile.data.description;
    h = -1;
    if(document.selection) {
      e.focus(), h = document.selection.createRange(), h.moveStart("character", -e.value.length), h = h.text.length
    }else {
      if(e.selectionStart || "0" == e.selectionStart) {
        h = e.selectionStart
      }
    }
    a.playerProfile.data.description = -1 == h ? a.playerProfile.data.description + b : c.substring(0, h) + b + c.substring(h, e.length)
  };
  a.addAchievement = function(b) {
    var c = document.getElementById("desc");
    b = "[achievement:" + Travian.Player.data.playerId + "|" + b + "]";
    var h = a.playerProfile.data.description, g = -1;
    if(document.selection) {
      c.focus(), g = document.selection.createRange(), g.moveStart("character", -c.value.length), g = g.text.length
    }else {
      if(c.selectionStart || "0" == c.selectionStart) {
        g = c.selectionStart
      }
    }
    a.playerProfile.data.description = -1 == g ? a.playerProfile.data.description + b : h.substring(0, g) + b + h.substring(g, c.length)
  }
};
window.playerProfileEditDescriptionCtrl.$inject = ["$scope", "SessionService"];
window.playerProfileFullImageCtrl = function(a) {
  function c() {
    a.helmet = !1;
    for(var b = 0;b < l.data.length;b++) {
      var c = l.data[b], m = c.data.inSlot;
      if(0 < m && 7 > m) {
        if("undefined" !== typeof c.data.bonuses[HeroItem.BONUS_UNIT_ID]) {
          var f = nrToUnitId(c.data.bonuses[HeroItem.BONUS_UNIT_ID], c.data.tribeId);
          c.bonusUnitName = Travian.translate("Troop_" + f);
          c.bonusUnitStrength = c.data.bonuses[HeroItem.BONUS_UNIT_STRENGTH]
        }
        a.heroSlots[m] = c;
        a.heroBodyImages[m] = {img:c.data.images[0], z:c.data.zIndex};
        m == HeroItem.SLOT_HELMET && (a.helmet = !0, a.heroBodyImages[m].helmet = !0)
      }
    }
    h && (a.avatar = angular.copy(h.getViewModel()))
  }
  a.overlayConfig.k({inWindowPopupTitle:"Troop_hero", inWindowPopupContentTemplate:"tpl/profile/playerProfile/playerProfileFullImage.html"});
  a.playerId = a.getParam("playerId");
  var b = Player.get(a.playerId);
  Cache.t(b, 60);
  a.subscribe(b, function() {
    b && (a.playerData = b.data, a.w.playerData = a.playerData)
  });
  a.HeroItem = HeroItem;
  a.heroBodyImages = {};
  a.heroSlots = {1:null, 2:null, 3:null, 4:null, 5:null, 6:null};
  a.activeHeroItem = null;
  var l = HeroItem.getCollection(a.playerId);
  Cache.t(l, 1);
  a.subscribe(l, c);
  var h = HeroFace.get(a.playerId);
  a.subscribe(h, c);
  a.showSlotInformation = function(b) {
    a.activeHeroItem = null;
    if("undefined" !== typeof a.heroSlots[b] && null !== a.heroSlots[b] && (a.activeHeroItem = angular.copy(a.heroSlots[b]), a.activeHeroItem.data.bonuses)) {
      b = a.activeHeroItem.data.bonuses;
      for(var c = ["BONUS_SPEED_HERO", "BONUS_SPEED_HORSE"], m = 0;m < c.length;m++) {
        b.hasOwnProperty(HeroItem[c[m]]) && (b[HeroItem[c[m]]] *= Travian.Config.TG_TROOP_SPEED)
      }
      a.activeHeroItem.bonuses = b
    }
  };
  a.highlightObj = {turnOn:a.showSlotInformation, turnOff:a.showSlotInformation}
};
window.playerProfileFullImageCtrl.$inject = ["$scope", "SessionService"];
window.playerProfilePlayerInvitesPlayerCtrl = function(a) {
  a.playerInvitesTabConfig = {};
  a.playerInvitesTabConfig.tabs = ["Invite", "PendingInvites", "ActiveInvites"];
  a.playerInvitesTabConfig.bodyTemplatePrefix = "tpl/playerProfile/pip/";
  a.playerInvitesTabConfig.routeNamedParam = "subtab";
  a.playerInvitesTabConfig.tabName = "subtab";
  a.playerInvitesTabConfig.tabType = "subtab";
  a.useMellon = config.mellon.useMellon;
  a.useMellon && (a.invitePlayerIframe = mellon.getReferralInviteIframe(), a.pendingInvitesIframe = mellon.getReferralPendingIframe(), a.activeInvitesIframe = mellon.getReferralActiveIframe())
};
window.playerProfilePlayerInvitesPlayerCtrl.$inject = ["$scope"];
window.productionOverviewCtrl = function(a, c, b, l, h, g) {
  function e(b) {
    5 == b && (b = Resources.CROP);
    C = b;
    a.currentResourceType = b;
    a.productionBonusTime = 0;
    a.productionBonusValue = b == Resources.CROP ? Travian.Config.PremiumFeatures.cropProductionBonus.bonusValue : Travian.Config.PremiumFeatures.productionBonus.bonusValue;
    a.premiumFeatureName = PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS;
    a.autoExtendFlag = PremiumFeature.AUTO_EXTEND_FLAG_RES_BONUS;
    b == Resources.CROP && (a.premiumFeatureName = PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS, a.autoExtendFlag = PremiumFeature.AUTO_EXTEND_FLAG_CROP_BONUS);
    a.hasAutoExtend = PremiumFeature.hasAutoExtendFlag(a.autoExtendFlag);
    a.sumBonus = 0;
    a.resourceBoni = a.production[b].bonusFactors;
    a.buildingBoni = [];
    a.oasis = {number:0, boni:0};
    for(var c in a.resourceBoni) {
      var e = a.resourceBoni[c];
      e.category == Village.PRODUCTION_TYPE_BUILDING && (a.buildingBoni[c] = e);
      e.category == Village.PRODUCTION_TYPE_OASIS && (a.oasis.number++, a.oasis.boni += e.value);
      a.sumBonus += e.value
    }
    a.sumProduction = 0;
    a.sumBonusProduction = 0;
    a.resourceFields = a.production[b].baseFactors;
    for(c in a.resourceFields) {
      a.sumProduction += parseInt(a.resourceFields[c].value), a.resourceFields[c].bonusValue = Math.round(a.resourceFields[c].value * a.sumBonus), a.sumBonusProduction += parseFloat(a.resourceFields[c].bonusValue)
    }
    a.heroProduction = 0;
    a.treasureProduction = 0;
    a.oasisTroopProduction = 0;
    for(c in a.production[b].globalBase) {
      e = a.production[b].globalBase[c], e.category == Village.PRODUCTION_TYPE_HERO && (a.heroProduction += parseInt(e.value)), e.category == Village.PRODUCTION_TYPE_OASIS_TROOPS && (a.oasisTroopProduction += parseInt(e.value)), e.category == Village.PRODUCTION_TYPE_TREASURES && (a.treasureProduction += e.value)
    }
    a.interimBalance = parseInt(a.sumProduction) + parseFloat(a.sumBonusProduction) + parseInt(a.heroProduction) + parseFloat(a.treasureProduction) + parseFloat(a.oasisTroopProduction);
    a.goldBonus = 0;
    a.kingBonus = 0;
    a.kingPercentage = 0;
    e = Travian.Config.PremiumFeatures.productionBonus.bonusValue;
    4 == b && (e = Travian.Config.PremiumFeatures.cropProductionBonus.bonusValue);
    a.theoreticalGoldBonus = Math.round(a.interimBalance + a.interimBalance * (e / 100));
    for(c in a.production[b].globalBonus) {
      e = a.production[b].globalBonus[c], e.category == Village.PRODUCTION_TYPE_KING_TAX ? (a.kingPercentage = 100 * e.value, a.kingBonus += Math.round(a.interimBalance * e.value)) : e.category == Village.PRODUCTION_TYPE_GOLD && (a.goldBonus += Math.round(a.interimBalance * e.value), p())
    }
    a.total = a.interimBalance + parseInt(a.goldBonus) + parseInt(a.kingBonus);
    b == Resources.CROP && (a.productionBuildings = parseInt(a.sumProduction) + parseInt(a.sumBonusProduction), a.population = -1 * s.data.population, a.interimBalanceForTroops = parseInt(a.productionBuildings) + parseInt(a.heroProduction) + parseInt(a.oasisTroopProduction) + parseInt(a.goldBonus) + parseInt(a.treasureProduction), a.timeToCorpEmpty = 0, 0 > v[b] && (a.timeToCorpEmpty = g.K() + 3600 * (u[b] / Math.abs(v[b]))));
    a.balanceTotal = parseInt(a.interimBalanceForTroops) + parseInt(a.population) + parseInt(a.troops.own.sum) + parseInt(a.troops.other.sum)
  }
  function m() {
    z = c.getActiveVillageId();
    A = h.B([z], [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING], f, a)
  }
  function f() {
    a.troops = {own:{sum:0, village:0, oasis:0, elsewhere:0, trapped:0, healing:0}, other:{sum:0, village:0, oasis:0}};
    for(var b = A.u(null, [Troops.COLLECTION_STATIONARY]), c = 0;c < b.length;c++) {
      var e = b[c].data;
      e.playerId == t.data.playerId ? (a.troops.own.village -= e.supplyTroops, a.troops.own.sum -= e.supplyTroops) : (a.troops.other.village -= e.supplyTroops, a.troops.other.sum -= e.supplyTroops)
    }
    b = A.u(null, [Troops.COLLECTION_ELSEWHERE]);
    for(c = 0;c < b.length;c++) {
      e = b[c].data, "trap" == e.status && (a.troops.own.trapped -= e.supplyTroops, a.troops.own.sum -= e.supplyTroops), "support" == e.status && e.villageIdSupply == z && (a.troops.own.oasis -= e.supplyTroops, a.troops.own.sum -= e.supplyTroops)
    }
    b = A.u(null, [Troops.COLLECTION_MOVING]);
    for(c = 0;c < b.length;c++) {
      e = b[c].data, e.playerId == t.data.playerId && e.villageIdSupply == z && (e.movement.movementType == Troops.MOVEMENT_TYPE_REGENERATION ? a.troops.own.healing -= e.supplyTroops : a.troops.own.elsewhere -= e.supplyTroops, a.troops.own.sum -= e.supplyTroops)
    }
  }
  function n(b) {
    var c = q(b);
    null == a.production ? Travian.request("village/getProductionDetails", {villageId:s.data.villageId}, function(b) {
      a.production = b.production;
      z = s.data.villageId;
      e(c)
    }) : e(c)
  }
  function q(b) {
    for(var c = 0;c < a.tabConfig.tabs.length;c++) {
      if(a.tabConfig.tabs[c] == b) {
        return c + 1
      }
    }
    return-1
  }
  function p() {
    null == C ? a.productionBonusTime = 0 : C == Resources.CROP && t.hasCropProductionBonus() ? a.productionBonusTime = t.data.cropProductionBonusTime : t.hasProductionBonus() && (a.productionBonusTime = t.data.productionBonusTime)
  }
  function r() {
    a.production = null;
    n(D)
  }
  a.w.windowName = "ProductionOverview";
  a.tabConfig.tabs = ["Wood", "Clay", "Iron", "Crop", "Balance"];
  a.tabConfig.bodyTemplatePrefix = "tpl/productionOverview/tabs/";
  var s = c.i(), v = s.getProduction(), u = s.getResources(), t = l.l();
  a.production = null;
  var z = 0, A = null, C = null;
  a.resourceType = {crop:Resources.CROP};
  a.troops = {own:{sum:0, village:0, oasis:0, elsewhere:0, trapped:0, healing:0}, other:{sum:0, village:0, oasis:0}};
  var D = b.getParam("tab");
  0 < s.data.villageId && n(D);
  a.$on("urlChanged", function() {
    D = b.getParam("tab");
    n(D)
  });
  a.$on("activeVillageChanged", function() {
    s = c.i();
    v = s.getProduction();
    u = s.getResources();
    a.production = null;
    n(D);
    m()
  });
  null == D && n("Wood");
  m();
  a.showOwnSummary = !1;
  a.showOtherSummary = !1;
  a.toggle = function(b) {
    a[b] = !a[b];
    a.w.updateWindowHeight(!0)
  };
  a.toggleAutoExtend = function() {
    PremiumFeature.toggleAutoExtendFlag(a.autoExtendFlag)
  };
  a.subscribe(t, p);
  a.subscribe(s, r);
  a.subscribe(t, function() {
    a.hasAutoExtend = PremiumFeature.hasAutoExtendFlag(a.autoExtendFlag)
  });
  a[PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS] = function() {
    return{callback:r}
  };
  a[PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS] = function() {
    return{callback:r}
  }
};
window.productionOverviewCtrl.$inject = "$scope VillageService RoutingService SessionService TroopsService ServertimeService".split(" ");
window.prestigeTabCtrl = function(a) {
  function c(a) {
    switch(a) {
      case "top10Attacker":
        return"movement_attack_small_flat_black";
      case "top10Climber":
        return"ranking_climber_small_flat_black";
      case "top10Defender":
        return"movement_defend_small_flat_black";
      case "top10Robber":
        return"unit_capacity_small_flat_black"
    }
  }
  a.weekPrestigeAmount = 0;
  a.PrestigeCondition = PrestigeCondition;
  Travian.request("player/getPrestigeConditions", {}, function(b) {
    a.remainingDays = b.remainingDays;
    a.conditions = b.conditions;
    a.weekPrestigeAmount = b.weekPrestigeAmount;
    for(var l = 0;l < a.conditions.length;l++) {
      var h = "Prestige.ConditionName_" + a.conditions[l].type;
      "undefined" != typeof Travian.txt[h + "_king"] && Travian.Player.data.isKing && (h += "_king");
      a.conditions[l].title = Travian.translate(h);
      a.conditions[l].type == PrestigeCondition.COMPLETE_ADVENTURE && (a.conditions[l].tooltipTranslationKey = "Prestige.Tooltip.AdventurePoints");
      a.conditions[l].type == PrestigeCondition.ACQUIRE_VILLAGE && (a.conditions[l].tooltipTranslationKey = "Prestige.Tooltip.AcquireVillage")
    }
    for(l = 0;l < b.rankings.length;l++) {
      b.rankings[l].iconClass = c(b.rankings[l].type)
    }
    for(l = 0;l < b.top10rankings.length;l++) {
      b.top10rankings[l].iconClass = c(b.top10rankings[l].type), b.top10rankings[l].title = Travian.translate("Ranking.Top10Title." + b.top10rankings[l].type), a.weekPrestigeAmount += b.top10rankings[l].prestige
    }
    0 < a.weekPrestigeAmount && (a.weekPrestigeAmount = "+" + a.weekPrestigeAmount);
    a.stars = b.prestigeStars;
    a.top10rankings = b.top10rankings;
    a.rankings = b.rankings;
    a.gameworldPrestige = b.gameworldPrestige;
    a.nextLevelGlobalPrestige = b.nextLevelGlobalPrestige;
    a.globalPrestige = b.globalPrestige
  })
};
window.prestigeTabCtrl.$inject = ["$scope"];
window.profileWindowCtrl = function(a) {
  a.w.windowName = "Title.ProfileWindow";
  a.playerId = a.getParam("playerId");
  a.tabConfig.routeNamedParam = "profileTab";
  a.tabConfig.tabs = ["playerProfile"];
  a.tabConfig.disableScrollingForTabs = ["playerProfile"];
  a.playerId == Travian.Player.data.playerId && (Travian.Config.features.prestige && (a.tabConfig.disableScrollingForTabs.push("prestige"), a.tabConfig.tabs.push("prestige")), a.tabConfig.tabs.push("settings"), a.tabConfig.disableScrollingForTabs.push("settings"));
  var c = Player.get(a.playerId);
  a.subscribe(c, function() {
    a.w.playerData = c.data
  });
  a.w.contentHeaderTemplate = "tpl/profile/profileHeader.html";
  a.tabConfig.bodyTemplatePrefix = "tpl/profile/";
  a.tabConfig.tabName = "tab"
};
window.profileWindowCtrl.$inject = ["$scope", "SessionService", "VillageService"];
window.dailyQuestsCtrl = function(a, c, b) {
  function l() {
    a.nextDailyQuestTimestamp = e.data.nextDailyQuestTime;
    a.dailyQuestsExchanged = e.data.dailyQuestsExchanged
  }
  function h(a, b) {
    return a.data.status == Quest.STATUS_DONE && b.data.status != Quest.STATUS_DONE ? -1 : a.data.status != Quest.STATUS_DONE && b.data.status == Quest.STATUS_DONE ? 1 : a.data.id < b.data.id ? -1 : a.data.id > b.data.id ? 1 : 0
  }
  var g = null;
  a.questId = 0;
  a.showExchangeQuestButton = !0;
  a.$on("urlChanged", function(a, b) {
    void 0 === b.tab && (g = null)
  });
  a.npcId = a.getParam("npcId");
  "undefined" != typeof a.w.hero && (a.npcId = QuestGiver.ADVENTURER);
  a.npcId != QuestGiver.ADVENTURER && (a.npcId = 0);
  a.QuestModel = Quest;
  a.possibleQuests = [];
  a.isAdventure = !1;
  a.itemsPerPage = 8;
  a.numberOfDailyQuests = 0;
  a.exchangeDailyQuest = function() {
    Travian.writeRequest("quest/resetDailyQuest", {questId:a.questId}, function(b) {
      "undefined" !== typeof b.errors && a.handleError(b, "exchangeDailyQuestError")
    })
  };
  var e = Travian.Player;
  l();
  a.subscribe(e, l);
  a.displayCurrentPage = function(b) {
    null == b && (b = 1);
    a.currentPage = b;
    b = a.itemsPerPage * (b - 1);
    var c = Math.min(b + a.itemsPerPage, a.possibleQuests.length);
    a.questsOnPage = a.possibleQuests.slice(b, c)
  };
  a.hero = Hero.get(c.getPlayerId());
  a.subscribe(a.hero, function() {
    var c = b.pa(a.hero.data.villageId);
    null != c && (a.hero.homeVillageName = c.data.name)
  });
  a.selectDailyQuest = function(b) {
    var c = a.initDailyQuestSelection, e = m;
    a.questId = b;
    "undefined" != typeof a.w.updateWindowHeight && a.w.updateWindowHeight();
    g = b;
    for(var h = 0;h < e.data.length;h++) {
      var l = e.data[h];
      l.data.id != b || Quest.isAdventure(b) || (l.data.status == Quest.STATUS_ACTIVATABLE ? Travian.request("quest/dialogAction", {questId:b, dialogId:0, command:"activate"}, c) : a.showExchangeQuestButton = l.data.status != Quest.STATUS_DONE)
    }
  };
  a.possibleQuests = [];
  a.initDailyQuestSelection = function() {
    for(var b = [], c = null, e = 0;e < m.data.length && !(b.length >= Quest.DAILY_QUESTS_NUMBER);e++) {
      var l = m.data[e];
      if(l.data.status >= Quest.STATUS_ACTIVATABLE && l.data.status < Quest.STATUS_FINISHED) {
        l.headerKey = l.data.id;
        if("undefined" == typeof Travian.txt["QuestHeader_" + l.headerKey] && (l.headerKey = l.data.id + "_" + Travian.Player.data.tribeId, "undefined" === typeof Travian.txt["QuestHeader_" + l.headerKey])) {
          var r = "Governor";
          Travian.Player.data.isKing && (r = "King");
          l.headerKey = l.data.id + "_" + r
        }
        b.push(l);
        l.data.id == g && (c = l)
      }
    }
    a.numberOfDailyQuests = b.length;
    a.slotsFull = b.length >= Quest.DAILY_QUESTS_NUMBER ? !0 : !1;
    0 < b.length ? (b.sort(h), null != c ? a.selectDailyQuest(c.data.id) : a.selectDailyQuest(b[0].data.id), a.displayCurrentPage(a.currentPage)) : a.questId = 0;
    for(e = 0;e < Quest.DAILY_QUESTS_NUMBER;e++) {
      a.possibleQuests[e] = "undefined" !== typeof b[e] ? b[e] : "empty"
    }
  };
  a.maxDailyQuestsExchanged = Travian.Config.maxDailyQuestsExchanged;
  var m = Quest.getCollection(QuestGiver.DAILY);
  a.quests = m;
  a.subscribe(m, a.initDailyQuestSelection)
};
window.dailyQuestsCtrl.$inject = ["$scope", "SessionService", "VillageService", "$filter"];
window.enterMailCtrl = function(a, c, b, l) {
  a.w.windowName = "Register";
  a.useMellon = config.mellon.useMellon;
  a.useMellon && (c.getParam("invite"), c.getParam("referral"), c.getParam("inviteCode"), c = l.ba().getInstantUpgrade(), l.ia(c).open());
  a.input = {name:Travian.Player.data.name, email:"", password:"", passwordCheck:""};
  a.valid = !1;
  a.checkInput = function() {
    a.valid = !0;
    4 > a.input.password.length && (a.valid = !1);
    a.input.password != a.input.passwordCheck && (a.valid = !1);
    if(4 > a.input.email.length || 0 > a.input.email.indexOf("@") || 0 > a.input.email.indexOf(".")) {
      a.valid = !1
    }
  };
  a.save = function() {
    console.log("falsch")
  }
};
window.enterMailCtrl.$inject = ["$scope", "RoutingService", "SessionService", "MellonService"];
window.kingOrGovernorCtrl = function(a) {
  a.w.windowName = "KingOrGovernor.Title";
  a.hasEnoughPrestigeForGetAKing = Travian.Config.minPrestigeForGetAKing <= Travian.Player.data.prestige;
  a.selectRole = function(c) {
    ("governor" == c || a.hasEnoughPrestigeForGetAKing) && a.openOverlay("kingOrGovernorSelected", {role:c})
  }
};
window.kingOrGovernorCtrl.$inject = ["$scope", "RoutingService", "SessionService"];
window.kingOrGovernorSelectedCtrl = function(a) {
  var c = a.getParam("role");
  a.role = c;
  a.overlayConfig.k({inWindowPopupTitle:"KingOrGovernor.Selected_" + c, inWindowPopupContentTemplate:"tpl/kingOrGovernor/kingOrGovernorSelected.html"});
  a.acceptRole = function() {
    Travian.writeRequest("quest/dialogAction", {questId:203, dialogId:0, command:"become_" + a.role}, function() {
      a.closeOverlay();
      a.closeWindow("kingOrGovernor")
    })
  }
};
window.kingOrGovernorSelectedCtrl.$inject = ["$scope"];
window.openQuestsCtrl = function(a, c, b) {
  function l(a, b) {
    return a.data.status == Quest.STATUS_DONE && b.data.status != Quest.STATUS_DONE ? -1 : a.data.status != Quest.STATUS_DONE && b.data.status == Quest.STATUS_DONE ? 1 : a.data.id < b.data.id ? -1 : a.data.id > b.data.id ? 1 : 0
  }
  var h = null;
  a.questId = 0;
  a.questLock = {selection:!1};
  a.$on("urlChanged", function(a, b) {
    void 0 === b.tab && (h = null)
  });
  a.npcId = a.getParam("npcId");
  "undefined" != typeof a.w.hero && (a.npcId = QuestGiver.ADVENTURER);
  var g = a.npcId;
  a.npcId != QuestGiver.ADVENTURER && (a.npcId = 0);
  a.QuestModel = Quest;
  a.possibleQuests = [];
  a.isAdventure = !1;
  a.itemsPerPage = 8;
  a.numberOfItems = 0;
  a.displayCurrentPage = function(b) {
    null == b && (b = 1);
    a.currentPage = b;
    b = a.itemsPerPage * (b - 1);
    var c = Math.min(b + a.itemsPerPage, a.possibleQuests.length);
    a.questsOnPage = a.possibleQuests.slice(b, c)
  };
  a.hero = Hero.get(c.getPlayerId());
  a.subscribe(a.hero, function() {
    var c = b.pa(a.hero.data.villageId);
    null != c && (a.hero.homeVillageName = c.data.name)
  });
  a.selectQuest = function(b) {
    var c = a.initQuestSelection, g = e;
    a.questId = b;
    "undefined" != typeof a.w.updateWindowHeight && a.w.updateWindowHeight();
    h = b;
    for(var l = 0;l < g.data.length;l++) {
      var p = g.data[l];
      p.data.id != b || Quest.isAdventure(b) || p.data.status == Quest.STATUS_ACTIVATABLE && Travian.request("quest/dialogAction", {questId:b, dialogId:0, command:"activate"}, c)
    }
  };
  a.initQuestSelection = function() {
    if(!a.questLock.selection) {
      for(var b = [], c = null, n = 0;n < e.data.length;n++) {
        var q = e.data[n];
        if(!Quest.isEnvoyQuest(q.data.id) && (990 > q.data.id || a.npcId == q.data.questGiver) && (!a.npcId || a.npcId == q.data.questGiver) && q.data.status >= Quest.STATUS_ACTIVATABLE && q.data.status < Quest.STATUS_FINISHED) {
          q.headerKey = q.data.id;
          if("undefined" == typeof Travian.txt["QuestHeader_" + q.headerKey] && (q.headerKey = q.data.id + "_" + Travian.Player.data.tribeId, "undefined" === typeof Travian.txt["QuestHeader_" + q.headerKey])) {
            var p = "Governor";
            Travian.Player.data.isKing && (p = "King");
            q.headerKey = q.data.id + "_" + p
          }
          b.push(q);
          q.data.id == h && (c = q)
        }
      }
      a.numberOfItems = b.length;
      a.isAdventure = !1;
      0 == b.length && Travian.Config.features.dailyQuests && (a.tabConfig.tabs = ["DailyQuests"]);
      if(0 < b.length) {
        Quest.isAdventure(b[0].data.id) && (a.isAdventure = !0, a.w.windowName = "Tab.Adventures", 0 < b.length && 3 > a.tabConfig.tabs.length && (a.tabConfig.tabs = ["OpenQuests"]), PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_HERO + "_" + PlayerProgressTrigger.HELP_PAGE_ADVENTURES));
        b.sort(l);
        a.possibleQuests = b;
        if(null != c) {
          a.selectQuest(c.data.id)
        }else {
          c = b[0].data.id;
          if(0 < g) {
            for(n = 0;n < b.length;n++) {
              if(b[n].data.questGiver == g) {
                c = b[n].data.id;
                break
              }
            }
          }
          a.selectQuest(c)
        }
        a.displayCurrentPage(a.currentPage)
      }
    }
  };
  var e = Quest.getCollection();
  a.quests = e;
  a.subscribe(e, a.initQuestSelection)
};
window.openQuestsCtrl.$inject = ["$scope", "SessionService", "VillageService"];
window.questBookCtrl = function(a) {
  a.w.windowName = "Quest.QuestBook";
  a.tabConfig.tabs = ["OpenQuests"];
  Travian.Config.features.dailyQuests && a.tabConfig.tabs.push("DailyQuests");
  a.tabConfig.bodyTemplatePrefix = "tpl/questBook/tabs/";
  a.tabConfig.disableScrolling = !0
};
window.questBookCtrl.$inject = ["$scope"];
window.questDetailsCtrl = function(a, c, b, l, h, g) {
  function e() {
    var b = a.quest;
    a.error = "";
    Travian.writeRequest("quest/checkRewardCollectible", {questId:b.data.id, villageId:c.getActiveVillageId()}, function(b) {
      if("undefined" != typeof b.errors) {
        var c = {};
        if(isNaN(b.errors[0].params)) {
          for(var e in b.errors[0].params) {
            c[e] = "buildingType" == e ? Travian.translate("Building_" + b.errors[0].params[e]) : b.errors[0].params[e]
          }
        }else {
          c = {param:b.errors[0].params}
        }
        a.error = Travian.translate("Error." + b.errors[0].message, c);
        delete b.errors
      }
    })
  }
  function m() {
    if(!a.lockQuestView) {
      a.error = "";
      a.tribeId = Travian.Player.data.tribeId;
      a.tribeName = Player.TRIBE_NAME[a.tribeId];
      a.kingStatus = "governor";
      Travian.Player.data.isKing && (a.kingStatus = "king");
      a.headerText = "";
      a.questSummaryKey = "QuestSummary_" + a.questId;
      if("undefined" === typeof Travian.txt[a.questSummaryKey] && (a.questSummaryKey = "QuestSummary_" + a.questId + "_" + a.tribeId, "undefined" === typeof Travian.txt[a.questSummaryKey])) {
        var c = "Governor";
        Travian.Player.data.isKing && (c = "King");
        a.questSummaryKey = "QuestSummary_" + a.questId + "_" + c
      }
      for(c = 0;c < a.quests.data.length;c++) {
        var g = a.quests.data[c], m = "";
        if(g.data.id == a.questId) {
          a.quest = g;
          g.data.status == Quest.STATUS_DONE ? (a.questCompleted = !0, a.childWindow || (a.w.windowName = "Quest.TaskComplete"), a.headerText = Travian.translate("Quest.TaskComplete"), b.setRewardOpened(g.data.id), e()) : (a.questCompleted = !1, m = f(g.data.id), "" != m && (a.headerText = Travian.translate(m)), a.childWindow || (a.w.windowName = "Quest.Task", "" != m && (a.w.windowName = m)));
          a.rewards = g.data.rewards;
          a.rewardCnt = 0;
          for(var h in a.rewards) {
            a.rewardCnt++
          }
        }
      }
    }
  }
  function f(b) {
    if("undefined" != typeof Travian.txt["QuestHeader_" + b]) {
      return"QuestHeader_" + b
    }
    if("undefined" != typeof Travian.txt["QuestHeader_" + b + "_" + a.tribeId]) {
      return"QuestHeader_" + b + "_" + a.tribeId
    }
    if("undefined" != typeof Travian.txt["QuestHeader_" + b + "_King"]) {
      var c = "Governor";
      Travian.Player.data.isKing && (c = "King");
      return"QuestHeader_" + b + "_" + c
    }
    return""
  }
  "undefined" == typeof a.questId ? (a.questId = a.getParam("questId"), a.childWindow = !1) : a.childWindow = !0;
  null == a.questId && a.closeWindow("questDetails");
  a.acceptQuest = function() {
    a.quest.data.status < Quest.STATUS_ACTIVE && Travian.writeRequest("quest/dialogAction", {questId:a.questId, dialogId:0, command:"activate"}, function() {
      "function" == typeof a.initQuestSelection && a.initQuestSelection()
    });
    a.closeWindow("questDetails")
  };
  a.flyingResTrigger = !1;
  a.lockQuestView = !1;
  a.collectReward = function() {
    var b = {questId:a.questId, villageId:c.getActiveVillageId()};
    l.Le(Sa);
    var b = Travian.writeRequest("quest/collectReward", b, function(b) {
      "undefined" != typeof b.errors ? a.flyingResTrigger = !1 : ("function" == typeof a.initQuestSelection && a.initQuestSelection(), delete a.flyingResTrigger)
    }), e = Settings.get(Travian.Player.data.playerId);
    b && !e.getSetting("disableAnimations") && (a.flyingResTrigger = !0, a.questLock && !1 === a.questLock.selection && (a.questLock.selection = !0), a.lockQuestView = g(function() {
      a.lockQuestView = !1;
      m();
      a.questLock && a.questLock.selection && (a.questLock.selection = !1, a.initQuestSelection && "function" == typeof a.initQuestSelection && a.initQuestSelection())
    }, 3 * h.Lb + 200))
  };
  a.subscribe(a.quests, m);
  a.$watch("questId", m);
  a.$on("activeVillageChanged", function() {
    e()
  });
  a.$on("$destroy", function() {
    a.lockQuestView && g.cancel(a.lockQuestView)
  })
};
window.questDetailsCtrl.$inject = "$scope VillageService TutorialService AudioService AnimationService $timeout".split(" ");
window.questDialogCtrl = function(a, c, b) {
  function l(b) {
    var c = b.text, f = e + "_" + m + "_" + p;
    "undefined" != typeof tutorialTexts[f] && (c = tutorialTexts[f]);
    for(f = 0;f < b.replacements.length;f++) {
      var g = a.$eval(b.replacements[f]), c = c.replace("{{" + (f + 1) + "}}", g)
    }
    return c
  }
  function h(b) {
    if("undefined" != typeof b) {
      if("end" == b) {
        p = -1
      }else {
        b = b.split("|");
        3 <= b.length && (e = b.shift(), n = QuestCfg[e], 3 <= b.length && (a.serverVariable = b[2]));
        q = n.dialog[b[0]];
        m = b[0];
        a.actors = q.actors;
        for(var c = 0;c < q.text.length;c++) {
          if(q.text[c].anchor == b[1]) {
            p = c;
            break
          }
        }
      }
    }else {
      p++, a.m("lineNr", p)
    }
    a.lastActor = a.currentActor;
    if("undefined" != typeof q.text[p]) {
      a.input = {text:""};
      a.currentActor = q.text[p].actor;
      a.currentLine = p;
      a["currentText" + a.currentActor] = l(q.text[p]);
      a.currentType = q.text[p].type;
      if("MC" == q.text[p].type) {
        for(a.MClines = [], a.MClines.push({text:l(q.text[p]), lineNr:p});"undefined" != typeof q.text[p + 1] && "MC" == q.text[p + 1].type;) {
          p++, a.MClines.push({text:l(q.text[p]), lineNr:p})
        }
      }
      a.currentEmotion = q.text[p].emotion || ""
    }else {
      a.closeWindow("questDialog")
    }
  }
  function g() {
    var b = q.text[p].callback;
    0 < b.indexOf("|") ? h(b) : Travian.writeRequest("quest/dialogAction", {questId:e, dialogId:m, command:b, input:a.input.text, addData:a.addData}, function(a) {
      c(function() {
        $("#dialogInputField").blur()
      }, 0, !1);
      c(function() {
        h(a.data)
      }, 10)
    })
  }
  var e = a.getParam("questId"), m = a.getParam("dialogId"), f = a.getParam("lineNr");
  if("undefined" == typeof e) {
    a.closeWindow("questDialog")
  }else {
    var n = QuestCfg[e], q = n.dialog[m];
    a.questId = e;
    a.dialogStarted = !0;
    a.actors = q.actors;
    a.input = {text:""};
    "undefined" != typeof q.module && (a.removeParam("questId"), a.removeParam("dialogId"), a.closeWindow("questDialog"), a.openWindow("hero", {herotab:"Adventures"}));
    a.serverVariable = "";
    a.lastActor = -1;
    var p = a.currentActor = -1;
    0 < f && (p = f - 1);
    "undefined" != typeof n.prepareDialogScope && (f = a.getParam("questObj", !0, !0), n.prepareDialogScope(a, f));
    a.getCharacter = function(a) {
      var b = QuestGiver.STRING[a];
      a == QuestGiver.GENERAL && (b += "_" + Travian.Player.data.tribeId);
      return b
    };
    a.$on("$destroy", function() {
      b.removeTextLine()
    });
    var r = 0;
    a.submitForm = function() {
      a.nextLine(null, !0)
    };
    a.nextLine = function(b, c) {
      if(null == document.activeElement || document.activeElement != $("#dialogInputField")[0] || c) {
        var e = (new Date).getTime();
        if(!(e < r + 100)) {
          r = e;
          e = !0;
          if(null != q.text[p]) {
            if("input" == q.text[p].type && "" == a.input.text) {
              return
            }
            if("MC" == q.text[p].type) {
              "undefined" != typeof b && (null != q.text[b].callback ? (p = b, g()) : h());
              return
            }
            null != q.text[p].callback && (g(), e = !1)
          }
          e && h()
        }
      }
    };
    c(function() {
      a.dialogStarted = !0
    }, 500);
    c(a.nextLine, 1E3)
  }
};
window.questDialogCtrl.$inject = ["$scope", "$timeout", "TutorialService"];
window.questDirectionSelectionCtrl = function(a) {
  var c = 0;
  a.w.windowName = "Quest.DirectionSelection.Title";
  a.direction = 0;
  Travian.request("player/getReferralDirection", {}, function(b) {
    c = b.direction;
    a.direction = c
  });
  a.showAll = !1;
  var b = !0;
  a.choseDirection = !0;
  a.directions = {1:"north", 2:"east", 3:"west", 4:"south"};
  a.choseDirectionError = a.getParam("choseDirectionError");
  a.highlightElement = {1:{marker:!1, label:!1, sign:!1, clicked:!0}, 2:{marker:!1, label:!1, sign:!1, clicked:!0}, 3:{marker:!1, label:!1, sign:!1, clicked:!0}, 4:{marker:!1, label:!1, sign:!1, clicked:!0}};
  a.hover = function(b, c) {
    0 < b ? $.each(a.highlightElement[b], function(g) {
      "clicked" != g && (a.highlightElement[b][g] = c)
    }) : 0 == b && $.each(a.highlightElement, function(b) {
      a.highlightElement[b].marker = c
    })
  };
  a.changeDirection = function(l) {
    b || (a.direction = l, 0 == a.direction && (a.direction = c), $.each(a.highlightElement, function(b) {
      a.highlightElement[b].clicked && (a.highlightElement[b].clicked = !1);
      b == l && (a.highlightElement[b].clicked = !0);
      0 == l && (a.highlightElement[b].clicked = !0)
    }), 0 <= l && (a.choseDirection = !0))
  };
  a.updateCardianalChoice = function() {
    a.showAll ? (b = a.choseDirection = !1, a.changeDirection(-1)) : (a.changeDirection(0), b = !0)
  };
  a.acceptDirection = function() {
    Travian.writeRequest("quest/dialogAction", {questId:204, dialogId:0, command:"direction" + a.direction}, function() {
      a.closeOverlay();
      a.closeWindow("questDirectionSelection")
    })
  }
};
window.questDirectionSelectionCtrl.$inject = ["$scope"];
window.questPuzzleCtrl = function(a) {
  function c(c, m) {
    g = (new Date).getTime();
    var f = a.position[c];
    a.position[c] = a.position[m];
    a.position[m] = f;
    var f = a.puzzleTiles[c], n = a.puzzleTiles[m];
    a.puzzleTiles[c] = {x:n.x, y:n.y};
    a.puzzleTiles[m] = {x:f.x, y:f.y};
    b[f.x][f.y] = m;
    b[n.x][n.y] = c;
    for(var q = 1;9 >= q;q++) {
      a.overlayClass[q] = ""
    }
    a.selectedTile = -1;
    h = !1;
    l.push([f.x, f.y, n.x, n.y])
  }
  a.w.windowName = "Quest.PuzzleTitle";
  a.questId = a.getParam("questId");
  a.selectedTile = -1;
  a.showError = !1;
  var b = [[], [], []], l = [], h = !1, g = (new Date).getTime();
  Travian.request("quest/getPuzzle", {}, function(c) {
    a.puzzleTiles = [];
    b = [[], [], []];
    l = [];
    a.position = [];
    a.overlayClass = [];
    a.tileImage = c.images;
    for(var g = 0;9 > g;g++) {
      var f = g % 3, h = Math.floor(g / 3), q = parseInt(c.init.substr(g, 1));
      b[f][h] = q;
      a.puzzleTiles[q] = {x:f, y:h};
      a.position[q] = {top:132 * h + "px", left:132 * f + "px"};
      a.overlayClass[q] = ""
    }
  });
  a.switchTiles = c;
  a.sendSolution = function() {
    Travian.request("quest/solvePuzzle", {moves:l}, function(b) {
      "undefined" != typeof b.errors ? (a.showError = !0, delete b.errors) : a.closeWindow("questPuzzle")
    })
  };
  a.hideError = function() {
    a.showError = !1
  };
  a.selectTile = function(b, m) {
    if(!((new Date).getTime() < g + 500)) {
      a.selectedTile = -1;
      var f = a.overlayClass[b];
      if("selected" != f && h) {
        for(var l = 1;9 >= l;l++) {
          if("selected" == a.overlayClass[l]) {
            c(l, b);
            return
          }
        }
      }
      for(l = 1;9 >= l;l++) {
        a.overlayClass[l] = ""
      }
      "selected" == f && h ? (h = !1, a.mouseOver(b)) : (h = m, a.overlayClass[b] = "selected", a.selectedTile = b)
    }
  };
  a.deselectAll = function() {
    if(!h) {
      a.selectedTile = -1;
      for(var b = 1;9 >= b;b++) {
        a.overlayClass[b] = ""
      }
    }
  };
  a.mouseOver = function(b) {
    for(var c = 1;9 >= c;c++) {
      "highlight" == a.overlayClass[c] && (a.overlayClass[c] = "")
    }
    "" == a.overlayClass[b] && (a.overlayClass[b] = "highlight")
  }
};
window.questPuzzleCtrl.$inject = ["$scope", "VillageService"];
window.questVictoryCtrl = function(a, c) {
  function b() {
    h || (h = !0, a.fadeOut = !0, c(l, 1500))
  }
  function l() {
    g || (g = !0, Travian.writeRequest("quest/dialogAction", {questId:a.questId, dialogId:0, command:"victory"}));
    a.closeWindow("questVictory")
  }
  a.questId = a.getParam("questId");
  if(a.questId) {
    a.victoryScreenId = a.getParam("victoryScreenId");
    var h = !1, g = !1;
    a.close = b;
    a.$on("$destroy", l);
    c(function() {
      a.fadeIn = !0
    }, 500);
    c(b, 3500)
  }
};
window.questVictoryCtrl.$inject = ["$scope", "$timeout"];
window.relocationCtrl = function(a) {
  a.w.windowName = "Relocation";
  a.w.contentHeaderTemplate = "tpl/relocation/partials/header.html";
  a.loading = !1;
  a.relocation = [];
  Travian.request("playerRelocate/getRelocationPossibilities", {}, function(c) {
    for(var b = 0;b < c.length;b++) {
      a.relocation.push({playerId:c[b].playerId, cellId:c[b].spawn})
    }
  });
  a.relocate = function(c, b) {
    a.loading = !0;
    Travian.request("playerRelocate/relocate", {kingId:c, cellId:b}, function() {
      a.closeWindow("relocation")
    })
  }
};
window.relocationCtrl.$inject = ["$scope"];
window.reportShareCtrl = function(a, c) {
  function b() {
    !e && (a.user.filled && a.societies.filled) && (a.shareWith = 0 < a.user.data.kingdomId ? "kingdom" : 0 < a.user.data.allianceId ? "alliance" : 0 < a.societies.data.length ? "secretSociety" : "player", e = !0)
  }
  a.overlayConfig.k({inWindowPopupTitle:"", inWindowPopupTemplate:"tpl/report/shareReport.html"});
  a.shareMessageMaxLength = Travian.Config.charLimits.shareMessageCharLimit;
  var l = {0:Travian.translate("Report.ShareWithAll")};
  a.collection = a.getParam("collection");
  if("undefined" == typeof a.collection || "" == a.collection) {
    a.collection = Report.COLLECTION_PERSONAL
  }
  a.shareWith = "";
  a.secretSociety = 0;
  a.shareMessage = "";
  a.shareWithPlayerName = "";
  a.shareWithPlayerId = "";
  a.user = c.l();
  a.societies = Society.getCollection();
  a.subscribe(a.user, b);
  a.subscribe(a.societies, function(a) {
    a = a.data;
    for(var c = 0;c < a.length;c++) {
      var e = a[c].data;
      l[e.groupId] = e.name
    }
    b()
  });
  var h = a.getParam("reportId"), g = a.getParam("reportToken");
  g && (a.reportType = g.toString().slice(0, -5), a.shareCode = h, a.shareCode += ("0" + Report.ALL_COLLECTIONS.indexOf(a.collection)).slice(-2), a.shareCode += ("0" + g).slice(-7));
  var e = !1;
  a.dropdownData = {bodyClass:"shareWithSocietyDropDown", options:l, selected:a.secretSociety, callback:function(b) {
    a.secretSociety = b
  }};
  a.selectSharePlayer = function(b) {
    b ? (a.shareWith = "player", a.shareWithPlayerId = b.playerId) : a.shareWithPlayerId = ""
  };
  a.clearPlayerId = function() {
    a.shareWithPlayerId = ""
  };
  a.setShareWith = function(b) {
    a.shareWith = b
  };
  a.share = function() {
    var b = 0;
    switch(a.shareWith) {
      case "secretSociety":
        b = a.secretSociety;
        break;
      case "player":
        b = a.shareWithPlayerId
    }
    Travian.request("reports/shareReport", {id:h, shareWith:a.shareWith, shareParam:b, shareMessage:a.shareMessage, collection:a.collection}, function(b) {
      a.handleError(b) && a.closeOverlay()
    })
  };
  a.$on("$destroy", function() {
    a.handleError({});
    a.removeParam("reportToken")
  })
};
window.reportShareCtrl.$inject = ["$scope", "SessionService"];
window.reportSingleCtrl = function(a, c, b) {
  function l(b) {
    a.prevNext = null;
    c.getPrevAndNext(g, function(b) {
      b ? a.prevNext = b : (b = Math.max(0, (a.reportsPage - 1) * Report.REPORTS_PER_PAGE - 1), c.getReportHeaders(a.collection, b, Report.REPORTS_PER_PAGE + 2, [], function() {
        c.getPrevAndNext(g, function(b) {
          a.prevNext = b
        })
      }))
    });
    a.header = b.header;
    a.body = b.body;
    a.troopsDataAttacker = [];
    a.troopsDataDefender = [];
    a.troopsDataSummary = [];
    a.troopsData = [];
    var e = [];
    a.showTribeDetails = [];
    a.header.successType = 1;
    var h = "";
    a.reportType = function() {
      switch(a.header.displayType) {
        case Report.DISPLAY_TYPE_SUPPORT:
        ;
        case Report.DISPLAY_TYPE_TROOP_RELEASE:
        ;
        case Report.DISPLAY_TYPE_ANIMALS_CAPTURE:
          return"troopsReport";
        case Report.DISPLAY_TYPE_TRADE:
          return"tradeReport";
        case Report.DISPLAY_TYPE_ADVENTURE:
          return"adventureReport";
        case Report.DISPLAY_TYPE_PRESTIGE:
          return"prestigeReport";
        case Report.DISPLAY_TYPE_FARMLIST_RAID:
        ;
        case Report.DISPLAY_TYPE_FARMLIST_RAID_COMPLETE:
          return"farmlistReport";
        default:
          return"fightReport"
      }
    }();
    if(b.header.displayType == Report.DISPLAY_TYPE_FARMLIST_RAID || b.header.displayType == Report.DISPLAY_TYPE_FARMLIST_RAID_COMPLETE) {
      a.troopDetails = {originalTroops:{}, lostTroops:{}, tribeId:b.header.sourceTribeId};
      for(var l = {}, r = 1;11 >= r;r++) {
        a.troopDetails.originalTroops[r] = 0, a.troopDetails.lostTroops[r] = 0, l[r] = 0
      }
      a.lootedRes = new Resources;
      a.lootedResSum = 0;
      a.carryCapacity = 0;
      a.header.ownRole = "";
      a.body.targets.sort(function(a, b) {
        return 0 >= a.arrivalTime ? 1 : 0 >= b.arrivalTime ? -1 : a.arrivalTime - b.arrivalTime
      });
      a.header.TroopLossSum = 0;
      for(var s = a.header.TroopSum = 0, r = 0;r < a.body.targets.length;r++) {
        var v = a.body.targets[r];
        a.carryCapacity += v.carryCapacity;
        if(0 < v.lootedResSum) {
          var u = new Resources(v.lootedRes);
          a.lootedResSum += v.lootedResSum;
          a.lootedRes.addResources(u)
        }
        a.body.targets[r].EnemyTroopLossSum = 0;
        a.body.targets[r].enemyTroopSum = 0;
        a.body.targets[r].sumSent = 0;
        a.body.targets[r].sumDied = 0;
        a.body.targets[r].sumCaptured = 0;
        for(var t in v.sentTroops) {
          var u = parseInt(v.sentTroops[t]), z = 0;
          void 0 !== v.diedTroops[t] && (z = parseInt(v.diedTroops[t]));
          a.troopDetails.originalTroops[t] += u;
          a.troopDetails.lostTroops[t] += z;
          a.body.targets[r].sumSent += u;
          a.body.targets[r].sumDied += z;
          null != v.capturedTroops && void 0 !== v.capturedTroops[t] && (a.body.targets[r].sumDied += parseInt(v.capturedTroops[t]), a.body.targets[r].sumCaptured += parseInt(v.capturedTroops[t]), l[t] += parseInt(v.capturedTroops[t]))
        }
        for(var A in v.diedEnemyTroops) {
          for(t in v.diedEnemyTroops[A]) {
            a.body.targets[r].EnemyTroopLossSum += parseInt(v.diedEnemyTroops[A][t])
          }
        }
        for(A in v.enemyTroops) {
          for(t in v.enemyTroops[A]) {
            a.body.targets[r].enemyTroopSum += parseInt(v.enemyTroops[A][t])
          }
        }
        s += a.body.targets[r].sumCaptured;
        a.header.TroopSum += a.body.targets[r].sumSent;
        a.header.TroopLossSum += a.body.targets[r].sumDied
      }
      0 < s && (a.troopDetails.trappedTroops = l)
    }
    if(b.header.displayType == Report.DISPLAY_TYPE_PRESTIGE) {
      a.PrestigeCondition = PrestigeCondition;
      a.header.weekStartDate && a.header.weekStartDate[1] && (a.header.weekStartDate[1] = moment.monthsShort(parseInt(a.header.weekStartDate[1])));
      a.header.weekEndDate && a.header.weekEndDate[1] && (a.header.weekEndDate[1] = moment.monthsShort(parseInt(a.header.weekEndDate[1])));
      for(r = 0;r < a.body.conditions.length;r++) {
        a.body.conditions[r].type == PrestigeCondition.COMPLETE_ADVENTURE && (a.body.conditions[r].tooltipTranslationKey = "Prestige.Tooltip.AdventurePoints")
      }
      for(r = 0;r < a.body.medals.length;r++) {
        a.body.medals[r].rank = parseInt(a.body.medals[r].rank), a.body.medals[r].typeString = Medal.TypeString[a.body.medals[r].type]
      }
    }
    a.header.sourcePlayerId && !Player.isNPC(a.header.sourcePlayerId) && (a.header.sourcePlayer = Player.get(a.header.sourcePlayerId));
    a.header.destPlayerId && !Player.isNPC(a.header.destPlayerId) && (a.header.destPlayer = Player.get(a.header.destPlayerId));
    if(-1 != $.inArray(b.header.displayType, Report.DISPLAY_TYPES_FIGHT) && "undefined" != typeof a.body.modules) {
      a.infoModules = {};
      a.body.treasures && (a.infoModules.treasures = a.body.treasures);
      a.body.victoryPoints && (a.infoModules.victoryPoints = a.body.victoryPoints);
      a.body.stolenGoods && (a.infoModules.stolenGoods = a.body.stolenGoods);
      a.body.capacity && (a.infoModules.loot = {capacity:a.body.capacity, storageBountySum:0, tributeBountySum:0, allBountySum:0}, a.body.bounty && (a.infoModules.bounty = angular.copy(a.body.bounty), $.each(a.body.bounty, function() {
        a.infoModules.loot.storageBountySum += this
      }), a.infoModules.loot.allBountySum += a.infoModules.loot.storageBountySum), a.body.tributeBounty && (a.infoModules.tributeBounty = a.body.tributeBounty, $.each(a.body.tributeBounty, function(b, c) {
        a.infoModules.loot.tributeBountySum += this;
        a.infoModules.bounty[b] += c
      }), a.infoModules.loot.allBountySum += a.infoModules.loot.tributeBountySum), a.body.treasures && (a.infoModules.loot.allBountySum += a.body.treasures), a.body.stolenGoods && (a.infoModules.loot.allBountySum += a.body.stolenGoods));
      b = function(b, c) {
        c = c || "info";
        a.infoModules[c + "Texts"] || (a.infoModules[c + "Texts"] = []);
        a.infoModules[c + "Texts"].push(b)
      };
      for(r = 0;r < a.body.modules.length;r++) {
        s = a.body.modules[r];
        if("textLine" == s.name) {
          l = {};
          if(s.body.data) {
            for(var v = s.body.data.split(","), C = 0;C < v.length;C++) {
              t = v[C].split(":"), l[t[0]] = t[1]
            }
          }
          b(Travian.translate(s.body.languageKey, l))
        }
        "rescue" == s.name && b(Travian.translate(0 < s.body.ownTroopsFreed + s.body.ownTroopsSurvived ? 0 < s.body.otherTroopsFreed + s.body.otherTroopsSurvived ? "Troops.Rescued.Both" : "Troops.Rescued.OnlyOwn" : "Troops.Rescued.OnlyOther", s.body));
        if("healed/defender" == s.name || "healed/attacker" == s.name) {
          a.infoModules.healed = s.body
        }
        "acceptance" == s.name && (0 == s.body.statusCode ? 0 < s.body.originalValue && b(Travian.translate("Troops.AcceptanceDecreased", {orgVal:s.body.originalValue, nowVal:s.body.finalValue})) : b(Travian.translate("Troops.AcceptanceError_" + s.body.statusCode), "error"), 0 == s.body.finalValue && 0 == s.body.statusCode && b(Travian.translate("Troops.VillageConquered", {villageName:a.header.destName})));
        "chickenboots" == s.name && "defender" == a.header.ownRole && b(Travian.translate("Troops.ChickenBoots", {troopsAmount:s.body.troopsAmount}));
        if("spy" == s.name) {
          s.body.noSurvivors && ("attacker" == a.header.ownRole ? b(Travian.translate("Troops.AllSpiesDead"), "error") : b(Travian.translate("Troops.AllSpiesDefeated")));
          if(null != s.body.tributes) {
            a.body.bounty = angular.copy(s.body.resources);
            a.body.tributeBounty = s.body.tributes;
            for(var D in s.body.tributes) {
              s.body.resources[D] += s.body.tributes[D]
            }
          }
          a.infoModules.spy = s.body;
          Player.isNPC(a.header.destPlayerId) && (delete a.infoModules.spy.hiddenByAllCrannies, delete a.infoModules.spy.hiddenByTreasury)
        }
        "damage" == s.name && (a.infoModules.damage || (a.infoModules.damage = []), a.infoModules.damage.push(s.body));
        if(s.body.originalTroops && s.body.lostTroops) {
          v = !1;
          t = !0;
          A = 0;
          for(C in s.body.originalTroops) {
            if(0 > s.body.lostTroops[C]) {
              s.body.successType = 4;
              s.body.unknown = !0;
              break
            }
            0 < s.body.lostTroops[C] && (v = !0);
            l = 0;
            s.body.trappedTroops && (l = s.body.trappedTroops[C]);
            parseInt(s.body.originalTroops[C]) > s.body.lostTroops[C] + l && (t = !1);
            A += parseInt(s.body.originalTroops[C]);
            if(!t && v) {
              break
            }
          }
          s.body.unknown || (s.body.successType = t && 0 != A ? v ? 3 : "troops/attacker" == s.name ? 3 : 4 : v ? 2 : 1)
        }else {
          s.body.originalTroops && a.header.peaceType && (s.body.successType = Notifications.REPORT_WORLD_PEACE)
        }
        "troops/attacker" == s.name && (a.troopsDataAttacker = [s.body]);
        "troops/defender" == s.name && (s.body.type = "defender", a.troopsDataDefender.push(s.body));
        if("troops/supporter" == s.name) {
          if(s.body.type = "supporter", a.troopsDataDefender.push(s.body), e[s.body.tribeId]) {
            l = e[s.body.tribeId];
            l.playerId && (l = e[s.body.tribeId] = {isGroup:!0, lostTroops:angular.copy(l.lostTroops), originalTroops:angular.copy(l.originalTroops), successType:l.successType, tribeId:l.tribeId, type:"supporter"}, a.troopsDataDefender.push(l), a.showTribeDetails[l.tribeId] = !1);
            for(C in s.body.lostTroops) {
              l.lostTroops[C] += s.body.lostTroops[C]
            }
            for(C in s.body.originalTroops) {
              l.originalTroops[C] = parseInt(l.originalTroops[C]) + parseInt(s.body.originalTroops[C])
            }
            2 != l.successType && l.successType != s.body.successType && (l.successType = 2)
          }else {
            e[s.body.tribeId] = angular.copy(s.body)
          }
        }
        "troops/tribeSum" == s.name && a.troopsDataSummary.push(s.body);
        if("capture" == s.name) {
          l = 0;
          for(C = 1;11 >= C;C++) {
            l += s.body.originalTroops[C]
          }
          s.body.cagedAnimals = l;
          a.troopsData.push(s.body)
        }
      }
      if(0 == a.troopsDataDefender.length && !a.header.peaceType) {
        for(r = 0;r < a.troopsDataSummary.length;r++) {
          a.troopsDataSummary[r].tribeId == a.header.destTribeId && a.troopsDataDefender.push(a.troopsDataSummary.splice(r, 1)[0])
        }
        0 == a.troopsDataDefender.length && a.troopsDataDefender.push({originalTroops:{1:-1, 2:-1, 3:-1, 4:-1, 5:-1, 6:-1, 7:-1, 8:-1, 9:-1, 10:-1, 11:-1}, successType:4, tribeId:a.header.destTribeId, unknown:!0});
        a.troopsDataDefender[0] = $.extend(a.troopsDataDefender[0], {playerId:a.header.destPlayerId, playerName:a.header.destPlayerName, type:"defender", villageId:a.header.destId, villageName:a.header.destName})
      }
      a.infoModules.spy && a.infoModules.spy.defence && (r = a.troopsDataDefender[0].tribeId, 3 < r && (r = 1), a.infoModules.spy.targetTribeId = r);
      a.infoModules.damage && (r = a.troopsDataDefender[0].tribeId, r == Player.TRIBE.NATAR && (r = Player.TRIBE.ROMAN), a.infoModules.damage.targetTribeId = r);
      a.someInfoModules = !$.isEmptyObject(a.infoModules);
      if(a.header.displayType != Report.DISPLAY_TYPE_ANIMALS_CAPTURE && (a.header.defenderReportType = 0 < a.header.defenderTroopLossSum ? a.header.defenderTroopLossSum == a.header.defenderTroopSum ? Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES : Notifications.REPORT_DEFENDER_WON_WITH_LOSSES : 0 < a.header.defenderTroopSum ? Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES : a.header.attackerTroopLossSum == a.header.attackerTroopSum ? Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES : Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES, 
      a.header.attackerReportType = 0 < a.header.attackerTroopLossSum || 0 == a.header.attackerTroopSum ? a.header.attackerTroopLossSum == a.header.attackerTroopSum ? Notifications.REPORT_ATTACKER_LOST : Notifications.REPORT_ATTACKER_WON_WITH_LOSSES : Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES, a.header.successType = a.header[a.header.ownRole + "ReportType"], "defender" == a.header.ownRole && (a.header.successType -= Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES - Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES), 
      a.header.displayType == Report.DISPLAY_TYPE_SPY)) {
        "defender" == a.header.ownRole ? a.header.attackerReportType != Notifications.REPORT_ATTACKER_LOST ? (a.header.defenderReportType = Notifications.REPORT_DEFENDER_WON_WITH_LOSSES, a.header.successType = 2, h = "Spy.Defender.Failure") : (a.header.defenderReportType = Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES, a.header.successType = 1, h = "Spy.Defender.Success") : (a.header.attackerReportType == Notifications.REPORT_ATTACKER_WON_WITH_LOSSES && (a.header.defenderReportType = Notifications.REPORT_DEFENDER_WON_WITH_LOSSES), 
        a.header.attackerReportType == Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES && (a.header.defenderReportType = Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES));
        a.troopsDataAttacker[0].successType = a.header.attackerReportType;
        for(r = 0;r < a.troopsDataDefender.length;r++) {
          a.troopsDataDefender[r].successType = a.header.defenderReportType - 3
        }
        for(r = 0;r < a.troopsDataSummary.length;r++) {
          a.troopsDataSummary[r].successType = a.header.defenderReportType - 3
        }
        r = Notifications.REPORT_SPY_SUCCESS_UNDETECTED - Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES;
        a.header.attackerReportType += r;
        a.troopsDataAttacker[0].successType += r
      }
      a.header.peaceType && (a.header.attackerReportType = Notifications.REPORT_WORLD_PEACE, h = "Peace")
    }else {
      if(a.troopsData = [a.body], a.troopsData[0].type = "", a.header.displayType == Report.DISPLAY_TYPE_ADVENTURE) {
        for(r = 0;r < a.body.loot.length;r++) {
          switch(e = a.body.loot[r], e.type) {
            case Report.ADVENTURE_LOOT_TYPE_NOTHING:
              a.body.loot.splice(r, 1);
              r--;
              break;
            case Report.ADVENTURE_LOOT_TYPE_RESOURCES:
              a.body.loot.resources || (a.body.loot.resources = {1:0, 2:0, 3:0, 4:0});
              for(C in a.body.loot.resources) {
                a.body.loot.resources[C] += e.amount[C]
              }
              break;
            case Report.ADVENTURE_LOOT_TYPE_SILVER:
              a.body.loot.silver = a.body.loot.silver ? a.body.loot.silver + e.amount : e.amount;
              break;
            case Report.ADVENTURE_LOOT_TYPE_TROOPS:
              a.body.loot.troops ? a.body.loot.troops[e.subType] = a.body.loot.troops[e.subType] ? a.body.loot.troops[e.subType] + e.amount : e.amount : (a.body.loot.troops = {}, a.body.loot.troops[e.subType] = e.amount);
              break;
            default:
              a.body.loot.items || (a.body.loot.items = []), a.body.loot.items.push({itemType:e.subType, amount:e.amount})
          }
        }
        a.body.loot.items && (a.heroFace = HeroFace.get(Travian.Player.data.playerId), a.subscribe(a.heroFace, function() {
          a.avatar = a.heroFace.getViewModel()
        }));
        a.header.attackerReportType = Notifications.REPORT_ADVENTURE;
        a.header.successType = Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES;
        a.header.won || (a.header.attackerReportType += " failed", a.header.successType = Notifications.REPORT_ATTACKER_LOST)
      }
    }
    h = h || function(b) {
      switch(a.header.displayType) {
        case Report.DISPLAY_TYPE_SUPPORT:
          return"Support";
        case Report.DISPLAY_TYPE_TRADE:
          return"Trade";
        case Report.DISPLAY_TYPE_ADVENTURE:
          return b ? "Success" : "Failure";
        case Report.DISPLAY_TYPE_SPY:
          return"Spy" + ("attacker" == a.body.ownRole ? ".Attacker" : ".Defender") + (b ? ".Success" : ".Failure");
        case Report.DISPLAY_TYPE_TROOP_RELEASE:
          return"PrisonersReleased";
        case Report.DISPLAY_TYPE_ANIMALS_CAPTURE:
          return"AnimalsCaptured";
        case Report.DISPLAY_TYPE_PRESTIGE:
          return"Prestige";
        default:
          return b ? "Won" : "Lost"
      }
    }(3 > a.header.successType);
    a.reportHeadline = Travian.translate("Report.Header_" + h);
    a.resultIcon = "";
    if(0 <= Notifications.FIGHT_AND_SPY_REPORTS.indexOf(a.header.notificationType) || a.header.notificationType == Notifications.REPORT_CAPTURED_ANIMALS || a.header.notificationType == Notifications.REPORT_ADVENTURE || a.header.notificationType == Notifications.REPORT_SUPPORT_ARRIVED || a.header.notificationType == Notifications.REPORT_TRADE || a.header.notificationType == Notifications.REPORT_TRADE_WOOD || a.header.notificationType == Notifications.REPORT_TRADE_CLAY || a.header.notificationType == 
    Notifications.REPORT_TRADE_IRON || a.header.notificationType == Notifications.REPORT_TRADE_CROP) {
      a.resultIcon = a.header.notificationType == Notifications.REPORT_ADVENTURE ? a.header.successType == Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES ? Notifications.TYPE_STRINGS[a.header.notificationType + "_won"] : Notifications.TYPE_STRINGS[a.header.notificationType + "_lost"] : Notifications.TYPE_STRINGS[a.header.notificationType]
    }
    a.isFavorite = !1;
    for(r = 0;r < m.data.length;r++) {
      m.data[r].data == a.header.bodyId.$id && (a.isFavorite = !0)
    }
    a.reportToken = "";
    a.header.securityCode && (a.reportToken = a.header.ownRole ? a.reportToken + a.header[a.header.ownRole + "ReportType"] : a.reportToken + a.header.notificationType, a.reportToken += a.header.securityCode);
    requestAngularApply(function() {
      a.$broadcast("scrollbarApi", "checkLazyRenderer")
    })
  }
  function h() {
    Travian.request("reports/getFullReport", {id:g, collection:a.collection, securityCode:e}, function(b) {
      if("undefined" == typeof b || "undefined" != typeof b.errors) {
        if(a.collection == Report.COLLECTION_PERSONAL && "NotFound" == b.errors[0].message) {
          Travian.request("reports/getFullReport", {id:g, collection:Report.COLLECTION_FAVORITE, securityCode:e}, function(a) {
            if("undefined" == typeof a || "undefined" != typeof a.errors) {
              return!1
            }
            l(a)
          }), delete b.errors
        }else {
          return!1
        }
      }else {
        l(b)
      }
    })
  }
  a.w.windowName = "Report";
  a.overlayConfig.k({inWindowPopupTitle:"", inWindowPopupTemplate:"tpl/report/report.html"});
  a.DEFENDER_OFFSET = 3;
  a.collection = Report.COLLECTION_PERSONAL;
  a.header = {};
  a.body = {};
  a.player = Travian.Player;
  a.resNames = Resources.STRING;
  a.Report = Report;
  a.Notifications = Notifications;
  var g = a.getParam("reportId"), e = a.getParam("reportToken") || "", m = ReportFavorites.getCollection();
  a.usedReportToken = e;
  a.highlight = a.getParam("highlight", !1, !0);
  a.changeReport = function(b) {
    g = a.prevNext[b];
    a.m("reportId", g);
    a.m("collection", a.prevNext[b + "Coll"]);
    a.collection = a.prevNext[b + "Coll"];
    h()
  };
  a.attackAgain = function() {
    if(a.header.notificationType == Notifications.REPORT_FARMLIST_RAID) {
      for(var c = [], e = 0;e < a.body.targets.length;e++) {
        c.push(parseInt(a.body.targets[e].destVillageId))
      }
      a.openWindow("building", {location:32, tab:"FarmList", listId:a.header.destId}, {targets:c})
    }else {
      b.Pe("reportAttack"), a.openWindow("sendTroops", {x:a.header.destX, y:a.header.destY}, {type:a.header.attackType, preselect:a.troopsDataAttacker[0].originalTroops, onlySelect:!0, backTo:"reportAttack"})
    }
  };
  a.toSimulator = function() {
    function b() {
      a.openWindow("building", {location:32, tab:"CombatSimulator"}, {combatSimulatorData:m})
    }
    var c = 0;
    if(a.infoModules.spy && a.infoModules.spy.defence) {
      for(var e = 0;e < a.infoModules.spy.defence.length;e++) {
        var g = a.infoModules.spy.defence[e];
        if(g.buildingType == Building.TYPE.CITY_WALL || g.buildingType == Building.TYPE.EARTH_WALL || g.buildingType == Building.TYPE.PALLISADE) {
          c = g.buildingLevel
        }
      }
    }
    var m = {attacker:{attackType:a.header.attackType, tribeId:a.troopsDataAttacker[0].tribeId, troops:a.troopsDataAttacker[0].originalTroops, villageId:a.troopsDataAttacker[0].villageId}, defender:{tribeId:a.troopsDataDefender[0].tribeId, troops:a.troopsDataDefender[0].originalTroops, villageId:a.troopsDataDefender[0].villageId, wallLevel:c}, support:[]}, c = null;
    a.troopsDataAttacker[0].playerId == Travian.Player.data.playerId && 0 < a.troopsDataAttacker[0].villageId && (c = Research.get(a.troopsDataAttacker[0].villageId), m.attacker.research = c);
    a.troopsDataDefender[0].playerId == Travian.Player.data.playerId && 0 < a.troopsDataDefender[0].villageId && (c = Research.get(a.troopsDataDefender[0].villageId), m.defender.research = c);
    for(e = 1;e < a.troopsDataDefender.length;e++) {
      a.troopsDataDefender[e].isGroup || (g = {tribeId:a.troopsDataDefender[e].tribeId, troops:a.troopsDataDefender[e].originalTroops, villageId:a.troopsDataDefender[e].villageId}, a.troopsDataDefender[e].playerId == Travian.Player.data.playerId && 0 < a.troopsDataDefender[e].villageId && (c = Research.get(a.troopsDataDefender[e].villageId), g.research = c), m.support.push(g))
    }
    if("attacker" == a.body.ownRole) {
      for(e = 0;e < a.troopsDataSummary.length;e++) {
        g = {tribeId:a.troopsDataSummary[e].tribeId, troops:a.troopsDataSummary[e].originalTroops}, m.support.push(g)
      }
    }
    c ? a.subscribe(c, b) : b()
  };
  a.reportShareable = function() {
    if(7 == a.header.displayType) {
      return!1
    }
    var b = [Report.COLLECTION_PERSONAL, Report.COLLECTION_FAVORITE];
    return(a.header.sourcePlayerId == a.player.data.playerId || a.header.destPlayerId == a.player.data.playerId) && -1 != $.inArray(a.collection, b) && -1 != $.inArray(a.header.notificationType, Notifications.FIGHT_AND_SPY_REPORTS) && ("undefined" == typeof a.header.sharedBy || a.header.sharedBy == a.player.data.playerId)
  };
  a.toggleFavorite = function() {
    a.isFavorite ? Travian.request("reports/removeAsFavorite", {bodyId:a.header.bodyId.$id}, function() {
      "favorite" == a.collection && (a.closeOverlay(), a.$root.$broadcast("newReport"));
      a.isFavorite = !1
    }) : Travian.request("reports/markAsFavorite", {id:g, collection:a.header.collection, securityCode:e}, function() {
      a.isFavorite = !0
    })
  };
  if(g) {
    a.$on("newReport", function() {
      null == a.prevNext.prev && c.getReportHeaders(a.collection, 0, 10, [], function() {
        c.getPrevAndNext(g, function(b) {
          a.prevNext = b
        })
      })
    });
    a.collection = a.getParam("collection");
    if("undefined" == typeof a.collection || "" == a.collection) {
      a.collection = Report.COLLECTION_PERSONAL
    }
    a.reportsPage = a.getParam("cp") || 1;
    h()
  }
};
window.reportSingleCtrl.$inject = ["$scope", "ReportsService", "RoutingService"];
window.reportStreamCtrl = function(a, c, b) {
  function l() {
    if("undefined" == typeof a.showCollection) {
      b(l, 10)
    }else {
      if(!h) {
        a.showCollection == Report.COLLECTION_PERSONAL && a.reportFilters.push("misc");
        a.showCollection != Report.COLLECTION_SEARCH && (a.w.searchInputOverride = "");
        if("undefined" != typeof localStorage) {
          var c = localStorage.getItem("reportFilters." + a.showCollection);
          if(null != c) {
            for(var c = JSON.parse(c), e = 0;e < c.length;e++) {
              a.filterActive[c[e]] = !0
            }
          }
        }
        h = !0
      }
    }
  }
  a.filterActive = {};
  a.reportFilters = ["att", "def", "spy1", "spy2", Notifications.REPORT_SHARED];
  a.reportFilterGroups = {att:[Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES, Notifications.REPORT_ATTACKER_WON_WITH_LOSSES, Notifications.REPORT_ATTACKER_LOST, Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITHOUT_LOSSES, Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_LOSSES, Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_FULL_LOSSES, Notifications.REPORT_FARMLIST_RAID], def:[Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES, Notifications.REPORT_DEFENDER_WON_WITH_LOSSES, Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES, 
  Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES], spy1:[Notifications.REPORT_SPY_SUCCESS_UNDETECTED, Notifications.REPORT_SPY_SUCCESS_DETECTED, Notifications.REPORT_SPY_FAILURE], spy2:[Notifications.REPORT_SPY_DEFENDED, Notifications.REPORT_SPY_NOT_DEFENDED], misc:[Notifications.REPORT_ADVENTURE, Notifications.REPORT_TRADE, Notifications.REPORT_SUPPORT_ARRIVED, Notifications.REPORT_CAPTURED_ANIMALS, Notifications.TROOPS_RELEASED, Notifications.REPORT_WORLD_PEACE, Notifications.REPORT_PRESTIGE]};
  var h = !1;
  l();
  a.numberOfItems = 0;
  a.pagination = {currentPage:0};
  a.displayCurrentPage = function(e) {
    null == e && (e = 1);
    if("undefined" != typeof a.showCollection && h) {
      a.pagination.currentPage = e;
      var f = (e - 1) * a.itemsPerPage, g = [], m;
      for(m in a.filterActive) {
        isNaN(m) || (g.push(m), m == Notifications.REPORT_TRADE && (g.push(Notifications.REPORT_TRADE_WOOD), g.push(Notifications.REPORT_TRADE_CLAY), g.push(Notifications.REPORT_TRADE_CROP), g.push(Notifications.REPORT_TRADE_IRON)), m == Notifications.REPORT_SHARED && (g.push(Notifications.REPORT_SHARED_OWN), g.push(Notifications.REPORT_SHARED_ALLIANCE), g.push(Notifications.REPORT_SHARED_KINGDOM), g.push(Notifications.REPORT_SHARED_SOCIETIES)))
      }
      m = a.getParam("lastTime", !1, !0);
      null != m && g.push({lastTime:m});
      a.showCollection == Report.COLLECTION_SEARCH && null != a.searchObj && g.push(a.searchObj);
      a.showCollection == Report.COLLECTION_SOCIETY && 0 != a.societyDropdown.selected && g.push({societyId:a.societyDropdown.selected});
      c.getReportHeaders(a.showCollection, f, a.itemsPerPage, g, function(b) {
        a.reports = b;
        a.numberOfItems = c.getTotalNumberOfReports(a.showCollection)
      });
      a.allReports.checked = !1
    }else {
      b(function() {
        a.displayCurrentPage(e)
      }, 10)
    }
  };
  var g = 0, e = a.getParam("reportTypes", !1, !0);
  if(null != e) {
    for(var e = ("" + e).split(","), m = 0;m < e.length;m++) {
      a.filterActive[e[m]] = !0;
      for(var f in a.reportFilterGroups) {
        for(var n = 0;n < a.reportFilterGroups[f].length;n++) {
          a.reportFilterGroups[f][n] == e[m] && (a.filterActive[f] = !0)
        }
      }
      if(isNaN(e[m])) {
        for(n = 0;n < a.reportFilterGroups[e[m]].length;n++) {
          a.filterActive[a.reportFilterGroups[e[m]][n]] = !0
        }
      }
    }
    h = !0
  }
  a.$on("$destroy", function() {
    a.removeParam("reportTypes");
    a.removeParam("lastTime")
  });
  a.w.toggleFilter = function(b, c) {
    c = "undefined" !== typeof c;
    a.removeParam("reportTypes");
    a.removeParam("lastTime");
    var e = (new Date).getTime();
    if(!(e < g + 200)) {
      g = e;
      isNaN(b) || (b = parseInt(b));
      -1 != a.reportFilters.indexOf(b) ? "undefined" == typeof a.filterActive[b] ? (a.filterActive = {}, a.filterActive[b] = !0) : a.filterActive = {} : ("undefined" == typeof a.filterActive[b] ? c || (a.filterActive[b] = !0) : delete a.filterActive[b], 1 >= Object.keys(a.filterActive).length && (a.filterActive = {}));
      if(isNaN(b)) {
        for(e = 0;e < a.reportFilterGroups[b].length;e++) {
          var f = a.reportFilterGroups[b][e];
          "undefined" != typeof a.filterActive[b] ? a.filterActive[f] = !0 : delete a.filterActive[f]
        }
      }
      a.displayCurrentPage(1);
      if("undefined" != typeof localStorage) {
        e = [];
        for(b in a.filterActive) {
          e.push(b)
        }
        localStorage.setItem("reportFilters." + a.showCollection, JSON.stringify(e))
      }
    }
  };
  a.stream.applyFilters = function() {
    a.displayCurrentPage(1)
  };
  a.noCheckboxSelected = function() {
    if("undefined" != typeof a.reports) {
      for(var b in a.reports) {
        if(a.reports[b].hasOwnProperty("checked") && !0 == a.reports[b].checked) {
          return!1
        }
      }
    }
    return!0
  };
  a.allReports = {checked:!1};
  a.selectAll = function() {
    "undefined" != typeof a.reports && $.each(a.reports, function(b, c) {
      c.checked = a.allReports.checked
    })
  };
  a.$on("newReport", function() {
    1 !== a.pagination.currentPage && a.itemsPerPage * (a.pagination.currentPage - 1) >= a.numberOfItems - 1 && (a.pagination.currentPage -= 1);
    a.displayCurrentPage(a.pagination.currentPage)
  })
};
window.reportStreamCtrl.$inject = ["$scope", "ReportsService", "$timeout"];
window.reportsCtrl = function(a, c) {
  a.w.contentHeaderTemplate = "tpl/reports/partials/reportsHeader.html";
  ReportFavorites.getCollection();
  a.itemsPerPage = Report.REPORTS_PER_PAGE;
  a.stream = {applyFilters:w()};
  a.numberOfItems = 0;
  a.subscribe(Travian.Player, function() {
    a.tabConfig.tabs = 0 < Travian.Player.data.kingdomId ? ["Own", "Kingdom", "Alliance", "SecretSociety", "Favorites"] : ["Own", "Alliance", "SecretSociety", "Favorites"]
  });
  a.tabConfig.bodyTemplatePrefix = "tpl/reports/reports";
  a.searchValue = "";
  a.searchObj = null;
  a.isMinion = (Travian.Player.data.allianceRights & Alliance.RIGHT_KING_REPORTS) < Alliance.RIGHT_KING_REPORTS;
  a.societyDropdown = {selected:0, options:{}, callback:function() {
    a.stream.applyFilters()
  }};
  var b = Society.getCollection();
  a.subscribe(b, function() {
    a.societyDropdown.options = {};
    a.societyDropdown.options[0] = Travian.translate("Report.SocietyFilter.All");
    for(var c = 0;c < b.data.length;c++) {
      var e = b.data[c];
      a.societyDropdown.options[e.data.groupId] = e.data.name
    }
  });
  a.societyFilter = 0;
  a.w.searchInputOverride = "";
  a.w.searchReports = function(b) {
    a.searchObj = b;
    void 0 !== a.searchObj.name && "" != a.searchObj.name && (a.searchValue = a.searchObj.name);
    "Search" != c.getParam("tab") ? c.m("tab", "Search") : "function" == typeof a.w.toggleFilter && (a.w.toggleFilter(Notifications.REPORT_FARMLIST_RAID, !0), a.stream.applyFilters())
  };
  var l = a.getParam("villageId");
  if("Search" == a.getParam("tab", !1, !1)) {
    if("undefined" !== typeof l) {
      var h = Village.get(l);
      a.subscribe(h, function() {
        a.w.searchInputOverride = h.data.name;
        a.searchValue = h.data.name
      });
      a.w.searchReports({villageId:l});
      c.O("villageId")
    }else {
      c.m("tab", a.tabConfig.tabs[0])
    }
  }
};
window.reportsCtrl.$inject = ["$scope", "RoutingService"];
window.resourcesCtrl = function(a, c, b, l, h) {
  function g(b, c, f) {
    if(a.village.data.villageId != c || r) {
      return!1
    }
    if(a.interpolateResources) {
      c = !1;
      for(b = 1;4 >= b;b++) {
        c = c || Math.abs(f[b] - v[b]) > a.interpolationThresholds[b], a.tmpResources[b] && f[b] < v[b] && (a.tmpResources[b] = Math.max(0, a.tmpResources[b] - (v[b] - f[b])))
      }
      if(c) {
        for(b = 1, c = 0;4 >= b;b++) {
          f[b] != v[b] && f[b] > v[b] && (0 < c && !a.tmpResources[b] && (a.tmpResources[b] = v[b], e(b, c)), c++)
        }
      }
    }
    v = angular.copy(f);
    a.$$phase || a.$digest()
  }
  function e(b, c) {
    h(function() {
      s[b] = window.setTimeout(function() {
        a.tmpResources[b] = !1;
        a.$$phase || a.$digest();
        s[b] = 0
      }, l.Lb * c)
    })
  }
  function m() {
    v = angular.copy(c.i().data.calculatedStorage);
    n && n.getSetting("disableAnimations") || (a.interpolateResources = !1, p = h(function() {
      a.interpolateResources = !0;
      p = null
    }));
    a.village = c.i();
    for(var b = 1;4 >= b;b++) {
      a.interpolationThresholds[b] = Math.max(f, Math.abs(2 * Math.ceil(a.village.data.production[b] / 3600)))
    }
  }
  var f = 25;
  a.interpolationThresholds = {1:25, 2:25, 3:25, 4:25};
  a.resNames = angular.copy(Resources.STRING);
  a.Math = Math;
  var n = null, q = 0, p = null, r = null;
  a.interpolateResources = !1;
  a.showResourceBar = !1;
  b.o(function() {
    a.showResourceBar = !0;
    n = Settings.get(Travian.Player.data.playerId);
    q = n.subscribe(function() {
      a.interpolateResources = !n.getSetting("disableAnimations");
      !a.interpolateResources && p && (h.cancel(p), p = null)
    })
  });
  a.$on("logout", function() {
    a.showResourceBar = !1
  });
  a.village = c.i();
  var s = {};
  a.tmpResources = {1:!1, 2:!1, 3:!1, 4:!1};
  var v = {1:0, 2:0, 3:0, 4:0};
  a.$on("resourcesChanged", g);
  a.$on("activeVillageChanged", m);
  b.o(m);
  a.$on("freezeStockBar", function(b, c) {
    for(var e = c && c.resources || v || a.village.data.calculatedStorage, f = 1;4 >= f;f++) {
      a.tmpResources[f] = Math.min(e[f] + (c && c.addResources[f] || 0), a.village.data.storageCapacity[f]), v[f] = a.tmpResources[f]
    }
    r && h.cancel(r);
    r = h(function() {
      for(var b = 1;4 >= b;b++) {
        a.tmpResources[b] = !1
      }
      r = null;
      g(0, a.village.data.villageId, a.village.data.calculatedStorage)
    }, c && c.duration || 1E3);
    a.$$phase || a.$digest()
  });
  a.$on("$destroy", function() {
    for(var a in s) {
      s[a] && window.clearTimeout(s[a])
    }
    n && q && n.unsubscribe(q);
    r && h.cancel(r)
  })
};
window.resourcesCtrl.$inject = ["$scope", "VillageService", "SessionService", "AnimationService", "$timeout"];
window.screenFlashNotificationCtrl = function(a, c, b) {
  switch(a.windowParams.notificationType) {
    case "achievement":
      if(!a.windowParams.key) {
        return
      }
      if(a.windowParams.extraData) {
        a.extraTranslationParams = "";
        for(var l in a.windowParams.extraData) {
          a.extraTranslationParams && (a.extraTranslationParams += ","), a.extraTranslationParams += l + ":" + a.windowParams.extraData[l]
        }
        a.windowParams.extraData.allianceName && (a.langKeySuffix = "_hasAlliance")
      }
      break;
    case "heroLevelUp":
      if(0 < Travian.Player.hasLimitation(PlayerPunishment.ACTION_LOCK)) {
        a.closeWindow("screenFlashNotification");
        return
      }
      a.hero = Hero.get(Travian.Player.data.playerId);
      c(function() {
        b.jb(".screenFlashNotificationWindow .levelStar", "#heroQuickInfo .levelStar", "movingStar symbol_star_small_illu", "body", 900, 300, "ease", function() {
          b.zd("#heroQuickInfo .levelStar", "levelUp", "symbol_star_small_illu");
          Travian.writeRequest("hero/confirmHeroLevelUp")
        })
      }, 1500);
      break;
    default:
      a.closeWindow("screenFlashNotification");
      return
  }
  var h = Travian.rootScope.$watch("windows", function() {
    Travian.rootScope.windows.questVictory && (a.closeWindow("screenFlashNotification"), b.showScreenFlashNotification(a.windowParams.notificationType, a.windowParams), h(), h = null)
  }, !0), g = null, g = c(function() {
    a.fadeIn = !0;
    g = c(a.fadeOutAndClose, 3E3)
  }, 500);
  a.fadeOutAndClose = function() {
    a.fadeIn = !1;
    a.fadeOut = !0;
    g = c(function() {
      a.closeWindow("screenFlashNotification")
    }, 1500)
  };
  a.$on("$destroy", function() {
    g && c.cancel(g);
    h && h()
  })
};
window.screenFlashNotificationCtrl.$inject = ["$scope", "$timeout", "AnimationService"];
window.selectTribeCtrl = function(a, c) {
  a.player = Travian.Player;
  0 < Travian.Player.data.tribeId && a.closeWindow("selectTribe");
  a.chars = [{tribeIndex:Player.TRIBE.ROMAN, tribeString:Player.TRIBE_NAME[Player.TRIBE.ROMAN], position:0}, {tribeIndex:Player.TRIBE.GAUL, tribeString:Player.TRIBE_NAME[Player.TRIBE.GAUL], position:1, selected:"Selected"}, {tribeIndex:Player.TRIBE.TEUTON, tribeString:Player.TRIBE_NAME[Player.TRIBE.TEUTON], position:2}];
  a.previous = function() {
    for(var b = 0;b < a.chars.length;b++) {
      a.chars[b].position = (a.chars[b].position + 1) % 3, a.chars[b].selected = null, 1 == a.chars[b].position && (a.input.tribe = a.chars[b].tribeIndex, a.chars[b].selected = "Selected")
    }
  };
  a.next = function() {
    for(var b = 0;b < a.chars.length;b++) {
      a.chars[b].position -= 1, a.chars[b].selected = null, 0 > a.chars[b].position && (a.chars[b].position = 2), 1 == a.chars[b].position && (a.input.tribe = a.chars[b].tribeIndex, a.chars[b].selected = "Selected")
    }
  };
  a.input = {tribe:3};
  a.selectTribe = function() {
    Travian.writeRequest("player/chooseTribe", {tribeId:a.input.tribe}, function() {
      a.closeWindow("selectTribe")
    })
  };
  a.$on("urlChanged", function() {
    c.Rh()
  })
};
window.selectTribeCtrl.$inject = ["$scope", "SessionService"];
window.sendTroopsCtrl = function(a, c, b) {
  var l = 0, h = 0;
  a.w.windowName = "SendTroops";
  a.tabConfig.tabs = [];
  a.tabConfig.disableScrolling = !0;
  a.hoverOver = {};
  a.sendTabs = [];
  a.activeTab = 1;
  a.showMoreTabs = !0;
  var g = a.getParam("moveHomeType", !0, !0);
  if("Call" == g || "Send" == g) {
    a.showMoreTabs = !1
  }
  a.selectTab = function(b) {
    for(var c = 0;c < a.sendTabs.length;c++) {
      a.sendTabs[c].tabNr == b && (a.activeTab = b, a.$broadcast("setVisibleTab", b), a.w.updateWindowHeight(!0))
    }
  };
  a.addTab = function() {
    l++;
    a.sendTabs.push({tabNr:l, tabName:"", preSelectionCallback:ha(null)});
    h = a.activeTab;
    a.activeTab = l
  };
  a.addTab();
  a.setTabName = function(b, c) {
    for(var e = 0;e < a.sendTabs.length;e++) {
      a.sendTabs[e].tabNr == b && (a.sendTabs[e].tabName = Travian.translate("RallyPoint.Troops.Movement_" + c))
    }
  };
  a.closeTab = function(c) {
    c || (c = a.activeTab);
    for(var e = 0;e < a.sendTabs.length;e++) {
      if(a.sendTabs[e].tabNr == c) {
        a.sendTabs.splice(e, 1);
        break
      }
    }
    e >= a.sendTabs.length && (e = a.sendTabs.length - 1);
    -1 >= e ? (a.removeParam("x"), a.removeParam("y"), c = a.getParam("backTo", !1, !0), null != c && b.Be(c), a.closeWindow("sendTroops")) : a.selectTab(a.sendTabs[e].tabNr)
  };
  a.setPreSelectionCallbackForActiveTab = function(b) {
    for(var c = 0;c < a.sendTabs.length;c++) {
      if(a.sendTabs[c].tabNr == a.activeTab) {
        a.sendTabs[c].preSelectionCallback = b;
        break
      }
    }
  };
  a.getPreSelectionCallbackFromLastActiveTab = function() {
    for(var b = 0;b < a.sendTabs.length;b++) {
      if(a.sendTabs[b].tabNr == h) {
        return a.sendTabs[b].preSelectionCallback
      }
    }
  };
  a.villages = [];
  Travian.Player.data.hasNoobProtection || PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_ATTACK_TYPES);
  var e = c.S();
  a.subscribe(e, function() {
    a.villages.splice(0, a.villages.length);
    for(var b = 0;b < e.data.length;b++) {
      var c = e.data[b];
      a.villages.push({villageId:c.data.villageId, name:c.data.name})
    }
  })
};
window.sendTroopsCtrl.$inject = ["$scope", "VillageService", "RoutingService"];
window.sendTroopsTabCtrl = function(a, c, b, l) {
  function h() {
    for(var b in a.missionTypes) {
      var c = a.missionTypes[b].check();
      "disabledBySitter" == c || "disabledBySitterVsHuman" == c ? (a.missionTypes[b].disabledBySitter = c, a.missionTypes[b].state = "deactivated") : (a.missionTypes[b].disabledBySitter = !1, a.missionTypes[b].state = c)
    }
    c = !1;
    for(b = 0;b < a.missionTypes.length;b++) {
      if("normal" == a.missionTypes[b].state) {
        c = !0;
        break
      }
    }
    if(c) {
      for(c = !1, b = 0;!c;) {
        a: {
          if(b > a.missionTypes.length) {
            for(c = 0;c < a.missionTypes.length;c++) {
              if("normal" == a.missionTypes[c].state) {
                a.input.movementType = a.missionTypes[c].id;
                a.missionTypes[c].state = "selected";
                a.setTabName(a.tab.tabNr, a.missionTypes[c].id);
                break
              }
            }
            c = !0
          }else {
            for(c = 0;c < a.missionTypes.length;c++) {
              if(a.missionTypes[c].id == a.input.movementType) {
                if("normal" == a.missionTypes[c].state) {
                  a.missionTypes[c].state = "selected";
                  a.setTabName(a.tab.tabNr, a.missionTypes[c].id);
                  c = !0;
                  break a
                }
                a.input.movementType = a.missionTypes[c].fallback;
                n();
                c = !1;
                break a
              }
            }
            c = void 0
          }
        }
        b++
      }
    }else {
      a.input.movementType = null
    }
  }
  function g(a) {
    a = Troops.getCollection(Troops.COLLECTION_STATIONARY, a);
    for(var b = 0;b < a.data.length;b++) {
      var c = a.data[b];
      if(c.data.status == Troops.STATUS_HOME) {
        return c
      }
    }
    return null
  }
  function e(b) {
    a.activeVillage = b ? c.pa(b) : c.i();
    u = g(a.activeVillage.data.villageId);
    null == u ? window.setTimeout(e, 100) : (a.villageDropdown.selected = a.activeVillage.data.villageId, a.moveHomeId && (u = Troops.get(a.moveHomeId)), a.rallyPoint = l.za(a.activeVillage.data.villageId, Building.TYPE.RALLY_POINT), a.catapultNr = Troops.TYPE_CATAPULT + 10 * (a.troopDetails.tribeId - 1), a.subscribe(u, function() {
      var b = a.troopDetails.inputTroops;
      a.troopDetails = angular.copy(u.data);
      a.troopDetails.inputTroops = b;
      a.troopDetails.update = !0;
      b = u.nrToUnitId(u.getSpyId());
      a.spyName = Travian.translate("Troop_" + b);
      a.moveHomeId && m();
      n();
      for(var b = u.data, c = 0, e = 1;11 >= e;e++) {
        var f = b.units[e];
        void 0 !== f && 0 < f ? (-1 == a.troopDetails.inputTroops[e] && (a.troopDetails.inputTroops[e] = 0), 0 < a.troopDetails.inputTroops[e] && (a.troopDetails.inputTroops[e] = Math.min(a.troopDetails.inputTroops[e], f)), 2 == a.step && (a.sendTroopsDetails.units[e] = Math.min(a.sendTroopsDetails.units[e], f), c += a.sendTroopsDetails.units[e])) : (a.troopDetails.inputTroops[e] = -1, 2 == a.step && (a.sendTroopsDetails.units[e] = 0))
      }
      2 == a.step && 0 >= c && (a.step = 1);
      n()
    }), "undefined" != typeof a.villageSearch.result && a.checkTargetSend())
  }
  function m() {
    for(var b in a.troopDetails.units) {
      var c = a.troopDetails.units[b];
      0 < c && (a.troopDetails.inputTroops[b] = c)
    }
    b = !1;
    "undefined" != typeof a.troopDetails.units[10] && 0 < a.troopDetails.units[10] && (b = !0);
    b = {destVillageId:u.data.villageId, villageId:u.data.villageIdLocation, movementType:Troops.MOVEMENT_TYPE_RETURN, redeployHero:a.input.redeployHero, heroPresent:b, tribeId:u.data.tribeId};
    a.troopDetails.villageIdLocation == a.activeVillage.data.villageId && (b.destVillageId = a.troopDetails.villageId);
    Travian.request("troops/checkTarget", b, function(b) {
      "undefined" == typeof b.errors && (a.checkTargetResult = b, a.villageSearch.target = b, a.villageSearch.targetPlayer = Player.get(b.destPlayerId), 0 > b.destPlayerId && (a.villageSearch.targetPlayer.data.playerId = b.destPlayerId), a.durations = b.durations, a.checkTroops())
    });
    n()
  }
  function f(b, c) {
    c ? (("undefined" == typeof a.troopDetails.units[b] || 0 >= parseInt(a.troopDetails.units[b])) && 0 < a.troopDetails.inputTroops[b] && (a.troopDetails.inputTroops[b] = -1, a.sendTypeClass = "disabled"), a.troopDetails.inputTroops[b] || (a.troopDetails.inputTroops[b] = a.troopDetails.units[b] ? 0 : -1), a.troopDetails.inputTroops[b] > a.troopDetails.units[b] && (a.sendTypeClass = "disabled")) : a.troopDetails.inputTroops[b] = -1
  }
  function n() {
    a.sendTypeClass = "";
    !1 == a.rallyPoint && (a.sendTypeClass = "disabled");
    var b = a.input.movementType;
    if(a.onlySpies || b == Troops.MOVEMENT_TYPE_SPY) {
      for(b = 1;11 >= b;b++) {
        f(b, b == u.getSpyId())
      }
    }else {
      if(a.onlySettlers && b == Troops.MOVEMENT_TYPE_SETTLE) {
        for(b = 1;11 >= b;b++) {
          f(b, b == Troops.TYPE_SETTLER)
        }
      }else {
        for(b = 1;11 >= b;b++) {
          f(b, !0)
        }
      }
    }
  }
  function q() {
    var b = -1, c;
    for(c in a.troopDetails.inputTroops) {
      0 < a.troopDetails.inputTroops[c] && (a.totalTroopCount += parseInt(a.troopDetails.inputTroops[c]), b = -1 == b ? c : -2)
    }
    return b
  }
  function p(b) {
    var c = l.za(a.activeVillage.data.villageId, Building.TYPE.RALLY_POINT), e = 1, f;
    for(f in Building.CATAPULT_TARGETS) {
      c && c.data.lvl >= f && (e = f)
    }
    c = Building.CATAPULT_TARGETS[e];
    f = [];
    f.push({type:"", name:Travian.translate("Random"), key:0});
    2 == b && f.push({type:"", name:Travian.translate("None"), key:Building.CATAPULT_TARGETS.NO_TARGET});
    if("undefined" !== typeof c.RESOURCES) {
      for(f.push({type:"group", name:Travian.translate("Resources"), key:""}), b = 0;b < c.RESOURCES.length;b++) {
        f.push({type:"member", name:Travian.translate("Building_" + c.RESOURCES[b]), key:c.RESOURCES[b]})
      }
    }
    if("undefined" !== typeof c.INFRASTRUCTURE) {
      f.push({type:"group", name:Travian.translate("Infrastructure"), key:""});
      for(b = 0;b < c.INFRASTRUCTURE.length;b++) {
        f.push({type:"member", name:Travian.translate("Building_" + c.INFRASTRUCTURE[b]), key:c.INFRASTRUCTURE[b]})
      }
      !0 == a.isWorldWonderVillage && 10 <= e && f.push({type:"member", name:Travian.translate("Building_" + Building.TYPE.WONDER_OF_WORLD), key:Building.TYPE.WONDER_OF_WORLD});
      if(c.hasOwnProperty("TRIBE_SPECIFIC") && c.TRIBE_SPECIFIC.hasOwnProperty(a.villageTribe)) {
        for(b = 0;b < c.TRIBE_SPECIFIC[a.villageTribe].length;b++) {
          f.push({type:"member", name:Travian.translate("Building_" + c.TRIBE_SPECIFIC[a.villageTribe][b]), key:c.TRIBE_SPECIFIC[a.villageTribe][b]})
        }
      }
    }
    if("undefined" !== typeof c.MILITARY) {
      for(f.push({type:"group", name:Travian.translate("Military"), key:""}), b = 0;b < c.MILITARY.length;b++) {
        f.push({type:"member", name:Travian.translate("Building_" + c.MILITARY[b]), key:c.MILITARY[b]})
      }
    }
    return f
  }
  a.activeVillage = c.i();
  a.player = b.l();
  a.Troops = Troops;
  a.step = 1;
  var r = !1, s = !1, v = !1;
  a.villageSearch = {target:null, targetPlayer:null};
  a.input = {movementType:Troops.MOVEMENT_TYPE_SUPPORT, redeployHero:!1};
  a.warningMsg = null;
  a.showDuration = !1;
  a.troopDetails = {inputTroops:{}};
  a.totalTroopCount = 0;
  a.durations = {};
  a.duration = 0;
  a.spyName = Travian.translate("Troop_4");
  a.moveHomeId = a.getParam("troopId", !1, !0);
  a.moveHomeType = a.getParam("moveHomeType", !1, !0);
  a.isGovernorNPCVillage = !1;
  a.isWorldWonderVillage = !1;
  a.villageTribe = 0;
  a.missionTypes = {};
  a.movementTypeSettle = Troops.MOVEMENT_TYPE_SETTLE;
  a.onlySpies = !1;
  a.onlySettlers = !1;
  a.numCatapults = 0;
  a.catapultNr = Troops.TYPE_CATAPULT;
  a.catapultTargets1 = {selected:0, selectBy:"option.key", options:p(1)};
  a.catapultTargets2 = {selected:-1, selectBy:"option.key", options:p(2)};
  a.spyTarget = {selected:0, selectedBy:"option.key", options:[{type:"", name:Travian.translate("RallyPoint.SendTroops.SpyOption_1"), value:"resources", key:0}, {type:"", name:Travian.translate("RallyPoint.SendTroops.SpyOption_2"), value:"defence", key:1}]};
  b.o(function() {
    a.isSitter = b.L();
    a.canRaid = b.hasRight(Session.RIGHT_SEND_RAIDS);
    a.canSupport = b.hasRight(Session.RIGHT_SEND_SUPPORT);
    h()
  });
  var u = {};
  a.missionTypes = [{id:Troops.MOVEMENT_TYPE_SUPPORT, name:"Support", check:function() {
    return a.onlySettlers ? "hidden" : a.canSupport || null == a.villageSearch.targetPlayer || a.villageSearch.targetPlayer.data.playerId == a.player.data.playerId ? "normal" : "disabledBySitter"
  }, fallback:null}, {id:Troops.MOVEMENT_TYPE_ATTACK, name:"Attack", check:function() {
    return a.onlySettlers ? "hidden" : a.onlySpies || a.isGovernorNPCVillage ? "deactivated" : a.isSitter ? null != a.villageSearch.targetPlayer && Player.isNPC(a.villageSearch.targetPlayer.data.playerId) ? "normal" : "disabledBySitterVsHuman" : "normal"
  }, fallback:Troops.MOVEMENT_TYPE_RAID}, {id:Troops.MOVEMENT_TYPE_RAID, name:"Raid", check:function() {
    return a.onlySettlers ? "hidden" : a.onlySpies || a.isGovernorNPCVillage ? "deactivated" : a.canRaid ? "normal" : null != a.villageSearch.targetPlayer && Player.isNPC(a.villageSearch.targetPlayer.data.playerId) ? "normal" : "disabledBySitterVsHuman"
  }, fallback:Troops.MOVEMENT_TYPE_SUPPORT}, {id:Troops.MOVEMENT_TYPE_SPY, name:"Spy", check:function() {
    return a.onlySettlers ? "hidden" : a.isGovernorNPCVillage ? "deactivated" : a.onlySpies ? "normal" : "deactivated"
  }, fallback:Troops.MOVEMENT_TYPE_SUPPORT}, {id:Troops.MOVEMENT_TYPE_SIEGE, name:"Siege", check:function() {
    return a.onlySettlers ? "hidden" : a.isSitter ? null != a.villageSearch.targetPlayer && Player.isNPC(a.villageSearch.targetPlayer.data.playerId) ? 1E3 <= a.totalTroopCount && 0 < a.troopDetails.inputTroops[7] ? "normal" : "deactivated" : "disabledBySitterVsHuman" : 1E3 <= a.totalTroopCount && 0 < a.troopDetails.inputTroops[7] ? "normal" : "deactivated"
  }, fallback:Troops.MOVEMENT_TYPE_ATTACK}, {id:Troops.MOVEMENT_TYPE_SETTLE, name:"Settle", check:function() {
    return a.onlySettlers ? "normal" : "hidden"
  }, fallback:Troops.MOVEMENT_TYPE_SUPPORT}];
  h();
  var t = a.$watch("step", function() {
    1 == a.step && (a.moveHomeId ? (a.currentPage = "tpl/sendTroops/SendTroopsHome.html", a.troopDetails.autofocus = !0) : a.currentPage = "tpl/sendTroops/SendTroopsSelect.html");
    2 == a.step && (a.currentPage = "tpl/sendTroops/SendTroopsConfirm.html");
    var b = a.villageSearch.target;
    null != b && (b = id2xy(b.villageId), a.villageSearch.x = b.x, a.villageSearch.y = b.y);
    a.$broadcast("scrollbarApi", "checkLazyRenderer")
  });
  a.$on("$destroy", function() {
    t();
    a.removeParam("troopId");
    a.removeParam("moveHomeType")
  });
  a.villageDropdown = {selected:null, options:a.villages, selectBy:"option.villageId", callback:e, orderBy:"name"};
  e();
  a.selectMovementType = function(b) {
    var c = !1;
    a.input.movementType != b && (c = !0, a.input.movementType = b);
    c && (a.error = "", a.checkTargetSend(), a.removeParam("type"), h())
  };
  a.getReturnTroopDuration = function() {
    if(null != a.durations && "undefined" != typeof a.durations[1]) {
      var b = 0, c = 0;
      0 < a.troopDetails.inputTroops[11] && (c = 100);
      var e = 1;
      a.input.movementType == Troops.MOVEMENT_TYPE_SIEGE && (e = Travian.Config.siegeSpeedFactor);
      a.showDuration = !1;
      for(var f in a.troopDetails.inputTroops) {
        if(0 < parseInt(a.troopDetails.inputTroops[f])) {
          a.showDuration = !0;
          var g = a.durations[parseInt(f) + c] * e;
          g > b && (b = g)
        }
      }
      a.duration = b;
      a.villageSearch.target && (a.villageSearch.target.duration = b)
    }
  };
  a.checkTroops = function() {
    a.totalTroopCount = 0;
    var b = q();
    if(u) {
      var c = a.onlySpies;
      a.onlySpies = !1;
      a.onlySettlers = !1;
      b == u.getSpyId() && (a.onlySpies = !0, c || (a.input.movementType = Troops.MOVEMENT_TYPE_SPY));
      b == Troops.TYPE_SETTLER && (a.onlySettlers = !0)
    }
    h();
    a.getReturnTroopDuration();
    return b
  };
  a.checkTargetSend = function(b) {
    var c = a.villageSearch.getVillageId();
    if(0 != c || "undefined" != typeof a.villageSearch.result && "" != a.villageSearch.result.villageSearched) {
      for(var f in a.troopDetails.inputTroops) {
        var g = parseInt(f);
        if(0 < a.troopDetails.inputTroops[g]) {
          if("undefined" === typeof u.data.units[g]) {
            a.troopDetails.inputTroops[g] = -1;
            e();
            return
          }
          parseInt(u.data.units[g], 10) < parseInt(a.troopDetails.inputTroops[g], 10) && (a.troopDetails.inputTroops[g] = u.data.units[g])
        }
      }
      v ? v = !1 : a.error = "";
      f = !1;
      "undefined" != typeof a.troopDetails.inputTroops[11] && 0 < a.troopDetails.inputTroops[11] && (f = !0);
      c = {destVillageName:a.villageSearch.result.villageSearched, destVillageId:c, villageId:a.activeVillage.data.villageId, movementType:a.input.movementType, redeployHero:a.input.redeployHero, heroPresent:f};
      c.villageId && Travian.request("troops/checkTarget", c, function(c) {
        if("undefined" != typeof c.errors) {
          a.error = Travian.translate("Error." + c.errors[0].message), a.villageSearch.target = null, delete c.errors
        }else {
          c.villageType == Village.TYPE_ROBBER_VILLAGE && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_ROBBERS + "_" + PlayerProgressTrigger.HELP_PAGE_ROBBER_HIDEOUTS);
          var e = id2xy(c.villageId);
          a.checkTargetResult = c;
          a.villageSearch.setData(c.villageName, e.x, e.y);
          a.villageSearch.target = c;
          a.villageSearch.targetPlayer = Player.get(c.destPlayerId);
          0 > c.destPlayerId && (a.villageSearch.targetPlayer.data.playerId = c.destPlayerId);
          a.input.movementType == Troops.MOVEMENT_TYPE_SETTLE && (a.settleCoordinates = e);
          a.isOasis = c.isOasis;
          a.isGovernorNPCVillage = c.isGovernorNPCVillage;
          a.isRobberVillage = c.isRobberVillage;
          a.isWorldWonderVillage = c.isWorldWonderVillage;
          a.villageTribe = c.villageTribe;
          r && (1 != a.activeTab || !a.isRobberVillage && a.isOasis != Village.OASIS_STATUS_WILD || (a.input.movementType = Troops.MOVEMENT_TYPE_ATTACK), r = !1);
          a.warningMsg = c.warning;
          a.durations = c.durations;
          a.checkTroops();
          c = 0;
          for(var f in a.troopDetails.inputTroops) {
            var g = parseInt(f), e = Math.max(0, parseInt(a.troopDetails.inputTroops[f]));
            g == Troops.TYPE_CATAPULT && (c = e)
          }
          a.numCatapults = c;
          0 < c && a.input.movementType == Troops.MOVEMENT_TYPE_RAID && a.warningMsg.push({text:"RallyPoint.SendTroops.CatapultRaid"});
          a.arrivalTime = a.currentServerTime + a.duration;
          if(!0 == b) {
            if(0 < a.totalTroopCount) {
              a.sendTroopsDetails = {status:"send", units:{}, playerId:a.troopDetails.playerId, tribeId:a.troopDetails.tribeId};
              for(g in a.troopDetails.inputTroops) {
                a.sendTroopsDetails.units[g] = Math.max(0, a.troopDetails.inputTroops[g])
              }
              a.step = 2
            }else {
              a.error = Travian.translate("Error.NotEnoughUnits")
            }
          }
          a.catapultTargets1.options = p(1);
          a.catapultTargets2.options = p(2);
          h()
        }
      })
    }else {
      a.villageSearch.target = null
    }
  };
  a.$on("heroItemUsed", function() {
    a.checkTargetSend()
  });
  a.sendTroopsConfirm = function() {
    var b = {destVillageId:a.villageSearch.target.villageId, villageId:a.activeVillage.data.villageId, movementType:a.input.movementType, redeployHero:a.input.redeployHero}, c = {}, e;
    for(e in a.troopDetails.inputTroops) {
      c[e] = Math.max(0, a.troopDetails.inputTroops[e])
    }
    b.units = c;
    b.spyMission = a.spyTarget.options[a.spyTarget.selected].value;
    0 < a.numCatapults && (a.input.movementType == Troops.MOVEMENT_TYPE_ATTACK || a.input.movementType == Troops.MOVEMENT_TYPE_SIEGE) && (e = a.catapultTargets1.selected, 0 == e && (e = Building.CATAPULT_TARGETS[1].RANDOM_TARGET), c = [], c.push(e), a.rallyPoint.data.lvl == Building.MAX_LEVEL && (e = a.catapultTargets2.selected, e != Building.CATAPULT_TARGETS.NO_TARGET && (0 == e && (e = Building.CATAPULT_TARGETS[1].RANDOM_TARGET), c.push(e))), b.catapultTargets = c);
    if(!s) {
      s = !0;
      var f = !1;
      1 < a.sendTabs.length && (a.closeTab(a.tabNr), f = !0);
      Travian.request("troops/send", b, function(b) {
        "undefined" != typeof b && ("undefined" == typeof b.errors ? f || a.closeTab(a.tabNr) : (s = !1, a.error = Travian.translate("Error." + b.errors[0].message, b.errors[0].params), v = !0, delete b.errors, a.step = 1))
      })
    }
  };
  a.goBack = function() {
    a.step = 1
  };
  a.moveTroopsHome = function() {
    var b = {troopId:a.troopDetails.troopId}, c = {}, e;
    for(e in a.troopDetails.inputTroops) {
      c[e] = Math.max(0, a.troopDetails.inputTroops[e])
    }
    b.units = c;
    Travian.writeRequest("troops/moveTroopsHome", b, function() {
      a.closeTab(a.tabNr);
      var b = a.getParam("sendTroopsCallback", !0, !0);
      "function" === typeof b && b()
    })
  };
  a.showRedeployHero = function() {
    return null != a.villageSearch.targetPlayer && a.villageSearch.targetPlayer.data.playerId == a.player.data.playerId && a.input.movementType == Troops.MOVEMENT_TYPE_SUPPORT && 1 == a.troopDetails.inputTroops[11] ? !0 : a.input.redeployHero = !1
  };
  a.toggleHeroRedeployWarning = function() {
    if(a.input.redeployHero) {
      a.warningMsg.push({text:"RedeployHero", param:a.villageSearch.target.villageName})
    }else {
      for(var b = 0;b < a.warningMsg.length;b++) {
        if("RedeployHero" === a.warningMsg[b].text) {
          a.warningMsg.splice(b, 1);
          break
        }
      }
    }
    a.w.updateWindowHeight()
  };
  a.villageSearch.x = a.getParam("x", !1, !0);
  a.villageSearch.y = a.getParam("y", !1, !0);
  a.villageSearch.x && a.villageSearch.y && (a.troopDetails.autofocus = !0);
  var z = !1;
  a.preselectAndCheckTarget = function() {
    var b = a.getParam("type", !1, !0);
    null != b && "undefined" != typeof b ? (a.input.movementType = b, r = !1) : r = !0;
    b = a.getParam("preselect", !1, !0);
    if(null != b && "undefined" != typeof b) {
      for(var c in a.troopDetails.units) {
        if("undefined" != typeof b[c]) {
          var e = b[c];
          e > parseInt(a.troopDetails.units[c]) && (e = parseInt(a.troopDetails.units[c]));
          a.troopDetails.inputTroops[c] = e
        }
      }
      q() == Troops.TYPE_HERO && 5 == a.input.movementType && (a.input.redeployHero = !0);
      ((c = a.getParam("onlySelect", !1, !0)) || z) && a.checkTroops();
      c || z || (a.checkTargetSend(!0), z = !0);
      a.removeParam("preselect")
    }
    a.checkTroops();
    z || a.checkTargetSend(!1)
  };
  (function() {
    var b = a.$parent.getPreSelectionCallbackFromLastActiveTab()();
    null != b && (void 0 !== b.targetVillage && void 0 !== b.targetVillage.targetPlayer && (a.villageSearch = angular.copy(b.targetVillage)), void 0 !== b.startVillageId && e(b.startVillageId), a.selectMovementType(b.type))
  })();
  (function() {
    a.$parent.setPreSelectionCallbackForActiveTab(function() {
      return{type:a.input.movementType, targetVillage:a.villageSearch, startVillageId:a.villageDropdown.selected}
    })
  })()
};
window.sendTroopsTabCtrl.$inject = ["$scope", "VillageService", "SessionService", "BuildingService"];
window.getExternalLoginCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"ExternalLogin", inWindowPopupContentTemplate:"tpl/profile/settings/partials/getExternalLogin.html"});
  a.input = {publicSiteKey:""};
  a.externalLoginKey = !1;
  a.handleError({}, "apiError");
  a.requestExternalLogin = function() {
    Travian.writeRequest("player/requestExternalLogin", {publicSiteKey:a.input.publicSiteKey}, function(c) {
      "undefined" != typeof c.errors ? (a.handleError(c, "apiError"), a.externalLoginKey = !1) : a.externalLoginKey = c.loginKey
    })
  }
};
window.getExternalLoginCtrl.$inject = ["$scope", "RoutingService"];
window.settingsCtrl = function(a, c, b, l, h, g) {
  a.w.windowName = "Settings.Title";
  a.settingsTabConfig = {};
  a.settingsTabConfig.tabs = ["Gameplay", "FX", "Avatar"];
  a.settingsTabConfig.bodyTemplatePrefix = "tpl/profile/settings/tabs/";
  a.settingsTabConfig.routeNamedParam = "prosubtab";
  a.settingsTabConfig.tabName = "subtab";
  a.settingsTabConfig.tabType = "subtab";
  a.playerId = c.getPlayerId();
  a.settings = Settings.get(a.playerId);
  a.player = c.l();
  a.canDeleteAccount = !1;
  a.canAbortDeletion = !0;
  a.goldUnblockTime = Travian.Config.DeletionAfterBuyingGoldTimeout;
  a.mute = {all:!1};
  a.music = {value:0};
  a.sound = {value:0};
  a.uiSound = {value:0};
  a.subscribe(a.player, function() {
    a.goldDeletionTimeout = a.player.isGoldDeletionTimeout();
    a.canDeleteAccount = !1;
    !a.player.isOnMap() || (c.L() || c.Sg() || a.player.isGoldDeletionTimeout()) || (a.canDeleteAccount = !0);
    a.player.data.isPunished && (a.canAbortDeletion = !1)
  });
  a.checkboxSettings = {enableTabNotifications:{hasTooltip:!1}, enableHelpNotifications:{hasTooltip:!1}, disableAnimations:{hasTooltip:!0}};
  a.premiumConfirmationDropdown = {selected:a.settings.data.premiumConfirmation, options:{0:"GoldAndPremium", 2:"Gold", 3:"None"}};
  a.saveSettings = function() {
    for(var b in a.checkboxSettings) {
      a.settings.data[b] = a.checkboxSettings[b].value
    }
    a.settings.data.premiumConfirmation = a.premiumConfirmationDropdown.selected;
    a.settings.data.onlineStatusFilter = a.onlineStatusDropdown.selected;
    a.settings.data.timeZone = a.currentTimeZone;
    a.settings.data.muteAll = a.mute.all;
    a.settings.data.timeFormat = a.timeFormatDropdown.selected;
    a.settings.data.lang != a.currentLang && (changeLanguage(a.currentLang), a.settings.data.lang = a.currentLang, l.We(a.currentLang));
    a.settings.persist();
    a.soundChanged = !1
  };
  a.somethingChanged = function() {
    for(var b in a.checkboxSettings) {
      if(a.settings.data[b] != a.checkboxSettings[b].value) {
        return!0
      }
    }
    return a.settings.data.premiumConfirmation != a.premiumConfirmationDropdown.selected || a.soundChanged || a.settings.data.onlineStatusFilter != a.onlineStatusDropdown.selected || a.settings.data.timeZone != a.currentTimeZone || a.settings.data.lang != a.currentLang || a.settings.data.timeFormat != a.timeFormatDropdown.selected || a.settings.data.muteAll != a.mute.all ? !0 : !1
  };
  a.timeZoneDropdown = {selected:a.currentTimeZone, options:[], callback:function() {
    a.currentTimeZone = a.timeZoneDropdown.options[a.timeZoneDropdown.selected].value
  }};
  a.timeZoneDropdown.options = [];
  a.timeZoneDropdown.options.push({value:"-12.0", text:"(GMT -12:00)"});
  a.timeZoneDropdown.options.push({value:"-11.0", text:"(GMT -11:00)"});
  a.timeZoneDropdown.options.push({value:"-10.0", text:"(GMT -10:00)"});
  a.timeZoneDropdown.options.push({value:"-9.0", text:"(GMT -9:00)"});
  a.timeZoneDropdown.options.push({value:"-8.0", text:"(GMT -8:00)"});
  a.timeZoneDropdown.options.push({value:"-7.0", text:"(GMT -7:00)"});
  a.timeZoneDropdown.options.push({value:"-6.0", text:"(GMT -6:00)"});
  a.timeZoneDropdown.options.push({value:"-5.0", text:"(GMT -5:00)"});
  a.timeZoneDropdown.options.push({value:"-4.0", text:"(GMT -4:00)"});
  a.timeZoneDropdown.options.push({value:"-3.5", text:"(GMT -3:30)"});
  a.timeZoneDropdown.options.push({value:"-3.0", text:"(GMT -3:00)"});
  a.timeZoneDropdown.options.push({value:"-2.0", text:"(GMT -2:00)"});
  a.timeZoneDropdown.options.push({value:"-1.0", text:"(GMT -1:00)"});
  a.timeZoneDropdown.options.push({value:"0.0", text:"(GMT)"});
  a.timeZoneDropdown.options.push({value:"1.0", text:"(GMT +1:00)"});
  a.timeZoneDropdown.options.push({value:"2.0", text:"(GMT +2:00)"});
  a.timeZoneDropdown.options.push({value:"3.0", text:"(GMT +3:00)"});
  a.timeZoneDropdown.options.push({value:"3.5", text:"(GMT +3:30)"});
  a.timeZoneDropdown.options.push({value:"4.0", text:"(GMT +4:00)"});
  a.timeZoneDropdown.options.push({value:"4.5", text:"(GMT +4:30)"});
  a.timeZoneDropdown.options.push({value:"5.0", text:"(GMT +5:00)"});
  a.timeZoneDropdown.options.push({value:"5.5", text:"(GMT +5:30)"});
  a.timeZoneDropdown.options.push({value:"5.75", text:"(GMT +5:45)"});
  a.timeZoneDropdown.options.push({value:"6.0", text:"(GMT +6:00)"});
  a.timeZoneDropdown.options.push({value:"7.0", text:"(GMT +7:00)"});
  a.timeZoneDropdown.options.push({value:"8.0", text:"(GMT +8:00)"});
  a.timeZoneDropdown.options.push({value:"9.0", text:"(GMT +9:00)"});
  a.timeZoneDropdown.options.push({value:"9.5", text:"(GMT +9:30)"});
  a.timeZoneDropdown.options.push({value:"10.0", text:"(GMT +10:00)"});
  a.timeZoneDropdown.options.push({value:"11.0", text:"(GMT +11:00)"});
  a.timeZoneDropdown.options.push({value:"12.0", text:"(GMT +12:00)"});
  for(b = 0;b < a.timeZoneDropdown.options.length;b++) {
    a.timeZoneDropdown.options[b].text += " " + Travian.translate("TimeZone_" + a.timeZoneDropdown.options[b].value)
  }
  a.timeFormatDropdown = {placeholder:"Settings.ChooseTimeFormat", selected:-1, options:["EU", "US", "UK", "ISO"], callback:function() {
    a.currentLang = a.languageDropdown.options[a.languageDropdown.selected].languageKey
  }};
  a.languageDropdown = {placeholder:"Settings.ChooseLanguage", selected:-1, options:[], callback:function() {
    a.currentLang = a.languageDropdown.options[a.languageDropdown.selected].languageKey
  }};
  for(var e in Travian.Config.selectableLanguages) {
    a.languageDropdown.options.push({languageKey:e, languageName:Travian.Config.selectableLanguages[e]})
  }
  a.saveLanguage = function() {
    changeLanguage(a.currentLang);
    a.settings.data.lang = a.currentLang;
    a.settings.persist();
    l.We(a.currentLang)
  };
  a.onlineStatusDropdown = {selected:a.settings.data.onlineStatusFilter, options:{0:"alliance", 1:"friends", 2:"nobody"}};
  Travian.Player.data.isKing && (a.onlineStatusDropdown.options[0] = "allianceKings");
  a.soundChanged = !1;
  a.onSoundChange = function() {
    if(m) {
      var b = a.settings.data;
      b.muteAll = a.mute.all;
      b.musicVolume = a.music.value;
      b.soundVolume = a.sound.value;
      b.uiSoundVolume = a.uiSound.value;
      h.ef();
      a.soundChanged = !1;
      b.muteAll != m.muteAll ? a.soundChanged = !0 : $.each(["music", "sound", "uiSound"], function(c, e) {
        if(b[e + "Volume"] != m[e + "Volume"]) {
          return a.soundChanged = !0, !1
        }
      })
    }
  };
  a.playUiSoundDummy = function() {
    h.U(Ta)
  };
  a.abortDeletion = function() {
    a.useMellon || 0 < a.player.data.deletionTime && Travian.writeRequest("player/abortDeletion", {}, function(b) {
      a.handleError(b)
    })
  };
  a.openLobby = function() {
    window.open("http://" + Travian.Config.gameLobbyUrl + "/#/gameworld/" + Travian.Player.data.avatarIdentifier, "_blank")
  };
  var m = null;
  a.subscribe(a.settings, function() {
    m = angular.copy(a.settings.data);
    a.onlineStatusDropdown.selected = a.settings.data.onlineStatusFilter;
    for(var b = 0;b < a.timeZoneDropdown.options.length;b++) {
      if(a.timeZoneDropdown.options[b].value == a.settings.data.timeZone) {
        a.timeZoneDropdown.selected = b;
        break
      }
    }
    for(b = 0;b < a.languageDropdown.options.length;b++) {
      if(a.languageDropdown.options[b].languageKey == a.settings.data.lang) {
        a.languageDropdown.selected = b;
        break
      }
    }
    for(var c in a.checkboxSettings) {
      a.checkboxSettings[c].value = a.settings.data[c]
    }
    a.premiumConfirmationDropdown.selected = a.settings.data.premiumConfirmation;
    a.currentLang = a.settings.data.lang;
    a.currentTimeZone = a.settings.data.timeZone;
    a.timeFormatDropdown.selected = a.settings.data.timeFormat;
    a.mute.all = a.settings.data.muteAll;
    a.music.value = a.settings.data.musicVolume;
    a.sound.value = a.settings.data.soundVolume;
    a.uiSound.value = a.settings.data.uiSoundVolume;
    g.uh(a.settings.data.enableTabNotifications)
  });
  a.$on("$destroy", function() {
    m && (a.settings.data = m, a.soundChanged && h.ef())
  })
};
window.settingsCtrl.$inject = "$scope SessionService $window MellonService AudioService NotificationService".split(" ");
window.startDeletionCtrl = function(a, c, b) {
  a.overlayConfig.k({inWindowPopupTitle:"DeleteAccount", inWindowPopupContentTemplate:"tpl/profile/settings/partials/startDeletion.html"});
  a.useMellon = config.mellon.useMellon;
  a.input = {deletePassword:null};
  a.handleError({}, "deletionError");
  var l = !1;
  a.deleteAccount = function() {
    if(a.useMellon) {
      var c = {};
      c.requestAction = Player.ACTION_DELETE_ACCOUNT;
      c.url = window.location.href;
      Travian.writeRequest("player/requestVerification", c, function(a) {
        "undefined" != typeof a.token && (a = b.ba().getAccountPasswordVerification(a.token), b.ia(a).open())
      })
    }else {
      null !== a.deletePassword && "" !== a.deletePassword && Travian.writeRequest("player/checkPlayerDeletion", {password:a.input.deletePassword}, function(b) {
        "undefined" != typeof b && "undefined" != typeof b.errors ? a.handleError(b, "deletionError") : a.closeOverlay()
      })
    }
  };
  a.$on("urlChanged", function() {
    var b = c.getParam("verification");
    null == b || ("" == b || l) || (l = !0, Travian.writeRequest("player/verifyAction", {token:b}, function() {
      c.O("verification");
      a.closeOverlay()
    }))
  })
};
window.startDeletionCtrl.$inject = ["$scope", "RoutingService", "MellonService"];
window.allianceAcceptRightsCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.PromotionAvailable", inWindowPopupTemplate:"tpl/society/partials/alliance/acceptRights.html"});
  a.replyToRightOffer = function(c) {
    Travian.writeRequest("alliance/replyToRightOffer", {accept:c}, function() {
      a.closeOverlay()
    })
  }
};
window.allianceAcceptRightsCtrl.$inject = ["$scope"];
window.allianceChangeNameCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.ChangeNameHeader", inWindowPopupContentTemplate:"tpl/society/partials/alliance/changeName.html"});
  a.placeHolderAllianceName = Travian.translate("Alliance.AllianceName");
  a.placeHolderAllianceTag = Travian.translate("Alliance.AllianceTag");
  a.handleError({}, "allianceNameError");
  var c = Alliance.get(Travian.Player.data.allianceId);
  a.newName = c.data.name;
  a.newTag = c.data.tag;
  a.renameAlliance = function() {
    Travian.writeRequest("alliance/changeName", {name:a.newName, tag:a.newTag}, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceNameError")
    })
  }
};
window.allianceChangeNameCtrl.$inject = ["$scope"];
window.allianceChangeRightsCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.Rights.Change", inWindowPopupTemplate:"tpl/society/partials/alliance/changeRights.html"});
  for(var c = a.getParam("memberId"), b = Alliance.get(Travian.Player.data.allianceId), l = 0;l < b.data.members.length;l++) {
    b.data.members[l].playerId == c && (a.member = b.data.members[l])
  }
  a.newRole = parseInt(a.member.allianceRights);
  0 < a.member.offeredRights && (a.newRole = a.member.offeredRights);
  a.handleError({}, "allianceChangeRightsError");
  a.role = {KING:Alliance.ROLE_KING, TRUSTEE:Alliance.ROLE_TRUSTEE, LEADER:Alliance.ROLE_LEADER};
  a.member.isKing = a.newRole == Alliance.ROLE_KING || a.newRole == Alliance.ROLE_TRUSTEE || a.newRole == Alliance.ROLE_LEADER ? !0 : !1;
  a.changeRole = function() {
    var b = {};
    b.playerId = c;
    b.role = a.newRole;
    Travian.writeRequest("alliance/changeRole", b, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceChangeRightsError")
    })
  };
  a.setRole = function(b) {
    a.newRole = b
  };
  a.$on("$destroy", function() {
    a.removeParam("memberId")
  })
};
window.allianceChangeRightsCtrl.$inject = ["$scope"];
window.allianceDiplomacyCtrl = function(a) {
  a.TYPE = {BND:Alliance.BND, NAP:Alliance.NAP, WAR:Alliance.WAR};
  a.subscribe(a.alliance, function() {
    a.treaties = {};
    a.treaties[Alliance.BND] = [];
    a.treaties[Alliance.NAP] = [];
    a.treaties[Alliance.WAR] = [];
    for(var c = 0;c < a.alliance.data.diplomacy.treaties.length;c++) {
      var b = a.alliance.data.diplomacy.treaties[c];
      a.treaties[b.type].push(b)
    }
  });
  a.deleteTreaty = function(c) {
    Travian.writeRequest("alliance/denyTreaty", {id:c}, function(b) {
      a.handleError(b, "treatyAcceptError")
    })
  };
  a.acceptTreaty = function(c) {
    Travian.writeRequest("alliance/acceptTreaty", {id:c}, function(b) {
      a.handleError(b, "treatyAcceptError")
    })
  };
  a.cancelTreaty = function(c) {
    Travian.writeRequest("alliance/cancelTreaty", {id:c}, function(b) {
      a.handleError(b, "existingTreatyError")
    })
  }
};
window.allianceDiplomacyCtrl.$inject = ["$scope"];
window.allianceEditDescriptionCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.EditDescription.Headline", inWindowPopupContentTemplate:"tpl/society/partials/alliance/editDescription.html"});
  a.alliance = Alliance.get(a.getParam("allianceId"));
  var c = !1;
  a.subscribe(a.alliance, function() {
    c || (a.description1 = a.alliance.data.description.column1, a.description2 = a.alliance.data.description.column2, c = !0)
  });
  a.handleError({}, "allianceChangeDescriptionError");
  a.editDescription = function() {
    var b = {};
    b.groupId = a.alliance.data.groupId;
    b.column1 = a.description1;
    b.column2 = a.description2;
    b.internalInfos1 = a.alliance.data.description.internalInfos1;
    Travian.writeRequest("alliance/changeDescription", b, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceChangeDescriptionError")
    })
  };
  a.$on("$destroy", function() {
    a.removeParam("allianceId")
  })
};
window.allianceEditDescriptionCtrl.$inject = ["$scope"];
window.allianceEditInternalInfoCtrl = function(a, c) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.EditInternalInfo.Headline", inWindowPopupContentTemplate:"tpl/society/partials/alliance/editInternalInfo.html"});
  a.description = null;
  a.user = c.l();
  a.subscribe(a.user, function() {
    a.alliance = Alliance.get(a.user.data.allianceId);
    a.subscribe(a.alliance, function() {
      a.description = angular.copy(a.alliance.data.description)
    })
  });
  a.handleError({}, "allianceChangeDescriptionError");
  a.editInfos = function() {
    var b = {};
    b.groupId = a.alliance.data.groupId;
    b.column1 = a.alliance.data.description.column1;
    b.column2 = a.alliance.data.description.column2;
    b.internalInfos1 = a.description.internalInfos1;
    Travian.writeRequest("alliance/changeDescription", b, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "allianceChangeDescriptionError")
    })
  }
};
window.allianceEditInternalInfoCtrl.$inject = ["$scope", "SessionService"];
window.allianceInternCtrl = function(a, c) {
  function b(a, b) {
    for(var c = 0;c < h.data.length;c++) {
      var f = h.data[c];
      if(f.data.targetId === parseInt(a, 10)) {
        return Marker.COLORS[f.data.color]
      }
    }
    switch(parseInt(b, 10)) {
      case Alliance.NAP:
        return Marker.TREATY_COLOR_NAP;
      case Alliance.BND:
        return Marker.TREATY_COLOR_BND;
      case Alliance.WAR:
        return Marker.COLOR_ENEMY
    }
  }
  a.itemsPerPage = 8;
  a.numberOfItems = 0;
  a.results = {};
  a.news = [];
  a.offStrength = {lastDay:0, firstDay:0, diff:0};
  a.defStrength = {lastDay:0, firstDay:0, diff:0};
  var l = AllianceFightvalues.getCollection(Travian.Player.data.allianceId);
  a.subscribe(l, function() {
    a.offStrength = {lastDay:0, firstDay:0, diff:0};
    a.defStrength = {lastDay:0, firstDay:0, diff:0};
    var b = (new Date).getUTCDay();
    0 == b && (b = 7);
    for(var c = 0;c < l.data.length;c++) {
      var m = l.data[c];
      m.data.type == AllianceFightvalues.TYPE_OFF_STRENGTH && (a.offStrength.lastDay = m.data["d" + b], a.offStrength.firstDay = m.data.d1, a.offStrength.diff = a.offStrength.lastDay - a.offStrength.firstDay);
      m.data.type == AllianceFightvalues.TYPE_DEF_STRENGTH && (a.defStrength.lastDay = m.data["d" + b], a.defStrength.firstDay = m.data.d1, a.defStrength.diff = a.defStrength.lastDay - a.defStrength.firstDay)
    }
  });
  Travian.request("alliance/getFightStrengthRanks", {}, function(b) {
    "undefined" == typeof b.errors && (a.offRank = b.off, a.defRank = b.def)
  });
  var h = Marker.getCollection();
  a.cb([a.alliance, h], function() {
    a.treaties = [];
    for(var g = 0;g < a.alliance.data.diplomacy.treaties.length;g++) {
      var e = a.alliance.data.diplomacy.treaties[g];
      e.colorData = b(e.yi, e.type);
      a.treaties.push(e)
    }
    c(function() {
      a.$broadcast("scrollbarApi", "resetHeight")
    }, 0)
  });
  a.displayCurrentPage = function(b) {
    null == b && (b = 1);
    a.currentPage = b;
    Travian.request("alliance/getNews", {start:(b - 1) * a.itemsPerPage, count:a.itemsPerPage}, function(b) {
      "undefined" == typeof b.errors ? (a.news = b.news, a.numberOfItems = b.count) : a.handleError(b, "allianceNewsError")
    })
  };
  Cache.t(l, 1);
  c(function() {
    a.descriptionVisible = !0;
    a.$broadcast("scrollbarApi", "resetHeight")
  }, 0)
};
window.allianceInternCtrl.$inject = ["$scope", "$timeout"];
window.allianceInviteCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.Invite.Headline", inWindowPopupTemplate:"tpl/society/partials/alliance/invite.html"});
  a.alliance = Alliance.get(Travian.Player.data.allianceId);
  a.handleError({}, "allianceInviteError");
  a.input = {customText:""};
  a.invitePlayer = "";
  a.selectedPlayer = null;
  a.selectInvitePlayer = function(c) {
    a.handleError({}, "allianceInviteError");
    a.selectedPlayer = c
  };
  a.invite = function() {
    if(null != a.selectedPlayer) {
      var c = {};
      c.groupId = a.alliance.data.groupId;
      c.groupType = GroupInvitation.TYPE_ALLIANCE;
      c.playerName = a.selectedPlayer.name;
      c.customText = a.input.customText;
      Travian.writeRequest("alliance/invite", c, function(b) {
        a.selectedPlayer = null;
        a.invitePlayer = "";
        a.handleError(b, "allianceInviteError") && a.closeOverlay()
      })
    }
  }
};
window.allianceInviteCtrl.$inject = ["$scope"];
window.allianceKickMemberCtrl = function(a, c, b) {
  function l() {
    Travian.request("ranking/getAllianceInternalRanking", {}, function(b) {
      Alliance.get(a.player.data.allianceId).setStats(b)
    })
  }
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.KickMember.Headline", inWindowPopupContentTemplate:"tpl/society/partials/alliance/kickMember.html"});
  a.useMellon = config.mellon.useMellon;
  var h = !1;
  a.kick = {password:""};
  a.handleError({}, "allianceKickMemberError");
  a.player = Player.get(a.getParam("memberId"));
  Travian.request("alliance/getMemberVictoryPoints", {playerId:a.getParam("memberId")}, function(b) {
    a.memberVictoryPoints = b.victoryPoints
  });
  a.confirmWithPassword = function() {
    var c = {};
    c.requestAction = Player.ACTION_KICK_ALLIANCE;
    c.url = window.location.href;
    c.data = {playerId:a.player.data.playerId};
    Travian.writeRequest("player/requestVerification", c, function(c) {
      if("undefined" != typeof c.token) {
        var g = b.ba().getAccountPasswordVerification(c.token);
        b.ia(g).open()
      }
      a.handleError(c, "allianceKickMemberError")
    })
  };
  a.kickMember = function() {
    var b = {};
    b.groupId = a.player.data.allianceId;
    b.groupType = GroupInvitation.TYPE_ALLIANCE;
    b.playerId = a.player.data.playerId;
    b.ownPassword = a.kick.password;
    Travian.writeRequest("alliance/kick", b, function(b) {
      "undefined" == typeof b.errors ? (l(), a.closeOverlay()) : a.handleError(b, "allianceKickMemberError")
    })
  };
  a.$on("urlChanged", function() {
    var b = c.getParam("verification");
    null == b || ("" == b || h) || (h = !0, Travian.writeRequest("player/verifyAction", {token:b}, function(b) {
      c.O("verification");
      "undefined" == typeof b.errors ? (l(), a.closeOverlay()) : catchErrors(b)
    }))
  });
  a.$on("$destroy", function() {
    a.removeParam("memberId")
  })
};
window.allianceKickMemberCtrl.$inject = ["$scope", "RoutingService", "MellonService"];
window.allianceMembersCtrl = function(a, c) {
  function b() {
    a.canKick = Alliance.memberHasRight(a.myself, Alliance.RIGHT_INVITE);
    for(var b = 0;b < h.data.members.length;b++) {
      h.data.members[b].rank = b + 1, h.data.members[b].playerId == a.player.data.playerId && (a.ownPosition = b, g = h.data.members[b])
    }
    a.displayCurrentPage(a.currentPage)
  }
  function l(b) {
    for(var c = null, e = 0;e < b.length;e++) {
      if(b[e].playerId == a.player.data.playerId) {
        c = b[e];
        break
      }
    }
    return c
  }
  var h = Alliance.get(a.player.data.allianceId), g = null;
  a.itemsPerPage = 11;
  a.roles = Alliance.ROLE_STRING;
  a.displayCurrentPage = function(b) {
    null == b && (b = 1);
    a.currentPage = b;
    if(0 < h.data.members.length) {
      a.itemsPerPage = 11;
      a.numberOfItems = h.data.members.length;
      b = a.itemsPerPage * (b - 1);
      var c = Math.min(b + a.itemsPerPage, h.data.members.length);
      a.members = h.data.members.slice(b, c)
    }
  };
  a.invitations = GroupInvitation.getCollection("group", GroupInvitation.TYPE_ALLIANCE, a.player.data.allianceId);
  a.showOptionOn = -1;
  var e = null;
  a.showOptions = function(b) {
    a.showOptionOn = b;
    null != e && (c.cancel(e), e = null)
  };
  a.hideOptions = function() {
    null == e && (e = c(function() {
      e = null;
      a.showOptionOn = -1
    }, 50))
  };
  a.getOptions = function(a) {
    var b = [];
    b.push({clickable:"openOverlay('allianceChangeRights',{'memberId': " + a + "})", text:Travian.translate("Alliance.Members.Options.Dropdown.Edit")});
    if(g.allianceRights >= Alliance.ROLE_KING) {
      for(var c = null, e = 0;e < h.data.members.length;e++) {
        h.data.members[e].playerId == a && (c = h.data.members[e])
      }
      null != c && c.allianceRights == Alliance.ROLE_KING && b.push({clickable:"openOverlay('allianceKickMember',{'memberId': " + a + "})", text:Travian.translate("Alliance.Members.Options.Dropdown.Kick")})
    }
    return b
  };
  b();
  a.subscribe(h, function() {
    b()
  });
  Travian.request("ranking/getAllianceInternalRanking", {}, function(b) {
    h.setStats(b);
    a.ownRanks = {top10Attacker:l(h.stats.top10Attacker), top10Defender:l(h.stats.top10Defender), top10Climber:l(h.stats.top10Climber)}
  })
};
window.allianceMembersCtrl.$inject = ["$scope", "$timeout"];
window.allianceOfferTreatyCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Alliance.Diplomacy.OfferTreaty.Headline", inWindowPopupTemplate:"tpl/society/partials/alliance/offerTreaty.html"});
  a.input = {selectedTreaty:-1};
  a.placeHolderInvitationAllianceName = Travian.translate("Alliance.Diplomacy.OfferTreaty.AllianceNamePlaceholder", !1);
  a.handleError({}, "allianceTreatyError");
  a.selectedAlliance = null;
  a.selectTargetAlliance = function(c) {
    a.selectedAlliance = c
  };
  a.selectedAlliance = null;
  a.searchCallback = function(c) {
    a.selectedAlliance = null;
    null !== c && (a.selectedAlliance = c.allianceId)
  };
  a.offerTreaty = function() {
    null === a.selectedAlliance ? a.allianceTreatyError = Travian.translate("Error.AllyNotFound") : (null !== a.allianceTreatyError && delete a.allianceTreatyError, Travian.writeRequest("alliance/offerTreaty", {allianceId:a.selectedAlliance, type:a.input.selectedTreaty}, function(c) {
      a.handleError(c, "allianceTreatyError") && a.closeOverlay()
    }))
  }
};
window.allianceOfferTreatyCtrl.$inject = ["$scope"];
window.allianceOpenInvitationsCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Group.OpenInvitations.Headline", inWindowPopupTemplate:"tpl/society/partials/alliance/openInvitations.html"});
  a.alliance = Alliance.get(a.player.data.allianceId);
  a.invitations = GroupInvitation.getCollection("group", GroupInvitation.TYPE_ALLIANCE, a.player.data.allianceId);
  a.itemsPerPage = 20;
  a.currentPage = 1;
  a.numberOfItems = 0;
  a.displayCurrentPage = function(c) {
    null == c && (c = 1);
    if("undefined" != typeof a.invitations.data) {
      var b = a.invitations.data;
      a.currentPage = c;
      c = a.itemsPerPage * (c - 1);
      var l = Math.min(c + a.itemsPerPage, b.length);
      a.rows = b.slice(c, l)
    }
  };
  a.subscribe(a.invitations, function() {
    a.numberOfItems = a.invitations.data.length;
    a.displayCurrentPage(a.currentPage)
  });
  a.revokeInvitation = function(c) {
    var b = {};
    b.id = c;
    Travian.request("alliance/declineInvitation", b, function(b) {
      a.handleError(b, "allianceInviteRevokeError")
    })
  }
};
window.allianceOpenInvitationsCtrl.$inject = ["$scope"];
window.allianceProfileCtrl = function(a, c) {
  a.kingdoms = {};
  a.ownKingdomId = Travian.Player.data.kingdomId;
  a.isSitter = c.L();
  var b = !1;
  a.subscribe(a.alliance, function() {
    b || (Travian.request("ranking/getAllianceStats", {allianceId:a.alliance.data.id}, function(b) {
      a.kingdomStats = b.kingdomStats;
      a.worldWonderLvl = b.worldWonderLvl;
      a.totalVillages = b.totalVillages
    }), b = !0)
  })
};
window.allianceProfileCtrl.$inject = ["$scope", "SessionService"];
window.ownAllianceCtrl = function(a, c, b) {
  function l() {
    var b = a.alliance.data.members;
    a.myself = null;
    for(var c = 0;c < b.length;c++) {
      b[c].population = parseInt(b[c].population), b[c].playerId == a.user.data.playerId && (a.myself = b[c])
    }
    null != a.myself ? (a.allianceTabConfig.tabs = ["Members", "Profile", "Intern"], Alliance.memberHasRight(a.myself, Alliance.RIGHT_DIPLOMACY) && a.allianceTabConfig.tabs.push("Diplomacy"), a.canInvite = Alliance.memberHasRight(a.myself, Alliance.RIGHT_INVITE), a.canGrant = Alliance.memberHasRight(a.myself, Alliance.RIGHT_GRANT)) : a.allianceTabConfig.tabs = ["Profile"]
  }
  function h() {
    for(var c = [], g = a.alliance.data.members, f = a.villageCount = 0;f < g.length;f++) {
      c.push(g[f].playerId), a.villageCount += g[f].villages, g[f].chatUser = b.sb(g[f].playerId, g[f])
    }
  }
  a.allianceTabConfig = {};
  a.allianceTabConfig.tabs = ["Members", "Profile", "Intern"];
  a.allianceTabConfig.routeNamedParam = "subtab";
  a.allianceTabConfig.tabName = "subtab";
  a.allianceTabConfig.tabType = "subtab";
  a.allianceTabConfig.bodyTemplatePrefix = "tpl/society/partials/alliance/";
  a.allianceTabConfig.disableScrollingForTabs = ["Profile", "Intern", "Members", "Diplomacy"];
  a.alliance = null;
  a.user = c.l();
  a.canInvite = !1;
  a.canGrant = !1;
  a.myself = null;
  a.villageCount = 0;
  var g = {Members:1, Profile:2, Internal:3, defaultKey:"Members"};
  a.subscribe(a.user, function() {
    a.isSitter = c.L();
    0 < a.user.data.allianceId ? (a.alliance = Alliance.get(a.user.data.allianceId), a.subscribe(a.alliance, l), a.subscribe(a.alliance, h)) : a.alliance = null
  });
  a.hasRight = function(b) {
    return Alliance.memberHasRight(a.myself, Alliance[b])
  };
  c.o(function() {
    a.setupSociety(g)
  })
};
window.ownAllianceCtrl.$inject = ["$scope", "SessionService", "ChatService"];
window.attacksCtrl = function(a, c, b, l, h) {
  function g() {
    if(f && m) {
      n = l.getActiveVillageId();
      a.allianceId = f.data.allianceId;
      q = m.Hc(n);
      a.total = {alliance:0, kingdom:0};
      a.showMembers = {alliance:{}, kingdom:{}};
      for(var b in q) {
        for(var c in q[b].villages) {
          var e = q[b].villages[c], p = "alliance";
          null != r && (h.cancel(r), r = null);
          if(!1 === e.kingdom) {
            r = h(g, 100);
            break
          }
          0 !== e.kingdom && e.kingdom == f.data.kingdomId && (p = "kingdom");
          b in a.showMembers[p] || (a.showMembers[p][b] = {attacks:{villages:{}}}, a.showMembers[p][b].name = e.playerName, a.showMembers[p][b].playerId = e.playerId);
          a.showMembers[p][b].attacks.villages[c] = e;
          a.total[p]++
        }
      }
    }
  }
  function e() {
    if(a.changed) {
      var b = 0, c = 2, e;
      for(e in a.show) {
        a.show[e] && (b += Math.pow(2, c - 1)), c--
      }
      a.settings.data.attacksFilter = b;
      a.settings.persist()
    }
  }
  var m, f, n, q = null, p = null, r = null;
  a.changed = !1;
  a.showMembers = {alliance:{}, kingdom:{}};
  a.total = {alliance:0, kingdom:0};
  a.show = {kingdom:!0, alliance:!0};
  c.o(function() {
    m = b.B(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], g, a);
    f = c.l();
    a.subscribe(f, g);
    n = l.getActiveVillageId();
    a.settings = Settings.get(Travian.Player.data.playerId);
    a.subscribe(a.settings, function() {
      a.show = a.settings.getAttackSettings()
    })
  });
  a.$on("activeVillageChanged", g);
  a.update = function() {
    a.changed = !0;
    g();
    null != p && (h.cancel(p), p = null);
    p = h(e, 1E3)
  };
  a.$on("$destroy", function() {
    null != p && (h.cancel(p), p = null);
    null != r && (h.cancel(r), r = null);
    e()
  });
  a.id2xy = function(a) {
    return Fa(a)
  }
};
window.attacksCtrl.$inject = ["$scope", "SessionService", "TroopsService", "VillageService", "$timeout"];
window.friendsCtrl = function(a, c, b) {
  var l = null, h = c.ub, g = c.Yb;
  a.cancelFriendRequest = c.Sd;
  a.acceptFriend = c.Nd;
  a.deleteFriend = c.Yd;
  a.declineFriend = c.Wd;
  a.currentPlayer = b.l();
  a.addFriendError = "";
  a.newFriend = "";
  a.chat = c.getViewModel();
  a.changeNewFriend = function(b) {
    l = b ? b : null;
    a.addFriendError = ""
  };
  a.sendAddRequest = function() {
    null !== l && (a.currentPlayer.data.playerId == l.playerId ? a.addFriendError = Travian.translate("FriendList.AddFriend.Error.Yourself") : g(l.playerId) ? a.addFriendError = Travian.translate("FriendList.AddFriend.Error.IsPending") : h(l.playerId) ? a.addFriendError = Travian.translate("FriendList.AddFriend.Error.IsFriend") : (c.Ec(l.playerId), a.newFriend = ""))
  }
};
window.friendsCtrl.$inject = ["$scope", "ChatService", "SessionService"];
window.kingdomCtrl = function(a, c) {
  function b() {
    a.kingdomTabConfig = {};
    a.kingdomTabConfig.tabs = ["Tributes", "Territory", "Info"];
    Travian.Player.data.isKing || (a.kingdomTabConfig.tabs = ["Info"], l = {Info:1, defaultKey:"Info"});
    a.kingdomTabConfig.bodyTemplatePrefix = "tpl/society/partials/kingdom/";
    a.kingdomTabConfig.routeNamedParam = "subtab";
    a.kingdomTabConfig.tabName = "subtab";
    a.kingdomTabConfig.tabType = "subtab";
    a.kingdomTabConfig.disableScrollingForTabs = ["Tributes", "Territory", "Info"];
    a.accountAge = Math.floor((Travian.ServerTime - Travian.Player.data.signupTime) / 86400);
    a.setupSociety(l)
  }
  var l = {Tributes:1, Area:2, Info:3, defaultKey:"Tributes"};
  b();
  c.o(b)
};
window.kingdomCtrl.$inject = ["$scope", "SessionService"];
window.kingdomInformationCtrl = function(a, c, b, l) {
  function h() {
    var b = 0, c = [], e;
    for(e = 0;e < Travian.Config.KingdomConfig.dukeSlots.length;e++) {
      if(Travian.Config.KingdomConfig.dukeSlots[e] <= a.treasures.data.treasuresCurrent) {
        b = e
      }else {
        break
      }
    }
    2 == b && PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY + "_" + PlayerProgressTrigger.HELP_PAGE_VICTORY_POINTS);
    A.forEach(function(a) {
      c.push({type:"duke", data:a})
    });
    C.forEach(function(a) {
      c.push({type:"invitation", data:a})
    });
    if(c.length < b) {
      for(e = c.length;e < b;e++) {
        c.push({type:"empty", data:{}})
      }
    }
    if(c.length < Travian.Config.KingdomConfig.dukeSlots.length - 1) {
      for(e = b = c.length;e < Travian.Config.KingdomConfig.dukeSlots.length - 1;e++) {
        c.push({type:"locked", data:{neededTreasures:Travian.Config.KingdomConfig.dukeSlots[e + 1], firstElement:b == e}})
      }
    }
    a.dukeSlots = c
  }
  function g() {
    if(null != t) {
      A = [];
      for(var a, b = 0;b < t.data.length;b++) {
        a = t.data[b], a.isDuke() && (e(a), A.push(a))
      }
      A.sort(function(a, b) {
        return a.treasures < b.treasures ? 1 : a.treasures > b.treasures ? -1 : 0
      });
      h()
    }
  }
  function e(a) {
    var b = 0;
    void 0 !== a.data.villages && null != a.data.villages && a.data.villages.forEach(function(a) {
      b += Math.min(parseInt(a.treasures), parseInt(a.treasuresUsable))
    });
    a.treasures = b
  }
  function m() {
    C = [];
    for(var a, b = 0;b < z.data.length;b++) {
      a = z.data[b], a.data.invitedAs == Player.KINGDOM_ROLE_DUKE && C.push(a)
    }
    h()
  }
  function f() {
    null !== s && t.unsubscribe(s);
    t = Player.getCollection(Player.COLLECTION_KINGDOM, Travian.Player.data.kingdomId);
    a.treasures.lastFilled > t.lastFilled && (Cache.t(t, 1), "undefined" != typeof a.king && Cache.t(a.king, 1));
    s = t.subscribe(function() {
      g();
      B = n.length;
      n = [];
      for(var c = 0;c < t.data.length;c++) {
        var e = t.data[c].data;
        t.data[c].data.chatUser = b.sb(e.playerId, e);
        t.data[c].data.points = 0;
        n.push(e);
        e.playerId == Travian.Player.data.playerId && (a.treasureRank.ownPosition = c)
      }
      a.prepareTreasureRank()
    })
  }
  var n = [], q = [], p = [], r = null, s = null, v = null, u = null, t = null, z, A = [], C = [];
  a.dukeSlots = [];
  a.treasures = null;
  var D = -1, y = !1;
  a.activeVillage = l.i();
  a.$on("activeVillageChanged", function() {
    a.activeVillage = l.i()
  });
  a.treasureRank = {itemsPerPage:5, numberOfItems:0, ownPosition:-1, currentPage:1, players:[]};
  a.prepareTreasureRank = function(b) {
    var c = 0, e = 0;
    if("undefined" == typeof b || null == b) {
      b = 1, a.treasureRank.currentPage = b
    }
    "undefined" != typeof n && 0 < n.length && (a.treasureRank.numberOfItems = n.length, c = (b - 1) * a.treasureRank.itemsPerPage, e = Math.min(c + a.treasureRank.itemsPerPage, n.length), D == a.treasures.data.treasuresCurrent && B == n.length || y || (b = {start:0, end:n.length, rankingType:"ranking_KingdomInternal", rankingSubtype:Travian.Player.data.kingdomId}, y = !0, Travian.request("ranking/getRanking", b, function(b) {
      y = !1;
      a.treasureRank.players = [];
      q = [];
      for(var f in b.results) {
        for(var g = 0;g < n.length;g++) {
          b.results[f].playerId == n[g].playerId && q.push(b.results[f])
        }
      }
      p = q;
      for(g = 0;g < n.length;g++) {
        b = !1;
        for(f = 0;f < q.length;f++) {
          n[g].playerId == q[f].playerId && (b = !0)
        }
        b || p.push(n[g])
      }
      p.sort(function(a, b) {
        return parseInt(a.points) < parseInt(b.points) ? 1 : parseInt(a.points) > parseInt(b.points) ? -1 : 0
      });
      for(g = 0;g < p.length;g++) {
        p[g].rank = g
      }
      a.treasureRank.players = p.slice(c, e)
    })), a.treasureRank.players = p.slice(c, e))
  };
  var B = 0;
  a.subscribe(Travian.Player, function() {
    null !== u && a.treasures.unsubscribe(u);
    null != a.treasures && "undefined" != typeof a.treasures.data && (D = a.treasures.data.treasuresCurrent);
    a.treasures = KingdomTreasures.get(Travian.Player.data.kingdomId);
    u = a.treasures.subscribe(g);
    f();
    if(Travian.Player.data.kingdomId != r) {
      var b = Travian.Player.data.kingdomId;
      0 < b && (a.king = Player.get(b), e(a.king), Travian.request("player/getKingdomStats", {kingId:b}, function(b) {
        a.stats = b
      }));
      r = b
    }
    null !== v && z.unsubscribe(v);
    z = GroupInvitation.getCollection(GroupInvitation.COLLECTION_FOR_GROUP, GroupInvitation.TYPE_KINGDOM, Travian.Player.data.kingdomId);
    v = z.subscribe(m)
  });
  a.inviteDuke = function() {
    a.openOverlay("kingdomInviteDuke")
  };
  a.cancelDukeInvitation = function(a) {
    Travian.writeRequest("kingdom/declineInvitation", {id:a})
  };
  a.dismissDuke = function(b) {
    a.openOverlay("abdicateDuke", {dukePlayerId:b})
  };
  a.$on("$destroy", function() {
    null !== s && t.unsubscribe(s);
    null !== v && z.unsubscribe(v);
    null !== u && a.treasures.unsubscribe(u)
  });
  PlayerProgressTrigger.triggerInGameHelp(PlayerProgressTrigger.TOPIC_KINGDOM + "_" + PlayerProgressTrigger.HELP_PAGE_DUKES)
};
window.kingdomInformationCtrl.$inject = ["$scope", "SessionService", "ChatService", "VillageService"];
window.kingdomInviteDukeCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Kingdom.Dukes.inviteDuke.Headline", inWindowPopupContentTemplate:"tpl/society/partials/kingdom/inviteDuke.html"});
  a.alliance = Alliance.get(Travian.Player.data.allianceId);
  a.handleError({}, "dukeInviteError");
  a.input = {customText:""};
  a.societyInvitationMaxLength = Travian.Config.charLimits.societyInvitationCharLimit;
  a.invitePlayer = "";
  a.selectedPlayer = null;
  a.selectInvitePlayer = function(c) {
    a.handleError({}, "dukeInviteError");
    a.selectedPlayer = c
  };
  a.invite = function() {
    if(null != a.selectedPlayer) {
      var c = {};
      c.playerId = a.selectedPlayer.playerId;
      c.customText = a.input.customText || "";
      Travian.writeRequest("kingdom/promoteToDuke", c, function(b) {
        "undefined" == typeof b.errors ? (a.selectedPlayer = null, a.invitePlayer = "", a.closeOverlay()) : a.handleError(b, "dukeInviteError")
      })
    }
  }
};
window.kingdomInviteDukeCtrl.$inject = ["$scope", "SessionService"];
window.kingdomSetTaxRateCtrl = function(a, c) {
  a.overlayConfig.k({inWindowPopupTitle:"Kingdom.Governors.SetTaxRate.Headline", inWindowPopupContentTemplate:"tpl/society/partials/kingdom/setTaxRate.html"});
  a.tax = {};
  a.tax.LOW = Player.TAX_RATE.LOW;
  a.tax.MIDDLE = Player.TAX_RATE.MIDDLE;
  a.tax.HIGH = Player.TAX_RATE.HIGH;
  a.handleError({}, "setTaxRateError");
  a.input = {option:parseInt(c.l().data.taxRate)};
  a.setTaxRate = function() {
    var b = {};
    b.rate = a.input.option;
    Travian.writeRequest("player/setTaxRate", b, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "setTaxRateError")
    })
  }
};
window.kingdomSetTaxRateCtrl.$inject = ["$scope", "SessionService"];
window.kingdomTerritoryCtrl = function(a, c) {
  function b() {
    null !== l && (a.kingdomData = [], $.each(l, function(b, c) {
      var e = {};
      e.villageId = c.villageId;
      e.villageName = c.villageName;
      e.playerId = c.playerId;
      e.level = c.level;
      e.population = c.population;
      e.size = c.size;
      e.levelPerc = {};
      for(var m = e.level + 1, f = 1;4 >= f;f++) {
        e.levelPerc[f] = f < m ? 100 : f == m ? Math.round(100 * (c.population - c.currentFrom) / (c.currentTo - c.currentFrom)) : 0
      }
      e.populationForNextLevel = c.currentTo;
      e.influence = c.influence;
      e.treasureBonus = Math.round(100 * (c.treasureBonus - 1));
      e.treasureBonusValue = Math.round((c.treasureBonus - 1) * c.population);
      e.currentCells = c.currentCells;
      e.isDukeVillage = c.isDukeVillage;
      e.cells = {own:0, alliance:0, other:0};
      for(var l in c.players) {
        m = c.players[l].allianceId, f = c.players[l].cells, l == Travian.Player.data.playerId ? e.cells.own += f : 0 < m && m == Travian.Player.data.allianceId ? e.cells.alliance += f : e.cells.other += f
      }
      a.kingdomData.push(e)
    }))
  }
  var l = null;
  Travian.request("map/getKingdomInfluenceStatistics", {kingId:c.getPlayerId()}, function(a) {
    function c(a, b) {
      return b.influence - a.influence
    }
    var e = [], m = [], f, n;
    for(n in a) {
      a[n].villageId = n, f = a[n], f = parseInt(f.playerId), a[n].playerId = f, f == Travian.Player.data.playerId ? (a[n].isDukeVillage = !1, e.push(a[n])) : (a[n].isDukeVillage = !0, m.push(a[n]))
    }
    e.sort(c);
    m.sort(c);
    l = e.concat(m);
    b()
  })
};
window.kingdomTerritoryCtrl.$inject = ["$scope", "SessionService"];
window.kingdomTributesCtrl = function(a, c, b, l) {
  function h() {
    0 == a.tributeProductionPerHourSum ? a.tributeBonusPercent = 0 : (a.tributeBonusPercent = (a.minimumTributes - a.tributeProductionPerHourSum) / a.tributeProductionPerHourSum, 0 > a.tributeBonusPercent && (a.tributeBonusPercent = 0))
  }
  function g() {
    for(var b = {}, c = p.u(), e = 0;e < c.length;e++) {
      var f = c[e].data;
      if(f.status == Troops.STATUS_SUPPORT) {
        var g = f.villageIdLocation;
        0 > f.villageIdSupply && (g = f.villageIdSupply);
        if("undefined" === typeof b[g]) {
          b[g] = {supply:0, units:{}};
          for(var h = 1;11 >= h;h++) {
            b[g].units[h] = 0
          }
        }
        b[g].supply += parseInt(f.supplyTroops, 0);
        for(h = 1;11 >= h;h++) {
          "undefined" !== typeof f.units[h] && (b[g].units[h] += parseInt(f.units[h], 0))
        }
      }
    }
    a.supportedTroops = b
  }
  function e() {
    q = {};
    for(var a = r.u(), b = 0;b < a.length;b++) {
      var c = a[b];
      c.data.movement.movementType == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT && (q[c.data.movement.villageIdStart] = c.data.movement.timeFinish)
    }
  }
  function m() {
    var b = {};
    a.tributeProductionPerHourSum = 0;
    a.players[-1] = {data:{name:Travian.translate("Kingdom.NeutralGovernors")}};
    for(var c = 0;c < a.villages.length;c++) {
      var e = a.villages[c].data;
      if(e.playerId != a.player.data.playerId && !(e.type >= Village.TYPE_OASIS || a.villages[c].hasActiveTreasury())) {
        var f = e.playerId;
        "undefined" == typeof a.players[e.playerId] && (f = -1);
        "undefined" === typeof b[f] && (b[f] = {playerId:f, villages:[]});
        a.tributeProductionPerHourSum += e.tributeProduction;
        b[f].villages.push(a.villages[c])
      }
    }
    e = [];
    for(c in b) {
      e.push(b[c])
    }
    a.playerToVillages = e;
    a.tributeData = {};
    for(b = 0;b < a.villages.length;b++) {
      c = {}, e = a.villages[b].data, f = Da(a.activeVillage.data.coordinates, e.coordinates), c.durationToKingVillage = Math.round(3600 * (f / Travian.Config.fetchingDurationMultiplier / Travian.Config.TG_TROOP_SPEED)), a.tributeData[e.villageId] = c
    }
    h()
  }
  function f() {
    a.$on("activeVillageChanged", function() {
      a.activeVillage = b.i();
      m()
    });
    var c = Village.getCollection(Village.COLLECTION_KINGDOM);
    a.subscribe(c, function() {
      a.villages = c.data;
      m()
    });
    p = l.B(null, [Troops.COLLECTION_ELSEWHERE], g, a);
    r = l.B(null, [Troops.COLLECTION_MOVING], e, a)
  }
  a.villages = [];
  a.troops = [];
  a.tributes = [];
  a.playerName = [];
  a.itemsPerPage = 10;
  a.numberOfItems = 0;
  a.villagesByPlayerId = [];
  a.villagesByDistance = [];
  a.selectedVillages = {};
  a.input = {selectAll:!1};
  a.supportedTroops = {};
  a.collectPriceSum = 0;
  a.villagesByPlayerId = [];
  a.players = [];
  a.countForInstantCollect = 0;
  a.readyForInstantCollect = !1;
  a.activeVillage = b.i();
  Travian.request("player/getMinimumTributesForToday", {}, function(b) {
    a.minimumTributes = b.data;
    h()
  });
  var n = 0, q = {}, p = null, r = null, s = Player.getCollection(Player.COLLECTION_KINGDOM, Travian.Player.data.kingdomId);
  a.subscribe(s, function() {
    a.players = {};
    for(var b = 0;b < s.data.length;b++) {
      a.players[s.data[b].data.playerId] = s.data[b]
    }
  });
  a.player = c.l();
  a.playerTribe = a.player.data.tribeId;
  a.getTributesOnTheirWay = function(a) {
    var b = 0, c;
    for(c in q) {
      "undefined" != typeof q[a] && (b = q[a])
    }
    return b
  };
  a.fetchTribute = function(a) {
    Travian.writeRequest("troops/fetchTributesForVillages", {villageId:b.getActiveVillageId(), destVillages:[a]})
  };
  a[PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY] = function(a) {
    return{destinationVillageId:a}
  };
  a.instantFetchTributePremiumFeatureName = PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY;
  a.player.data.isKing && f();
  var v = Travian.tick.bind(function() {
    var b = (new Date).getTime();
    if(b > n + 1E3) {
      n = b;
      b = a.somethingToFetch = !1;
      a.showInstantButton = !1;
      a.sumTributes = {tributeSum:0, tributeTreasuresSum:0, count:0};
      a.sumTributesInstant = {tributeSum:0, tributeTreasuresSum:0, count:0, price:0};
      for(var c = 0;c < a.villages.length;c++) {
        a.villages[c].getResources();
        var e = a.villages[c].data, f = a.getTributesOnTheirWay(e.villageId);
        a.villages[c].data.tributeBonus = {};
        for(var g in e.calculatedTributes) {
          var h = e.calculatedTributes[g];
          a.villages[c].data.tributeBonus[g] = Math.floor(h * (a.tributeBonusPercent + 1) - h)
        }
        0 < f ? (b = !0, a.sumTributesInstant.tributeSum += e.tributeSum, a.sumTributesInstant.tributeTreasuresSum += Math.floor(e.tributeTreasures), a.sumTributesInstant.count++, a.sumTributesInstant.price += Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY].price) : e.canFetchTributes && (a.somethingToFetch = !0, a.sumTributes.tributeSum += e.tributeSum, a.sumTributes.tributeTreasuresSum += Math.floor(e.tributeTreasures), a.sumTributes.count++)
      }
      !a.somethingToFetch && b ? (a.showInstantButton = !0, a.village = a.sumTributesInstant) : (a.showInstantButton = !1, a.village = a.sumTributes);
      for(g = 0;g < a.villages.length;g++) {
        a.villages[g].getTributes()
      }
    }
  });
  a.$on("$destroy", function() {
    Travian.tick.unbind(v)
  })
};
window.kingdomTributesCtrl.$inject = ["$scope", "SessionService", "VillageService", "TroopsService", "$timeout"];
window.secretSocietyDetailCtrl = function(a, c, b) {
  function l(b) {
    var c = SocietyStats.getCollection(b);
    b = !0;
    if("undefined" != typeof a.stats) {
      for(var e = 0;e < a.society.data.members.length;e++) {
        if("undefined" == typeof a.stats[a.society.data.members[e].playerId]) {
          b = !1;
          break
        }
      }
    }else {
      b = !1
    }
    b ? Cache.t(c, 300) : Cache.t(c, 0);
    a.subscribe(c, function() {
      a.stats = [];
      for(var b = 0;b < c.data.length;b++) {
        var e = c.data[b].data;
        a.stats[e.playerId] = e
      }
    })
  }
  function h() {
    if("undefined" == typeof a.societyId || null == a.societyId) {
      var c = b.getParam("societyId");
      if("undefined" !== typeof c && null != c) {
        a.societyId = c
      }else {
        a.noSociety = !0;
        return
      }
    }
    a.noSociety = !1;
    a.isFounder = !1;
    a.founder = null;
    a.society = Society.get(a.societyId);
    a.subscribe(a.society, g);
    a.invitations = GroupInvitation.getCollection("group", GroupInvitation.TYPE_SECRET_SOCIETY, a.societyId)
  }
  function g() {
    a.isSitter = c.L();
    a.orientation = a.society.data.attitude == Society.ATTITUDE_WHITE ? 1 : -1;
    for(var b = 0;b < a.society.data.members.length;b++) {
      a.society.data.members[b].playerId == a.user.data.playerId && (a.isFounder = a.society.data.members[b].isFounder), a.society.data.members[b].isFounder && (a.founder = a.society.data.members[b])
    }
    b = a.society.data.targetType;
    a.targetId = a.society.data.targetId;
    b == Society.TARGET_VILLAGE && (a.targetObj = Village.get(a.society.data.targetId));
    if(b == Society.TARGET_PLAYER || b == Society.TARGET_KINGDOM) {
      a.targetObj = Player.get(a.society.data.targetId)
    }
    b == Society.TARGET_ALLIANCE && (a.targetObj = Alliance.get(a.society.data.targetId));
    l(a.societyId);
    a.society.data.members.sort(function(a, b) {
      return parseInt(b.population) - parseInt(a.population)
    });
    a.numberOfItems = a.society.data.members.length;
    a.displayCurrentPage(a.currentPage)
  }
  a.target = {};
  a.target.village = Society.TARGET_VILLAGE;
  a.target.player = Society.TARGET_PLAYER;
  a.target.kingdom = Society.TARGET_KINGDOM;
  a.target.alliance = Society.TARGET_ALLIANCE;
  a.attitudeName = {};
  a.attitudeName[Society.ATTITUDE_WHITE] = "White";
  a.attitudeName[Society.ATTITUDE_BLACK] = "Black";
  a.user = c.l();
  a.noSociety = !1;
  a.societyId = a.getParam("societyId");
  a.itemsPerPage = 5;
  a.currentPage = 1;
  a.numberOfItems = 0;
  a.displayCurrentPage = function(b) {
    null == b && (b = 1);
    if("undefined" != typeof a.society && "undefined" != typeof a.society.data) {
      var c = a.society.data.members;
      a.currentPage = b;
      b = a.itemsPerPage * (b - 1);
      var e = Math.min(b + a.itemsPerPage, c.length);
      a.rows = c.slice(b, e)
    }
  };
  a.selectSociety = function(a) {
    b.m("societyId", a)
  };
  var e = Society.getCollection();
  a.societies = e;
  a.subscribe(e, function() {
    ("undefined" == typeof a.societyId || null == a.societyId) && 0 < e.data.length && (a.societyId = e.data[0].data.groupId, a.m("societyId", a.societyId));
    a.societies = e;
    h()
  });
  a.$on("urlChanged", function() {
    var c = b.getParam("societyId");
    c != a.societyId && null != c && (a.societyId = c, h(), a.$broadcast("checkDynTabs"))
  });
  h()
};
window.secretSocietyDetailCtrl.$inject = ["$scope", "SessionService", "RoutingService"];
window.secretSocietyEditDescriptionCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Society.EditDescription.Headline", inWindowPopupTemplate:"tpl/society/partials/secretSociety/editDescription.html"});
  a.society = Society.get(a.getParam("groupId"));
  a.description = a.society.data.profile.description;
  a.handleError({}, "societyChangeDescriptionError");
  a.editDescription = function() {
    var c = {};
    c.groupId = a.society.data.groupId;
    c.description = a.description;
    Travian.writeRequest("society/changeDescription", c, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyChangeDescriptionError")
    })
  }
};
window.secretSocietyEditDescriptionCtrl.$inject = ["$scope"];
window.secretSocietyInviteCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Society.Invite.Headline", inWindowPopupTemplate:"tpl/society/partials/secretSociety/invite.html"});
  a.society = Society.get(a.getParam("groupId"));
  a.maxInvite = 5;
  a.customText = "";
  a.selectedPlayer = [];
  a.selectInvitePlayer = {};
  a.handleError({}, "societyInviteError");
  a.dummyModel = "";
  a.atLeastOnePlayer = !1;
  a.addNewPlayer = function() {
    var c = a.selectedPlayer.length;
    c >= a.maxInvite || (a.selectedPlayer[c] = null, a.selectInvitePlayer[c] = function(b) {
      a.selectedPlayer[c] = b;
      a.atLeastOnePlayer = !0;
      if(null == b) {
        a.atLeastOnePlayer = !1;
        for(var l in a.selectedPlayer) {
          null != a.selectedPlayer[l] && (a.atLeastOnePlayer = !0)
        }
      }
      null !== b && "undefined" === typeof a.selectInvitePlayer[c + 1] && a.addNewPlayer()
    })
  };
  a.addNewPlayer();
  a.inviteToSociety = function() {
    var c = {};
    c.groupId = a.society.data.groupId;
    c.groupType = GroupInvitation.TYPE_SECRET_SOCIETY;
    c.playerName = [];
    for(var b = 0;b < a.selectedPlayer.length;b++) {
      null != a.selectedPlayer[b] && "" != a.selectedPlayer[b].name && c.playerName.push(a.selectedPlayer[b].name)
    }
    0 != c.playerName.length && (c.customText = a.customText, Travian.writeRequest("society/invite", c, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyInviteError")
    }))
  }
};
window.secretSocietyInviteCtrl.$inject = ["$scope"];
window.secretSocietyKickCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Society.Kick", inWindowPopupContentTemplate:"tpl/society/partials/secretSociety/kick.html"});
  var c = a.getParam("playerId"), b = a.getParam("societyId");
  a.player = Player.get(c);
  a.confirmKick = function() {
    var l = {};
    l.groupId = b;
    l.groupType = GroupInvitation.TYPE_SECRET_SOCIETY;
    l.playerId = c;
    Travian.writeRequest("society/kick", l, function(b) {
      "undefined" == typeof b.errors ? a.closeOverlay() : a.handleError(b, "societyKickError")
    })
  }
};
window.secretSocietyKickCtrl.$inject = ["$scope"];
window.secretSocietyOpenInvitationsCtrl = function(a) {
  a.overlayConfig.k({inWindowPopupTitle:"Group.OpenInvitations.Headline", inWindowPopupTemplate:"tpl/society/partials/secretSociety/openInvitations.html"});
  a.society = Society.get(a.getParam("groupId"));
  a.invitations = GroupInvitation.getCollection("group", GroupInvitation.TYPE_SECRET_SOCIETY, a.society.data.groupId);
  a.itemsPerPage = 20;
  a.currentPage = 1;
  a.numberOfItems = 0;
  a.displayCurrentPage = function(c) {
    null == c && (c = 1);
    if("undefined" != typeof a.invitations.data) {
      var b = a.invitations.data;
      a.currentPage = c;
      c = a.itemsPerPage * (c - 1);
      var l = Math.min(c + a.itemsPerPage, b.length);
      a.rows = b.slice(c, l)
    }
  };
  a.subscribe(a.invitations, function() {
    a.numberOfItems = a.invitations.data.length;
    a.displayCurrentPage(a.currentPage)
  });
  a.revokeInvitation = function(c) {
    var b = {};
    b.id = c;
    Travian.request("society/declineInvitation", b, function(b) {
      a.handleError(b, "societyInviteRevokeError")
    })
  }
};
window.secretSocietyOpenInvitationsCtrl.$inject = ["$scope"];
window.societyCtrl = function(a, c, b) {
  function l() {
    g = c.B(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], h, a)
  }
  function h() {
    a.attackedGovernors = g.Hc()
  }
  a.w.windowName = "Societies";
  a.tabConfig.tabs = ["Kingdom", "Alliance", "SecretSociety", "Friends", "Attacks"];
  a.tabConfig.bodyTemplatePrefix = "tpl/society/tabs/";
  a.tabConfig.disableScrolling = !0;
  var g = null, e = {};
  a.attackedGovernors = {};
  l();
  b.o(l);
  a.setupSociety = function(b) {
    e = b;
    void 0 === e[a.currentSubTab] && (a.m("subtab", e.defaultKey), a.currentSubTab = e.defaultKey)
  }
};
window.societyCtrl.$inject = ["$scope", "TroopsService", "SessionService", "VillageService"];
window.statsAllianceTop10Ctrl = function(a, c) {
  a.detectCurrentTabAndSubTab();
  c.o(function() {
    a.stats = StatsWeeklyTop.get(c.l().data.allianceId, "ranking_Alliance");
    Cache.t(a.stats, 60);
    a.subscribe(a.stats, function() {
      a.top10Lists = [];
      a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Attackers"), data:a.stats.data.top10Attacker, ownData:a.stats.data.top10Attacker_ranking_Alliance, pointsTitle:Travian.translate("TableHeader.Points")});
      a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Climbers"), data:a.stats.data.top10Climber, ownData:a.stats.data.top10Climber_ranking_Alliance, pointsTitle:Travian.translate("TableHeader.Ranks")});
      a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Defenders"), data:a.stats.data.top10Defender, ownData:a.stats.data.top10Defender_ranking_Alliance, pointsTitle:Travian.translate("TableHeader.Points")});
      a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Robbers"), data:a.stats.data.top10Robber, ownData:a.stats.data.top10Robber_ranking_Alliance, pointsTitle:Travian.translate("Resources")})
    })
  })
};
window.statsAllianceTop10Ctrl.$inject = ["$scope", "SessionService"];
window.statsAlliancesCtrl = function(a, c) {
  a.statsAlliancesTabConfig = {};
  a.statsAlliancesTabConfig.tabs = "VictoryPoints Population Attacker Defender Area Top10".split(" ");
  a.statsAlliancesTabConfig.routeNamedParam = "subtab";
  a.statsAlliancesTabConfig.tabName = "subtab";
  a.statsAlliancesTabConfig.tabType = "subtab";
  a.statsAlliancesTabConfig.bodyTemplatePrefix = "tpl/statistics/statsAlliances";
  var b = {VictoryPoints:"victoryPoints", Population:"population", Attacker:"offPoints", Defender:"deffPoints", Area:"size", Top10:"doesntMatter", defaultKey:"VictoryPoints"};
  c.o(function() {
    a.setupStats("ranking_Alliance", b, Travian.Player.data.allianceId)
  })
};
window.statsAlliancesCtrl.$inject = ["$scope", "SessionService"];
window.statsCtrl = function(a, c, b) {
  function l(b, c, e, f) {
    var g = a.paginationData[e][f].currentPage, m = !1;
    null == b && (b = g, m = !0);
    "undefined" == typeof a.results[e][f][b] ? (g = (b - 1) * a.itemsPerPage, g = {start:g, end:g + a.itemsPerPage - 1, rankingType:c, rankingSubtype:f}, "ranking_Player" == c && "villages" == f && (g.rankingType = "ranking_Village", g.rankingSubtype = "population"), Travian.request("ranking/getRanking", g, function(c) {
      a.results[e][f][b] = c.results;
      a.rankings = a.results[e][f][b];
      m && h(b)
    })) : (a.rankings = a.results[e][f][b], m && h(b))
  }
  function h(b) {
    0 >= b && (b = 1);
    a.m("statsPage", b)
  }
  a.w.windowName = "Title.Statistics";
  a.tabConfig.tabs = ["Player", "Kingdoms", "Alliances", "World"];
  var g = Gameworld.get();
  a.subscribe(g, function() {
    !0 == g.data.worldWonderActivated && 0 > a.tabConfig.tabs.indexOf("WorldWonder") && a.tabConfig.tabs.push("WorldWonder")
  });
  a.tabConfig.bodyTemplatePrefix = "tpl/statistics/stats";
  a.tabConfig.tabName = "tab";
  a.tabConfig.disableScrolling = !0;
  var e = "", m = {}, f = 0, n = {stats:!1, page:!1};
  a.setupStats = function(b, c, g) {
    e = b;
    m = c;
    a.currentSubTab || (a.currentSubTab = a.getParam("subtab"));
    void 0 === m[a.currentSubTab] && (a.m("subtab", m.defaultKey), a.currentSubTab = m.defaultKey);
    f = g;
    n.stats = !0;
    !1 !== n.page && a.displayCurrentPage(n.page)
  };
  c = c.l();
  a.playerId = c.data.playerId;
  a.allianceId = c.data.allianceId;
  a.itemsPerPage = 15;
  a.paginationData = {};
  a.paginationData.Player = {};
  a.paginationData.Alliances = {};
  a.paginationData.Kingdoms = {};
  a.paginationData.WorldWonder = {};
  a.results = {};
  a.results.Player = {};
  a.results.Alliances = {};
  a.results.Kingdoms = {};
  a.results.WorldWonder = {};
  a.rankings = [];
  a.search = {rank:null, name:null, obj:null, autocompleteParam:null};
  var q = "Player", p = "Overview", r = null, s = null;
  a.detectCurrentTabAndSubTab = function() {
    var b = a.getParam("tab");
    "undefined" == typeof b && (b = q);
    var c = a.getParam("subtab");
    "undefined" == typeof m[c] && (c = m.defaultKey);
    a.currentTab = b;
    a.currentSubTab = c
  };
  a.displayCurrentPage = function(c) {
    if(n.stats) {
      a.detectCurrentTabAndSubTab();
      var g = a.currentTab, h = a.currentSubTab;
      g != q && (a.search = {rank:null, name:null, autocompleteParam:null});
      "Player" == g || "Kingdoms" == g || "WorldWonder" == g ? (a.search.autocompleteParam = "player", "Kingdoms" == g && (a.search.autocompleteParam = "king"), "Villages" == h && (a.search.autocompleteParam = "village coords")) : a.search.autocompleteParam = "alliance";
      var z = m[h];
      if("undefined" != typeof c) {
        if(p != h || q != g) {
          a.searchedRank = -1, a.rankings = [], a.numberOfItems = 0, q = g, p = h, a.rankError = "", a.search.rank = "", a.search.name = ""
        }
        "undefined" == typeof a.results[g][z] && (a.results[g][z] = {});
        h = {id:f, rankingType:e, rankingSubtype:z};
        "ranking_Player" == e && "villages" == z && (h.id = b.getActiveVillageId(), h.rankingType = "ranking_Village", h.rankingSubtype = "population");
        r = h.rankingType;
        s = h.rankingSubtype;
        "undefined" == typeof a.paginationData[g][z] ? Travian.request("ranking/getRankAndCount", h, function(b) {
          a.paginationData[g][z] = b;
          a.paginationData[g][z].currentPage = 0 <= b.rank ? Math.floor(b.rank / a.itemsPerPage) + 1 : 1;
          a.numberOfItems = a.paginationData[g][z].numberOfItems;
          l(c, e, g, z)
        }) : (a.numberOfItems = a.paginationData[g][z].numberOfItems, l(c, e, g, z))
      }
    }else {
      n.page = c
    }
  };
  a.showSearch = function() {
    return"World" == a.currentTab ? !1 : -1 < ["Player", "Alliances", "Heroes", "Kingdoms"].indexOf(a.currentTab) ? "Top10" != a.currentSubTab : !1
  };
  a.filterInputSearchRank = function() {
    a.search.name = null;
    a.search.obj = null;
    isNaN(a.search.rank) || 1 > a.search.rank ? a.search.rank = "" : a.search.rank > a.numberOfItems && (a.search.rank = a.numberOfItems)
  };
  a.setSearchName = function(b) {
    a.search.name = b.name;
    a.search.obj = b;
    a.searchItem()
  };
  a.searchedRank = null;
  a.searchItem = function() {
    function b(c) {
      null !== c && h(Math.ceil((parseInt(c) + 1) / a.itemsPerPage))
    }
    if(null != a.search.obj) {
      var c = null;
      null != typeof a.search.obj.villageId && 0 < a.search.obj.villageId && (c = a.search.obj.villageId);
      null != typeof a.search.obj.playerId && (0 < a.search.obj.playerId && null == c) && (c = a.search.obj.playerId);
      null != typeof a.search.obj.allianceId && (0 < a.search.obj.allianceId && null == c) && (c = a.search.obj.allianceId);
      Travian.request("ranking/getRankAndCount", {id:c, rankingType:r, rankingSubtype:s, ignoreCount:!0}, function(c) {
        a.handleError(c, "rankError") && (0 <= c.rank && (e = c.rank, b(e)), a.searchedRank = e)
      })
    }else {
      var e = null;
      0 < a.search.rank && (e = parseInt(a.search.rank) - 1, a.searchedRank = e);
      b(e)
    }
  }
};
window.statsCtrl.$inject = ["$scope", "SessionService", "VillageService"];
window.statsKingdomsCtrl = function(a, c) {
  a.statsKingdomTabConfig = {};
  a.statsKingdomTabConfig.tabs = ["Population", "Treasures", "Size"];
  a.statsKingdomTabConfig.routeNamedParam = "subtab";
  a.statsKingdomTabConfig.tabName = "subtab";
  a.statsKingdomTabConfig.tabType = "subtab";
  a.statsKingdomTabConfig.bodyTemplatePrefix = "tpl/statistics/statsKingdoms";
  var b = {Population:"population", Size:"size", Treasures:"treasures", defaultKey:"Population"};
  c.o(function() {
    a.setupStats("ranking_Kingdom", b, Travian.Player.data.kingdomId)
  })
};
window.statsKingdomsCtrl.$inject = ["$scope", "SessionService"];
window.statsPlayerCtrl = function(a, c) {
  a.statsPlayerTabConfig = {};
  a.statsPlayerTabConfig.tabs = "Overview Attacker Defender Villages Heroes Top10".split(" ");
  a.statsPlayerTabConfig.routeNamedParam = "subtab";
  a.statsPlayerTabConfig.tabName = "subtab";
  a.statsPlayerTabConfig.tabType = "subtab";
  a.statsPlayerTabConfig.bodyTemplatePrefix = "tpl/statistics/statsPlayer";
  var b = {Overview:"population", Attacker:"offPoints", Defender:"deffPoints", Villages:"villages", Heroes:"heroes", Top10:"doesntMatter", defaultKey:"Overview"};
  c.o(function() {
    a.setupStats("ranking_Player", b, Travian.Player.data.playerId)
  })
};
window.statsPlayerCtrl.$inject = ["$scope", "SessionService"];
window.statsPlayerTop10Ctrl = function(a, c) {
  a.detectCurrentTabAndSubTab();
  var b = c.getPlayerId();
  a.stats = StatsWeeklyTop.get(b, "ranking_Player");
  Cache.t(a.stats, 60);
  a.subscribe(a.stats, function() {
    a.top10Lists = [];
    a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Attackers"), data:a.stats.data.top10Attacker, ownData:a.stats.data.top10Attacker_ranking_Player, pointsTitle:Travian.translate("TableHeader.Points")});
    a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Climbers"), data:a.stats.data.top10Climber, ownData:a.stats.data.top10Climber_ranking_Player, pointsTitle:Travian.translate("TableHeader.Ranks")});
    a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Defenders"), data:a.stats.data.top10Defender, ownData:a.stats.data.top10Defender_ranking_Player, pointsTitle:Travian.translate("TableHeader.Points")});
    a.top10Lists.push({title:Travian.translate("Statistics.Top10Title.Robbers"), data:a.stats.data.top10Robber, ownData:a.stats.data.top10Robber_ranking_Player, pointsTitle:Travian.translate("Resources")})
  })
};
window.statsPlayerTop10Ctrl.$inject = ["$scope", "SessionService"];
window.statsWorldCtrl = function(a) {
  Travian.request("ranking/getWorldStats", {}, function(c) {
    a.stats = c;
    c = [];
    c[Player.TRIBE.ROMAN] = "#c8844d";
    c[Player.TRIBE.TEUTON] = "#bc6a27";
    c[Player.TRIBE.GAUL] = "#b05001";
    a.tribePieData = [];
    a.troops = {};
    for(var b in a.stats.tribes) {
      a.tribePieData.push({label:Travian.translate("Tribe_" + b), data:parseInt(a.stats.tribes[b]), color:c[b]});
      a.troops[b] = {type:"overview", tribeId:b, originalTroops:a.stats.troops[b], showHero:!1};
      for(var l = 1;10 >= l;l++) {
        a.troops[b].originalTroops[l] = Math.round(a.troops[b].originalTroops[l] / a.stats.tribes[b])
      }
    }
    a.kingdomPieData = [];
    a.kingdomPieData.push({label:Travian.translate("Statistics.World.Kingdom.Kings"), data:parseInt(a.stats.kingdoms.kings), color:"#ffe85c"});
    a.kingdomPieData.push({label:Travian.translate("Statistics.World.Kingdom.Dukes"), data:parseInt(a.stats.kingdoms.dukes), color:"#a5c400"});
    a.kingdomPieData.push({label:Travian.translate("Statistics.World.Kingdom.Governors"), data:parseInt(a.stats.kingdoms.governors), color:"#c9e271"});
    a.detectCurrentTabAndSubTab()
  })
};
window.statsWorldCtrl.$inject = ["$scope"];
window.statsWorldWonderCtrl = function(a) {
  a.statsPlayerTabConfig = {};
  a.statsPlayerTabConfig.tabs = ["WorldWonder"];
  a.statsPlayerTabConfig.routeNamedParam = "subtab";
  a.statsPlayerTabConfig.tabName = "subtab";
  a.statsPlayerTabConfig.tabType = "subtab";
  a.statsPlayerTabConfig.bodyTemplatePrefix = "tpl/statistics/stats";
  a.setupStats("ranking_WorldWonder", {WorldWonder:"worldWonder"}, a.playerId)
};
window.statsWorldWonderCtrl.$inject = ["$scope"];
window.systemMessageCtrl = function(a) {
  a.w.contentHeaderTemplate = "tpl/systemMessage/header.html";
  Travian.request("player/getSystemMessage", {}, function(c) {
    a.w.windowName = c.title;
    a.systemMessage = c.text;
    a.time = c.time
  })
};
window.systemMessageCtrl.$inject = ["$scope"];
window.logoutCtrl = function(a, c) {
  a.w.windowName = "Logout";
  a.logout = function() {
    c.ab()
  }
};
window.logoutCtrl.$inject = ["$scope", "SessionService"];
window.notEnoughSitterRightsCtrl = function(a) {
  a.w.windowName = "Sitter.NotEnoughRights.Headline"
};
window.notEnoughSitterRightsCtrl.$inject = ["$scope"];
window.userAreaCtrl = function(a, c, b, l, h) {
  a.doLogout = function() {
    1 == c.l().data.isInstant ? a.openWindow("logout") : c.ab()
  };
  a.isSitter = c.L();
  a.permissions = c.ne();
  a.openForum = function() {
    var a = Travian.translate("forumUrl");
    window.open(a, "_blank")
  };
  a.openWiki = function() {
    var a = Travian.translate("wikiUrl");
    window.open(a, "_blank")
  };
  c.o(function() {
    var b = Settings.get(Travian.Player.data.playerId);
    b.subscribe(function() {
      a.muted = b.data.muteAll || !b.data.musicVolume && !b.data.soundVolume && !b.data.uiSoundVolume
    })
  });
  l.$on("sessionRightsChanged", function() {
    h(function() {
      a.isSitter = c.L();
      a.permissions = c.ne()
    }, 3E3)
  });
  a.muteSound = function() {
    b.Uh()
  };
  a.toggleNotepads = function() {
    var b = Settings.get(Travian.Player.data.playerId);
    b.data.notpadsVisible = !b.data.notpadsVisible;
    b.persist();
    a.$root.$broadcast("toggleNotepads")
  }
};
window.userAreaCtrl.$inject = ["$scope", "SessionService", "AudioService", "$rootScope", "$timeout"];
window.userLoginCtrl = function(a, c, b) {
  a.error = !1;
  a.doLogin = function() {
    var b = {name:$("#loginInputUsername").val(), password:$("#loginInputPassword").val()};
    Travian.request("login/login", b, function(b) {
      "undefined" != typeof b && ("undefined" != typeof b.errors ? (a.error = b.errors[0].message, delete b.errors) : (c.Pc(b), a.openPage("village")))
    })
  };
  a.mellonRegister = function() {
    var a = b.ba().getInstantLogin();
    b.ia(a).open()
  };
  a.mellonLogin = function() {
    var a = b.ba().getLogin();
    b.ia(a).open()
  }
};
window.userLoginCtrl.$inject = ["$scope", "SessionService", "MellonService"];
window.userMainPageCtrl = function(a, c, b, l) {
  var h = "Wilson Stein Nixon Casey Wood Berger Gayle Blanca Robert Paige Vivian Helena Kris Ware Finch Laura Lula Luna Flora Cole Barbra Reilly Faye Nieves Roth Tamara Hunter Kerri Byers Esther Myrtle Deann Sadie Jenna Thomas Yvonne Poole Erna Carole Irwin Harmon Soto Horn Fields Travis Audrey Snider Pat Santos Arnold Nelda Beck Wilma Gaines Ada Leon Imelda Horne Madge Melisa Pruitt Hattie Jodie Evans Doris Judy Nola Greene Foley Barton Laurie Wynn Riddle Barber Albert Violet Noemi Melva Huff Lola Wyatt Amalia Myrna Sonja Castro Riggs Lorie Lilian Wagner Noreen Sears Zelma Dawn Leonor Phelps Muriel Waller Green Tran Dyer Moon Misty Tammie Bette Finley Morin Boyd Austin Rojas Good Faith Dona Britt Carver Martin Brooke Randi Eve Kidd Hodge Myers Kitty Debora Arlene Pena Prince Claire Toox Cassie Baker Count Jordan Stuart David Benni Ines Grimes Sheila Lucas April Carter Krammi Pate Weiss Shari Hunt Ava Bettie Emilia Mckay Waters Lorena Macias Park Janell Vinson Wells Sheree Elsie Sharp Harvey Katina Enid Doreen Carney Talley Simon Lopez Gina Bobbie Lenora Curry Cobb Craig Mai Anna Kirk Mara Diane Hobbs Leann Helga Mabel Hansen Carrie Cora Adrian Weaver Hooper Zamora Pratt Katie Bowman Ella Lilly Jaime Glenna Sykes Ruthie Haynes Wooten Benson Bishop King Lacey Lacy Irene Mills Stacie Eloise Spears Murray Stark Bray Yvette Walter Nicole Dunlap Giles Clare Jill Steele Howard Benton Dotson Franco Price Coleen Helene Chen Jacobs Tamra Darcy Angela Snyder Marta Neal Adkins Abby Potter Acosta Pam Mccoy Mia Bass Patton Juarez Maria Bertie Peck Ruth Ann Bird Barlow Welch Peggy Kane Cohen Bender Meyer Mann Dorthy".split(" ");
  a.randomUserName = h[Math.floor(Math.random() * (h.length + 1))];
  a.registrationInProgress = !1;
  a.popup = "none";
  a.useMellon = config.mellon.useMellon;
  a.closePopup = function() {
    a.popup = "none";
    c.O("mainpage")
  };
  a.showPopup = function(b) {
    a.popup = b;
    c.m("mainpage", b)
  };
  var g = null;
  a.input = {tribe:3};
  a.startInstant = function() {
    window.location.href = mellon.getInstantUrl()
  };
  a.startPlaying = function() {
    Travian.writeRequest("login/playWithoutAccount", {}, function(e) {
      "undefined" == typeof e.errors && (b.Pc(e), c.O("mainpage"), a.openPage("village"))
    })
  };
  var e = c.getParam("mainpage");
  null != e && a.showPopup(e);
  a.showCheatLogin = !1;
  a.useMellon && "live" != config.SERVER_ENV && (a.showCheatLogin = !0);
  a.doCheatRegistration = function(c) {
    c = {name:c};
    a.registrationInProgress = !0;
    g = l(function() {
      a.registrationInProgress = !1;
      a.registerError = "Timeout";
      a.showPopup("error");
      a.randomUserName = h[Math.floor(Math.random() * (h.length + 1))]
    }, 3E4);
    Travian.writeRequest("login/createCheatAccount", c, function(c) {
      a.registrationInProgress = !1;
      l.cancel(g);
      if("undefined" === typeof c.errors) {
        b.Pc(c)
      }else {
        return a.registerError = c.errors[0].message, a.showPopup("error"), a.randomUserName = h[Math.floor(Math.random() * (h.length + 1))], delete c.errors, !1
      }
    })
  };
  a.toPortal = function() {
    window.location.href = config.portal
  };
  a.$on("urlChanged", function() {
    e = c.getParam("mainpage");
    null != e && "" != e && a.showPopup(e)
  })
};
window.userMainPageCtrl.$inject = ["$scope", "RoutingService", "SessionService", "$timeout"];
window.startVillageCtrl = function(a) {
  a.player = Travian.Player;
  a.w.windowName = "Register";
  a.input = {direction:0, tribe:3};
  a.confirmSelection = function() {
    Travian.writeRequest("player/selectVillageDirection", {direction:a.input.direction}, function() {
      a.closeWindow("startVillage")
    })
  };
  a.selectTribe = function() {
    Travian.writeRequest("player/selectTribe", {tribeId:a.input.tribe}, w())
  };
  a.backToTribe = function() {
    Travian.writeRequest("player/selectTribe", {tribeId:0}, w())
  }
};
window.startVillageCtrl.$inject = ["$scope"];
window.villageListCtrl = function(a, c, b, l) {
  function h() {
    var b = c.getActiveVillageId();
    a.dropdown.selected = b;
    for(var h = a.ongoingAttack = !1, f = 0;f < g.data.length;f++) {
      var l = g.data[f];
      void 0 === a.dropdown.options[f] && (a.dropdown.options[f] = {});
      a.dropdown.options[f].villageId = l.data.villageId;
      a.dropdown.options[f].name = l.data.name;
      a.dropdown.options[f].x = l.data.x;
      a.dropdown.options[f].y = l.data.y;
      a.dropdown.options[f].acceptance = l.data.acceptance;
      a.dropdown.options[f].underAttack = l.underAttack;
      l.data.villageId == b && (h = !0);
      l.underAttack && (a.ongoingAttack = !0)
    }
    f < a.dropdown.options.length && a.dropdown.options.splice(f);
    !h && 0 < g.data.length && c.ka(g.data[0].data.villageId);
    a.dropdown.hoverable = 1 < g.data.length ? !0 : !1
  }
  var g = c.S();
  a.setVillage = function(e) {
    a.dropdown.selected = e;
    b.m("villId", e);
    e == c.getActiveVillageId() ? l.Se(e) : c.ka(e)
  };
  a.dropdown = {selected:null, selectBy:"option.villageId", options:[], maxHeight:450, lazyRendering:!1, resize:!1, bodyClass:"villageListDropDown", orderBy:"name", hoverable:!0, hoverContainer:"villageList", stayAtClickOpen:!0, callback:a.setVillage};
  g.subscribe(h);
  a.$on("activeVillageChanged", h);
  a.ongoingAttack = !1;
  a.nextVillage = function() {
    a.setVillage(c.me(1))
  };
  a.previousVillage = function() {
    a.setVillage(c.me(-1))
  }
};
window.villageListCtrl.$inject = ["$scope", "VillageService", "RoutingService", "MapService", "TroopsService"];
window.villageViewCtrl = function(a, c, b, l, h) {
  function g() {
    null != G && G.unsubscribe(I);
    G = c.i();
    I = G.subscribe(e);
    if(null == G.data.villageId) {
      return!1
    }
    null != J && (J.unsubscribe(N), J = null);
    0 < G.data.villageId ? (J = MapDetails.get(G.data.villageId), N = J.subscribe(function() {
      L = a.resDistribution = J.data.resType
    })) : L = a.resDistribution = "4446";
    a.isWWVillage = Village.isWWVillage(G.data.type);
    null != B && B.unsubscribe(H);
    null != E && E.unsubscribe(R);
    a.villageBuildings && a.villageBuildings.unsubscribe();
    var f = b.na(G.data.villageId);
    B = f.getSubCollection(function(a) {
      var b = "village" == O;
      return b && 18 < a.data.locationId || !b && 18 >= a.data.locationId
    });
    a.myBuildings = B;
    "resources" == O && (a.villageBuildings = f.getSubCollection(function(a) {
      return 18 < a.data.locationId && 0 > $.inArray(a.data.locationId, Building.PREMIUM_LOCATIONS)
    }));
    H = B.subscribe(q);
    E = UnitResearchQueue.get(G.data.villageId);
    R = E.subscribe(m)
  }
  function e() {
    a.isTown = G.data.isTown;
    a.isMain = G.isMainVillage()
  }
  function m() {
    var a = n(Building.TYPE.BLACKSMITH);
    if(null != a) {
      var b = E.data.buildingTypes[Building.TYPE.BLACKSMITH], b = void 0 !== b && 0 < b.length;
      b != a.isActive && (a.isActive = b, a.callSubscribers())
    }
    a = n(Building.TYPE.ACADEMY);
    null != a && (b = E.data.buildingTypes[Building.TYPE.ACADEMY], b = void 0 !== b && 0 < b.length, b != a.isActive && (a.isActive = b, a.callSubscribers()))
  }
  function f(a) {
    var b = B.data, c;
    for(c in b) {
      if(b[c].data.locationId == a) {
        return b[c]
      }
    }
    return null
  }
  function n(a) {
    var b = B.data, c;
    for(c in b) {
      if(b[c].data.buildingType == a && !b[c].isRubble()) {
        return b[c]
      }
    }
    return null
  }
  function q() {
    null == X && (X = h(p, 50))
  }
  function p() {
    X = null;
    for(var c in Z) {
      a.highlightStop(c)
    }
    Z = {};
    a.areas = {village:[], resources:[]};
    c = getReadingDirectionFrom();
    for(var e = 0;e < B.data.length;e++) {
      var f = B.data[e], g = f.data.buildingType, h = "village";
      18 >= f.data.locationId && (h = "resources");
      var m = config.village.imageSizes[g];
      null == m && (m = config.village.imageSizes[0]);
      var l = angular.copy(config.village.locationPos[f.data.locationId]);
      g == Building.TYPE.WONDER_OF_WORLD && (l = angular.copy(config.village.worldWonderPos));
      var n = {33:31, 41:42}, q = {y:Math.round(l.y - m[1])};
      q.x = "left" == c ? l.x - m[0] / 2 : s - (l.x + m[0] / 2);
      "undefined" != typeof n[f.data.locationId] && (Building.isWall(g) || (g = n[f.data.locationId]), m = config.village.imageSizes[g], q = {y:l.y - m[1]}, q.x = "left" == c ? l.x - m[0] / 2 : s - (l.x + m[0] / 2), 41 == f.data.locationId && (q = {x:0, y:0}));
      if("resources" == h) {
        q = config.village.resPoly[L], g = "undefined" != typeof q && "undefined" != typeof q[f.data.locationId] ? q[f.data.locationId] : [0, 0, 1, 1, 2, 2, 0, 0], g = {locationId:f.data.locationId, coords:g.join(",")}, a.areas[h].push(g)
      }else {
        if(l = !0, m = [], "undefined" != typeof config.village.buildingPoly[g] && (m = config.village.buildingPoly[g]), 0 >= g && "undefined" != typeof config.village.buildingPoly[0][f.data.locationId] && -2 < g && (m = config.village.buildingPoly[0][f.data.locationId], l = !1), "number" == typeof m[0]) {
          g = angular.copy(m);
          if(l) {
            for(n = 0;n < g.length;n += 2) {
              g[n] += q.x, g[n + 1] += q.y
            }
          }
          g = {locationId:f.data.locationId, coords:g.join(",")};
          a.areas[h].push(g)
        }else {
          for(l = 0;l < m.length;l++) {
            g = angular.copy(m[l]);
            for(n = 0;n < g.length;n += 2) {
              g[n] += q.x, g[n + 1] += q.y
            }
            g = {locationId:f.data.locationId, coords:g.join(",")};
            a.areas[h].push(g)
          }
        }
      }
    }
    a.premiumLocations = b.Uc()
  }
  function r() {
    null != M && (M.remove(), window.clearTimeout(M.Th), M = null)
  }
  var s = 1174;
  if("rtl" === getDirection() && !config.village.mirrored) {
    config.village.mirrored = !0;
    for(var v in config.village.buildingPoly) {
      if(0 == v) {
        for(var u in config.village.buildingPoly[0]) {
          for(var t = config.village.buildingPoly[0][u], z = 0;z < t.length;z += 2) {
            config.village.buildingPoly[0][u][z] = s - t[z]
          }
        }
      }else {
        var t = config.village.buildingPoly[v], A = config.village.imageSizes[v][0];
        0 == config.village.imageSizes[v][0] && (A = s);
        if("object" == typeof config.village.buildingPoly[v]) {
          if("number" == typeof config.village.buildingPoly[v][0]) {
            for(z = 0;z < t.length;z += 2) {
              config.village.buildingPoly[v][z] = A - t[z]
            }
          }else {
            for(z = 0;z < t.length;z++) {
              for(var C = t[z], D = 0;D < C.length;D += 2) {
                config.village.buildingPoly[v][z][D] = A - C[D]
              }
            }
          }
        }
      }
    }
    for(var y in config.village.resPoly) {
      for(u in config.village.resPoly[y]) {
        for(t = config.village.resPoly[y][u], z = 0;z < t.length;z += 2) {
          config.village.resPoly[y][u][z] = s - t[z]
        }
      }
    }
  }
  a.buildings = {village:[], resources:[]};
  a.premiumOptionMenu = {locationId:0};
  var B = null, H = null, I = null, G = null, J = null, N = null, E = null, R = null, O = null;
  a.questGivers = QuestGiver.getCollection().getSubCollection(function(a) {
    return 0 <= QuestGiver.VILLAGERS.indexOf(a.data.npcId)
  });
  a.buildings = [];
  a.$on("activeVillageChanged", g);
  l.Nh();
  var L = "3456";
  a.setCurrentView = function(a) {
    O = a;
    g()
  };
  a.openBuildingDialog = function(b) {
    a.openWindow("building", {location:b})
  };
  var X = null, Z = {}, M = null;
  a.highlightStart = function(b) {
    if(!Travian.rootScope.enableSvgHighlighting && "touch" != U.Xa()) {
      if(r(), Z[b] = !0, 18 >= b) {
        Ua.cf($("#villageViewRes")[0], config.village.resPoly[a.resDistribution][b].join(","), !1)
      }else {
        var c = f(b);
        if(0 >= c.data.buildingType && "undefined" != typeof config.village.buildingPoly[0][c.data.locationId]) {
          Ua.cf($("#villageView")[0], config.village.buildingPoly[0][c.data.locationId].join(","), !0)
        }else {
          if(33 == b) {
            var e = $("#villageView .buildingWall");
            1 < e.length && (0.99 > $(".village.viewBackground")[0].Of ? Ua.hd(e[0], [e[1].src], !1, 1) : Ua.hd(e[0], [e[1].src]))
          }else {
            Ua.hd($("#buildingImage" + b)[0])
          }
          e = $(".buildingStatus.location" + b);
          e = "none" == e.css("display") ? $(".villageView.location.location_" + b) : $(".buildingStatus.location" + b + " .buildingBubble");
          b = Travian.translate("Building_" + c.data.buildingType);
          "undefined" != typeof c.data.rubble && (b = Travian.translate("Rubble.Heap.Tooltip") + " (" + b + ")");
          M = new wa(e, b, "below", "", !1, l);
          M.Th = window.setTimeout(function() {
            0 == a.premiumOptionMenu.locationId && M.show()
          }, 300)
        }
      }
    }
  };
  a.highlightStop = function(a) {
    if("touch" != U.Xa()) {
      if(r(), delete Z[a], 18 >= a) {
        Ua.md($("#villageViewRes")[0])
      }else {
        var b = f(a);
        0 >= b.data.buildingType && "undefined" != typeof config.village.buildingPoly[0][b.data.locationId] ? Ua.md($("#villageView")[0]) : Ua.lh($("#buildingImage" + a)[0])
      }
    }
  };
  a.$on("$destroy", function() {
    null != B && B.unsubscribe(H);
    null != G && (G.unsubscribe(I), I = null);
    null != J && J.unsubscribe(N);
    null != E && E.unsubscribe(R)
  })
};
window.villageViewCtrl.$inject = ["$scope", "VillageService", "BuildingService", "AudioService", "$timeout"];
window.villageOverviewCulturePointsCtrl = function(a, c, b, l, h) {
  function g(b) {
    for(var c = 0;c < a.culturePointList.length;c++) {
      if(a.culturePointList[c].villageId == b) {
        return a.culturePointList[c]
      }
    }
    return null
  }
  function e(a) {
    var c = b.Ib(a.data.villageId, Building.TYPE.TOWN_HALL);
    c ? (c = 0, a.data.celebrationType && (0 < a.data.celebrationType && a.data.celebrationType != Travian.Config.celebrationConfig.celebrationTypeBrewery) && (c = a.data.celebrationEnd)) : c = -1;
    return c
  }
  function m() {
    for(var b = {}, c = 0, e = n.u(), f = 0;f < e.length;f++) {
      c = e[f].data.villageId;
      "undefined" == typeof b[c] && (b[c] = []);
      var h = 0, h = 0;
      if("undefined" != typeof e[f].data.units[Troops.TYPE_SETTLER]) {
        for(var h = parseInt(e[f].data.units[Troops.TYPE_SETTLER]), m = 0;m < h;m++) {
          b[c].push(Troops.TYPE_SETTLER)
        }
      }
      if("undefined" != typeof e[f].data.units[Troops.TYPE_LEADER]) {
        for(h = parseInt(e[f].data.units[Troops.TYPE_LEADER]), m = 0;m < h;m++) {
          b[c].push(Troops.TYPE_LEADER)
        }
      }
    }
    for(c in b) {
      e = g(c), null != e && (e.units = b[c])
    }
    a.cpListTotal.units = 0;
    for(var l in a.culturePointList) {
      a.culturePointList[l].units.length && (a.cpListTotal.units += a.culturePointList[l].units.length)
    }
  }
  function f(c) {
    var e = {available:0, used:0}, f = null;
    b.Ib(c.data.villageId, Building.TYPE.PALACE) ? f = Building.TYPE.PALACE : b.Ib(c.data.villageId, Building.TYPE.RESIDENCE) && (f = Building.TYPE.RESIDENCE);
    if(null !== f) {
      var h = Building.EXPANSION_SLOT_UNLOCKS[f], f = b.za(c.data.villageId, f), m;
      for(m in h) {
        h[m] <= f.data.lvl && e.available++
      }
      0 < e.available && (a.cpListTotal.slots.available += parseInt(e.available))
    }
    var l = ExpansionListEntry.getCollection(c.data.villageId);
    a.subscribe(l, function() {
      var b = g(c.data.villageId);
      null != b ? b.slots.used = l.data.length : e.used = l.data.length;
      for(b = a.cpListTotal.slots.used = 0;b < a.culturePointList.length;b++) {
        a.cpListTotal.slots.used += a.culturePointList[b].slots.used
      }
    });
    return e
  }
  var n = h.B(null, [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING, Troops.COLLECTION_TRAPPED], m, a), q = {};
  a.celebrationData = [];
  a.buildingTypes = Building.TYPE;
  a.cpListTotal = {units:0, slots:{available:0, used:0}, culturePointProduction:0};
  var p = c.S();
  a.culturePointList = [];
  a.subscribe(p, function() {
    a.culturePointList = [];
    a.cpListTotal = {units:0, slots:{available:0, used:0}, culturePointProduction:0};
    for(var b = 0;b < p.data.length;b++) {
      var c = p.data[b], g = c.data.villageId, h = {villageName:c.data.name, villageId:g, culturePointProduction:c.data.culturePointProduction, celebration:e(c), units:[], slots:f(c)};
      a.cpListTotal.culturePointProduction += parseInt(c.data.culturePointProduction);
      a.culturePointList.push(h);
      q[g] = CelebrationQueue.get(g);
      "object" == typeof q[g] && (q[g].defaultData.villageId = g, a.subscribe(q[g], function(b) {
        var c = b.getQueue(Building.TYPE.TOWN_HALL), e = b.getLastFinished(Building.TYPE.TOWN_HALL);
        a.celebrationData[b.defaultData.villageId] = {count:c.length, queue:c, timeEnd:e}
      }))
    }
    m()
  });
  a.goToTownHall = function(b) {
    c.ka(b);
    a.openWindow("building", {location:"type" + Building.TYPE.TOWN_HALL})
  };
  a.$on("$destroy", function() {
    a.Ta()
  })
};
window.villageOverviewCulturePointsCtrl.$inject = ["$scope", "VillageService", "BuildingService", "SessionService", "TroopsService"];
window.villageOverviewOasesCtrl = function(a, c) {
  var b = OasisTroopRanking.getCollection();
  a.subscribe(b, function() {
    a.oasesList = b.data
  });
  var l = c.B(null, [Troops.COLLECTION_ELSEWHERE], function() {
    for(var b = l.u(), c = 0;c < b.length;c++) {
      var e = b[c], m = e.data.villageIdLocation;
      void 0 === a.troopAmountInVillage[m] && (a.troopAmountInVillage[m] = 0);
      a.troopAmountInVillage[m] += e.troopAmount
    }
  }, a);
  a.troopAmountInVillage = {}
};
window.villageOverviewOasesCtrl.$inject = ["$scope", "TroopsService"];
window.villagesOverviewCtrl = function(a, c, b, l) {
  function h() {
    var c = b.i();
    a.activeVillageId = c.data.villageId;
    a.tribeId = c.data.tribeId
  }
  a.w.windowName = "Title.VillagesOverview";
  a.tabConfig.tabs = "Overview Resources Store CulturePoints Troops Oases".split(" ");
  a.tabConfig.bodyTemplatePrefix = "tpl/villagesOverview/";
  a.tabConfig.disableScrollingForTabs = ["Troops"];
  a.resNames = Resources.STRING;
  a.openBuilding = function(g, e, h) {
    b.ka(e);
    "undefined" != typeof h ? h == Troops.TYPE_TRAPS ? c.R("type" + Building.TYPE.TRAPPER, function(b) {
      null != b && a.openWindow("building", {location:b.data.locationId})
    }) : a.openWindow("building", {location:32}) : a.openWindow("building", {location:g})
  };
  a.setVillage = function(a) {
    l.m("villId", a);
    a != b.getActiveVillageId() && b.ka(a)
  };
  h();
  a.$on("activeVillageChanged", h)
};
window.villagesOverviewCtrl.$inject = ["$scope", "BuildingService", "VillageService", "RoutingService"];
window.villagesOverviewMainCtrl = function(a, c, b, l) {
  function h() {
    for(var b = 0;b < a.overview.length;b++) {
      var c = a.overview[b].villageId, h = e[c], l = m[c], q = f[c];
      a.overview[b].smithyQueue = !1;
      a.overview[b].academyQueue = !1;
      l.data.buildingTypes && (l.data.buildingTypes[Building.TYPE.BLACKSMITH] && 0 < l.data.buildingTypes[Building.TYPE.BLACKSMITH].length && (a.overview[b].smithyQueue = !0), l.data.buildingTypes[Building.TYPE.ACADEMY] && 0 < l.data.buildingTypes[Building.TYPE.ACADEMY].length && (a.overview[b].academyQueue = !0));
      a.overview[b].attacks = {attacking:0, underAttack:0};
      for(var l = g.u([c]), t = 0;t < l.length;t++) {
        var z = l[t];
        z.isAttacking && (z.data.movement.villageIdTarget == c && a.overview[b].attacks.underAttack++, z.data.movement.villageIdStart == c && a.overview[b].attacks.attacking++)
      }
      a.overview[b].troopsQueue = {};
      var l = 0, A;
      for(A in q.data.unitsInQueue) {
        0 < q.data.unitsInQueue[A] && (l++, a.overview[b].troopsQueue[A] = parseInt(q.data.unitsInQueue[A]))
      }
      a.overview[b].troopsCount = l;
      a.overview[b].buildingQueue = [];
      for(var C in h.data.queues[BuildingQueue.TYPE_MASTER_BUILDER]) {
        a.overview[b].buildingQueue.push(h.data.queues[BuildingQueue.TYPE_MASTER_BUILDER][C])
      }
      for(C in h.data.queues[BuildingQueue.TYPE_RESOURCES]) {
        a.overview[b].buildingQueue.push(h.data.queues[BuildingQueue.TYPE_RESOURCES][C])
      }
      for(C in h.data.queues[BuildingQueue.TYPE_VILLAGE]) {
        a.overview[b].buildingQueue.push(h.data.queues[BuildingQueue.TYPE_VILLAGE][C])
      }
      "undefined" != typeof n[c].data.merchantsFree && null != n[c].data.merchantsFree && (a.overview[b].merchants.free = parseInt(n[c].data.merchantsFree));
      "undefined" != typeof n[c].data.max && null != n[c].data.max && (a.overview[b].merchants.total = parseInt(n[c].data.max))
    }
  }
  var g = l.B(null, [Troops.COLLECTION_MOVING], h, a);
  a.overview = [];
  a.Building = Building;
  a.BuildingQueue = BuildingQueue;
  a.FinishNowFeatureName = PremiumFeature.FEATURE_NAME_FINISH_NOW;
  var e = {}, m = {}, f = {}, n = {}, q = c.S();
  a.subscribe(q, function() {
    a.overview = [];
    for(var b = 0;b < q.data.length;b++) {
      var c = q.data[b], g = c.data.villageId;
      a.overview.push({villageId:g, villageName:c.data.name, tribeId:c.data.tribeId, merchants:{free:0, total:0}, troopsQueue:{}, troopsNames:{}, buildingQueue:[], researchQueue:[], attacks:{attacking:0, underAttack:0}});
      e[g] = BuildingQueue.get(g);
      m[g] = UnitResearchQueue.get(g);
      f[g] = UnitQueue.get(g);
      n[g] = Merchants.get(g);
      a.subscribe(e[g], h);
      a.subscribe(m[g], h);
      a.subscribe(f[g], h);
      a.subscribe(n[g], h)
    }
    h()
  });
  a.$on("$destroy", function() {
    a.Ta()
  });
  a.openBuildingByType = function(e, f) {
    var g = b.na(f), h = 0, m = g.subscribe(function() {
      for(var b = 0;b < g.data.length;b++) {
        var l = g.data[b].data;
        if(l.buildingType == e) {
          h = l.locationId;
          break
        }
      }
      0 < h && (f != c.getActiveVillageId() && c.ka(f), a.openWindow("building", {location:h}));
      g.unsubscribe(m)
    })
  };
  a[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function(a) {
    return{villageId:a, delayForNextRequest:2E3}
  }
};
window.villagesOverviewMainCtrl.$inject = ["$scope", "VillageService", "BuildingService", "TroopsService"];
window.villagesOverviewResourcesAndStoreCtrl = function(a, c, b, l) {
  function h() {
    a.overview = [];
    for(var b = 0;b < q.data.length;b++) {
      var c = q.data[b], g = c.data.villageId, h = {};
      h.villageId = c.data.villageId;
      h.villageName = c.data.name;
      h.resources = {1:0, 2:0, 3:0, 4:0};
      h.merchants = {free:0, total:0};
      h.fillPercentage = {1:0, 2:0, 3:0, 4:0};
      h.storageCapacity = {1:0, 2:0, 3:0, 4:0};
      h.timeWhenFull = {all:null, crop:null};
      a.overview.push(h);
      f[g] = Merchants.get(g);
      n[g] = c;
      a.subscribe(f[g], e)
    }
    e()
  }
  function g() {
    m = c(function() {
      e();
      g()
    }, 1E3)
  }
  function e() {
    a.total.merchants.free = 0;
    a.total.merchants.total = 0;
    for(var b in a.total.resources) {
      a.total.resources[b] = 0
    }
    for(var c = 0;c < a.overview.length;c++) {
      var e = a.overview[c].villageId, g = n[e], h = g.getResources(), m = g.getCapacity(), g = g.getProduction();
      a.overview[c].resources = h;
      for(b in h) {
        a.total.resources[b] += h[b];
        a.overview[c].fillPercentage[b] = Math.floor(100 * (h[b] / m[b]));
        a.overview[c].storageCapacity[b] = m[b];
        var l = m[b] - h[b], q = g[b] / 3600, l = 0 <= q ? Math.floor(l / q + a.currentServerTime) : Math.floor(-(h[b] / q) + a.currentServerTime), C = 4 == b, D = a.overview[c].timeWhenFull.all - 1E3 > l || null === a.overview[c].timeWhenFull.all, y = a.overview[c].timeWhenFull.crop - 1E3 > l || null === a.overview[c].timeWhenFull.crop;
        !C && D ? a.overview[c].timeWhenFull.all = l : C && y && (a.overview[c].timeWhenFull.crop = l);
        Infinity === a.overview[c].timeWhenFull.crop && (a.overview[c].timeWhenFull.crop = 0);
        C && (a.overview[c].cropProductionSpeed = q)
      }
      "undefined" != typeof f[e].data.merchantsFree && null != f[e].data.merchantsFree && (a.overview[c].merchants.free = parseInt(f[e].data.merchantsFree), a.total.merchants.free += f[e].data.merchantsFree);
      "undefined" != typeof f[e].data.max && null != f[e].data.max && (a.overview[c].merchants.total = parseInt(f[e].data.max), a.total.merchants.total += f[e].data.max)
    }
  }
  var m;
  a.total = {resources:{1:0, 2:0, 3:0, 4:0}, merchants:{free:0, total:0}};
  var f = {}, n = {}, q = b.S();
  a.subscribe(q, h);
  a.$on("$destroy", function() {
    a.Ta()
  });
  a.openMarketPlace = function(c) {
    var e = b.getActiveVillageId(), f = {};
    c != e && (f = {destId:e, destPlayerId:Travian.Player.data.playerId});
    a.setVillage(c);
    l.R("type" + Building.TYPE.MARKET, function(b) {
      null != b && a.openWindow("building", {location:b.data.locationId}, f)
    })
  };
  a.$on("$destroy", function() {
    c.cancel(m)
  });
  h();
  "undefined" == typeof m && g()
};
window.villagesOverviewResourcesAndStoreCtrl.$inject = ["$scope", "$timeout", "VillageService", "BuildingService"];
window.villagesOverviewTroopsCtrl = function(a, c, b) {
  function l() {
    for(var b = a.totalTroops.length = 0;11 > b;b++) {
      a.totalTroops[b] = 0
    }
    for(var c = 0;c < g.data.length;c++) {
      var f = g.data[c].data;
      if("undefined" != typeof a.ownTroops[c]) {
        a.ownTroops[c].troops = [];
        a.troopsInVillage[c].troops = {};
        a.troopsInVillage[c].troops[f.tribeId] = {tribeId:f.tribeId, originalTroops:[]};
        for(b = 0;10 >= b;b++) {
          a.ownTroops[c].troops[b] = 0, a.troopsInVillage[c].troops[f.tribeId].originalTroops[b + 1] = 0
        }
        for(var l = h.u([f.villageId]), q = 0;q < l.length;q++) {
          var p = l[q].data.tribeId;
          if(l[q].data.villageId == f.villageId) {
            for(var r in l[q].data.units) {
              a.ownTroops[c].troops[r - 1] += parseInt(l[q].data.units[r]), a.totalTroops[r - 1] += parseInt(l[q].data.units[r])
            }
          }
          if(l[q].data.villageIdLocation == f.villageId && l[q].data.status != Troops.STATUS_TRANSIT) {
            if(!(p in a.troopsInVillage[c].troops)) {
              for(a.troopsInVillage[c].troops[p] = {tribeId:p, originalTroops:[]}, b = 0;10 >= b;b++) {
                a.troopsInVillage[c].troops[p].originalTroops[b] = 0
              }
            }
            for(r in l[q].data.units) {
              a.troopsInVillage[c].troops[p].originalTroops[r] += parseInt(l[q].data.units[r])
            }
          }
        }
      }
    }
  }
  a.villageOverviewTabConfig = {};
  a.villageOverviewTabConfig.tabs = ["OwnTroops", "TroopsInVillages"];
  a.villageOverviewTabConfig.bodyTemplatePrefix = "tpl/villagesOverview/troops/tabs/";
  a.villageOverviewTabConfig.routeNamedParam = "subtab";
  a.villageOverviewTabConfig.tabName = "subtab";
  a.villageOverviewTabConfig.tabType = "subtab";
  a.totalTroops = [];
  a.ownTroops = [];
  a.troopsInVillage = [];
  var h = b.B(null, [Troops.COLLECTION_STATIONARY, Troops.COLLECTION_MOVING, Troops.COLLECTION_ELSEWHERE], l, a), g = c.S();
  a.subscribe(g, function() {
    for(var b = 0;b < g.data.length;b++) {
      var c = g.data[b].data;
      a.troopsInVillage[b] = {tribeId:c.tribeId, supplyTroops:c.supplyTroops, villageId:c.villageId, villageIdLocation:c.villageId, villageName:c.name, troops:{}};
      a.ownTroops[b] = {tribeId:c.tribeId, supplyTroops:c.supplyTroops, villageId:c.villageId, villageIdLocation:c.villageId, villageName:c.name, troops:[]}
    }
    l()
  });
  a.$on("$destroy", function() {
    a.Ta()
  })
};
window.villagesOverviewTroopsCtrl.$inject = ["$scope", "VillageService", "TroopsService"];
window.welcomePackageCtrl = function(a, c) {
  a.close = function() {
    a.closeWindow("welcomePackage");
    Travian.writeRequest("player/deleteNotification", {type:Notifications.COOP_PACKAGE_GRANTED, notificationType:Notifications.TYPE_TIMED})
  };
  c.o(function() {
    c.getPlayerId();
    a.notifications = Notifications.getCollection(Notifications.TYPE_TIMED);
    a.notifications.subscribe(function() {
      for(var b = 0;b < a.notifications.data.length;b++) {
        a.notifications.data[b].data.type == Notifications.COOP_PACKAGE_GRANTED && (a.packageInfo = a.notifications.data[b].data.itemId)
      }
    })
  })
};
window.welcomePackageCtrl.$inject = ["$scope", "SessionService"];
window.windowCtrl = function(a) {
  a.setWindowClass = function(c) {
    a.windowClass = c
  }
};
window.windowCtrl.$inject = ["$scope"];
Travian.Directive.autosize = function() {
  return function(a, c) {
    function b() {
      var a = -1 * Math.round(c.height() / 2);
      c.css("margin-top", a)
    }
    var l = null;
    null == l && (l = Travian.tick.bind(b));
    c.bind("$destroy", function() {
      Travian.tick.unbind(l)
    })
  }
};
Travian.Directive.bbCodeInput = function(a, c) {
  return{replace:!0, template:a.get("tpl/directive/bbCodeInput.html"), restrict:"A", scope:!0, require:"ngModel", link:function(a, l, h, g) {
    function e(c, e) {
      var g = $(l.find("textarea")), h = g[0], p;
      h.focus();
      var r = h.selectionStart || 0;
      if(!r && document.selection && (p = document.selection.createRange())) {
        var r = h.createTextRange(), s = r.duplicate();
        r.moveToBookmark(p.getBookmark());
        s.setEndPoint("EndToStart", r);
        r = s.text.length
      }
      p = r;
      r = void 0 !== h.selectionStart ? h.selectionEnd - h.selectionStart : document.selection ? document.selection.createRange().text.length : 0;
      s = g.val();
      s = s.substr(0, p) + c + s.substr(p, r) + e + s.substr(p + r, s.length);
      a.localTextModel = s;
      g.val(s);
      g = p += c.length + r;
      h.selectionStart ? h.setSelectionRange(g, g) : h.createTextRange && (r = h.createTextRange(), r.move("character", g), r.select());
      g = p;
      p = $(h);
      var r = parseInt(p.css("lineHeight")), v, s = getTotalElementHeight(h, h.value.substr(0, g));
      v = parseInt(s / r);
      s = parseInt(p.css("padding-top"));
      $.browser.mozilla && p.scrollTop(p.scrollTop() + s);
      if(v * r >= p.scrollTop() + p.outerHeight() - s) {
        var u = p.outerHeight() - 2 * (s - 1);
        v = v * r - u;
        $.browser.mozilla ? v += s : ($.browser.hi || $.browser.opera) && 0 == (p.scrollTop() + u) % r && (h.value.substr(g, h.value.length).match(/\n/) ? v += (p.outerHeight() - r) / 2 - 1 : g < h.value.length && (v += s));
        p.scrollTop(v)
      }
    }
    a.preview = !1;
    a.searchOpened = !1;
    a.localTextModel = "";
    a.searchModel = "";
    h.setFocus && a.$evalAsync(function() {
      $(l.find("textarea")).focus()
    });
    a.$watch("localTextModel", function() {
      g.$setViewValue(a.localTextModel)
    });
    g.$render = function() {
      g.$viewValue || (g.$viewValue = "");
      a.localTextModel = g.$viewValue
    };
    a.triggerSearch = function() {
      a.searchOpened = !a.searchOpened;
      c(function() {
        $(l).find("input").focus()
      }, 0)
    };
    a.searchCallback = function(c) {
      "village" == c.searchType && e("[village:" + c.villageId + "]", "");
      "player" == c.searchType && e("[player:" + c.playerId + "]", "");
      "coords" == c.searchType && e("[cell:" + c.villageId + "]", "");
      "alliance" == c.searchType && e("[alliance:" + c.allianceId + "]", "");
      a.searchModel = "";
      a.searchOpened = !1
    };
    a.triggerPreview = function() {
      a.preview = !a.preview;
      a.preview && (a.searchModel = "", a.searchOpened = !1);
      var c = $(l).find("textarea"), e = $(l).find(".previewWrapper");
      e.width(c.width());
      e.height(c.height() + 3)
    };
    l.on("keydown", function(a) {
      a.which == keyboard.Ac && (a.ctrlKey || a.altKey || a.metaKey) && e("\n", "")
    });
    l.on("keyup", function() {
      if(h.autoExpand && "undefined" != typeof h.minHeight && "undefined" != typeof h.maxHeight) {
        var a = $(l.find("textarea")), b = parseInt(a.css("lineHeight"));
        a.css("padding-top");
        var c = getTotalElementHeight(a, a.val()), e = "hidden", g = parseInt(h.maxHeight);
        c + b > h.minHeight && c + b <= h.maxHeight ? g = c + b : c < h.minHeight ? g = parseInt(h.minHeight) : e = "auto";
        a.css("height", g + "px");
        a.css("overflow", e)
      }
    });
    a.insertCode = e;
    a.checkDrop = function(c) {
      if(c.link) {
        var e = $(l.find("textarea"));
        c = e.val() + c.link;
        e.val(c);
        e.focus();
        a.localTextModel = c
      }
    }
  }}
};
Travian.Directive.bbCodeInput.$inject = ["$templateCache", "$timeout"];
Travian.Directive.buildingLocation = function(a, c) {
  return{restrict:"EA", template:a.get("tpl/building/partials/buildingLocation.html"), link:function(a, l, h) {
    function g() {
      var f = a.building, g = c.i(), h = g.warehouseState, l = g.granaryState, m = f.data.buildingType, s = config.village.imageSizes[m] || [0, 0], v = angular.copy(config.village.locationPos[f.data.locationId]), u = "images";
      "rtl" == getDirection() && (u = "images_rtl");
      var u = Travian.Config.cdnPrefix + "layout/" + u + "/building/thumb/", t = "";
      switch(m) {
        case Building.TYPE.WONDER_OF_WORLD:
          v = angular.copy(config.village.worldWonderPos);
          break;
        case Building.TYPE.WAREHOUSE:
          t = ["e", "hf", "f"][h];
          break;
        case Building.TYPE.GRANARY:
          t = ["e", "hf", "f"][l];
          break;
        case Building.TYPE.RALLY_POINT:
          t = Village.isWWVillage(g.data.type) ? "ww" : ""
      }
      h = f.getImageName(g.data.tribeId, t);
      if(0 < f.data.buildingType) {
        a.viewBuilding.statusStyle[e] = Math.round(v.x) + "px";
        a.viewBuilding.statusStyle.top = Math.round(v.y) + "px";
        f.isRubble() && !f.isWall() ? (a.viewBuilding.imgStyle[e] = "42px", a.viewBuilding.imgStyle.top = "143px") : (a.viewBuilding.imgStyle[e] = Math.round(v.x - s[0] / 2) + "px", a.viewBuilding.imgStyle.top = Math.round(v.y - s[1]) + "px");
        a.viewBuilding.imgStyle["z-index"] = v.z;
        a.viewBuilding.imgPath = u;
        a.viewBuilding.imgName = h;
        a.viewBuilding.imgClass = "buildingId" + m;
        a.viewBuilding.buildingType = 0 < f.data.lvl ? h : "Construction";
        a.secondImage.visible = !1;
        if(f.isActive && 0 !== f.data.lvl) {
          var z;
          a: {
            s = config.village.animationOffset["tribe" + g.data.tribeId]["building" + m];
            if(void 0 !== s) {
              for(z in s) {
                if(f.data.lvl < z) {
                  z = s[z];
                  break a
                }
              }
            }
            z = null
          }
          null != z && (a.secondImage = angular.copy(a.viewBuilding), a.secondImage.imgStyle[e] = parseInt(a.secondImage.imgStyle[e]) + z[0] + "px", a.secondImage.imgStyle.top = parseInt(a.secondImage.imgStyle.top) + z[1] + "px", a.secondImage.imgClass = "smokeAnimation", a.secondImage.imgName = "", a.secondImage.visible = !0)
        }
        33 == f.data.locationId && 0 < m && (h = f.getImageName(g.data.tribeId, g.data.isTown ? "water" : "normal"), z = "", 31 == m && (g.underAttack && 0 < f.data.lvl) && (z = "-close"), a.viewBuilding.imgClass += " buildingWall", a.viewBuilding.imgName = h + "_top" + z, a.secondImage = angular.copy(a.viewBuilding), a.secondImage.imgStyle["z-index"] = v.z2, a.secondImage.imgName = h + "_bottom" + z, a.secondImage.visible = !0);
        18 < f.data.locationId ? a.clickArea = config.village.svg[h] : (a.clickArea = config.village.svg["location" + f.data.locationId + "_" + a.resDistribution], a.viewBuilding.imgStyle[e] = 0, a.viewBuilding.imgStyle.top = 0, a.viewBuilding.imgStyle["z-index"] = 0)
      }else {
        a.viewBuilding.imgStyle[e] = 0, a.viewBuilding.imgStyle.top = 0, a.viewBuilding.imgStyle["z-index"] = 0, a.clickArea = config.village.svg["location" + f.data.locationId]
      }
    }
    var e = "left";
    "rtl" == config.direction && (e = "right");
    a.viewBuilding = {statusStyle:{Wg:0, top:0}, imgStyle:{Wg:0, top:0, "z-index":0, webkitFilter:"blur(0px)", transform:"translateZ(0)", "pointer-events":"none"}, imgPath:"", imgName:"", imgClass:""};
    a.secondImage = {visible:!1, imgName:""};
    a.noStatus = h.noStatus;
    a.onTopAreas = $.browser.msie && 11 > $.browser.versionNumber;
    a.highlight = [!1];
    var m = a.building.subscribe(g);
    a.$on("attackStateChanged", g);
    a.$on("warehouseStateChanged", g);
    a.$on("$destroy", function() {
      a.building.unsubscribe(m)
    })
  }}
};
Travian.Directive.buildingLocation.$inject = ["$templateCache", "VillageService"];
Travian.Directive.buildingNameTooltip = function(a) {
  return{restrict:"A", scope:!1, link:function(c, b, l) {
    function h() {
      a(function() {
        if(f) {
          return!1
        }
        m.hide()
      }, 10)
    }
    c = $(".location_" + l.locationId);
    var g = c.find(".bubble"), e = g.width(), m = c.find(".buildingName"), f = !1;
    b.on("mouseover", function() {
      m.css({left:parseInt(g.css("left")) + e / 2 - m.width() / 2});
      m.show()
    });
    b.on("mouseout", function() {
      h()
    });
    m.on("mouseover", function() {
      f = !0
    });
    m.on("mouseout", function() {
      f = !1;
      h()
    });
    b.bind("$destroy", function() {
      m.unbind()
    })
  }}
};
Travian.Directive.buildingNameTooltip.$inject = ["$timeout"];
Travian.Directive.buildingRequirement = function(a) {
  return{restrict:"EA", template:a.get("tpl/building/partials/buildingRequirement.html"), replace:!0, scope:{buildings:"=", otherRequirements:"="}, link:function(a) {
    a.openWindow = a.$parent.openWindow
  }}
};
Travian.Directive.buildingRequirement.$inject = ["$templateCache"];
Travian.Directive.buildingStatus = function(a, c, b, l, h, g, e, m) {
  return{restrict:"EA", template:g.get("tpl/mainlayout/partials/buildingStatus.html"), link:function(a, c) {
    function g(b) {
      a.premiumOptionMenu.masterAnimations[b.slotNr] = !1;
      for(var c = 0;c < a.premiumOptionMenu.masterAnimations.length;c++) {
        if(a.premiumOptionMenu.masterAnimations[c]) {
          return
        }
      }
      Travian.request("building/useMasterBuilder", {villageId:h.getActiveVillageId(), locationId:E.data.locationId, buildingType:E.data.buildingType, reserveResources:b.reserveResources && a.enoughRes, count:a.premiumOptionMenu.requestedMasterSlots || 1}, function() {
        a.premiumOptionMenu.requestedMasterSlots = 0;
        a.premiumOptionMenu.requestedUpgrades[E.data.locationId] = 0
      });
      z()
    }
    function l(b, c) {
      if("undefined" != typeof E && null != E && (null == c || c == B.data.villageId)) {
        a.upgradeButtonDisabled = !1;
        if(a.premiumOptionMenu.locationId == E.data.locationId) {
          if(s()) {
            var e = 0;
            E.queue && (e = E.queue.length);
            E.data.lvl + e >= E.data.lvlMax && u();
            C();
            return
          }
        }else {
          A()
        }
        a.isRubble = "undefined" !== typeof E.data.rubble ? !0 : !1;
        if(0 == E.data.buildingType) {
          a.upgradeButtonClass = Building.UPGRADE.POSSIBLE
        }else {
          a.enoughRes = B.hasEnoughResources(E.data.nextUpgradeCosts[r()]);
          if(0 < N.getEntriesForLocation(E.data.locationId, BuildingQueue.TYPE_DESTRUCTION).length) {
            a.upgradeButtonClass = Building.UPGRADE.DEMOLISH
          }else {
            if(E.data.isMaxLvl) {
              a.upgradeButtonClass = E.data.lvl != E.data.lvlMax ? Building.UPGRADE.NOT_AT_ALL : Building.UPGRADE.MAX_LEVEL
            }else {
              if(E.data.lvlNext + N.getEntriesForLocation(E.data.locationId, BuildingQueue.TYPE_MASTER_BUILDER).length > E.data.lvlMax) {
                a.upgradeButtonClass = Building.UPGRADE.NOT_AT_ALL
              }else {
                var e = !0, g = B.data.storageCapacity, h;
                for(h in g) {
                  if(g[h] < E.data.upgradeCosts[h]) {
                    e = !1;
                    break
                  }
                }
                e || a.isRubble ? a.isRubble ? a.upgradeButtonClass = 0 < N.data.queues[BuildingQueue.TYPE_DESTRUCTION].length ? Building.UPGRADE.NOT_NOW : Building.UPGRADE.POSSIBLE : (e = N.hasFreeBuildingSlots(E), a.upgradeButtonClass = a.enoughRes && e ? Building.UPGRADE.POSSIBLE : Building.UPGRADE.NOT_NOW) : a.upgradeButtonClass = Building.UPGRADE.NOT_AT_ALL
              }
            }
          }
          a.upgradeButtonTooltipUrl = "tpl/building/partials/upgradeCostsTooltip.html";
          if(a.upgradeButtonClass == Building.UPGRADE.NOT_AT_ALL || a.upgradeButtonClass == Building.UPGRADE.MAX_LEVEL) {
            a.upgradeButtonDisabled = !0
          }
          a.isRubble && (a.upgradeButtonClass == Building.UPGRADE.NOT_NOW && (a.upgradeButtonDisabled = !0), a.upgradeButtonTooltipUrl = "tpl/building/partials/dismantleCostsTooltip.html");
          a.premiumOptionMenu.locationId == E.data.locationId && (a.upgradeButtonTooltipUrl = "");
          C()
        }
      }
    }
    function r() {
      return E.data.lvl + E.queue.length
    }
    function s() {
      var b = h.i(), c = BuildingQueue.get(h.getActiveVillageId()), e = Village.isWWVillage(b.data.type);
      a.enoughRes = b.hasEnoughResources(E.data.nextUpgradeCosts[r()]);
      a.freeSlots = c.hasFreeBuildingSlots(E);
      a.enoughAfterNPCTrade = E.hasEnoughResourcesUsingNpcTrader(b.getResources(), b.getCapacity());
      A();
      if(!a.premiumOptionMenu.options.onlyQueue) {
        a.premiumOptionMenu.options.npcTrader = E.hasCapacityForUpgrading(b.getResources(), b.getCapacity()) && !e;
        var g = !1;
        a.premiumOptionMenu.options.npcTrader && (g = b.getCostsDistributionDifference(E.data.upgradeCosts) < PremiumFeature.NPC_TRADER_INSIGNIFICANCE_LIMIT) && (a.premiumOptionMenu.options.npcTrader = !1);
        a.npcTraderTooltip = function() {
          if(e) {
            return"WWVillage"
          }
          if(g) {
            return"Insignificant"
          }
          if(!a.premiumOptionMenu.options.npcTrader) {
            return"NotPossible"
          }
          var c = 1 == Voucher.get(Travian.Player.data.playerId).data.hasVouchers[PremiumFeature.FEATURE_NAME_NPC_TRADER];
          return a.enoughRes ? "NotNeeded" : a.enoughAfterNPCTrade ? c ? "PossibleWithVoucher" : "Possible" : (a.npcTradingTimeBoost = b.calculateNpcTradingTimeBoost(E.data.upgradeCosts), c ? "PossibleWithVoucherButNoEnoughRes" : "PossibleButNoEnoughRes")
        }()
      }
      delete a.premiumOptionMenu.options.masterBuilder;
      if(b.hasEnoughResources(E.data.nextUpgradeCosts[r()]) && c.hasFreeBuildingSlots(E)) {
        return requestAngularApply(), !1
      }
      "undefined" != typeof a.freeMasterSlots && 0 < a.freeMasterSlots ? (a.premiumOptionMenu.options.masterBuilder = "useMasterBuilder", a.upgradeButtonClass = Building.UPGRADE.POSSIBLE) : (a.nextSlotPrice = !1, PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT) ? PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT) ? PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_THIRD_BUILD_MASTER_SLOT) || (a.nextSlotPrice = 
      Travian.Config.PremiumFeatures.buildingMasterSlot.price3) : a.nextSlotPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price2 : a.nextSlotPrice = Travian.Config.PremiumFeatures.buildingMasterSlot.price, a.nextSlotPrice ? (a.premiumOptionMenu.options.masterBuilder = "buyMasterBuilder", a.upgradeButtonClass = Building.UPGRADE.NOT_NOW) : (a.premiumOptionMenu.options.masterBuilder = "disabledMasterBuilder", a.upgradeButtonClass = Building.UPGRADE.NOT_AT_ALL));
      a.canReserveResources = a.enoughRes && 0 < a.freeMasterSlots;
      if(E.queue) {
        for(c = 0;c < E.queue.length;c++) {
          if(!E.queue[c].paid) {
            a.canReserveResources = !1;
            break
          }
        }
      }
      return!0
    }
    function v() {
      function e() {
        if(a.premiumOptionMenu.locationId == E.data.locationId) {
          var g = $(c).find(".premiumOptionMenu");
          0 < g.length ? (g.removeClass("openingAnimation"), a.$broadcast("repositionTooltip")) : b(e, 100)
        }
      }
      a.animationClass = "openingAnimation";
      a.premiumOptionMenu.locationId = E.data.locationId;
      a.premiumOptionMenu.options = {onlyQueue:a.enoughRes};
      s();
      t();
      null == G && (G = a.$watch("premiumOptionMenu.locationId", function() {
        a.premiumOptionMenu.locationId != E.data.locationId && u(0 != a.premiumOptionMenu.locationId)
      }));
      a.instantCompletionPrice = Travian.Config.PremiumFeatures.finishNow.price;
      a.npcTraderPrice = Travian.Config.PremiumFeatures.NPCTrader.price;
      a.upgradeButtonTooltipUrl = "tpl/building/partials/upgradeCostsTooltip.html";
      b(e, 100)
    }
    function u(b) {
      b || (a.premiumOptionMenu.locationId = 0, delete a.premiumOptionMenu.options);
      null != I && (I(), I = null);
      null != G && (G(), G = null);
      l();
      requestAngularApply();
      for(b = 0;b < a.premiumOptionMenu.masterAnimations.length;b++) {
        if("function" == typeof a.premiumOptionMenu.masterAnimations[b]) {
          a.premiumOptionMenu.masterAnimations[b]()
        }
      }
    }
    function t() {
      if(!I) {
        if(R) {
          var a = R[0].getBoundingClientRect();
          H = {x:a.left + a.width / 2, y:a.top + a.height / 2};
          "undefined" != typeof window.pageYOffset ? (H.y += window.pageYOffset, H.x += window.pageXOffset) : (H.y += $(window).scrollTop(), H.x += $(window).scrollLeft())
        }else {
          H = angular.copy(U.M().current)
        }
        I = U.H("move", z)
      }
    }
    function z() {
      if(!Travian.rootScope.windows.confirmGoldUsage) {
        for(var b = 0;b < a.premiumOptionMenu.masterAnimations.length;b++) {
          if(a.premiumOptionMenu.masterAnimations[b]) {
            return
          }
        }
        b = U.M();
        (a.premiumOptionMenu.options && (!a.premiumOptionMenu.options.manualTrader && 68 < Math.abs(b.current.x - H.x) || a.premiumOptionMenu.options.manualTrader && 78 < Math.abs(b.current.x - H.x - 10)) || 38 < Math.abs(b.current.y - H.y - 8)) && u()
      }
    }
    function A() {
      var b = BuildingQueue.get(h.getActiveVillageId());
      a.usedMasterSlots = b.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length;
      a.usedMasterSlots += a.premiumOptionMenu.requestedMasterSlots;
      a.freeMasterSlots = b.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER];
      a.freeMasterSlots -= a.premiumOptionMenu.requestedMasterSlots
    }
    function C() {
      var b = null;
      a.finished = 0;
      a.masterBuilderCount = 0;
      a.waiting = !1;
      a.busy = !1;
      if(E.queue) {
        for(var c = 0;c < E.queue.length;c++) {
          var e = E.queue[c];
          e.queueType == BuildingQueue.TYPE_MASTER_BUILDER ? (a.masterBuilderCount++, 1 == a.masterBuilderCount && (a.finished = E.queue[c].paid ? 1 : B.getDestTimeForResources(E.data.upgradeCosts), a.finished - 1 <= Travian.rootScope.currentServerTime ? 0 < a.finished ? (a.finished = -1, a.masterBuilderDigit = parseInt(e.queuePosition) + 1 + ".") : a.masterBuilderDigit = "&infin;" : a.finished > Travian.rootScope.currentServerTime + 356400 && (a.finished = -1, a.masterBuilderDigit = "&infin;"))) : 
          (a.busy = !0, b = e)
        }
      }
      a.busy && (a.finished = b.finished, a.duration = b.finished - b.timeStart)
    }
    function D(b) {
      if(Settings.get(Travian.Player.data.playerId).getSetting("disableAnimations")) {
        Travian.request("building/useMasterBuilder", {villageId:h.getActiveVillageId(), locationId:E.data.locationId, buildingType:E.data.buildingType, reserveResources:b && a.enoughRes}, w())
      }else {
        a.premiumOptionMenu.requestedMasterSlots++;
        a.premiumOptionMenu.requestedUpgrades[E.data.locationId]++;
        a.usedMasterSlots++;
        a.freeMasterSlots--;
        var e = a.usedMasterSlots, l = $(c[0].querySelector(".feature_buildingMaster_medium_illu"));
        0 == l.length && (l = $(c[0].querySelector(".buildingBubble")));
        var p = $(".buildingQueueContainer .masterBuilderContainer .slot" + e + " i"), r = $('<i class="feature_buildingMaster_medium_illu"></i>');
        r.css("pointerEvents", "none");
        var s = {start:1, end:1};
        if("undefined" == typeof a.w) {
          var t = $("." + a.page + ".viewBackground");
          t[0] && t[0].Dd && (s.start = t[0].Dd)
        }
        b = m.jb(l, p, r, null, 500, 150, "ease", g, {slotNr:e, reserveResources:b}, s);
        a.premiumOptionMenu.masterAnimations[e] = b
      }
    }
    function y() {
      a.premiumOptionMenu.locationId == E.data.locationId && (a.premiumOptionMenu.options.onlyQueue = a.enoughRes);
      l()
    }
    var B = h.i(), H = {x:0, y:0}, I = null, G = null, J = !1;
    a.storage = B.getResources();
    a.vouchers = Voucher.get(Travian.Player.data.playerId);
    var N = BuildingQueue.get(h.getActiveVillageId());
    a.buildingQueue = N;
    var E;
    void 0 !== a.w && "undefined" != typeof a.w.building ? (E = a.w.building, a.building = E) : E = a.building;
    a.premiumOptionMenu ? (a.premiumOptionMenu.masterAnimations || (a.premiumOptionMenu.masterAnimations = []), a.premiumOptionMenu.requestedMasterSlots || (a.premiumOptionMenu.requestedMasterSlots = 0), a.premiumOptionMenu.requestedUpgrades || (a.premiumOptionMenu.requestedUpgrades = {})) : a.premiumOptionMenu = {locationId:0, masterAnimations:[], requestedMasterSlots:0, requestedUpgrades:{}};
    a.premiumOptionMenu.requestedUpgrades[E.data.locationId] = 0;
    a.$watch("w.building", function(b) {
      "undefined" != typeof b && (E = a.building = b, C())
    });
    a.premiumOptionMenu.locationId == E.data.locationId && a.$evalAsync(v);
    a.openBuilding = function() {
      a.openWindow("building", {location:E.data.locationId})
    };
    a[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function(a) {
      return{villageId:B.data.villageId, queueType:a, delayForNextRequest:2E3}
    };
    a.FinishNowFeatureName = PremiumFeature.FEATURE_NAME_FINISH_NOW;
    a[PremiumFeature.FEATURE_NAME_NPC_TRADER] = function() {
      return a.premiumOptionMenu.options.npcTrader ? {villageId:h.getActiveVillageId(), distributeRes:B.getCostsDistribution(E.data.upgradeCosts)} : !1
    };
    a.NPCTraderFeatureName = PremiumFeature.FEATURE_NAME_NPC_TRADER;
    a.callNPCTrader = function() {
      var b = B.getCostsDistribution(E.data.upgradeCosts);
      a.openWindow("npcTrader", {wood:b[Resources.WOOD] || 0, clay:b[Resources.CLAY] || 0, iron:b[Resources.IRON] || 0, crop:b[Resources.CROP] || 0})
    };
    a.upgradeBuilding = function() {
      if(a.premiumOptionMenu.locationId == E.data.locationId && a.premiumOptionMenu.options.masterBuilder) {
        if(a.upgradeButtonClass == Building.UPGRADE.POSSIBLE) {
          A();
          var g = 0;
          E.queue && (g = E.queue.length);
          g = E.data.lvl + g + a.premiumOptionMenu.requestedMasterSlots;
          if(0 >= a.freeMasterSlots || g >= E.data.lvlMax) {
            return
          }
          D(!0);
          return
        }
        if(a.upgradeButtonClass == Building.UPGRADE.NOT_NOW) {
          a.openWindow("confirmGoldUsage", {feature:PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT});
          return
        }
      }
      if(0 < N.getEntriesForLocation(E.data.locationId, BuildingQueue.TYPE_DESTRUCTION).length) {
        a.openBuilding()
      }else {
        if(0 == E.data.buildingType) {
          a.openWindow("building", {location:E.data.locationId})
        }else {
          if(a.upgradeButtonClass == Building.UPGRADE.POSSIBLE) {
            if(J) {
              A();
              g = a.premiumOptionMenu.requestedUpgrades[E.data.locationId];
              0 < a.freeMasterSlots && g < E.data.lvlMax - E.data.lvl && D(!0);
              return
            }
            e.U(Ra);
            var q = {villageId:h.getActiveVillageId(), locationId:E.data.locationId, buildingType:E.data.buildingType};
            if(E.isRubble()) {
              Travian.writeRequest("building/upgrade", q);
              return
            }
            var r = E.isResourceField() ? BuildingQueue.TYPE_RESOURCES : BuildingQueue.TYPE_VILLAGE, g = $(c[0].querySelector(".buildingStatus")), r = $(".buildingQueueContainer .constructionContainer .slotIcon.queueType" + r), s = {start:1, end:1};
            if("undefined" == typeof a.w) {
              var t = $("." + a.page + ".viewBackground");
              t[0] && t[0].Dd && (s.start = t[0].Dd)
            }
            if(J = m.jb(g, r, "feature_buildingQueue_medium_illu", null, 500, 150, "ease", function() {
              Travian.writeRequest("building/upgrade", q, function() {
                b(function() {
                  J = !1;
                  l();
                  var b = U.mg();
                  b && 0 < $(c).find(b).length && (a.premiumOptionMenu.locationId != E.data.locationId && a.upgradeButtonClass == Building.UPGRADE.NOT_NOW) && a.upgradeBuilding()
                });
                a.premiumOptionMenu.requestedUpgrades[E.data.locationId]--
              })
            }, null, s, "buildingUpgrade")) {
              a.premiumOptionMenu.requestedUpgrades[E.data.locationId]++, requestAngularApply()
            }
            return!0
          }
          a.upgradeButtonClass != Building.UPGRADE.NOT_NOW || E.isRubble() || v()
        }
      }
    };
    a.onlyQueue = function() {
      D()
    };
    var R = $(c[0]).find(".buildingStatus > .buildingBubble"), O = null;
    U.ca(R[0], function() {
      if(!O && a.premiumOptionMenu.locationId != E.data.locationId) {
        var b = !1;
        Travian.Player.filled && Travian.Player.isOnMap() && (O = window.setTimeout(function() {
          if(0 == a.premiumOptionMenu.locationId) {
            if(a.upgradeButtonClass == Building.UPGRADE.POSSIBLE && a.upgradeBuilding()) {
              var c = N.data.queues[BuildingQueue.TYPE_MASTER_BUILDER].length, e = N.data.freeSlots[BuildingQueue.TYPE_MASTER_BUILDER], g = E.data.lvl + 1, h = E.data.lvlMax, l = function() {
                0 >= e || g >= h ? O = null : (a.usedMasterSlots = c++, a.freeMasterSlots = e--, D(!0), g++, O = window.setTimeout(l, 200))
              };
              O = window.setTimeout(l, 400)
            }
            b = !0
          }
          O = null
        }, 500));
        var c = U.H("up", function() {
          O && (window.clearTimeout(O), O = null);
          c();
          b || a.upgradeBuilding()
        })
      }
    });
    var L = a.$on("resourcesChanged", l), X = N.subscribe(y);
    a.$on("activeVillageChanged", function() {
      B = h.i();
      N.unsubscribe(X);
      N = BuildingQueue.get(h.getActiveVillageId());
      X = N.subscribe(y);
      a.buildingQueue = N
    });
    a.$on("urlChanged", function(a, b) {
      void 0 !== b.page && u()
    });
    a.$on("$destroy", function() {
      N.unsubscribe(X);
      L();
      null != I && I();
      U.s(R[0]);
      O && (window.clearTimeout(O), O = null)
    });
    a.startBuildingSound = function() {
      e.eh(a.building.data.buildingType)
    }
  }}
};
Travian.Directive.buildingStatus.$inject = "$window $compile $timeout ServertimeService VillageService $templateCache AudioService AnimationService".split(" ");
Travian.Directive.chatIgmEntry = function(a, c, b) {
  return{restrict:"EA", template:"", scope:{inboxEntry:"="}, link:function(a, h, g) {
    function e() {
      f || (f = !0, h[0].innerHTML = m, b(h.contents())(a), requestAngularApply())
    }
    var m = c.get("tpl/igm/igmEntry.html"), f = !1;
    a.ChatRoom = ChatRoom;
    "false" != g.renderLazy ? (h[0].ta = e, h.html('<div style="display: inline-block; height: 44px"></div>'), h.addClass("waitForRender")) : e();
    a.$on("$destroy", function() {
      h[0].ta = null
    })
  }}
};
Travian.Directive.chatIgmEntry.$inject = ["ChatService", "$templateCache", "$compile"];
Travian.Directive.chatInput = function(a, c) {
  return{restrict:"A", link:function(b, l, h) {
    function g() {
      3E3 > (new Date).getTime() - f ? window.setTimeout(g, 3E3) : (m = !1, a.sc(h.roomId, !1))
    }
    function e() {
      var c = l.val(), e = c.split("\n");
      0 < c.replace(/^\s+|\s+$/g, "").length && 100 >= e.length && (b[h.sendFunction](c), a.sc(h.roomId, !1), m = !1, l.val(""))
    }
    l = $(l);
    var m = !1, f = 0, n = 0;
    l.on("focus", function() {
      b.$root.$broadcast("setActiveChatRoom", h.roomId)
    });
    b.$on("roomUpdate", function() {
      c(function() {
        l.focus()
      }, 10)
    });
    l.on("keydown", function(b) {
      if(b.which !== keyboard.Ac) {
        return f = (new Date).getTime(), m ? 1E4 < (new Date).getTime() - n && (a.sc(h.roomId, !0), n = f) : (m = !0, a.sc(h.roomId, !0), window.setTimeout(g, 3E3), n = f), !keyboard.Qg(b.which) && (b.which != keyboard.nf && b.which != keyboard.of && b.ctrlKey && b.which != keyboard.wf && 1E3 <= this.value.length) && b.preventDefault(), !0
      }
      b.ctrlKey || (b.altKey || b.metaKey) || (b.shiftKey || h.disableEnterSend) || (e(), b.preventDefault())
    });
    l.on("keyup", function() {
      1E3 < this.value.length && $(this).val(this.value.substr(0, 1E3))
    });
    b.$on("triggerChatSend", e);
    b.checkDrop = function(a) {
      a.link && a.source != h.roomId && (l.val(l.val() + a.link), l.focus())
    };
    b.$on("$destroy", function() {
      l.off();
      angular.element(l).remove()
    })
  }}
};
Travian.Directive.chatInput.$inject = ["ChatService", "$timeout"];
Travian.Directive.chatRoomMember = function(a, c) {
  return{restrict:"E", template:c.get("tpl/chat/partials/chatRoomMember.html"), scope:!0, link:function(b, c, h) {
    function g(a) {
      a && (n = a, b.member = ChatUser.get(n), b.memberForOnlineStatus = f ? ChatUser.get(n) : ChatRoomUser.get(n), ChatCache.t(b.member, 600))
    }
    var e = a.Ca, m = a.Ya, f = !1, n;
    void 0 !== b.member && g(b.member.data.playerId);
    b.ChatUser = ChatUser;
    b.showPrestige = !1;
    b.showTooltip = !0;
    h.$observe("showPrestige", function() {
      b.showPrestige = "true" == h.showPrestige
    });
    h.$observe("showTooltip", function() {
      b.showTooltip = "true" == h.showTooltip
    });
    h.$observe("playerId", function(a) {
      g(a)
    });
    h.$observe("privateChatMode", function() {
      f = "true" == h.privateChatMode;
      g(n)
    });
    b.clickPlayerAvatar = function(a) {
      f ? b.openWindow("profile", {playerId:a, profileTab:"playerProfile"}) : e(m(a))
    }
  }}
};
Travian.Directive.chatRoomMember.$inject = ["ChatService", "$templateCache"];
Travian.Directive.chatRoomMembers = function(a, c) {
  return{restrict:"E", template:c.get("tpl/chat/chatRoomMembers.html"), scope:{room:"=room"}, link:function(b) {
    function c() {
      g = ChatRoomUser.getCollection(b.room.data.roomId);
      h = g.subscribe(function(a) {
        a = a.data;
        b.allMembers = [];
        for(var c = 0;c < a.length;c++) {
          a[c].data.playerId != Travian.Player.data.playerId && b.allMembers.push(a[c])
        }
        b.allMembers.sort(function(a, b) {
          return a.data.status > b.data.status ? 1 : a.data.status < b.data.status ? -1 : a.lastFilled > b.lastFilled ? -1 : 1
        });
        b.startIndex = 0;
        b.chatMembers = b.allMembers.slice(b.startIndex, b.maxAmount)
      })
    }
    var h = null, g = null;
    b.ChatUser = ChatUser;
    b.maxAmount = 6;
    b.startIndex = 0;
    b.allMembers = [];
    b.chatMembers = [];
    b.tooltipIndex = 0;
    b.highlightMember = function(a) {
      b.tooltipIndex = a
    };
    b.$watch("room", function() {
      b.room && (null !== h && g && (g.unsubscribe(h), h = null), b.startIndex = 0, b.chatMembers = [], 0 !== b.room.data.joined && c())
    }, !0);
    b.prev = function() {
      0 < b.startIndex && (b.startIndex -= b.maxAmount, b.chatMembers = b.allMembers.slice(b.startIndex, b.startIndex + b.maxAmount))
    };
    b.next = function() {
      b.startIndex + b.maxAmount < b.allMembers.length && (b.startIndex += b.maxAmount, b.chatMembers = b.allMembers.slice(b.startIndex, b.startIndex + b.maxAmount))
    };
    b.openPrivateChat = a.Ca;
    b.getPrivateRoomName = a.Ya;
    b.clickPlayerAvatar = function(b) {
      a.Ca(a.Ya(b))
    };
    b.$on("$destroy", function() {
      h && g && g.unsubscribe(h)
    })
  }}
};
Travian.Directive.chatRoomMembers.$inject = ["ChatService", "$templateCache"];
Travian.Directive.chatRoomName = function() {
  return{restrict:"EA", templateUrl:"tpl/chat/partials/roomNameWithIcon.html", scope:{roomName:"=", lastClick:"=", online:"=", allianceRights:"="}, link:function(a) {
    a.$watch("allianceRights", function() {
      a.role = Alliance.ROLE_STRING[a.allianceRights]
    })
  }}
};
Travian.Directive.chatRoomName.$inject = [];
Travian.Directive.chatRoomNotifications = function(a) {
  return{restrict:"E", template:"<div ng-if='text' class='roomNotification' ng-class='{red: [ChatNotification.PLAYER_LEFT, ChatNotification.PLAYER_OFFLINE].indexOf(type) !== -1}'><span>{{text}}</span></div>", scope:!0, link:function(c, b, l) {
    function h(a) {
      c.text = !1;
      f = null;
      ChatCache.A(a, !0)
    }
    c.text = !1;
    c.ChatNotification = ChatNotification;
    var g = null, e = null, m = null, f = null;
    l.$observe("roomId", function(b) {
      if(b) {
        null !== g && (e.unsubscribe(g), null !== f && (a.cancel(f), h(m)));
        e = ChatNotification.getCollection(b);
        var l = e.filled;
        g = e.subscribe(function() {
          if(l) {
            return l = !1
          }
          var b = e.data.pop();
          if(b && b.data.playerId !== Travian.Player.data.playerId) {
            null !== f && (a.cancel(f), ChatCache.A(m, !0));
            e.data = [];
            if(!b.data.playerName) {
              return!1
            }
            m = b;
            c.text = Travian.translate("Chat.Notification." + m.data.type, {playerName:m.data.playerName});
            c.type = m.data.type;
            f = a(function() {
              h(m)
            }, 3E3)
          }
        })
      }
    });
    c.$on("$destroy", function() {
      null !== g && e.unsubscribe(g)
    })
  }}
};
Travian.Directive.chatRoomNotifications.$inject = ["$timeout"];
Travian.Directive.chatTimeDivider = function() {
  return{restrict:"EA", template:'<h6 class="divider" ng-if="timeTitle != \'\'"><span class="fadeIn"></span><span translate class="label" options="{{timeTitle}}">?</span><span class="fadeOut"></span></h6>', scope:{last:"@", current:"@", reverse:"@"}, link:function(a) {
    function c(a) {
      return"" == a ? 0 : 10 < ("" + a).length ? parseInt(a) / 1E3 : parseInt(a)
    }
    function b() {
      a.timeTitle = "";
      if(0 == g) {
        for(var b = 0;b < h.length;b++) {
          var c = h[b];
          if(e > c.timestamp) {
            a.timeTitle = "Chat.Time_" + c.name;
            break
          }
        }
      }else {
        for(b = h.length - 2;0 <= b;b--) {
          if(c = h[b], a.reverse) {
            g <= c.timestamp && e > c.timestamp && (a.timeTitle = "Chat.Time_" + c.name)
          }else {
            if(e <= c.timestamp && g > c.timestamp) {
              a.timeTitle = "Chat.Time_" + h[b + 1].name;
              break
            }
          }
        }
      }
    }
    var l = new Date, l = new Date(l.getFullYear(), l.getMonth(), l.getDate()), h = [];
    h.push({name:"Today", timestamp:l / 1E3});
    h.push({name:"Yesterday", timestamp:l / 1E3 - 86400});
    h.push({name:"Last7Days", timestamp:l / 1E3 - 604800});
    h.push({name:"OlderThan7Days", timestamp:0});
    var g = 0, e = 0;
    a.$watch("last", function(a) {
      g = c(a);
      b()
    });
    a.$watch("current", function(a) {
      e = c(a);
      b()
    })
  }}
};
Travian.Directive.chatTimeDivider.$inject = ["ChatService"];
Travian.Directive.chatWindowBody = function(a, c, b, l, h) {
  return{restrict:"E", template:c.get("tpl/chat/partials/chatWindowBody.html"), scope:{room:"=room"}, link:function(c, e) {
    function m() {
      var a = 0;
      $(e).find("ul li.line.new, ul li.unreadInfo").each(function() {
        a += parseInt($(this).outerHeight(!0))
      });
      c.chatScrollPosition = a;
      h(function() {
        v = !0
      })
    }
    var f = b.l(), n = null, q = null, p = {first:-1, last:-1}, r = {first:-1, last:-1}, s = !1, v = !1;
    c.player = f;
    c.openWindow = c.$root.openWindow;
    c.inputPlaceholder = Travian.translate("Chat.ClickToAnswer");
    c.isBannedFromMessaging = !1;
    c.isActivated = !1;
    c.ChatRoom = ChatRoom;
    c.openPrivateChat = a.Ca;
    c.getPrivateRoomName = a.Ya;
    c.unsentLines = [];
    c.haveFirst = !0;
    c.chatLines = null;
    c.displayedChatLines = [];
    c.chatScrollPosition = 0;
    c.isPrivateChat = void 0 == c.room.chatRoom;
    c.send = function(b) {
      !c.isBannedFromMessaging && c.isActivated && (c.unsentLines.push({data:{playerName:Travian.Player.data.name, playerId:Travian.Player.data.playerId, text:b.substring(0, 1E3), timestamp:l.K()}}), c.room.chatRoom && (c.room.chatRoom.data.lastRead = (new Date).getTime()), a.sendMessage(c.room.roomId, b), c.room.markMessagesAsRead(), c.displayDesktopNotificationInfo = a.af(c.room.roomId))
    };
    c.getPlayerOptions = function(a) {
      var b = [];
      c.room.chatRoom && b.push({clickable:"openPrivateChat(getPrivateRoomName(" + a + "));", text:Travian.translate("Chat.PrivateChat")});
      b.push({clickable:"openWindow('profile', {'playerId': " + a + ", 'profileTab': 'playerProfile'})", text:Travian.translate("Chat.OpenProfile")});
      b.push({clickable:"reportConversation('" + c.room.roomId + "', " + a + ");", text:Travian.translate("Chat.Report.Player")});
      return b
    };
    c.reportConversation = function(b, c) {
      a.nd(b, c)
    };
    c.$watchGroup(["room", "room.chatRoom.data.joined", "room.indexOfFirstUnreadLine"], function() {
      if(c.room.chatRoom && 0 === c.room.chatRoom.data.joined) {
        c.inputPlaceholder = Travian.translate("Chat.JoinToAnswer");
        var a = new ChatRoom(c.room.roomId);
        0 === Travian.Player.data.kingdomId && a.getRoomType() === ChatRoom.TYPE_KINGDOM && (c.inputPlaceholder = Travian.translate("Chat.JoinKingdomToAnswer"));
        0 === Travian.Player.data.allianceId && a.getRoomType() === ChatRoom.TYPE_ALLIANCE && (c.inputPlaceholder = Travian.translate("Chat.JoinAllianceToAnswer"))
      }
      !c.room || c.room.chatRoom && !c.room.chatRoom.data.joined ? c.displayedChatLines = [] : (null !== q && c.chatLines.unsubscribe(q), c.unsentLines = [], c.chatLines = c.room.chatLines, c.haveFirst = !0, s = !1, c.displayedChatLines = [], c.inputPlaceholder = Travian.translate("Chat.ClickToAnswer"), q = c.chatLines.subscribe(function() {
        if(c.chatLines && !c.room.chatRoom) {
          c.unsentLines = [];
          for(var a = !1, b = 0;b < c.chatLines.data.length;b++) {
            if(c.chatLines.data[b].data.isFirst) {
              a = !0;
              break
            }
          }
          10 > c.chatLines.data.length && (a = !0);
          c.haveFirst = a
        }
        a: {
          if(0 != c.chatLines.data.length) {
            r.first = c.chatLines.data[0].data.timestamp;
            r.last = c.chatLines.data[c.chatLines.data.length - 1].data.timestamp;
            if(!s || c.chatLines.data[0].data.timestamp < p.first) {
              c.displayedChatLines = [], s = !1
            }else {
              if(s && p.last == r.last) {
                break a
              }
            }
            a = c.displayedChatLines.length;
            c.indexOfFirstUnreadLine = c.room.indexOfFirstUnreadLine;
            for(b = 0;b < c.chatLines.data.length;b++) {
              var e = c.chatLines.data[b], f = a - 1, h = !1;
              s && p.last < r.last && e.data.timestamp <= p.last || (c.room.indexOfFirstUnreadLine == b && (c.indexOfFirstUnreadLine = a), (h = void 0 !== c.displayedChatLines[f] && c.displayedChatLines[f].data.playerId == e.data.playerId && c.displayedChatLines[f].data.timestamp > e.data.timestamp - 6E4 && c.indexOfFirstUnreadLine != a) ? c.displayedChatLines[f].data.text.push(e.data.text) : (c.displayedChatLines.push(angular.copy(e)), c.displayedChatLines[f + 1].data.text = [c.displayedChatLines[a].data.text]), 
              a = c.displayedChatLines.length)
            }
            p = angular.copy(r);
            s = !0
          }
        }
      }), $(e).find(".scrollContent").trigger("scroll"), 0 < c.room.unreadLines && h(m), c.$broadcast("roomUpdate"))
    });
    n = f.subscribe(function() {
      c.isBannedFromMessaging = f.data.isBannedFromMessaging;
      c.answerPlaceholder = Travian.translate("Chat.BannedFromMessaging.AnswerPlaceholder");
      c.isActivated = f.data.isActivated;
      c.isActivatedAnswerPlaceholder = Travian.translate("Chat.IsNotActivated")
    });
    c.loadOlder = function() {
      for(var b = -1, e = 0;e < c.chatLines.data.length;e++) {
        var f = c.chatLines.data[e].data;
        if(-1 == b || f.timestamp < b) {
          b = f.timestamp
        }
      }
      a.Wa(c.room.roomId, b)
    };
    c.$on("contentScrolling", function(a, b) {
      c.$id == b && v && c.room.markMessagesAsRead()
    });
    c.$on("$destroy", function() {
      null !== n && f.unsubscribe(n);
      null !== q && c.chatLines.unsubscribe(q)
    });
    c.cancelDisplayDesktopNotification = function() {
      a.Te(!1)
    };
    c.acceptDisplayDesktopNotification = function() {
      a.Te(!0);
      Notification.requestPermission()
    };
    c.displayDesktopNotificationInfo = !1;
    c.$on("NotificationPermissionChange", function() {
      c.displayDesktopNotificationInfo = a.af(c.room.roomId)
    })
  }}
};
Travian.Directive.chatWindowBody.$inject = ["ChatService", "$templateCache", "SessionService", "ServertimeService", "$timeout"];
Travian.Directive.moreDropdown = function(a, c) {
  return{restrict:"A", template:'<a class="iconButton" clickable="openMoreDropdown()"><span class="number" ng-if="showCount">{{optionsCounts}}</span><i class="symbol_arrowDown_tiny_illu"></i></a>', link:function(b, l, h) {
    function g() {
      m = $('<div class="moreDropDownBody">');
      m.addClass("dropdownBody");
      m.html('<ul><li ng-repeat="option in options" clickable="{{option.clickable}}; closeMoreDropdown()">{{option.text}}</li></ul>');
      f = b.$new();
      l.append(m);
      a(m)(f);
      c(function() {
        var a = m[0].getBoundingClientRect(), b = $(window).height();
        a.bottom > b && m.css("top", "-" + a.height + "px")
      }, 0)
    }
    function e() {
      null != m && (f.$destroy(), angular.element(m).remove(), m = null)
    }
    l = $(l);
    b.options = [];
    b.showCount = !1;
    b.optionsCounts = 0;
    var m = null, f = null;
    h.$observe("moreDropdownCount", function(a) {
      b.showCount = !1;
      a && (b.showCount = !0, b.optionsCounts = a)
    });
    b.closeMoreDropdown = e;
    var n = U.H("up", function(a) {
      null != m && 0 == l.find(a.p).length && e()
    });
    b.openMoreDropdown = function() {
      b.options = b.$eval(h.moreDropdownOptions);
      null == m ? g() : e()
    };
    b.$on("$destroy", function() {
      e();
      n();
      angular.element(l).remove()
    })
  }}
};
Travian.Directive.moreDropdown.$inject = ["$compile", "$timeout"];
Travian.Directive.cheatElement = function(a) {
  return{restrict:"A", link:function(c, b, l) {
    l.$observe("html", function(h) {
      $(b).append(a(h)(c))
    })
  }}
};
Travian.Directive.cheatElement.$inject = ["$compile"];
Travian.Directive.placeholder = function() {
  return{link:function(a, c, b) {
    b.$observe("placeholder", function() {
      Modernizr.load({test:Modernizr.input.placeholder, nope:"library/js/modernizr/polyfills/jquery.placeholder.min.js", callback:function() {
        c.placeholder()
      }})
    })
  }}
};
Travian.Directive.fixedTableHeader = function() {
  return{restrict:"A", scope:!1, replace:!1, link:function(a, c) {
    function b() {
      var a = c.find("thead");
      a.addClass("fixedTableHeader");
      if(a) {
        var b = a.height(), h = a.find("th"), f = c.find("tbody tr"), n = null, q = 0;
        c.parents("[scrollable]").css("margin-top", b);
        a.css("top", -1 * b).css("position", "absolute");
        f.each(function(a, b) {
          null === n && $(b).children("td").length === h.length && (n = b, $(h).each(function(a, c) {
            var e = $($(b).find("td")[a]), f = $(c).width();
            f > e.width() && e.width(f)
          }))
        });
        null !== n && ($(a).width($(n).width()), $(n).find("td").each(function(a, b) {
          q = $(b).width();
          $(h[a]).width(q)
        }), l())
      }
    }
    function l() {
      Travian.tick.unbind(h)
    }
    var h;
    h = Travian.tick.bind(function() {
      b()
    });
    c.bind("$destroy", function() {
      l()
    })
  }}
};
Travian.Directive.fixedTableHeader.$inject = [];
Travian.Directive.achievementImage = function() {
  return{restrict:"E", template:'<i class="achievementFrame achievements_frame{{(achievementData.special == \'true\' || achievementData.special == true || achievementData.special == 1)?\'Mystery\' : achievementData.level}}_large_illu" tooltip tooltip-url="tpl/profile/playerProfile/achievementTooltip.html" tooltip-data="achievement-data:{{achievementData}}"><i class="achievementIcon achievements_type{{achievementData.type}}_medium_illu"></i>\t\t\t</i>', replace:!0, scope:!0, link:function(a, c, b) {
    var l = null, h = null;
    b.$observe("playerId", function() {
      0 < b.playerId && null == l && (l = Achievement.getCollection(b.playerId), Cache.t(l, 120), h = l.subscribe(function() {
        for(var c, e = 0;e < l.data.length;e++) {
          c = l.data[e], c.data.type == b.type && (a.achievementData = c.data)
        }
      }))
    });
    a.$on("$destroy", function() {
      null !== h && l.unsubscribe(h)
    })
  }}
};
Travian.Directive.animatedCounter = function() {
  return{restrict:"A", scope:{value:"=", baseStep:"@", duration:"@", animationClass:"@"}, link:function(a, c) {
    function b(a, b) {
      var c = 1;
      100 < b && (c = b / 100);
      return{step:c, delay:a / (b / c)}
    }
    function l(a, b, e, g, h, l) {
      null != m && clearInterval(m);
      m = setInterval(function() {
        a += e * Math.min(h, Math.abs(a - b));
        c.html(parseInt(a));
        b == a && (clearInterval(m), l())
      }, g)
    }
    function h(a, h) {
      var m = 1;
      h < a && (m = -1);
      var p = b(g, Math.abs(h - a));
      e && c.addClass(e);
      l(a, h, m, p.delay, p.step, function() {
        e && c.removeClass(e)
      })
    }
    var g = a.duration, e = a.animationClass, m = null;
    a.$watch("value", function(a, b) {
      a != b && (angular.isUndefined(a) || (angular.isUndefined(b) || isNaN(parseInt(a))) || h(b, a))
    });
    a.$on("$destroy", function() {
      null != m && clearInterval(m)
    })
  }}
};
Travian.Directive.animatedCounter.$inject = [];
Travian.Directive.avatarImage = function(a, c) {
  var b = "ltr" == getDirection() ? "images" : "images_rtl", l = new xa(Travian.Config.cdnPrefix + "layout/" + b + "/source/heroNEW/");
  return{restrict:"E", template:c.get("tpl/user/partials/avatar_image.html"), scope:{size:"@", hideHair:"=", hideEars:"=", avatar:"="}, link:function(a, b, c) {
    function m() {
      var f = b[0].querySelector(".heroImage");
      null != r && f.removeChild(r);
      var m = "125x125";
      "big" == c.size && (m = "350x350");
      void 0 !== c.scale && (s = parseFloat(c.scale));
      t = null;
      var n = [];
      if(void 0 !== p.gender) {
        a.gender = p.gender;
        var q = p.gender + "/head/" + m + "/face0";
        v && (q += "_dead");
        u && (q += "_1");
        q += ".png";
        n.push(q);
        var B = [];
        B.push({url:q, z:10});
        if(!v) {
          for(var H in p.face) {
            var I = p.face[H];
            "None" == I.type || ("hair" == H && a.hideHair || "ear" == H && a.hideEars) || (q = p.gender + "/head/" + m + "/" + H + "/" + H + I.type + ".png", n.push(q), B.push({url:q, z:I.z}))
          }
        }
        B.sort(function(a, b) {
          return a.z < b.z ? -1 : 1
        });
        z++;
        l.load(n, function(b, c) {
          if(c == z) {
            r = document.createElement("canvas");
            for(var e = r.getContext("2d"), g = 0;g < B.length;g++) {
              var l = B[g].url;
              0 == g && (r.width = b[l].width * s, r.height = b[l].height * s);
              e.drawImage(b[l], 0, 0, b[l].width * s, b[l].height * s)
            }
            f.appendChild(r);
            a.$$phase || a.$digest()
          }
        }, z);
        1 != s && doAngularApply()
      }
    }
    function f() {
      null == t && (t = window.setTimeout(m, 50))
    }
    var n = 0, q = null, p = null;
    a.gender = void 0;
    a["class"] = "";
    var r = null, s = 1, v = !1, u = !1;
    a.robberId = Player.ID.ROBBER;
    var t = null, z = 0;
    a.avatar ? (p = a.avatar, a.$watch("avatar", f, !0)) : (p = {}, "true" == c.random ? (q = new HeroFace, p = q.getViewModel()) : c.$observe("playerId", function(c) {
      a.playerId = parseInt(c);
      null != r && (b[0].querySelector(".heroImage").removeChild(r), r = null);
      p = {};
      a.playerId && !Player.isNPC(a.playerId) && ((q = HeroFace.get(a.playerId)) && n && q.unsubscribe(n), n = q.subscribe(function() {
        p = q.getViewModel();
        f()
      }))
    }));
    c.$observe("avatarClass", function(b) {
      b && (a["class"] = b, f())
    });
    c.$observe("dead", function(a) {
      v = "true" == a;
      f()
    });
    c.$observe("noShoulders", function(a) {
      u = "true" == a;
      f()
    });
    a.$watch("hideHair", f);
    a.$watch("hideEars", f);
    a.$on("$destroy", function() {
      q && n && q.unsubscribe(n)
    })
  }}
};
Travian.Directive.avatarImage.$inject = ["$http", "$templateCache"];
Travian.Directive.button = function(a, c, b) {
  return{transclude:!0, restrict:"E", priority:-1, scope:!0, template:a.get("tpl/directive/generalElements/button.html"), link:function(a, c, g) {
    function e() {
      c.hasClass("disabled") || ("undefined" != typeof g.playOnClick ? b.U(g.playOnClick) : c.hasClass("cancel") ? b.U(Va) : b.U(Ta))
    }
    a.price = g.price;
    a.forceGoldUsage = g.forceGoldUsage;
    ("undefined" == typeof g.playOnClick || "undefined" == typeof g.clickable && "undefined" == typeof g.premiumFeature) && U.Ma(c[0], e);
    g.$observe("price", function(b) {
      a.price = b
    });
    a.$on("$destroy", function() {
      U.ld(c[0], e)
    })
  }}
};
Travian.Directive.button.$inject = ["$templateCache", "$timeout", "AudioService"];
Travian.Directive.coordinates = function() {
  return{restrict:"EA", template:'<span><a ng-if="hasLink" clickable="openPage(\'map\', \'centerId\', \'{{link}}_{{currentServerTime}}\');"><span class="coordinates coordinatesWrapper {{aligned}}" ng-bind-html=" coord | bidiCoordinate:x:y "></span></a><span ng-if="!hasLink" class="coordinates coordinatesWrapper {{aligned}}"  ng-bind-html=" coord | bidiCoordinate:x:y "></span></span>', replace:!0, scope:!0, link:function(a, c, b) {
    a.hasLink = !0;
    multiObserve(b, ["x", "y"], function() {
      if("id" == b.x) {
        var c = parseInt(b.y), h = id2xy(c);
        a.x = h.x;
        a.y = h.y;
        a.link = c
      }else {
        a.x = parseInt(b.x), a.y = parseInt(b.y), a.link = xy2id(a.x, a.y)
      }
    });
    b.$observe("nolink", function(b) {
      void 0 != b && "true" == b && (a.hasLink = !1)
    });
    b.$observe("aligned", function(b) {
      a.aligned = "";
      void 0 != b && "true" == b && (a.aligned = "coordinatesAligned")
    })
  }}
};
Travian.Directive.countdown = function(a) {
  return function(c, b, l) {
    function h() {
      if("undefined" != typeof a.K()) {
        g = b.attr("countdown");
        var c = g - a.K();
        if(0 > c || isNaN(c)) {
          return Travian.tick.unbind(e), e = null, b.text(la(0)), !1
        }
        var h = "";
        l.showDaysLimit && c >= l.showDaysLimit ? (c = Math.round(c / 86400), c == f ? h = m : (h = Travian.translate("ForDays", {x:c}), f = c)) : h = la(c, l.countdownShort && c < l.countdownShort);
        m != h && (m = h, b.text(h))
      }
    }
    var g, e = null, m = "", f = 0;
    l.showDaysLimit && c.$on("newTranslation", function() {
      f = 0
    });
    l.$observe("countdown", function(a) {
      "undefined" != typeof a && null == e && (e = Travian.tick.bind(h))
    });
    b.bind("$destroy", function() {
      Travian.tick.unbind(e)
    })
  }
};
Travian.Directive.countdown.$inject = ["ServertimeService"];
Travian.Directive.displayResources = function(a, c) {
  return{restrict:"EA", scope:{consumption:"@", population:"@", resources:"=", capacity:"=", treasures:"=", stolenGoods:"=", available:"=", checkStorage:"@", old:"@", time:"@", signed:"@", colorPositive:"@", flyingResTrigger:"="}, templateUrl:"tpl/building/partials/displayResources.html", link:function(b, l, h) {
    function g() {
      if("undefined" !== typeof b.resources && b.resources) {
        b.capacityHint = null;
        b.enoughResSecs = null;
        for(var a = !0, c = 1;4 >= c;c++) {
          if(b.resourceVisibility[c] = !1, "undefined" != typeof b.resources[c] && "" !== b.resources[c]) {
            if(0 < b.resources[c] || !h.hideZero) {
              b.resourceVisibility[c] = !0
            }
            var f = "Warehouse";
            4 == c && (f = "Granary");
            !0 == b.checkStorage || "true" == b.checkStorage ? a && !b.enoughStorage(c) && (a = !1, b.capacityHint = Travian.translate("Missing" + f + "Storage")) : b.enoughResources(c) || (a = !1, b.resources[c] > e.data.storageCapacity[c] && (b.capacityHint = Travian.translate("Missing" + f + "Capacity")))
          }
        }
        a || b.capacityHint || (b.enoughResSecs = e.getDestTimeForResources(b.resources))
      }
    }
    var e = a.i();
    b.resTypes = angular.copy(Resources.STRING);
    delete b.resTypes[0];
    b.Math = Math;
    b.numberUnit = "";
    h.percent && (b.numberUnit = "percent");
    h.production && (b.numberUnit = "production");
    b.imageSize = "small";
    h.imageSize && (b.imageSize = h.imageSize);
    b.resourceVisibility = {};
    b.enoughResources = function(a) {
      return"undefined" !== typeof b.available && "undefined" !== typeof b.available[a] && "undefined" !== typeof b.resources && "undefined" !== typeof b.resources[a] && "" !== b.resources[a] && b.available[a] < parseInt(b.resources[a]) && 0 < parseInt(b.resources[a]) ? !1 : !0
    };
    b.enoughStorage = function(a) {
      if((!0 == b.checkStorage || "true" == b.checkStorage) && "undefined" !== typeof b.resources && "undefined" !== typeof b.resources[a] && "" !== b.resources[a]) {
        var c = e.getResources();
        return parseInt(c[a]) + parseInt(b.resources[a]) <= e.data.storageCapacity[a]
      }
      return!0
    };
    b.showCapacity = function() {
      return"undefined" !== typeof b.capacity
    };
    b.showConsumption = function() {
      return"undefined" !== typeof b.consumption
    };
    b.showPopulation = function() {
      return"undefined" !== typeof b.population
    };
    b.showTreasures = function() {
      return"undefined" !== typeof b.treasures
    };
    b.showStolenGoods = function() {
      return"undefined" !== typeof b.stolenGoods
    };
    b.showTime = function() {
      return"undefined" !== typeof b.time
    };
    b.showAsOldResources = "true" == b.old;
    b.resourceIsSigned = "true" == h.signed;
    b.colorPositive = "true" == h.colorPositive;
    b.$on("activeVillageChanged", function() {
      e = a.i()
    });
    "undefined" !== typeof h.resources && b.$watch("resources", g, !0);
    "undefined" !== typeof h.available && b.$watch("available", g, !0);
    if(h.flyingResTrigger || "" == h.flyingResTrigger) {
      var m = [], f = [];
      b.$watch("flyingResTrigger", function(a) {
        if(!Settings.get(Travian.Player.data.playerId).getSetting("disableAnimations")) {
          if(a || "true" == a) {
            b.$root.$broadcast("freezeStockBar");
            var e = $(l), g = $("body .mainContentWrapper #layoutHeader #resourceBar");
            a = 1;
            for(var h = 0;4 >= a;a++) {
              if(b.resources[a]) {
                var s = {1:0, 2:0, 3:0, 4:0};
                s[a] = b.resources[a];
                (function(a, h, l) {
                  h = window.setTimeout(function() {
                    if(!1 !== b.flyingResTrigger && "false" !== b.flyingResTrigger) {
                      var h = e.find(".resType" + a), m = g.find(".stockContainer .resType" + a), n = h.clone().css("zIndex", 5E3), h = c.jb(h, m, n, "body", 600, 100, "linear", function() {
                        b.$root.$broadcast("freezeStockBar", {addResources:l, duration:c.Lb + 200})
                      });
                      f.push(h)
                    }
                  }, h * c.Lb);
                  m.push(h)
                })(a, h++, s)
              }
            }
          }else {
            if(!1 === a || "false" === a) {
              for(a = 0;a < f.length;a++) {
                f[a](!0), f.splice(a--, 1)
              }
            }
          }
        }
      });
      b.$on("$destroy", function() {
        for(var a = 0;a < m.length;a++) {
          window.clearTimeout(m[a])
        }
      })
    }
  }}
};
Travian.Directive.displayResources.$inject = ["VillageService", "AnimationService"];
Travian.Directive.dropdown = function(a, c, b) {
  return{replace:!0, scope:{data:"=", loggedIn:"="}, restrict:"EA", template:'<div class="dropdownContainer"><div class="dropdownHead openDownwards closed" clickable="clickDropdown()"><span class="selectedItem truncated"></span><i class="symbol_arrowDown_tiny_illu"></i></div><input class="dropdownInput" type="text"></div>', transclude:"element", compile:function(l, h, g) {
    return{pre:function(a) {
      g(a, function(b) {
        a.template = b.html();
        a.$on("$destroy", function() {
          b.remove()
        })
      })
    }, post:function(e, g) {
      function f() {
        if(!G) {
          return!1
        }
        var a = U.M().p;
        G.find(a);
        g.find(a);
        e.data.hoverContainer && ("undefined" != typeof R && null != R) && R.find(a)
      }
      function l(a) {
        var b = null, c = I;
        do {
          b = H[c + a], c += a
        }while("" === b);
        "undefined" != typeof b && A(b, !0)
      }
      function q() {
        e.data.hoverable && v(Z)
      }
      function p() {
        Z = !0;
        b(q, 10)
      }
      function r() {
        y && (Z = !1, b(q, 10))
      }
      function s() {
        var b, c, f, l = G.css("display");
        G.css("display", "block");
        var n = g[0].getBoundingClientRect();
        "undefined" != typeof a.pageYOffset ? (b = a.pageYOffset, c = a.pageXOffset, f = a.outerHeight) : (b = $(window).scrollTop(), c = $(window).scrollLeft(), f = $(window).height());
        G.css("left", n.left + c + "px");
        G.height(0);
        c = G.find(".scrollContentInnerWrapper").outerHeight(!0);
        var q = G.outerHeight(!0);
        b = n.top + b;
        n = f - b - g.outerHeight(!0);
        f = !0;
        b > n && "true" != h.openDownwards && (f = !1);
        n = g.find(".dropdownHead");
        f ? (n.addClass("openDownwards"), G.addClass("openDownwards"), n.removeClass("openUpwards"), G.removeClass("openUpwards")) : (n.addClass("openUpwards"), G.addClass("openUpwards"), n.removeClass("openDownwards"), G.removeClass("openDownwards"));
        n = 200;
        "undefined" != typeof e.data.maxHeight && (n = e.data.maxHeight);
        c > n && (c = n);
        f ? G.css("top", b + g.outerHeight(!0) + "px") : G.css("top", b - c - q + "px");
        G.css("height", c + "px");
        "undefined" != typeof e.data.bodyStyle && G.css(e.data.bodyStyle);
        "undefined" != typeof e.data.resize && !0 === e.data.resize && ("undefined" != typeof e.scrollbarApi && "undefined" != typeof e.scrollbarApi.update && e.scrollbarApi.update(), c = E.outerWidth(), q = G.outerWidth(), q > c ? (c = q - c, q = E.outerWidth(!1), E.css("width", q + c + "px")) : c > q && (c -= q, q = G.width(), G.css("width", q + c + "px")));
        G.css("display", l)
      }
      function v(a) {
        if(!J && !0 === e.data.lazyRendering) {
          C(!0)
        }else {
          if(null != G) {
            0 < arguments.length && (y = !a);
            var b = g.find(".dropdownHead"), c = g.find(".dropdownArrow");
            y ? (y = !1, G.css("display", "none"), b.addClass("closed"), b.removeClass("opened"), h.openDownwards ? (c.addClass(O), c.removeClass(L)) : (c.addClass(L), c.removeClass(O))) : (e.$parent && e.$parent.w && e.$parent.windowBroadcast("openDropdown", e.$parent.w.name), y = !0, G.css("display", "block"), b.addClass("opened"), b.removeClass("closed"), h.openDownwards ? (c.addClass(L), c.removeClass(O)) : (c.addClass(O), c.removeClass(L)), s(), "touch" != U.Xa() && g.find("input").focus())
          }
        }
      }
      function u() {
        if(null == G) {
          g.find(".selectedItem").text(B[e.data.selected])
        }else {
          var a = e.data.selected;
          if(null === e.data.selected) {
            g.find(".selectedItem").addClass("empty"), "undefined" != typeof e.data.placeholder && g.find(".selectedItem").text(Travian.translate(e.data.placeholder)), I = -1
          }else {
            g.find(".selectedItem").removeClass("empty");
            var b = G.find(".dropDownItem" + a).html();
            g.find(".selectedItem").html(b);
            I = B[a]
          }
          G.find(".dropdownOption").removeClass("selected");
          G.find(".dropDownItem" + a).addClass("selected");
          e.data.noTruncate ? g.find(".selectedItem").removeClass("truncated") : g.find(".selectedItem").addClass("truncated")
        }
      }
      function t() {
        null != G && "undefined" != typeof e.data.disabledEntries && (G.find(".dropdownOption").removeClass("disable"), $.each(e.data.disabledEntries, function(a, b) {
          G.find(".dropdownOption.dropDownItem" + b).addClass("disable")
        }))
      }
      function z() {
        "undefined" != typeof e.data.disabled && (g.find("input").prop("disabled", e.data.disabled), e.data.disabled ? (g.find(".dropdownHead").addClass("disabled"), v(!1)) : g.find(".dropdownHead").removeClass("disabled"))
      }
      function A(a, b) {
        if("" !== a && "undefined" != typeof a && null !== a) {
          if(-1 < $.inArray(a, e.data.disabledEntries)) {
            return
          }
          e.data.selected = a;
          b || e.data.stayAtClickOpen || v(!1);
          u();
          I = B[a]
        }
        "function" == typeof e.data.callback && e.data.callback(a)
      }
      function C(a) {
        a = a || !1;
        J = !0;
        G = $("<div scrollable>");
        G.addClass("dropdownBody");
        G.addClass(e.data.bodyClass);
        e.data.hoverable && (U.onPointerOver(G[0], p), U.onPointerOut(G[0], r));
        $(N).append(G);
        v(!1);
        I = -1;
        var f = e.data.selectBy || "key", g = "", g = "undefined" != typeof e.data.orderBy ? g + ("<li ng-repeat=\"option in data.options | orderBy:'" + e.data.orderBy + "'\" ") : g + '<li ng-repeat="(key, option) in data.options track by $index" ', h = "truncated";
        e.data.noTruncate && (h = "");
        g = g + (' class="dropdownOption dropDownItem{{' + f + "}} " + h + '" ') + (" ng-class=\"{selected: '{{" + f + "}}' == data.selected, disabledEntries: data.disabledEntries.indexOf('{{" + f + '}}\') > -1}" clickable="selectItem({{' + f + '}})">');
        g = "" != e.template ? g + (e.template + "</li>") : g + "{{option}}</li>";
        f = $("<ul>" + g + "</ul>");
        G.html(f);
        X = e.$new();
        c(G)(X);
        b(function() {
          s();
          "undefined" != typeof e.scrollbarApi && "undefined" != typeof e.scrollbarApi.updateHeight && e.scrollbarApi.updateHeight();
          u();
          t();
          z();
          v(a)
        }, 0);
        u();
        t();
        z()
      }
      var D = g;
      g = $(g);
      var y = !1, B = {}, H = [], I = -1, G = null, J = !1, N = $("body")[0], E = g.find(".dropdownHead"), R = null, O = "symbol_arrowUp_tiny_illu", L = "symbol_arrowDown_tiny_illu", X = null;
      g.find("input").on("focus", function() {
        g.find(".dropdownHead").addClass("focus")
      });
      g.find("input").on("blur", function() {
        g.find(".dropdownHead").removeClass("focus")
      });
      g.find("input").on("keyup", function(a) {
        a = a.keyCode;
        40 == a && l(1);
        38 == a && l(-1);
        13 == a && v()
      });
      var Z = !1, M = U.H("up", f), T = U.H("down", f);
      e.data.hoverable && (R = $("#" + e.data.hoverContainer), "undefined" != typeof R[0] ? (U.onPointerOver(R[0], p), U.onPointerOut(R[0], r)) : (U.onPointerOver(E[0], p), U.onPointerOut(E[0], r)));
      e.clickDropdown = function() {
        e.data.hoverable || v()
      };
      e.selectItem = A;
      var da = e.$watch("data.selected", u), P = e.$watch("data.disabledEntries", t), ia = e.$watch("data.disabled", z);
      e.$on("newTranslation", function() {
        b(u, 100)
      });
      "undefined" != typeof e.data.placeholder ? g.find(".selectedItem").text(Travian.translate(e.data.placeholder)) : g.find(".selectedItem").html("&nbsp;");
      e.$on("openDropdown", function(a, b) {
        b && (e.$parent && e.$parent.w && b == e.$parent.w.name) && v(!1)
      });
      e.$on("windowDragged", s);
      e.$on("contentScrolling", function(a, b) {
        e.$id != b && v(!1)
      });
      var K = e.$watch("data.options", function() {
        !0 === e.data["static"] && K();
        var a = 0;
        B = {};
        H = [];
        for(var b in e.data.options) {
          if(e.data.selectBy) {
            var c = e.data.options[b][e.data.selectBy.substr(7)];
            B[c] = a;
            H[a] = c
          }else {
            B[b] = a, H[a] = b
          }
          a++
        }
        null != G && function() {
          var a = G;
          window.setTimeout(function() {
            angular.element(a).remove()
          }, 10)
        }();
        E = g.find(".dropdownHead");
        E.addClass("closed");
        !0 !== e.data.lazyRendering && C(y)
      }, !0);
      D.bind("$destroy", function() {
        M();
        T();
        U.s(g[0]);
        g.find("input").off();
        P();
        ia();
        K();
        da();
        E && U.s(E[0]);
        "undefined" != typeof e.data.hoverContainer && U.s(R[0]);
        G && (X.$destroy(), U.s(G[0]), angular.element(G).remove())
      })
    }}
  }}
};
Travian.Directive.dropdown.$inject = ["$window", "$compile", "$timeout"];
Travian.Directive.dynamicTabulation = function(a, c) {
  return{restrict:"E", scope:!0, link:function(a, l, h) {
    function g(c) {
      "undefined" === typeof c && (c = n);
      a.showHiddenTabsDropdown = c
    }
    function e(a, b) {
      v || (v = l.clone().insertAfter(l), s.css("opacity", 0));
      q.init();
      c(function() {
        var a;
        a: {
          a = s.width();
          z = 0;
          for(var c = s.children(), f = 0, g = 0, h = 0;h < c.length;h++) {
            var l = c[h];
            if(l != r[0]) {
              var m = $(l).outerWidth(!0);
              z += m;
              if(z < a) {
                f++, g = m
              }else {
                z -= $(l).outerWidth(!0);
                z > a - 45 && (f--, z -= g);
                a = f;
                break a
              }
            }
          }
          a = b ? u : 99
        }
        a !== u ? (u = a, e(0, !0)) : (r.css(getReadingDirectionFrom(), z + parseFloat(s.css("left")) + "px"), s.css("opacity", 1), v && (v.remove(), v = null))
      }, 10)
    }
    function m(a, b) {
      for(var c = a, e = b.split("."), f = 0;f < e.length - 1;f++) {
        c = c[e[f]]
      }
      return c[e[e.length - 1]]
    }
    var f = l;
    l = $(l);
    var n = !0, q = new function() {
      this.visible = [];
      this.hidden = [];
      this.init = function() {
        var c = m(a, h.watchVar);
        if(null != c) {
          this.visible.splice(0, this.visible.length);
          this.hidden.splice(0, this.hidden.length);
          for(var e = null, f = 0;f < c.length;f++) {
            if(f < u) {
              this.visible.push(c[f])
            }else {
              var g = this.hidden.push(c[f]);
              m(c[f], h.collectionKey) == h.activeTab && (e = g - 1)
            }
          }
          null != e && (null != h.activeTab && 0 < this.visible.length) && this.bf(e)
        }
      };
      this.bf = function(c) {
        var e = m(a, h.watchVar);
        c = e.splice(this.visible.length + c, 1);
        e.splice(this.visible.length - 1, 0, c[0]);
        this.init(e)
      }
    }, p = l.find(".dynamicTabulationDropdown"), r = l.find(".showHidden"), s = l.find(".tabWrapper"), v = null, u = 99;
    if("undefined" !== typeof a.dynTabConfig) {
      for(var t in a.dynTabConfig) {
        a["dynTab" + t.charAt(0).toUpperCase() + t.slice(1)] = a.dynTabConfig[t]
      }
    }
    a.tabs = q.visible;
    a.tabsMore = q.hidden;
    a.showHiddenTabsDropdown = !1;
    a["debugger"] = q;
    a.toggleDropdown = function() {
      g(!a.showHiddenTabsDropdown)
    };
    var z = 0;
    a.$watch(h.watchVar + ".length", e);
    $(window).on("resize", e);
    a.$on("checkDynTabs", function() {
      var a = l[0].style.display;
      l[0].style.display = "none";
      var b = l[0].offsetHeight;
      l[0].style.display = a;
      e();
      return b
    });
    a.showHiddenTab = function(a) {
      q.bf(a);
      g(!1)
    };
    var A = U.H("down", function() {
      if(!p) {
        return!1
      }
      var c = U.M().p, e = p.find(c).length || p[0] == c, c = r.find(c).length || r[0] == c;
      e || (c || !a.showHiddenTabsDropdown) || (g(!1), requestAngularApply())
    });
    f.bind("$destroy", function() {
      A()
    })
  }}
};
Travian.Directive.dynamicTabulation.$inject = ["RoutingService", "$timeout"];
Travian.Directive.elementSizeChecker = function(a) {
  return{restrict:"A", scope:{width:"=", height:"=", result:"="}, link:function(c, b) {
    a(function() {
      var a = b.prop("offsetWidth"), h = b.prop("offsetHeight");
      if("object" == typeof c.width) {
        var g = parseInt(c.width.gt), e = parseInt(c.width.lt);
        !isNaN(g) && a <= g && (c.result = !1);
        !isNaN(e) && a >= e && (c.result = !1)
      }
      "object" == typeof c.height && (a = parseInt(c.height.gt), g = parseInt(c.height.lt), !isNaN(a) && h <= a && (c.result = !1), !isNaN(g) && h >= g && (c.result = !1))
    })
  }}
};
Travian.Directive.elementSizeChecker.$inject = ["$timeout"];
Travian.Directive.expandableContent = function() {
  return{transclude:!0, replace:!0, restrict:"EA", scope:!0, template:'<div class="expandableContent"><h4 class="expandButton closed" clickable="expandMe()">{{myTitle}}</h4><div class="collapser collapsed"><div class="collapserContent" ng-transclude></div></div></div>', link:function(a, c, b) {
    c = $(c);
    var l = !1;
    a.myTitle = "";
    b.$observe("headerText", function(b) {
      a.myTitle = Travian.translate(b)
    });
    b.$observe("expandDisabled", function(a) {
      "true" == a && c.find(".expandButton").attr("disabled", "disabled")
    });
    b.$observe("expanded", function(b) {
      "true" == b ? l || a.expandMe() : l && a.expandMe()
    });
    a.expandMe = function() {
      c.find(".collapser").hasClass("collapsed") ? ("undefined" != typeof a.$parent.groupCollapse && a.$parent.groupCollapse(), c.find(".expandButton").addClass("opened"), c.find(".expandButton").removeClass("closed"), c.find(".collapser").removeClass("collapsed"), l = !0, a.w.updateWindowHeight()) : (c.find(".expandButton").addClass("closed"), c.find(".expandButton").removeClass("opened"), c.find(".collapser").addClass("collapsed"), l = !1)
    };
    b.expanded && a.expandMe()
  }}
};
Travian.Directive.expandableContentGroup = function() {
  return{restrict:"EA", scope:!0, link:function(a, c) {
    c = $(c);
    a.groupCollapse = function() {
      c.find(".expandButton").removeClass("opened");
      c.find(".expandButton").addClass("closed");
      c.find(".collapser").addClass("collapsed")
    }
  }}
};
Travian.Directive.hover = function(a, c, b, l) {
  var h = 100;
  return{restrict:"A", link:function(a, e, m) {
    function f() {
      s ? (r.show(), r.setPosition()) : r.hide();
      p = null
    }
    function n() {
      s = !0;
      null != p && c.cancel(p);
      p = c(f, h)
    }
    function q() {
      a.stayOpen || (s = !1, null != p && c.cancel(p), p = c(f, h))
    }
    var p = null;
    m = b.get(m.hover);
    var r = new wa(e, m, "", "class");
    r.parentElement = e;
    m = r.F;
    m[0].className = "buildingQueueDetails";
    l(r.F)(a);
    var s = !1;
    f();
    U.onPointerOver(e[0], n);
    U.onPointerOut(e[0], q);
    U.onPointerOver(m[0], n);
    U.onPointerOut(m[0], q);
    e.bind("$destroy", q)
  }}
};
Travian.Directive.hover.$inject = ["$window", "$timeout", "$templateCache", "$compile"];
Travian.Directive.input = function() {
  return{restrict:"E", priority:-1, link:function(a, c) {
    c = $(c);
    var b = c.attr("type"), l = {checkbox:"action_check_tiny_flat_black", radio:"symbol_dot_tiny_illu"};
    "checkbox" == b && c.hasClass("switch") || ("checkbox" == b || "radio" == b ? (c.wrap("<div class='clickInputWrapper' />"), $('<i class="' + l[b] + '"></i>').insertAfter(c), c.parents("label").addClass("clickInputLabel"), $.browser.msie && U.Ma(c[0], function() {
      a.$emit("forceWindowRerender")
    })) : "text" != b && "password" != b || c.parents("label").addClass("insertInputLabel"), $.browser.msie && a.$on("$destroy", function() {
      U.s(c[0])
    }))
  }}
};
Travian.Directive.input.$inject = [];
Travian.Directive.mapPart = function(a, c) {
  return{restrict:"EA", replace:!1, scope:!1, link:function(b, l, h) {
    function g() {
      for(var a = !0, b = 0, f = m.length;b < f;b++) {
        e.Ub(m[b].x, m[b].y) || (a = !1)
      }
      a || c(g, 500)
    }
    var e = a.Nf(h.villageid, l, b);
    e.ib("lineWidth", 1, !0);
    e.ib("borderAlpha", 0.8, !0);
    e.ib("villageAlpha", 1, !0);
    var m = [];
    l = id2xy(h.villageid);
    h = parseFloat(h.size);
    for(var f = Math.floor(l.x - h);f <= l.x + h;f++) {
      for(var n = Math.floor(l.y - h);n <= l.y + h;n++) {
        Math.sqrt((f - l.x) * (f - l.x) + (n - l.y) * (n - l.y)) <= h && m.push({x:f, y:n})
      }
    }
    g();
    b.$on("$destroy", function() {
      e.pd({});
      a.Rf(e)
    })
  }}
};
Travian.Directive.mapPart.$inject = ["MapService", "$timeout"];
Travian.Directive.medalImage = function() {
  return{restrict:"E", template:'<i class="medalImage medal_{{MedalModel.TypeString[type]}}Rank{{Math.min(4,rank)}}_large_illu" ng-class="{lowRank:rank>3}"tooltip tooltip-url="tpl/profile/playerProfile/medalTooltip.html" tooltip-data="type:{{type}},rank:{{rank}},week:{{week}}"><span class="rankNumber">{{rank}}</span></i>', replace:!0, scope:!0, link:function(a, c, b) {
    a.MedalModel = Medal;
    a.Math = Math;
    a.type = b.type;
    a.rank = b.rank;
    a.week = b.week
  }}
};
Travian.Directive.npcTraderButton = function(a) {
  return{restrict:"E", replace:!1, template:'<div clickable="useNpcTrader()" tooltip tooltip-show="true" tooltip-data="{{tooltipData}}" tooltip-translate="{{tooltipText}}" class="iconButton premium npcTrade {{status}}"><i class="feature_npcTrader_small_flat_black"></i></div>', link:function(c, b, l) {
    function h() {
      if("undefined" == typeof m) {
        return 0
      }
      f = new Resources(g.getResources());
      var a = new Resources(m), b = Math.floor(f.getSum() / a.getSum());
      if(0 < b) {
        a.multiply(b);
        for(var c = 1;4 >= c;c++) {
          if(a[c] > n[c]) {
            var e = Math.floor(n[c] / m[c]);
            e < b && (b = e)
          }
        }
      }
      return b
    }
    c.tooltipText = "Marketplace.NpcTrade.UseNpc";
    c.type = l.type;
    if(!b.find("button")) {
      return!1
    }
    var g = a.i(), e = !0, m, f, n, q;
    c.status = "";
    if(Village.isWWVillage(g.data.type)) {
      return c.status = "notAvailable", c.tooltipText = "Error.NotAvailableInWW", !1
    }
    l.$observe("useNpc", function(a) {
      "undefined" != typeof a && (e = "true" === a)
    });
    l.$observe("costs", function(a) {
      "undefined" != typeof a && a && (m = c.$eval(a))
    });
    if("unitTrain" == l.type) {
      c.currentMax = 0;
      c.currentLimit = Infinity;
      var p = function() {
        var a = c.currentLimit - c.currentMax, b = h() - c.currentMax;
        return"max:" + Math.min(a, Math.max(0, b))
      };
      l.$observe("currentMax", function(a) {
        "undefined" != typeof a && a && (c.currentMax = a, c.tooltipData = p())
      });
      l.$observe("currentLimit", function(a) {
        "undefined" != typeof a && a && (c.currentLimit = Math.floor(a), c.tooltipData = p())
      });
      c.$on("resourcesChanged", function() {
        c.tooltipData = p()
      })
    }
    c.canUseNpcTrader = function() {
      f = new Resources(g.getResources());
      q = new Resources(m);
      n = new Resources(g.getCapacity());
      c.tooltipText = "Marketplace.NpcTrade.UseNpc";
      e || (c.tooltipText = "Marketplace.NpcTrade.NotNeeded");
      var a = n.getSum() == f.getSum();
      a && (c.tooltipText = "Marketplace.NpcTrade.NotNeeded");
      var b = f.getSum() >= q.getSum();
      b || (c.tooltipText = "Error.NotEnoughResources");
      var h;
      switch(c.type) {
        case "celebration":
          (h = !c.ongoingCelebration) || (c.tooltipText = "Celebration.QueueFull");
          break;
        case "unitUpgrade":
          (h = !c.unitsResearch.data.upgradeQueueFull) || (c.tooltipText = "Units.Research.UpgradeQueueFull");
          break;
        case "unitResearch":
          (h = !c.unitsResearch.data.researchQueueFull) || (c.tooltipText = "Units.Research.ResearchQueueFull");
          break;
        case "unitTrain":
          c.tooltipText = "Units.Tooltip.MaxWithTrader";
          break;
        default:
          h = !0
      }
      return e && !a && b && h
    };
    c.canUseNpcTrader();
    c.useNpcTrader = function() {
      n = new Resources(g.getCapacity());
      f = new Resources(g.getResources());
      q = new Resources(m);
      var a = f;
      if("unitTrain" == c.type) {
        var b = new Resources(m), e = h();
        0 < e && (b.multiply(e), a = f.distribute(n, b))
      }else {
        a = f.distribute(n, q)
      }
      c.overlayConfig.routeNamedParam = "npcOverlay";
      c.openOverlay("npcMerchantOverlay", {wood:a[Resources.WOOD] || 0, clay:a[Resources.CLAY] || 0, iron:a[Resources.IRON] || 0, crop:a[Resources.CROP] || 0, closeWindow:!0})
    }
  }}
};
Travian.Directive.npcTraderButton.$inject = ["VillageService"];
Travian.Directive.numberAdjuster = function(a) {
  return{restrict:"E", transclude:!0, replace:!0, scope:{numberModel:"=", min:"@", max:"@"}, templateUrl:"tpl/directive/generalElements/numberAdjuster.html", link:function(c, b) {
    function l() {
      c.numberModel > c.min && (c.numberModel--, c.$apply());
      null !== m && !1 === U.M().$ && (Travian.tick.unbind(m), m = null)
    }
    function h() {
      c.numberModel < c.max && (c.numberModel++, c.$apply());
      null !== f && !1 === U.M().$ && (Travian.tick.unbind(f), f = null)
    }
    b = $(b);
    var g = b.find(".decr"), e = b.find(".incr"), m, f, n;
    U.ca(g[0], function() {
      l();
      n = a(function() {
        n = null;
        m = Travian.tick.bind(l)
      }, 400)
    });
    U.ca(e[0], function() {
      h();
      n = a(function() {
        n = null;
        f = Travian.tick.bind(h)
      }, 400)
    });
    var q = U.H("up", function() {
      null !== n && a.cancel(n)
    });
    c.$on("$destroy", function() {
      q();
      U.s(g[0]);
      U.s(e[0]);
      null !== m && Travian.tick.unbind(m);
      null !== f && Travian.tick.unbind(f)
    })
  }}
};
Travian.Directive.numberAdjuster.$inject = ["$timeout"];
Travian.Directive.onlineStatus = function() {
  return{restrict:"E", template:'<i class="{{iconClass}}_{{colorFlag}} {{additionalClass}}" alt="{{alt}}" tooltip tooltip-translate="{{title}}" tooltip-data="{{titleData}}"</i>', replace:!0, scope:!0, link:function(a, c, b) {
    function l() {
      var c;
      a.iconClass = b.iconClass;
      a.additionalClass = b.additionalClass;
      0 == b.status ? c = 0 : 1 == b.status || "true" == b.status || 1 == b.isOnline || "true" == b.isOnline ? c = 1 : (c = a.$root.currentServerTime - b.status, c = 86400 > c ? 2 : 86400 <= c && 259200 > c ? 3 : 259200 <= c && 604800 > c ? 4 : 5, 10 > b.status && (c = b.status));
      a.colorFlag = h[c];
      a.alt = Travian.translate("Player.OnlineStatus_" + c);
      a.titleData = "";
      "undefined" != typeof b.text && "" != b.text ? 0 < c ? (a.title = b.text + "_onlineState", a.titleData = "state:" + Travian.translate("Player.OnlineStatus_" + c)) : a.title = b.text : a.title = "Player.OnlineStatus_" + c
    }
    var h = {0:"black", 1:"online", 2:"24h", 3:"3d", 4:"7d", 5:"inactive"};
    multiObserve(b, ["status"], l);
    multiObserve(b, ["iconClass"], l);
    multiObserve(b, ["additionalClass"], l);
    multiObserve(b, ["isOnline"], l);
    multiObserve(b, ["text"], l);
    l()
  }}
};
Travian.Directive.pagination = function(a) {
  return{templateUrl:"tpl/mainlayout/modals/partials/pagination.html", restrict:"EA", transclude:!0, scope:{itemsPerPage:"=", numberOfItems:"=", currentPage:"=", displayPageFunc:"=", routeNamedParam:"@"}, link:function(c, b, l) {
    function h() {
      var b = a.getParam(l.routeNamedParam);
      "undefined" != typeof b ? (b = parseInt(b), c.currentPage = isNaN(b) ? f || null : b) : c.currentPage = f || null;
      g()
    }
    function g() {
      var b = [], f = [], g = Math.ceil(e / m);
      c.currentPage > g && (c.currentPage = g);
      for(var h = 0;h < g;h++) {
        b.push(h + 1)
      }
      5 < b.length ? (f.push(1, g), b = c.currentPage, 1 == b ? f.splice(1, 0, 2, "...") : 2 == b ? f.splice(1, 0, 2, 3, "...") : 3 == b ? f.splice(1, 0, 2, 3, 4, "...") : 3 < b && 2 < g - b ? f.splice(1, 0, "...", b - 1, b, b + 1, "...") : 3 < b && 2 == g - b ? f.splice(1, 0, "...", b - 1, b, b + 1) : 3 < b && 1 == g - b ? f.splice(1, 0, "...", b - 2, b - 1, b) : 3 < b && 0 == g - b && f.splice(1, 0, "...", b - 2, b - 1)) : f = b;
      c.filteredPageNumbers = f;
      c.requiredNumberOfPages = g;
      c.nextPage = function() {
        c.currentPage != g && c.setPage(c.currentPage + 1)
      };
      c.prevPage = function() {
        1 != c.currentPage && c.setPage(c.currentPage - 1)
      };
      c.firstPage = function() {
        1 != c.currentPage && c.setPage(1)
      };
      c.lastPage = function() {
        c.currentPage != g && c.setPage(g)
      };
      c.setPage = function(b) {
        null != b && a.m(l.routeNamedParam, b)
      };
      c.disableNext = function() {
        return c.currentPage == c.requiredNumberOfPages
      }
    }
    var e, m, f;
    l.$observe("startupPosition", function() {
      "undefined" != typeof l.startupPosition && 0 < c.itemsPerPage && (f = Math.floor(l.startupPosition / c.itemsPerPage) + 1, c.setPage(f), c.currentPage = f)
    });
    c.$watch("itemsPerPage", function(a) {
      "undefined" == typeof a || 0 == a ? c.visible = !1 : (c.visible = !0, m = a)
    });
    c.$watch("numberOfItems", function(a) {
      "undefined" == typeof a || 0 == a || a <= c.itemsPerPage ? (c.currentPage = f || null, c.visible = !1, h()) : c.itemsPerPage <= a && (c.visible = !0, e = a, g())
    });
    c.$watch("currentPage", function(a) {
      "undefined" == typeof a && (c.currentPage = f || null);
      c.setPage(c.currentPage);
      c.$parent[l.displayPageFunc](c.currentPage)
    });
    h();
    c.$on("urlChanged", function(a, b) {
      "undefined" != typeof b[c.routeNamedParam] && h()
    });
    b.bind("$destroy", function() {
      a.O(c.routeNamedParam)
    })
  }}
};
Travian.Directive.pagination.$inject = ["RoutingService"];
Travian.Directive.pieChart = function() {
  return{restrict:"EA", replace:!1, scope:{data:"="}, link:function(a, c, b) {
    a.$watch("data", function() {
      if("undefined" != typeof a.data) {
        var l = !0;
        "undefined" != typeof b.labelInPie && (l = a.$eval(b.labelInPie));
        var h = !1;
        "undefined" != typeof b.percentInPie && (h = a.$eval(b.percentInPie));
        $.plot(c, a.data, {series:{pie:{show:!0, radius:0.98, label:{show:l, radius:0.6, formatter:function(a, b) {
          return h ? "<div>" + Travian.Filter.bidiNumber()(Math.round(b.percent), "percent") + "</div>" : "<div>" + b.data[0][1] + "</div>"
        }}}}, legend:{backgroundColor:"transparent", labelBoxBorderColor:"none", labelFormatter:function(a, b) {
          var c = Travian.Filter.bidiNumber()(Math.round(b.percent), "percent");
          return"<div>" + a + "<br>" + c + " (" + b.data[0][1] + ")</div>"
        }}, grid:{hoverable:!0}});
        c.find(".legend table").addClass("transparent");
        var g = -1;
        c.find(".pieLabel").bind("mouseover", function(a) {
          var b = a.currentTarget.id, b = b.substr(b.length - 1);
          $(a.relatedTarget).trigger("plothover", [{}, {seriesIndex:b}])
        });
        c.bind("plothover", function(a, b, f) {
          null == f ? -1 != g && (c.find(".legend table .legendLabel").css("font-weight", "normal"), g = -1) : f.seriesIndex != g && (g = f.seriesIndex, c.find(".legend table .legendLabel").css("font-weight", "normal"), c.find(".legend table .legendLabel")[g].style.fontWeight = "bold")
        })
      }
    })
  }}
};
Travian.Directive.prestigeStars = function() {
  return{restrict:"E", scope:{stars:"=", size:"@", playerId:"@"}, template:'<div><i class="prestigeStar prestige_star{{star[0]}}_{{size}}_illu"></i><i class="prestigeStar prestige_star{{star[1]}}_{{size}}_illu"></i><i class="prestigeStar prestige_star{{star[2]}}_{{size}}_illu"></i></div>', replace:!0, link:function(a, c, b) {
    function l(a) {
      for(var b = Travian.Config.prestige, c = {bronze:0, silver:0, gold:0}, e = Object.keys(b).map(function(a) {
        return parseInt(a, 10)
      }).sort(function(a, b) {
        return a - b
      }).reverse(), g = 0;g < e.length;g++) {
        var h = e[g];
        if(a >= h) {
          c = b[h];
          break
        }
      }
      return c
    }
    function h(b) {
      a.star = ["Empty", "Empty", "Empty"];
      angular.forEach(["bronze","silver","gold"], function(c) {
        for(var e = b[c];0 < e;) {
          e--, a.star[e] = c.charAt(0).toUpperCase() + c.slice(1)
        }
      })
    }
    var g = 0, e = null;
    a.star = ["Empty", "Empty", "Empty"];
    b.$observe("playerid", function(a) {
      g = a;
      Player.fetchPrestige(g, function(a) {
        e = l(a);
        h(e)
      })
    });
    a.$watch("stars", function() {
      a.stars && h(a.stars)
    })
  }}
};
Travian.Directive.prestigeStars.$inject = [];
Travian.Directive.progressbar = function(a, c) {
  var b = 20, l = 1.5;
  return{restrict:"EA", replace:!0, template:c.get("tpl/directive/generalElements/progressbar.html"), scope:!0, link:function(c, g, e) {
    function m(a) {
      var b = !0;
      e.interpolationThreshold && (b = Math.abs(t - a) > e.interpolationThreshold);
      t = a;
      c.$evalAsync(function() {
        f(b && "true" == e.valueInterpolation)
      })
    }
    function f(a) {
      var b = 100 * Math.min(z, t) / z;
      if(b < u.main.current || !a) {
        u.main.digitElemAmount.textContent = C(t, 99999, 0), u.main.digitElemCapacity.textContent = C(z, 99999, 0)
      }
      a && (u.additional.current = b, q("additional"), b < u.main.current ? (u.marker.current = Math.max(u.marker.current, u.main.current), q("marker"), "undefined" != typeof u.main.tmp && (u.main.tmp = b)) : "undefined" == typeof u.main.tmp && (u.main.tmp = u.main.current), v || (b > u.main.current && (u.main.tmp = u.main.current), p()), c.labelIcon && r(b > u.main.current));
      u.main.current = b;
      q("main")
    }
    function n() {
      var b = a.K();
      b < D + 0.5 || (D = b, u.main.current = 100 - 100 * ((c.finishTime - b) / c.duration), q("main"))
    }
    function q(a) {
      var b = "current";
      "undefined" != typeof u[a].tmp && (b = "tmp");
      isNaN(u[a][b]) || (u[a][b] = Math.max(0, Math.min(u[a][b], 100)), u[a][b] = Math.round(10 * u[a][b]) / 10, u[a].last != u[a][b] && (0 >= u[a][b] ? (u[a].elem.style.zIndex = -1, u[a].elem.style.width = "0%") : (u[a].elem.style.zIndex = u[a].z, u[a].elem.style.width = u[a][b] + "%"), 100 > u[a].last && 100 == u[a][b] ? $(u[a].elem).addClass("full") : 100 == u[a].last && 100 > u[a][b] && $(u[a].elem).removeClass("full"), u[a].last = u[a][b], "main" == a && e.percTooltip && (c.barTooltip = sa(new qa({value:u.main[b], 
      Ha:"percent"})))))
    }
    function p() {
      v = window.setTimeout(function B() {
        v = window.setTimeout(B, b);
        var a = !1;
        "undefined" != typeof u.main.tmp && u.main.tmp < u.main.current ? (u.main.tmp += l, u.main.tmp >= u.main.current && (u.main.tmp = u.main.current, a = !0), q("main"), u.main.digitElemAmount && (u.main.digitElemAmount.textContent = C(parseInt(z * u.main.tmp / 100), 99999, 0))) : a = !0;
        a && 0 < u.additional.current && (u.additional.current = 0, q("additional"));
        var f = !1;
        u.marker.current > u.main.current ? (u.marker.current -= l, u.marker.current <= u.main.current && (u.marker.current = u.main.current, f = !0), q("marker")) : f = !0;
        f && 0 < u.marker.current && (u.marker.current = 0, q("marker"));
        a && f && (delete u.main.tmp, t = parseInt(e.value), u.main.digitElemAmount.textContent = C(t, 99999, 0), e.onInterpolationEnd && (c.$eval(e.onInterpolationEnd), requestAngularApply()), window.clearTimeout(v), v = 0)
      }, 200)
    }
    function r(a) {
      var b = $(g);
      if(a) {
        a = b.find(".labelIcon.increase").length;
        var f = c.labelIcon;
        e.gainAnimationIcon && (f = e.gainAnimationIcon + " downscale");
        var l = $('<i class="labelIcon ' + f + ' animated increase" style="z-index: ' + (15 + a) + '"></i>')
      }else {
        a = b.find(".labelIcon.decrease").length, l = $('<i class="labelIcon ' + c.labelIcon + ' animated decrease" style="z-index: ' + (5 + a) + '"></i>')
      }
      b.prepend(l);
      window.setTimeout(function() {
        l && l.remove()
      }, 1E3)
    }
    var s = null, v = 0, u = {main:{current:0, last:-1, z:2, elem:g[0].querySelector(".perc")}, additional:{current:0, last:-1, z:1, elem:g[0].querySelector(".additionalPerc")}, marker:{current:0, last:-1, z:3, elem:g[0].querySelector(".marker")}}, t = 0, z = 0;
    $.each(["labelIcon", "showCountdown", "percTooltip"], function(a, b) {
      if(e[b] || "" == e[b]) {
        c[b] = e[b]
      }
    });
    $.each("perc additionalPerc marker finishTime finishTimeTotal duration type value maxValue label".split(" "), function(a, b) {
      (e[b] || "" == e[b]) && e.$observe(b, function(a) {
        if("undefined" != typeof a) {
          switch(b) {
            case "perc":
              u.main.current = a;
              q("main");
              break;
            case "additionalPerc":
              u.additional.current = u.main.current + parseInt(a);
              q("additional");
              break;
            case "marker":
              u.marker.current = a;
              q("marker");
              break;
            case "value":
              m(a);
              break;
            case "maxValue":
              z = a;
              f(!1);
              break;
            case "finishTime":
            ;
            case "duration":
              c[b] = a;
              null !== s || (isNaN(c.finishTime) || isNaN(c.duration)) || (s = Travian.tick.bind(n));
              break;
            default:
              c[b] = a
          }
        }
      })
    });
    if(e.maxValue) {
      var A = '<div class="values">' + ta(new qa({current:e.value, Va:e.value, threshold:99999, Hb:!0})) + "</div>";
      $(g).prepend(A);
      u.main.digitElemAmount = g[0].querySelector(".amount");
      u.main.digitElemCapacity = g[0].querySelector(".capacity")
    }
    if(e.valueInterpolation || "" == e.valueInterpolation) {
      u.additional.elem.className += " increaseBar", u.marker.elem.className += " decreaseBar", u.marker.z = 0, $(g).find(".bar").css("transition", "none")
    }
    var C = Travian.Filter.shortBigNumber(), D = 0;
    g.bind("$destroy", function() {
      null !== s && Travian.tick.unbind(s)
    });
    c.$on("$destroy", function() {
      null !== s && Travian.tick.unbind(s);
      v && window.clearTimeout(v)
    })
  }}
};
Travian.Directive.progressbar.$inject = ["ServertimeService", "$templateCache", "$timeout"];
Travian.Directive.reward = function(a) {
  return{restrict:"E", scope:{type:"=", value:"=", checkStorage:"=?", size:"@", flyingResTrigger:"="}, template:a.get("tpl/directive/generalElements/reward.html"), link:function(a) {
    a.tribeId = Travian.Player.data.tribeId;
    a.heroItems = Travian.Config.heroItems
  }}
};
Travian.Directive.reward.$inject = ["$templateCache"];
Travian.Directive.searchVillage = function(a) {
  return{restrict:"E", replace:!0, scope:{checkTargetFct:"=", callback:"=", api:"=", showDuration:"@", showDistance:"@"}, templateUrl:"tpl/mainlayout/partials/searchVillage.html", link:function(c, b, l) {
    "undefined" == typeof c.api.result && (c.api.result = {});
    var h = parseInt(c.api.x), g = parseInt(c.api.y);
    b.find(".villageName");
    c.villageNamePlaceHolder = Travian.translate("SearchVillage.Villagename");
    c.inputAutoFocus = !1;
    c.showOwnVillages = !1;
    l.$observe("showOwnVillages", function(b) {
      a.o(function() {
        "true" === b && 1 < Travian.Player.data.villages.length && (c.showOwnVillages = !0)
      })
    });
    c.selectVillage = function(a) {
      if(null == a) {
        c.api.result.villageSearched = "", c.api.result.villageReturned = "", c.api.result.villageCoordX = "", c.api.result.villageCoordY = ""
      }else {
        var b = id2xy(a.villageId);
        c.api.result = {villageSearched:a.name, villageCoordX:b.x, villageCoordY:b.y, villageReturned:a.name}
      }
      c.checkTargetFct()
    };
    c.searchByVillageCoords = function() {
      c.api.result.villageSearched = "";
      c.api.result.villageReturned = "";
      "" !== c.api.result.villageCoordX && "" !== c.api.result.villageCoordY && c.checkTargetFct()
    };
    c.api.getVillageId = function() {
      if("undefined" == typeof c.api.result) {
        return 0
      }
      var a = xy2id(parseInt(c.api.result.villageCoordX, 10), parseInt(c.api.result.villageCoordY, 10));
      isNaN(a) && (a = 0);
      return a
    };
    c.api.setData = function(a, b, f) {
      "undefined" === typeof c.api.result && (c.api.result = {});
      null != a && (c.api.result.villageReturned = a, c.api.result.villageSearched = a);
      null != b && (c.api.result.villageCoordX = b);
      null != f && (c.api.result.villageCoordY = f);
      c.disableSearch = a
    };
    c.api.resetData = function() {
      c.api.result = {villageSearched:"", villageCoordX:"", villageCoordY:"", villageReturned:"", showDuration:!1}
    };
    isNaN(h) || isNaN(g) ? c.inputAutoFocus = !0 : (c.api.setData(null, h, g), c.callback())
  }}
};
Travian.Directive.searchVillage.$inject = ["SessionService"];
Travian.Directive.slider = function(a) {
  return{scope:{sliderData:"=", sliderMax:"=", sliderMin:"=", sliderShowMaxButton:"=", iconClass:"@", sliderChanged:"=", sliderSteps:"=", forceSteps:"@", sliderLock:"=", sliderMarkers:"=", sliderRelease:"=", inputAutofocus:"=", hideSteps:"@"}, restrict:"E", templateUrl:"tpl/mainlayout/partials/slider.html", link:function(c, b, l) {
    function h() {
      "function" == typeof B && B();
      "function" == typeof H && H();
      U.s(b);
      U.s(q[0]);
      U.s(p[0])
    }
    function g() {
      var a = !1, b = !1;
      U.ca(p[0], function() {
        var a = e();
        A.zb || A.moveStart(a);
        n.css("cursor", "pointer");
        b = !0
      });
      B = U.H("up", function() {
        A.Zg();
        n.css("cursor", "default");
        b && "function" == typeof c.sliderRelease && c.sliderRelease();
        b = !1
      });
      H = U.H("move", function() {
        var a = e();
        A.move(a)
      });
      U.onPointerOver(q[0], function() {
        t.hide();
        a = !0;
        return!1
      });
      U.onPointerOut(q[0], function() {
        a = !1
      });
      U.Ie(p[0], function() {
        "touch" != U.Xa() && v.focus()
      });
      U.onPointerOver(p[0], function() {
        if(!0 === A.zb || a) {
          return!1
        }
        t.show()
      });
      U.onPointerOut(p[0], function() {
        t.hide()
      });
      U.He(p[0], function() {
        var a = e().x;
        t.css(f, a + "px");
        var b = A.pe(a);
        if(b > A.max || b < A.min || -8 > a || a > A.width + 8) {
          return t.hide(), !1
        }
        z[0].innerHTML = b
      });
      U.Ma(p[0], function() {
        t.hide();
        var a = e().x;
        A.la(A.pe(a));
        "function" == typeof c.sliderRelease && c.sliderRelease()
      })
    }
    function e() {
      var a = r.offset(), b = U.M(), a = {x:b.current.x - a.left, y:b.current.y - a.top};
      "right" == f && (a.x = r.width() - a.x);
      return a
    }
    function m(a, b) {
      if("function" === typeof c.sliderChanged) {
        var e = c.sliderChanged(a, b, c.sliderData);
        "undefined" != typeof e && (a = e)
      }
      isNaN(a) || (q.css(f, a * A.width / A.max), s.css("width", 100 * a / A.max + "%"), c.value = a, "undefined" !== typeof c.sliderData && (c.sliderData.value = a), requestAngularApply());
      return a
    }
    b = $(b);
    var f = getReadingDirectionFrom(), n = b.find(".sliderContainer"), q = b.find(".handle"), p = b.find(".trackContainer"), r = b.find(".track"), s = b.find(".progressMarker"), v = b.find(".value"), u = b.find(".maxButton"), t = b.find(".hoverIndicator"), z = t.find(".hoverValue"), A = new Qa({min:c.sliderMin || 0, max:c.sliderMax || 1, customSteps:c.sliderSteps || 1, width:r.width(), headChanged:m});
    c.sliderSteps && (c.stepCount = A.Ga);
    var C = "undefined" == typeof c.forceSteps || "true" == c.forceSteps;
    "function" === typeof c.sliderChanged && ("undefined" !== typeof c.sliderData ? c.sliderChanged(c.sliderData.value, 0, c.sliderData) : c.sliderChanged(c.sliderMin, 0, c.sliderData));
    "undefined" !== typeof c.sliderData ? (A.la(c.sliderData.value || 0, C), 0 == c.sliderData.value && m(0, 0)) : m(0, 0);
    "true" == l.inputAutofocus && c.$$postDigest(function() {
      v.focus()
    });
    var D = null, y = [37, 38, 39, 40];
    v.keyup(function(b) {
      null !== D && (a.cancel(D), D = null);
      if(0 <= $.inArray(b.keyCode ? b.keyCode : b.which, y)) {
        return!1
      }
      b = $(this).val();
      b != parseInt(b, 0) && (b = parseInt(b, 0), isNaN(b) && (b = 0), $(this).val(b));
      D = a(function() {
        D = null;
        A.la(c.value, C)
      }, 500)
    });
    v.blur(function() {
      A.la(c.value, C);
      null !== D && (a.cancel(D), D = null)
    });
    c.$watch("sliderShowMaxButton", function(a) {
      return!1 !== a ? u.show() : u.hide()
    }, !0);
    c.$watch("sliderSteps", function(a) {
      "undefined" != typeof a && (A.update({customSteps:parseInt(a) || 1}), c.sliderSteps && (c.stepCount = A.Ga))
    }, !0);
    c.$watch("sliderMin", function(a) {
      if("undefined" != typeof a) {
        var b = A.tb();
        A.update({min:a});
        c.sliderSteps && (c.stepCount = A.Ga);
        A.la(b, C);
        a = A.tb();
        q.css(f, A.pg());
        v.val(isNaN(a) ? 0 : a)
      }
    }, !0);
    c.$watch("sliderMax", function(a) {
      if("undefined" != typeof a) {
        var b = A.tb();
        A.update({max:a});
        a < b && A.la(b, C);
        a = A.tb();
        c.sliderSteps && (c.stepCount = A.Ga);
        A.la(a, C)
      }
    }, !0);
    c.$watch("sliderData", function(a) {
      if("undefined" === typeof a) {
        return!1
      }
      A.la(a.value, C)
    }, !0);
    c.$watch("sliderLock", function(a) {
      a ? (h(), v.prop("disabled", !0)) : (g(), v.prop("disabled", !1))
    }, !0);
    c.$on("setSliderTo", function(a, b) {
      A.la(b, C)
    });
    c.Math = Math;
    c.setMax = function() {
      A.Ue(100)
    };
    var B = null, H = null;
    c.$on("$destroy", function() {
      h();
      v.unbind()
    })
  }}
};
Travian.Directive.slider.$inject = ["$timeout"];
Travian.Directive["switch"] = function(a, c) {
  return{restrict:"E", priority:-1, scope:{switchCallback:"=", switchDisabled:"=?", "switch":"=?switchModel"}, template:a.get("tpl/directive/generalElements/switch.html"), link:function(a, l, h) {
    a.switchName1 = Travian.translate(h.switchName1);
    a.switchName2 = Travian.translate(h.switchName2);
    a.switchChanged = function() {
      "function" === typeof a.switchCallback && c(function() {
        a.switchCallback(a["switch"])
      })
    }
  }}
};
Travian.Directive["switch"].$inject = ["$templateCache", "$timeout"];
Travian.Directive.tabulation = function(a, c) {
  function b(a) {
    this.routeNamedParam = "tab";
    this.bodyTemplatePrefix = "";
    this.tabSpecificBodyTemplatePrefix = {};
    this.bodyTemplateSuffix = ".html";
    this.tabType = "maintab";
    this.tabs = ["main"];
    this.currentTab = null;
    this.scrollContentHeightOffset = 0;
    this.disableScrollingForTabs = [];
    this.disableScrolling = !1;
    this.soundType = Wa;
    this.k = function(a) {
      $.extend(this, a)
    };
    "undefined" !== typeof a && (this.k(a), "subtab" == a.tabType && (this.soundType = Xa))
  }
  return{restrict:"EA", transclude:!0, templateUrl:function(a, b) {
    var c = "tpl/mainlayout/modals/partials/tabulation.html";
    "undefined" != typeof b.templateUrl && (c = b.templateUrl);
    return c
  }, link:function(l, h, g) {
    function e() {
      if("undefined" !== typeof l.tabData.disableScrollingForTabs) {
        for(var a = 0;a < l.tabData.disableScrollingForTabs.length;a++) {
          if(l.tabData.disableScrollingForTabs[a] === l.tabData.currentTab) {
            return!0
          }
        }
      }
      return l.tabData.disableScrolling
    }
    function m() {
      var b = a.getParam(l.tabData.routeNamedParam);
      b ? l.tabData.currentTab = b : l.tabData.tabs && (l.tabData.currentTab = l.tabData.tabs[0]);
      if(l.tabData.currentTab) {
        l.tabData.currentDisableScrolling = e();
        b = "";
        "undefined" != typeof l.tabData.tabName && (b = "_" + l.tabData.tabName);
        var f = l.tabData.bodyTemplatePrefix;
        "undefined" !== typeof l.tabData.tabSpecificBodyTemplatePrefix[l.tabData.currentTab] && (f = l.tabData.tabSpecificBodyTemplatePrefix[l.tabData.currentTab]);
        l["tabBody" + b] = f + l.tabData.currentTab + l.tabData.bodyTemplateSuffix
      }else {
        0 == l.tabData.tabs.length && (l.tabData.currentDisableScrolling = l.tabData.disableScrolling)
      }
      "undefined" !== typeof l.w && "undefined" !== typeof l.w.updateWindowHeight && c(function() {
        l.w.updateWindowHeight(!0)
      }, 50)
    }
    g = g.tabConfigName || "tabConfig";
    l.tabData = new b(l[g]);
    var f = l.$watch(g, function(a) {
      "undefined" != typeof a && (l.tabData.k(a), void 0 !== l.w && 1 < l.tabData.tabs.length && (l.w.parametersToRemove[l.tabData.routeNamedParam] = !0), m())
    }, !0);
    l.selectTab = function(b) {
      a.m(l.tabData.routeNamedParam, b)
    };
    l.$on("urlChanged", function(a, b) {
      "undefined" != typeof b[l.tabData.routeNamedParam] && m()
    });
    h.bind("$destroy", function() {
      f()
    })
  }}
};
Travian.Directive.tabulation.$inject = ["RoutingService", "$timeout"];
Travian.Directive.tooltip = function(a, c, b, l) {
  var h = 300, g = null, e = null, m = 0;
  return{restrict:"A", scope:!0, link:function(f, n, q) {
    function p() {
      if(q.tooltipDataRequest && "string" == typeof q.tooltipDataRequest && "undefined" == typeof f.tooltipRequestData) {
        var a = q.tooltipDataRequest.split(";");
        if("function" == typeof f[a[0]]) {
          var b = f[a[0]];
          A = l(function() {
            a[0] = function(a, b) {
              f.tooltipRequestData = a;
              A = l(v, Math.max(0, 150 - b))
            };
            b.apply(this, a)
          }, h - 150);
          return!1
        }
      }
      return!0
    }
    function r() {
      C = null;
      null === e || (g.parentElement != n || Travian.Config.wd) || (e.$destroy(), e = null);
      null != g && (m = 0, g.parentElement != n || Travian.Config.wd || (g.remove(), g = null))
    }
    function s(a) {
      null != A && (l.cancel(A), A = null, !1 === f.tooltipRequestData && delete f.tooltipRequestData);
      null != C && (l.cancel(C), C = null, H = !0);
      a ? r() : H && (C = l(r, 10));
      H = !1
    }
    function v() {
      if(!y) {
        var b;
        null != g && g.remove();
        if(void 0 !== q.tooltipUrl && "" != q.tooltipUrl) {
          b = a.get(q.tooltipUrl)
        }else {
          if(void 0 !== q.tooltipContent) {
            b = q.tooltipContent
          }else {
            if(void 0 !== q.tooltipTranslate) {
              f.tOptions = q.tooltipTranslate, b = a.get(u.translate)
            }else {
              if(null != B) {
                f.tOptions = B, b = a.get(u.translate)
              }else {
                if("" == q.tooltip) {
                  return
                }
                b = q.tooltip
              }
            }
          }
        }
        g = new wa(n, b, t, D, !1, q.tooltipOffset);
        g.parentElement = n;
        void 0 != q.tooltipData && g.F.children().attr("data", q.tooltipData);
        if(void 0 != q.tooltipUrl || void 0 != q.tooltipTranslate || null != B) {
          e = f.$new(), c(g.F)(e)
        }
        H = !0;
        A = l(function() {
          A = null;
          y || null == g || (g.setPosition(), g.show())
        }, 10)
      }
    }
    var u = {translate:"tpl/tooltip/tooltipTranslate.html"}, t = q.tooltipPlacement, z = !0, A = null, C = null, D = "", y = !1, B = null, H = !1;
    q.$observe("tooltipHide", function() {
      "undefined" != typeof q.tooltipHide && (z = !f.$eval(q.tooltipHide))
    });
    q.$observe("tooltipShow", function() {
      "undefined" != typeof q.tooltipShow && (z = f.$eval(q.tooltipShow))
    });
    q.$observe("tooltipClass", function(a) {
      "undefined" != typeof a && (D = a)
    });
    q.$observe("tooltipChildClass", function(a) {
      "undefined" != typeof a && (a = n.children("." + a), 0 < a.length && (n = angular.element(a[0])))
    });
    q.$observe("tooltipData", function(a) {
      if("undefined" != typeof a) {
        var b = "";
        $.each(a.split(","), function(a, c) {
          var e = c.trim(), g = e.indexOf(":");
          0 < g ? (b = e.substr(0, g), f[b] = e.substr(g + 1)) : f[b] = f[b] + "," + e
        })
      }
    });
    q.$observe("tooltipTranslateSwitch", function(a) {
      if("undefined" != typeof a) {
        a = b(a)(f);
        B = null;
        for(var c in a) {
          if(!0 == a[c]) {
            B = c;
            break
          }
        }
        s(!0)
      }
    });
    f.$on("repositionTooltip", function() {
      null != g && g.setPosition()
    });
    f.$on("hideTooltip", function() {
      H && s()
    });
    U.onPointerOver(n[0], function() {
      if(z && !H && !y && null == C) {
        var a = (new Date).getTime();
        a < m + 10 || (null != A && (l.cancel(A), A = null, !1 === f.tooltipRequestData && delete f.tooltipRequestData), m = a, p() && (A = l(v, h)))
      }
    });
    n.bind("$destroy", function() {
      y || (U.s(n[0]), y = !0, s(!0))
    });
    U.onPointerOut(n[0], s);
    U.ca(n[0], function() {
      "false" !== q.tooltipHideOnClick && s()
    })
  }}
};
Travian.Directive.tooltip.$inject = ["$templateCache", "$compile", "$parse", "$timeout"];
Travian.Directive.translate = function(a) {
  return{restrict:"EA", scope:!0, link:function(c, b, l) {
    function h() {
      if("undefined" != typeof l.data) {
        var a = "";
        $.each(l.data.split(","), function(b, e) {
          var f = e.trim(), g = f.indexOf(":");
          0 < g ? (a = f.substr(0, g), c[a] = f.substr(g + 1).trim()) : c[a] = c[a] + "," + f
        })
      }
      if("undefined" != typeof l.options) {
        var b = e.match(/\?/g), f = l.options.split(",");
        if(null == b || b.length == f.length) {
          for(var b = e, h = 0;h <= f.length;h++) {
            b = b.replace("?", f[0].trim()), f.shift()
          }
          g($.trim(b))
        }
      }else {
        null == e.match(/\?/g) && g($.trim(e))
      }
    }
    function g(e) {
      var f = window.Travian.txt[e];
      if("undefined" == typeof f) {
        b.html("!!" + e + "!!")
      }else {
        if(Travian.Config.showLangKeys) {
          b.html(e)
        }else {
          f = bbCodeParser(f);
          if(-1 < f.indexOf("{{") && -1 < f.indexOf("}}") && -1 < f.indexOf("|")) {
            e = function(a, b) {
              for(var c = 0, e = a.length, f = [];-1 < (c = b.indexOf(a, c));) {
                f.push(c), c += e
              }
              return f
            };
            var g = e("{{", f), h = e("}}", f);
            if(g.length != h.length) {
              return
            }
            var l = [];
            $.each(g, function(a, b) {
              var c = f.substr(b, h[a] + 2 - b), e = c.replace("{{", "").replace("}}", "").split("|");
              if(!(1 >= e.length)) {
                var g = e.splice(0, 1)[0].split(",");
                $.each(e, function(a, e) {
                  var h = {replaceable:f.substr(b, c.length)};
                  if("undefined" == typeof Travian.htmlFilters[e]) {
                    h.injectable = ""
                  }else {
                    if("string" == typeof Travian.htmlFilters[e]) {
                      var m = 0, n = Travian.htmlFilters[e].match(/_\?_/g);
                      n && (m = n.length);
                      h.injectable = Travian.htmlFilters[e];
                      for(a = 0;a < m;a++) {
                        h.injectable = h.injectable.replace("_?_", (g[a] || "").trim())
                      }
                    }else {
                      "object" == typeof Travian.htmlFilters[e] && Travian.htmlFilters[e].tag && (m = Travian.htmlFilters[e].tag, h.injectable = "<" + m + ">{{" + g[0] + "}}</" + m + ">")
                    }
                  }
                  l.push(h)
                })
              }
            });
            $.each(l, function(a, b) {
              f = f.replace(b.replaceable, b.injectable)
            })
          }
          n && (f = f.slice(0, n));
          b.html(f);
          m = c.$new();
          a(b.contents())(m)
        }
      }
    }
    var e = b.text(), m = null, f = [], n = 0;
    "data" in l && "" != l.data && f.push("data");
    "options" in l && f.push("options");
    "limit" in l && (n = +l.limit);
    0 < f.length ? multiObserve(l, f, h) : h();
    c.$on("newTranslation", h);
    c.$on("$destroy", function() {
      null !== m && m.$destroy();
      b.remove()
    })
  }}
};
Travian.Directive.translate.$inject = ["$compile"];
Travian.Directive.userTextParse = function(a) {
  var c = {decorations:{tags:[{start:"[b]", end:"[/b]", param:"font-weight: bold"}, {start:"[i]", end:"[/i]", param:"font-style: italic"}, {start:"[u]", end:"[/u]", param:"text-decoration: underline"}, {start:"[s]", end:"[/s]", param:"text-decoration: line-through"}, {start:"[h]", end:"[/h]", param:"color: red"}], replace:function(a, c, h, g) {
    return'<span style="' + g + '">' + a + "</span>"
  }}, linkings:{tags:[{start:"[player:", end:"]", param:"player"}, {start:"[village:", end:"]", param:"village"}, {start:"[cell:", end:"]", param:"village"}, {start:"[alliance:", end:"]", param:"alliance"}], replace:function(b, c, h, g) {
    var e = h = "";
    if(isNaN(b)) {
      if(0 < b.indexOf('"')) {
        return!1
      }
      h = b
    }else {
      e = b
    }
    return a("<" + g + "-link " + g + 'id="' + e + '" ' + g + 'name="' + h + '"  showmissinglink></' + g + "-link>")(c)
  }}, reports:{tags:[{start:"[report:", end:"]"}], replace:function(b, c, h) {
    var g = b.replace(/[^a-f0-9]/g, "");
    if(b != g) {
      return!1
    }
    if(33 > g.length) {
      b = g.slice(0, -7);
      var e = Report.COLLECTION_PERSONAL, m = g.slice(-7, -5)
    }else {
      b = g.slice(0, -9), e = Report.ALL_COLLECTIONS[parseInt(g.slice(-9, -7))], m = g.slice(-7, -5)
    }
    g = g.slice(-5);
    return a('<i class="reportIcon reportIcon' + parseInt(m) + " colorIcon draggableReport\" clickable=\"openWindow('reportSingle', {'tab': '" + e + "','reportId': '" + b + "', 'collection': '" + e + "', 'reportToken': '" + g + "'}, null, true)\" draggable=\"{link: '[report:" + b + m + g + "]'" + (h.roomId ? ", source:'" + h.roomId + "'" : "") + '}"tooltip tooltip-translate="Chat.ReportIcon.Tooltip"></i>')(c)
  }}, medals:{tags:[{start:"[medal:", end:"]"}], replace:function(b, c) {
    var h = b.split("|");
    if(4 != h.length) {
      return!1
    }
    for(var g = 0;g < h.length;g++) {
      if(!h[g] || isNaN(h[g])) {
        return!1
      }
    }
    return a('<medal-image type="' + h[1] + '" rank="' + h[2] + '" week="' + h[3] + '"></medal-image>')(c)
  }}, achievements:{tags:[{start:"[achievement:", end:"]"}], replace:function(b, c) {
    var h = b.split("|");
    if(2 != h.length) {
      return!1
    }
    for(var g = 0;g < h.length;g++) {
      if(!h[g] || isNaN(h[g])) {
        return!1
      }
    }
    return a('<achievement-image player-id="' + h[0] + '" type="' + h[1] + '"></achievement-image>')(c)
  }}, coordinates:{tags:[{start:"(", end:")"}], replace:function(b, c) {
    if(0 > b.indexOf("|")) {
      return!1
    }
    var h = b.replace(/[^0-9\.|-]+/gi, ""), h = h.split("|");
    return 2 != h.length || isNaN(h[0]) || isNaN(h[1]) || "" == h[0] || "" == h[1] || !Ga(h[0], h[1]) ? !1 : a('<coordinates x="' + h[0] + '" y="' + h[1] + '"></coordinates>')(c)
  }}};
  return{restrict:"A", link:function(a, l, h) {
    function g() {
      var c = a.$eval(h.userTextParse);
      if("undefined" == typeof c || null == c) {
        c = ""
      }
      c = escapeHtmlTags("" + c);
      c = c.replace(/\n/g, "<br/>");
      e(c)
    }
    function e(e) {
      function g() {
      }
      function q() {
        p = -1;
        v = {};
        for(var a = 0;a < m.length;a++) {
          var b = c[m[a]];
          if(b) {
            for(var h = 0;h < b.tags.length;h++) {
              var l = e.indexOf(b.tags[h].start, r);
              0 > l || (!(0 < e.indexOf(b.tags[h].end, l)) || 0 <= p && l >= p) || (p = l, v = b.tags[h], g = b.replace)
            }
          }
        }
      }
      l.empty();
      var p = 0, r = 0, s = 0, v = {};
      do {
        q(), 0 <= p && (r = e.indexOf(v.end, p) + 1, 0 < r && (s != p && l.append(e.substring(s, p).replace(/ /g, "&nbsp;")), (s = g(e.substring(p + v.start.length, r - 1), a, h, v.param)) ? (l.append(s), r += v.end.length - 1) : (l.append(v.start), r = p + v.start.length), s = r))
      }while(0 <= p && 0 < r);
      l.append(e.substring(s).replace(/^[ \t]+/gm, function(a) {
        return Array(a.length + 1).join("&nbsp;")
      }))
    }
    var m = [];
    h.parse && (m = h.parse.split(";"));
    a.$watch(h.userTextParse, g);
    g()
  }}
};
Travian.Directive.userTextParse.$inject = ["$compile"];
Travian.Directive.window = function(a, c, b, l, h) {
  var g = 1050, e = null, m = !0;
  Travian.getWindowZIndex = function() {
    1950 <= g && (g = 1050);
    return g += 5
  };
  var f = null;
  return{restrict:"EA", scope:!0, template:"<div></div>", replace:!0, controller:function() {
    document.getElementById("windowLoadingSpinner").style.display = "block"
  }, compile:function() {
    return{pre:function(a, b) {
      function e(a) {
        "function" == typeof a ? a() : a.cacheObj.unsubscribe(a.idx)
      }
      a.windowParams = a.w.params;
      var f = c.get(a.w.border), g = c.get(a.w.inner);
      "string" != typeof g && a.closeWindow(a.windowParams.modalParams.windowName);
      f = f.replace("%REPLACE_WITH_INNER_TEMPLATE%", g);
      b[0].innerHTML = f;
      a.windowParams.modalParams.noLoadingSpinner && $(".windowLoading").hide();
      a.cacheObjSubscribed = [];
      a.parametersToRemove = {};
      a.heightOverrideByResize = 0;
      a.getParam = function(b, c, e) {
        c || (a.w.parametersToRemove[b] = !0);
        "undefined" === typeof e && (e = !1);
        c = h.getParam(b);
        c == parseInt(c) && 20 > c.length && (c = parseInt(c));
        if("undefined" != typeof a.windowParams && "undefined" != typeof a.windowParams[b]) {
          var f = a.windowParams[b];
          null != c || e || h.m(b, f);
          return"undefined" != typeof c ? c : f
        }
        return c
      };
      a.m = function(b, c) {
        "undefined" == typeof a.windowParams && (a.windowParams = {});
        "undefined" != typeof b && "undefined" != typeof c && (a.windowParams[b] = c, h.m(b, c))
      };
      a.removeParam = function(b) {
        "undefined" == typeof a.windowParams && (a.windowParams = {});
        delete a.windowParams[b];
        h.O(b)
      };
      a.getName = function() {
        return a.w.name
      };
      a.windowBroadcast = function(b, c) {
        a.$broadcast(b, c)
      };
      a.subscribe = function(b, c) {
        var f = a.cacheObjSubscribed.push({idx:b.subscribe(c), cacheObj:b});
        return function() {
          var b = a.cacheObjSubscribed.splice(f - 1, 1)[0];
          e(b)
        }
      };
      a.cb = function(b, c) {
        var f = a.cacheObjSubscribed.push(Cache.cb(b, c));
        return function() {
          var b = a.cacheObjSubscribed.splice(f - 1, 1)[0];
          e(b)
        }
      };
      a.Ta = function() {
        for(var b = 0;b < a.cacheObjSubscribed.length;b++) {
          e(a.cacheObjSubscribed[b])
        }
        a.cacheObjSubscribed = []
      };
      a.handleError = function(b, c) {
        "undefined" == typeof c && (c = "error");
        a[c] = "";
        if("undefined" != typeof b.errors) {
          if(isNaN(b.errors[0].params)) {
            var e = {}, f;
            for(f in b.errors[0].params) {
              e[f] = b.errors[0].params[f]
            }
          }else {
            var e = {param:b.errors[0].params}
          }
          a[c] = Travian.translate("Error." + b.errors[0].message, e);
          delete b.errors;
          return!1
        }
        return!0
      };
      a.Lf = function() {
        var b;
        "undefined" == typeof b && (b = "error");
        a[b] = ""
      }
    }, post:function(a, b) {
      function c() {
        a.windowParams = a.w.params;
        var e = a.windowParams.modalParams && a.windowParams.modalParams.zIndex || Travian.getWindowZIndex();
        b[0].style.zIndex = e;
        f && a.windows[f] && (a.windows[f].isActiveWindow = !1);
        a.w.isActiveWindow = !0;
        f = a.w.name;
        g();
        a.windowParams.modalParams.modal || a.windowParams.modal ? $("#modalWindowBlocker").css({display:"block", zIndex:e - 1}) : $("#modalWindowBlocker").css({display:"none"})
      }
      function g() {
        !0 === a.w.params.modalParams.setFocusWhenActive && b.find("input").first().focus()
      }
      function s(b) {
        if(27 !== b.keyCode) {
          return!0
        }
        if(f == a.windowName && a.w.params.modalParams.closeable) {
          if(0 < a.w.preventClose.length) {
            return a.w.preventClose.pop()(), !0
          }
          a.closeWindow(a.windowName)
        }
      }
      function v(c) {
        var f;
        f = "minHeight";
        var g = h.getParam("window");
        if("undefined" !== typeof a.tabData) {
          var l = a.tabData.currentTab
        }
        f = ("undefined" !== typeof config.windowConfig[g] && "number" === typeof config.windowConfig[g][f] ? config.windowConfig[g][f] : "object" === typeof config.windowConfig[g] && "undefined" !== typeof config.windowConfig[g][l] && "number" === typeof config.windowConfig[g][l][f] ? config.windowConfig[g][l][f] : !1) || 300;
        if(!0 === c) {
          return{height:f, max:f, min:f}
        }
        if(m || !e) {
          c = [];
          c.push(17);
          800 >= $(window).height() ? c.push(30) : (g = $("#resourceBar"), c.push($("#layoutHeader").outerHeight()), c.push(g.outerHeight() + parseInt(g.css("margin-top"))), c.push($("#footer").outerHeight()));
          c.push(35);
          for(var p = g = 0;p < c.length;p++) {
            g += c[p]
          }
          l = $(window).height();
          a.w.maxWindowHeight = l - g;
          g = 0;
          null != b[0].querySelector(".tabulation") && c.push(40);
          null != b[0].querySelector(".tabulation.subtab") && null == b[0].querySelector(".tabulation.subtab.vertical") && (p = b[0].querySelector(".tabulation.subtab").offsetHeight + 13, c.push(p));
          p = getOuterHeightWithMargin(b[0].querySelectorAll(".marginToScrollbar"));
          null != p && 0 < p && c.push(p);
          var p = (p = b[0].querySelector(".modalDecoration")) ? p.offsetHeight : 0, r = b[0].querySelector(".contentHeader");
          c.push(Math.max(p, r ? r.offsetHeight : 0));
          c.push(parseInt($(".modalContent").css("padding-bottom")));
          for(p = 0;p < c.length;p++) {
            g += c[p]
          }
          m = !0;
          e = l - g
        }
        c = e;
        a.heightOverrideByResize && (c = f = a.heightOverrideByResize);
        a: {
          l = 0;
          g = b[0].querySelectorAll(".scrollContent:not(.disableScrolling)");
          if(0 < g.length) {
            if(1 < g.length) {
              for(l = 0;l < g.length;l++) {
                if(0 < g[l].scrollHeight) {
                  g = g[l].scrollHeight;
                  break a
                }
              }
            }
            l = g[0].scrollHeight
          }
          g = l
        }
        g > c && (g = c);
        g < f && (g = f);
        return{height:g, max:c, min:f}
      }
      function u() {
        var c = $("#resourceBar"), c = $("#layoutHeader").outerHeight() + c.outerHeight() + parseInt(c.css("margin-top"));
        800 >= $(window).height() && (c = 10, "small" == a.w.params.modalParams.customTemplate || "modern" == a.w.params.modalParams.customTemplate) && (c = Math.max(10, ($(window).height() - y[0].offsetHeight) / 2));
        a.windowParams.modalParams.noPosition ? (b[0].style[getReadingDirectionFrom()] = 0, b[0].style.top = 0) : (b[0].style[getReadingDirectionFrom()] = $(window).width() / 2 - y[0].offsetWidth / 2 + "px", b[0].style.top = c + "px", t());
        b[0].style.opacity = 1;
        t()
      }
      function t() {
        var c = b[0].querySelector(".contentHeader h2");
        null == c && (c = b[0].querySelector(".modalDecoration"));
        null == c && (c = b[0].querySelector(".draggableHeader"));
        if(null != c && !c.draggable) {
          var e = w();
          U.ec(c, function() {
            a.$broadcast("windowDragged");
            e = U.H("move", function() {
              a.$broadcast("windowDragged")
            })
          }, function() {
            e();
            return!0
          }, {}, b[0], !1, "window" + a.w.name)
        }
      }
      function z(b) {
        b && (b = v(!0), a.w.maxWindowBodySize = b.height, a.w.maxWindowBodySizeObj = b, window.setTimeout(function() {
          a.$broadcast("scrollbarApi", "handleResize");
          a.$$phase || a.$digest()
        }, 1));
        window.setTimeout(function() {
          var b = v(!1);
          a.w.maxWindowBodySize = b.height;
          a.w.maxWindowBodySizeObj = b;
          window.setTimeout(function() {
            a.$broadcast("scrollbarApi", "handleResize");
            a.$$phase || a.$digest()
          }, 1);
          a.$$phase || a.$digest()
        }, 10)
      }
      function A() {
        function b(a) {
          c++;
          !0 === a && (e = !0);
          window.setTimeout(function() {
            f++;
            if(c === f) {
              if(l + h > (new Date).getTime() && Travian.pendingRequests.Jf()) {
                return!1
              }
              $(".windowLoading").hide();
              z(e);
              e = !1;
              m || (u(), m = !0);
              t();
              p = !1;
              requestAngularApply()
            }
          }, g)
        }
        var c = 0, e = !1, f = 0, g = 150, h = 2E3, l = (new Date).getTime(), m = !1, p = !0;
        window.setTimeout(function() {
          p && (f = c, b())
        }, h);
        null != I && (I(), G());
        a.w.updateWindowHeight = b;
        I = a.$on("ajaxPendingRequestsChanged", function() {
          b(!1)
        });
        G = a.$on("$includeContentLoaded", function() {
          b(!1)
        });
        b()
      }
      function C() {
        var c, e, f, g, h = $(b[0]).offset(), l = h[getReadingDirectionFrom()], h = h.top, m = $(window).width(), p = $(window).height(), r = parseInt(b[0].style[getReadingDirectionFrom()], 10), s = parseInt(b[0].style.top, 10);
        0 > B - m || 0 > H - p ? (B = m, H = p) : (f = B - m, g = H - p);
        if(l > m - 50 || h > p - 50) {
          c = l - r, e = h - s, l > m - 50 && (c = m - (r + f)), h > p - 50 && (e = p - (s + g))
        }
        if(void 0 !== c) {
          window.setTimeout(function() {
            if(50 > c || 50 > e) {
              e = c = 10
            }
            b[0].style.transform = "translate3d(" + c + "px," + e + "px,0)";
            b[0].style.display = "block"
          }, 100)
        }else {
          if(r > m || s > p) {
            a.windowParams.modalParams.noPosition = !1, b[0].style.transform = "translate3d(0,0,0)", u()
          }
        }
      }
      function D() {
        m = !0;
        a.w.updateWindowHeight(!1);
        C()
      }
      a.tabConfig = {};
      a.w.windowName = "window_name_not_defined";
      a.w.preventClose = [];
      a.w.isActiveWindow = !1;
      a.$on("makeWindowActive", function(b, e) {
        a.w.name === e && c()
      });
      $(window).bind("keyup", s);
      b.on("mousedown", c);
      a.windowName = a.w.name;
      var y = angular.element(b[0].querySelector(".modal"));
      b[0].style.position = "absolute";
      U.ec(b[0].querySelector(".modalDecoration"), w(), ha(!0), {}, b[0], !1);
      Math.max($(".modalDecoration", b).outerHeight(), $(".contentHeader", b).outerHeight());
      window.setTimeout(function() {
        l(b.contents())(a);
        A();
        g();
        c();
        a.w.setSize = z
      }, 10);
      a.w.waitUntilWindowIsReady = A;
      var B = $(window).width(), H = $(window).height();
      a.$on("activeVillageChanged", function() {
        a.w.waitUntilWindowIsReady && a.w.waitUntilWindowIsReady()
      });
      var I = null, G = null, J = !0;
      a.resizeWindow = function(c) {
        var e = b[0].querySelector(".modalContent"), f = 200, g = 100, h = null;
        y[0].getAttribute("min-width") && (f = parseInt(y[0].getAttribute("min-width"), 10));
        y[0].getAttribute("max-width") && (h = parseInt(y[0].getAttribute("max-width"), 10));
        y[0].getAttribute("min-height") && (g = parseInt(y[0].getAttribute("min-height")));
        var l = Math.max(f, e.offsetWidth + c.x), g = Math.max(g, e.offsetHeight + c.y);
        h && (l = Math.min(f, h));
        J && (l = c.x, g = c.y, J = !1);
        e.style.width = l + "px";
        e.style.height = g + "px";
        g -= Math.max($(".modalDecoration", b).outerHeight(), $(".contentHeader", b).outerHeight());
        a.heightOverrideByResize = g;
        a.w.updateWindowHeight(!0)
      };
      b.bind("$destroy", function() {
        null != I && (I(), G());
        var b = !1;
        angular.forEach(a.windows, function(a) {
          if(a.params.modalParams.modal || a.params.modal) {
            b = !0
          }
        });
        a.Ta();
        !a.windowParams.modalParams.modal && !a.windowParams.modal || b || $("#modalWindowBlocker").css({display:"none"});
        $(window).off("keyup", s);
        $(window).off("resize", D)
      });
      a.$on("$includeContentLoaded", function() {
        a.$broadcast("scrollbarApi", "checkLazyRenderer")
      });
      a.$on("forceWindowRerender", function() {
        window.setTimeout(function() {
          b[0].style.display = "none";
          b[0].style.display = "block"
        }, 100)
      });
      $(window).on("resize", D)
    }}
  }}
};
Travian.Directive.window.$inject = "WindowService $templateCache $http $compile RoutingService $timeout".split(" ");
Travian.Directive.windowBottomDock = function() {
  return{restrict:"A", link:function(a, c) {
    var b = c.closest(".modalContent");
    b.addClass("hasBottomDock");
    c.hasClass("bars") ? b.addClass("queueWithBars") : b.addClass("queueWithThumbs");
    a.w.updateWindowHeight(!0);
    c.bind("$destroy", function() {
      b.removeClass("hasBottomDock");
      b.removeClass("queueWithBars");
      b.removeClass("queueWithThumbs");
      a.w.updateWindowHeight(!0)
    })
  }}
};
Travian.Directive.windowOverlay = function(a, c, b, l) {
  function h() {
    this.defaultConfig = {routeNamedParam:"overlay", overlayName:"", inWindowPopupTemplate:"tpl/mainlayout/modals/partials/inWindowPopup.html", inWindowPopupTitle:"", inWindowPopupContentTemplate:"", isAWarning:!1};
    this.k = function(a) {
      $.extend(this, a)
    };
    this.Mb = function(a) {
      if("undefined" != typeof a) {
        var b = {};
        b[a] = this.defaultConfig[a];
        this.k(b)
      }else {
        this.k(this.defaultConfig)
      }
    };
    this.Mb()
  }
  return{restrict:"EA", template:c.get("tpl/mainlayout/modals/partials/windowOverlay.html"), scope:!0, link:function(a, c) {
    function m() {
      a.$parent.overlayConfig.k({overlayName:a.getParam(a.$parent.overlayConfig.routeNamedParam)});
      a.overlayController = window[a.getParam(a.$parent.overlayConfig.routeNamedParam) + "Ctrl"];
      a.$parent.inWindowPopupOpened = !0
    }
    function f(b) {
      if(b && b != a.overlayMaxScrollHeight && n) {
        var c = $(".inWindowPopup", n);
        if(0 != c.length) {
          var c = c.height() - $(".inWindowPopupContent", n).height(), e = n.outerHeight() - n.height();
          a.overlayMaxScrollHeight = Math.max(150, b - c - e);
          a.$broadcast("scrollbarApi", "handleResize")
        }
      }
    }
    a.$parent.overlayConfig = new h;
    a.$parent.overlayConfig.routeNamedParam = "overlay" + a.w.name;
    var n = null, q = null;
    a.$parent.openOverlay = function(b, c) {
      var e = a.getParam(a.$parent.overlayConfig.routeNamedParam);
      a.$parent.inWindowPopupOpened && e != b && a.closeOverlay();
      a.m(a.$parent.overlayConfig.routeNamedParam, b);
      "undefined" != typeof c && $.each(c, function(b, c) {
        a.m(b, c)
      });
      a.overlayMaxScrollHeight = 0
    };
    a.$parent.closeOverlay = function() {
      a.removeParam(a.$parent.overlayConfig.routeNamedParam);
      a.$parent.inWindowPopupOpened = !1;
      a.$parent.overlayConfig = new h;
      a.$parent.overlayConfig.routeNamedParam = "overlay" + a.w.name;
      q = n = a.overlayController = null
    };
    var p = null, r = null, s = a.$on("$includeContentLoaded", function() {
      a.$parent.inWindowPopupOpened && (l.cancel(p), p = l(function() {
        q && 0 != q.length || (n = $(".windowOverlay", c), 0 < n.length ? q = $(".inWindowPopup", n) : n = null);
        var b = $(".scrollContent", c);
        0 < b.length && (f(a.w.maxWindowHeight), r && r(), r = a.$watch("w.maxWindowHeight", function(a) {
          f(a, b.outerHeight())
        }))
      }, 100))
    });
    a.w.getOverlayHeightWithPadding = function(b) {
      if(!a.$parent.inWindowPopupOpened || !n) {
        return"none"
      }
      var f = c[0].querySelector(".inWindowPopup");
      if(null == f) {
        return"none"
      }
      var f = f.offsetHeight, h = parseInt(n.css("paddingTop")) - 5;
      return f + h + (b || 0) + "px"
    };
    a.$on("urlChanged", function(b, c) {
      a.w.isActiveWindow && (c[a.$parent.overlayConfig.routeNamedParam] && "undefined" != typeof a.getParam(a.$parent.overlayConfig.routeNamedParam) && !c.window) && m()
    });
    b.o(function() {
      "undefined" != typeof a.getParam(a.$parent.overlayConfig.routeNamedParam) && m()
    });
    a.$on("$destroy", function() {
      a.removeParam(a.$parent.overlayConfig.routeNamedParam);
      s()
    })
  }}
};
Travian.Directive.windowOverlay.$inject = ["RoutingService", "$templateCache", "SessionService", "$timeout"];
Travian.Directive.attributeInput = function() {
  return{replace:!0, restrict:"EA", templateUrl:"tpl/hero/partials/attributeInput.html", scope:{value:"=", change:"=", freePoints:"=", name:"@", max:"@", callback:"&"}, link:function(a, c) {
    function b() {
      a.total = parseInt(a.value) + parseInt(a.change)
    }
    a.total = 0;
    c.bind("blur", function() {
      a.total = parseInt(a.total);
      a.total != parseInt(a.value) + parseInt(a.change) && "function" == typeof a.callback && a.callback({name:a.name, total:a.total});
      b()
    });
    a.$watch("value", b);
    a.$watch("change", b)
  }}
};
Travian.Directive.attributeInput.$inject = [];
Travian.Directive.heroImageFile = function() {
  return{restrict:"E", template:'<img ng-src="{{cdnPrefix}}layout/{{imageFolder}}/source/heroNEW/{{file}}.png">', replace:!0, scope:{file:"@"}, link:function(a) {
    a.cdnPrefix = Travian.Config.cdnPrefix;
    a.imageFolder = "images";
    "rtl" == getDirection() && (a.imageFolder = "images_rtl")
  }}
};
Travian.Directive.heroImageFile.$inject = [];
Travian.Directive.heroItemContainer = function(a, c) {
  return{restrict:"E", templateUrl:"tpl/hero/partials/heroItemContainer.html", scope:{itemObject:"=item", useDifferentImage:"=?differentItemImage", dragObject:"=?dragObj", highlightObject:"=?highlightObj", clickHandler:"=?clickCallback", tooltipCond:"=?tooltipCondition", nextUpgradeCond:"=?displayNextUpgrade", hideStates:"=?hideItemStates", hideAmountContainer:"=?hideAmount", hideUpgradeContainer:"=?hideUpgrade", hideEquippedState:"=?hideEquipped", highlighted:"&highlighted"}, priority:999, compile:function(b, 
  l) {
    var h = angular.element(b[0].querySelector(".entityBox"));
    l.dragObj || (h.removeClass("draggableItem"), h.removeClass("draggable"), h.removeAttr("draggable"), h.removeAttr("dropable"), h.removeAttr("on-drag-init"), h.removeAttr("on-drag-stop"), h.removeAttr("disable-touch-drag"));
    l.clickCallback || (h.addClass("noClick"), h.removeAttr("clickable"));
    l.highlightObj || (h.removeAttr("on-pointer-over"), h.removeAttr("on-pointer-out"));
    return{post:function(b) {
      function e() {
        b.showTooltip = !0;
        "undefined" === typeof b.tooltipCond || null == b.tooltipCond ? "undefined" !== typeof b.itemObject && null != b.itemObject && "undefined" !== typeof b.itemObject.data && b.itemObject.filled || (b.showTooltip = !1) : b.showTooltip = b.tooltipCond
      }
      b.showNextUpgrade = "undefined" === typeof b.nextUpgradeCond || null == b.nextUpgradeCond ? !1 : b.nextUpgradeCond;
      b.itemImageIndex = "undefined" === typeof b.useDifferentImage || null == b.useDifferentImage ? 0 : b.useDifferentImage;
      b.heroItem = HeroItem;
      b.avatar = null;
      b.showTooltip = !0;
      b.getItem = function() {
        return b.itemObject
      };
      var l = HeroFace.get(a.getPlayerId()), f = l.subscribe(function() {
        b.avatar = angular.copy(l.getViewModel());
        requestAngularApply()
      });
      b.$watch("itemObject", e);
      e();
      b.onPointerOverHandler = function() {
        var a = b.itemObject.data.slot;
        b.itemObject.data.itemType == HeroItem.TYPE_OINTMENT && (a = HeroItem.SLOT_BAG);
        void 0 != b.highlightObject && b.highlightObject.turnOn(a)
      };
      c(h)(b);
      b.$on("destroy", function() {
        "undefined" !== typeof f && null != f && l.unsubscribe(f)
      })
    }}
  }}
};
Travian.Directive.heroItemContainer.$inject = ["SessionService", "$compile"];
Travian.Directive.itemDescription = function(a, c) {
  return{template:a.get("tpl/hero/partials/itemDescriptionDirective.html"), replace:!0, link:function(a, l, h) {
    function g() {
      var c = {}, f = null, g = null, l = {};
      a.id = h.itemDescription;
      a.hideInfo = !1;
      if("true" == h.hideInfo) {
        a.hideInfo = !0
      }else {
        "true" === a.nextUpgradeLevel ? a.nextUpgradeLevel = !0 : "false" !== a.nextUpgradeLevel && a.nextUpgradeLevel || (a.nextUpgradeLevel = !1);
        if("auctionItem" in h && "false" != h.auctionItem && h.auctionItem) {
          for(var p = ["running", "highestBidder", "bidden"], r = 0;r < p.length;r++) {
            for(var g = Auction.getCollection(p[r]), s = 0;s < g.data.length;s++) {
              if(a.id == g.data[s].data.id) {
                f = g.data[s].data;
                c = JSON.parse(JSON.stringify(f.bonuses));
                a.itemType = f.itemTypeId;
                break
              }
            }
            if(null != f) {
              break
            }
          }
        }else {
          for(var g = HeroItem.getCollection("own"), p = [], r = 0;r < g.data.length;r++) {
            0 < g.data[r].data.inSlot && (p[g.data[r].data.inSlot] = g.data[r])
          }
          for(r = 0;r < g.data.length;r++) {
            if(g.data[r].data.id == a.id) {
              g.data[r].setUseInfos(e, p);
              f = g.data[r].data;
              c = JSON.parse(JSON.stringify(f.bonuses));
              a.itemType = f.itemType;
              l.level = f.upgradeLevel;
              a.nextUpgradeLevel && (f.slot > HeroItem.SLOT_INVENTORY && f.slot < HeroItem.SLOT_BAG && (l.level += 1), HeroItem.ITEM_IMPROVEMENTS[a.itemType] && (c[HeroItem.BONUS_RESOURCES] && (c[HeroItem.BONUS_RESOURCES] += HeroItem.ITEM_IMPROVEMENTS[a.itemType].bonus), c[HeroItem.BONUS_CROP] && (c[HeroItem.BONUS_CROP] += HeroItem.ITEM_IMPROVEMENTS[a.itemType].bonus), a.itemType = HeroItem.ITEM_IMPROVEMENTS[a.itemType].id));
              0 < l.level && (l.type = Object.keys(f.baseUpgradeBonus)[0], l.maxUpgrades = Travian.Config.heroItems.maxUpgrades, a.nextUpgradeLevel && (c[l.type] = "undefined" == typeof c[l.type] ? f.baseUpgradeBonus[l.type] : c[l.type] + f.baseUpgradeBonus[l.type]), l.value = f.baseUpgradeBonus[l.type] * l.level, l.slot = f.slot);
              break
            }
          }
        }
        if(null != f) {
          c.hasOwnProperty(HeroItem.BONUS_UNIT_ID) && (g = nrToUnitId(c[HeroItem.BONUS_UNIT_ID], f.tribeId), a.unitName = Travian.translate("Troop_" + g), a.bonusUnitStrength = c[HeroItem.BONUS_UNIT_STRENGTH], delete c[HeroItem.BONUS_UNIT_ID], delete c[HeroItem.BONUS_UNIT_STRENGTH]);
          c.hasOwnProperty(HeroItem.BONUS_TROOP_HEALING) && delete c[HeroItem.BONUS_TROOP_HEALING];
          c.hasOwnProperty(HeroItem.BONUS_POTION) && delete c[HeroItem.BONUS_POTION];
          $.each(["BONUS_SPEED_HERO", "BONUS_SPEED_HORSE"], function(a, b) {
            c.hasOwnProperty(HeroItem[b]) && (c[HeroItem[b]] *= Travian.Config.TG_TROOP_SPEED)
          });
          a.instantUse = f.slot == HeroItem.SLOT_INSTANT_USE;
          a.consumable = (f.slot == HeroItem.SLOT_INSTANT_USE || f.slot == HeroItem.SLOT_BAG) && !f.cardGameItem;
          a.perDay = {max:f.maxPerDay, used:f.usedPerDay, maxWithoutLock:f.maxPerDayWithoutLock};
          a.bonuses = c;
          a.hasBonuses = !1;
          for(var v in c) {
            a.hasBonuses = !0
          }
          a.upgradeBonus = l
        }
      }
    }
    var e = Hero.get(c.getPlayerId());
    a.heroItem = HeroItem;
    h.$observe("itemDescription", function() {
      a.unitName = null;
      a.bonusUnitStrength = null;
      g()
    })
  }}
};
Travian.Directive.itemDescription.$inject = ["$templateCache", "SessionService"];
Travian.Directive.itemFilter = function(a) {
  return{restrict:"E", template:a.get("tpl/hero/partials/itemFilter.html"), scope:!0, link:function(a, b, l) {
    a.itemFilter = function(b) {
      a[l.func](b)
    };
    a.types = ["Slot1", "Slot4", "Slot3", "Slot2", "Slot5", "Slot6", HeroItem.TYPE_OINTMENT, HeroItem.TYPE_SCROLLS, HeroItem.TYPE_WATERBUCKET, HeroItem.TYPE_BOOK, HeroItem.TYPE_ARTWORK, HeroItem.TYPE_BANDAGE_25, HeroItem.TYPE_BANDAGE_33, HeroItem.TYPE_CAGES];
    a.iconNames = HeroItem.IconName
  }}
};
Travian.Directive.itemFilter.$inject = ["$templateCache"];
Travian.Directive.itemIcon = function() {
  return{restrict:"E", template:'<i class="heroItem" tooltip tooltip-url="tpl/hero/partials/itemTooltip.html" tooltip-data="id:{{id}},itemType:{{itemType}},auctionitem:{{auctionItem}},hideInfo:{{!auctionItem}}"></i>', replace:!0, scope:!0, link:function(a, c, b) {
    a.auctionItem = "auctionitem" in b ? !0 : !1;
    a.itemType = b.itemType;
    a.id = "auctionId" in b ? b.auctionId : b.itemType;
    b = Travian.Config.heroItems[a.itemType].slot;
    a = "undefined" != typeof HeroItem.IconName[a.itemType] ? "heroItem item_category_" + HeroItem.IconName[a.itemType] + "_small_flat_black" : "heroItem item_category_" + HeroItem.IconName["Slot" + b] + "_small_flat_black";
    $(c).addClass(a)
  }}
};
Travian.Directive.itemIcon.$inject = [];
Travian.Directive.buildingQuicklinks = function(a, c, b) {
  return{replace:!0, restrict:"EA", template:function(a, c) {
    return"undefined" != typeof c.showActive ? b.get("tpl/villagesOverview/partials/activeBuildings.html") : b.get("tpl/mainlayout/partials/buildingQuicklinks.html")
  }, link:function(b, h, g) {
    function e() {
      var a = {buildingType:Building.TYPE.MARKET, locationId:0, state:"disabled", queue:null};
      c.R("type" + Building.TYPE.MARKET, function(b) {
        null != b && (a.locationId = b.data.locationId, a.state = "normal", 0 < p.data.inTransport || 0 < p.data.inOffers) && (a.state = "active")
      }, g.villageId);
      b.merchants = p;
      b.market = a
    }
    function m() {
      for(var a = 0;a < b.unitBuilding.length;a++) {
        var c = b.unitBuilding[a].buildingType;
        b.unitBuilding[a].locationId = 0;
        b.unitBuilding[a].state = "disabled";
        for(var e = 0;e < q.data.length;e++) {
          var f = q.data[e].data;
          if(f.buildingType == c) {
            b.unitBuilding[a].locationId = f.locationId;
            b.unitBuilding[a].state = "normal";
            b.unitBuilding[a].queue = null;
            c = r.data.buildingTypes[f.buildingType];
            "undefined" != typeof c && 0 < c.length && (b.unitBuilding[a].state = "active", b.unitBuilding[a].queue = c, b.unitBuilding[a].lastFinished = c[c.length - 1].timeFinishedLast);
            break
          }
        }
      }
    }
    function f() {
      var f = a.i();
      g.villageId && (f = a.pa(g.villageId));
      null != f.data.villageId && (n(), q = c.na(f.data.villageId), r = UnitQueue.get(f.data.villageId), s = q.subscribe(m), v = r.subscribe(m), b.hideMarketplace || (p = new Merchants.get(f.data.villageId), u = p.subscribe(e)))
    }
    function n() {
      s && q.unsubscribe(s);
      v && r.unsubscribe(v);
      u && p.unsubscribe(u)
    }
    var q = null, p = null, r = null, s = null, v = null, u = null;
    b.unitBuilding = [{buildingType:Building.TYPE.BARRACKS}, {buildingType:Building.TYPE.STABLE}, {buildingType:Building.TYPE.WORKSHOP}];
    b.gotoBuilding = function(c) {
      0 < c && (g.villageId != a.getActiveVillageId() && a.ka(g.villageId), b.openWindow("building", {location:c}))
    };
    f();
    g.villageId || b.$on("activeVillageChanged", f);
    b.$on("$destroy", n)
  }}
};
Travian.Directive.buildingQuicklinks.$inject = ["VillageService", "BuildingService", "$templateCache"];
Travian.Directive.notepad = function(a, c) {
  return{restrict:"EA", scope:!0, template:a.get("tpl/mainlayout/notepad.html"), replace:!1, link:function(a, l) {
    var h = !1;
    a.over = !1;
    a.deleteQuestion = !1;
    a.n.setFocus();
    U.onPointerOver(l[0], function() {
      a.over = !0;
      requestAngularApply();
      $(e).addClass("hovered")
    });
    U.onPointerOut(l[0], function() {
      a.over = !1;
      requestAngularApply();
      $(e).removeClass("hovered")
    });
    U.ah(l[0], function() {
      a.deleteQuestion || (a.n.inEditor = !0, requestAngularApply())
    });
    var g = U.H("up", function() {
      h && ($(e).removeClass("clicked"), h = !1);
      if(a.n.inEditor || a.deleteQuestion) {
        var c = U.M().p;
        $(l).find(c).length || l[0] == c || $(c).parents(".autocomplete").length || (a.save(), a.deleteQuestion = !1)
      }
    });
    a.startEdit = function() {
      a.n.inEditor = !0;
      c(function() {
        $(l).find("textarea").focus();
        var a = $(l).find("textarea")[0];
        a.selectionStart ? a.setSelectionRange(0, 0) : a.createTextRange && (a = a.createTextRange(), a.move("character", 0), a.select())
      }, 0)
    };
    a.askDelete = function() {
      a.deleteQuestion = !0
    };
    a.save = function() {
      a.n.inEditor = !1;
      a.n.data.text = a.n.editText;
      a.n.persist()
    };
    a.cancel = function() {
      a.n.inEditor = !1;
      a.deleteQuestion = !1;
      a.n.editText = a.n.data.text
    };
    a["delete"] = function() {
      a.n["delete"]()
    };
    a.addNew = function() {
      a.n.requestNewNote()
    };
    a.resize = function() {
      var e = l[0].querySelector(".resizeHelper"), f = 100 * ($(e).outerWidth() / $(window).width()), e = 100 * ($(e).outerHeight() / $(window).height());
      a.n.set({sizeX:f, sizeY:e});
      requestAngularApply();
      c(function() {
        a.$broadcast("scrollbarApi", "handleResize")
      }, 10);
      a.n.persist()
    };
    var e = l[0].querySelector(".header");
    U.ec(e, null, function() {
      $(e).removeClass("clicked");
      var c = U.vg(l[0]), f = U.ug(l[0]), f = {x:parseInt(f.x) + parseInt(c[0]), y:parseInt(f.y) + parseInt(c[1])}, c = 100 * (f.x / $(window).width()), f = 100 * (f.y / $(window).height());
      a.n.set({positionX:c, positionY:f});
      a.n.persist();
      return!0
    }, {}, l[0], !1, void 0, function() {
      $(e).addClass("clicked");
      h = !0;
      a.n.setFocus()
    });
    a.$on("$destroy", function() {
      g();
      U.s(l[0])
    })
  }}
};
Travian.Directive.notepad.$inject = ["$templateCache", "$timeout"];
Travian.Directive.troopsDeployed = function() {
  var a = 48, c = 0, b = 0, l = 0, h = 0, g = 0, e = 60, m = 14, f = 0, n = 180, q = 100;
  return{restrict:"EA", scope:{troopsDeployedSum:"@", amountMovementIcons:"@", marketAvailable:"@", troopsDeployedLimit:"=showTroopLimit"}, link:function(p, r, s) {
    function v() {
      p.secondRow = !1;
      p.movementSecondRow = !1;
      p.moreTroops = !1;
      var h = $(window).height(), r = "true" == s.marketAvailable ? 1 : 0;
      if(0 < g) {
        var v = g;
        3 < g && (v = Math.ceil(g / 2), p.movementSecondRow = !0);
        f = m + v * e
      }else {
        f = 0
      }
      n = parseInt($(".troopsOverview").position().top);
      l = h - n - q - f;
      b = c + r;
      a * b > l && (p.secondRow = !0, p.moreTroops = a * Math.ceil(b / 2) > l ? !0 : !1);
      p.moreTroops && (l -= 20);
      $(".troopDeployment .inner").css("height", l + "px");
      $(".scrollButtons").css("top", l + 5 + "px");
      u()
    }
    function u() {
      0 >= Math.abs(h) ? $(".scrollButtonUp").addClass("disabled") : $(".scrollButtonUp").removeClass("disabled");
      Math.abs(h) + l > a * Math.ceil(b / 2) ? $(".scrollButtonDown").addClass("disabled") : $(".scrollButtonDown").removeClass("disabled")
    }
    s.$observe("troopsDeployedSum", function() {
      s.troopsDeployedSum && (c = parseInt(s.troopsDeployedSum), v())
    });
    s.$observe("amountMovementIcons", function() {
      s.amountMovementIcons && (g = s.amountMovementIcons, v())
    });
    s.$observe("marketAvailable", function() {
      v()
    });
    p.moreTroops = !1;
    $(window).on("resize", function() {
      v()
    });
    p.scrollUp = function() {
      h += a;
      $(".troopDeployment ul").css("top", h);
      u()
    };
    p.scrollDown = function() {
      h -= a;
      $(".troopDeployment ul").css("top", h);
      u()
    }
  }}
};
Travian.Directive.troopsDeployed.$inject = [];
Travian.Directive.troopsOverviewHeight = function() {
  return{restrict:"A", scope:!1, link:function(a) {
    function c() {
      l = parseInt($(".troopsOverview").css("top"));
      h = $("#footer").height();
      g = $(window).height() - (l + h + 20)
    }
    function b() {
      var b = $("#troopsStationed").height(), c = $("#troopMovements").height();
      b + c < g ? (b = b + c + 20, $(".troopsOverview").css("height", b), $(".troopsOverview .scrollContent").css("height", b), $(".troopsOverview").removeClass("scrollable"), a.scrollbarApi.update()) : ($(".troopsOverview").css("height", "auto"), $(".troopsOverview").addClass("scrollable"))
    }
    var l = 0, h = 0, g = 0;
    c();
    a.updateOverviewHeight = function() {
      setTimeout(b, 100)
    };
    $(window).on("resize", function() {
      c();
      b()
    })
  }}
};
Travian.Directive.troopsOverviewHeight.$inject = [];
Travian.Directive.uiHint = function() {
  return{restrict:"EA", link:function(a, c) {
    a.closeUIHint = function() {
      c.parent().parent().remove()
    }
  }}
};
Travian.Directive.uiHint.$inject = [];
Travian.Directive.inlineAutoComplete = function(a) {
  return{restrict:"A", link:function(c, b, l) {
    function h(a) {
      void 0 !== a.originalEvent && a.originalEvent instanceof jQuery.Event && (a = h(a.originalEvent));
      return a
    }
    function g(b, c) {
      a.emit("autocomplete", {type:r, string:b, lastSelected:null}, function(a) {
        e(a, c)
      })
    }
    function e(a, b) {
      for(var c = [], e = 0;e < a.length;e++) {
        var f = "@" + n, g = "";
        1 < r.length && ("undefined" != typeof a[e].allianceId && (g = "(" + Travian.translate("Alliance") + ")"), "undefined" != typeof a[e].playerId && "undefined" == typeof a[e].villageId && 0 < a[e].playerId && (g = "(" + Travian.translate("Player") + ")"));
        "undefined" != typeof a[e].allianceId && (f = "[alliance:" + a[e].allianceId + "]");
        "undefined" != typeof a[e].playerId && "undefined" == typeof a[e].villageId ? f = "[player:" + a[e].playerId + "]" : "undefined" != typeof a[e].villageId && (f = Player.isNPC(a[e].playerId) ? "[cell:" + a[e].villageId + "]" : "[village:" + a[e].villageId + "]");
        var h = a[e].name.replace(/[&<>"]/g, function(a) {
          return{"&":"&amp;", "<":"&lt;", ">":"&gt;", '"':"&#34;"}[a] || a
        });
        "undefined" != typeof a[e].villageId && 0 < a[e].playerId && (g = v("", a[e].x, a[e].y));
        c.push({label:'<div class="resultRow"><span class="resultName">' + h + '</span><span class="resultType">' + g + "</span></div>", value:q + f + p})
      }
      "function" == typeof b && b(c)
    }
    var m = 0, f = $(b[0]), n, q = "", p = "", r = [], s = (new Date).getTime(), v = Travian.Filter.bidiCoordinate();
    void 0 === l.verticalAlign && (l.verticalAlign = "above");
    l.$observe("autocompletedata", function(a) {
      if("undefined" != typeof a) {
        var b = a.split(",");
        1 == b.length && (b = a.split(" "));
        r = b
      }
    });
    b = function() {
      var a = "undefined" !== typeof l.verticalAlign && "above" == l.verticalAlign ? "top" : "bottom", b = "top" == a ? "bottom" : "top", c = "ltr" == getDirection() ? "left" : "right";
      return{my:c + " " + b, at:c + " " + a}
    }();
    f.autocomplete({source:function(a, b) {
      g(n, b)
    }, search:function() {
      m = f[0].selectionStart;
      var a = /(\@[^\@]{3,})$/g;
      q = f[0].value.substring(0, m) || "";
      p = f[0].value.substring(m) || "";
      n = q.match(a);
      q = q.replace(a, "") || "";
      null !== n && (n = n[0].substring(1));
      if(null === n || 3 > n.length && (0 > r.indexOf("alliance") || 1 > n.length) || (new Date).getTime() < s + 500) {
        return!1
      }
    }, messages:{noResults:"", results:w()}, close:function(a) {
      a = h(a);
      "keydown" != a.type || a.which != keyboard.pf && a.which != keyboard.Ac || (a.preventDefault(), a.stopImmediatePropagation())
    }, autoFocus:!0, position:b}).data("ui-autocomplete")._renderItem = function(a, b) {
      a.addClass("serverautocomplete dropdownBody");
      return $('<li class="autocomplete">').append($("<a>").html(b.label)).appendTo(a)
    };
    "true" === l.inputAutoFocus && c.$$postDigest(function() {
      f.focus()
    });
    c.$on("$destroy", function() {
      f.unbind();
      f.autocomplete("destroy");
      f.removeData("autocomplete")
    })
  }}
};
Travian.Directive.inlineAutoComplete.$inject = ["SocketService"];
Travian.Directive.allianceLink = function(a) {
  return{restrict:"EA", template:'<a ng-class="{disabled: allId <= 0 || nolink}" class="allianceLink truncated" clickable="$root.openWindow(\'alliance\', {\'allianceId\': {{allId}}}, null, true)"></a>', replace:!0, scope:!0, link:function(c, b, l) {
    function h() {
      Travian.nameService.getNameForId(parseInt(l.allianceid, 0), function(f) {
        if("" == l.alliancename || "0" == l.alliancename) {
          if(f) {
            e = f
          }else {
            if("undefined" != typeof l.showmissinglink) {
              c.nolink = l.nolink ? l.noLink : !0;
              b.html('<i class="bbCodes_missingLink_small_illu" tooltip tooltip-translate="MissingLink.Alliance.Tooltip"></i>');
              a(b.contents())(c);
              window.clearTimeout(m);
              return
            }
          }
          g()
        }
        null != m && window.clearTimeout(m)
      }, "alliance");
      m = window.setTimeout(h, 1E3)
    }
    function g() {
      $(b).text(e);
      c.allId = l.allianceid
    }
    var e = "";
    c.nolink = !1;
    var m = null;
    l.$observe("allianceid", function(a) {
      Travian.nameService && ("" != a && 0 < a) && ("" == l.alliancename || "0" == l.alliancename ? h() : (e = l.alliancename, g()))
    });
    l.$observe("alliancename", function(a) {
      "" != a && (e = a, g())
    });
    l.nolink && l.$observe("nolink", function(a) {
      c.nolink = "true" == a || !0 === a ? !0 : !1
    })
  }}
};
Travian.Directive.allianceLink.$inject = ["$compile"];
Travian.Directive.buildingLink = function() {
  return{restrict:"EA", template:"<a class=\"buildingLink\" clickable=\"$root.openWindow('building', {'location': 'type{{buildType}}'})\"></a>", replace:!0, link:function(a, c, b) {
    multiObserve(b, ["buildingType"], function() {
      $(c).html(Travian.translate("Building_" + b.buildingType));
      a.buildType = b.buildingType
    })
  }}
};
Travian.Directive.playerLink = function(a, c) {
  return{restrict:"EA", template:'<a ng-class="{disabled: playerId <= 2 || nolink || deleted}" class="playerLink  truncated" clickable="openPlayerWindow()" tooltip tooltip-show="{{deleted}}" tooltip-translate="Player.AlreadyDeleted">{{playerName}}</a>', replace:!0, scope:!0, link:function(b, l, h) {
    function g() {
      var c = parseInt(h.playerid, 0);
      e = window.setTimeout(g, 1E3);
      Travian.nameService && Travian.nameService.getNameForId(c, function(f) {
        b.nolink = h.nolink;
        if(f) {
          h.nolink || (b.nolink = !1), b.deleted = "deleted" == Travian.nameService.tg(c) ? !0 : !1, b.playerName = f
        }else {
          if("undefined" != typeof h.showmissinglink) {
            h.nolink || (b.nolink = !0);
            l.html('<i class="bbCodes_missingLink_small_illu" tooltip tooltip-translate="MissingLink.Player.Tooltip"></i>');
            a(l.contents())(b);
            window.clearTimeout(e);
            return
          }
        }
        null != e && window.clearTimeout(e)
      })
    }
    b.playerName = h.playername || "";
    b.playerId = h.playerid || 0;
    b.nolink = !1;
    b.deleted = !1;
    b.openPlayerWindow = function() {
      c.openWindow("profile", {playerId:b.playerId, profileTab:"playerProfile"}, null, !0);
      return!1
    };
    var e = null;
    h.$observe("playerid", function(a) {
      "" != a && (b.playerId = h.playerid, "" == h.playername || void 0 === h.playername ? g() : b.playerName = h.playername)
    });
    h.$observe("playername", function(a) {
      "" != a && void 0 !== a && (window.clearTimeout(e), b.playerId = h.playerid, b.playerName = h.playername)
    });
    h.nolink && h.$observe("nolink", function(a) {
      b.nolink = "true" == a || !0 === a ? !0 : !1
    })
  }}
};
Travian.Directive.playerLink.$inject = ["$compile", "$rootScope"];
Travian.Directive.secretSocietyLink = function() {
  return{restrict:"EA", template:"<a class=\"secretSocietyLink  truncated\" clickable=\"$root.openWindow('society', {'societyId': {{socId}}, 'tab': 'SecretSociety'})\"></a>", replace:!0, link:function(a, c, b) {
    multiObserve(b, ["societyid", "societyname"], function() {
      $(c).text(b.societyname);
      a.socId = b.societyid
    })
  }}
};
Travian.Directive.troopLink = function() {
  return{restrict:"EA", template:"<a class=\"troopLink\" clickable=\"$root.openOverlay('manual',{'overlaytab': 'Units', 'glossarId':{{tt}}})\"></a>", replace:!0, link:function(a, c, b) {
    multiObserve(b, ["trooptype"], function() {
      $(c).text(Travian.translate("Troop_" + b.trooptype));
      a.tt = b.trooptype
    })
  }}
};
Travian.Directive.villageLink = function(a, c) {
  return{restrict:"EA", template:'<a ng-class="{disabled: villId <= 2 || nolink}" class="villageLink truncated" clickable="$root.openWindow(\'mapCellDetails\', {\'cellId\': {{villId}}}, null, true)"></a>', replace:!0, scope:!0, link:function(a, l, h) {
    function g() {
      var f = parseInt(h.villageid, 0);
      m = window.setTimeout(g, 1E3);
      Travian.nameService.getNameForId(f, function(g) {
        if(g) {
          e = g
        }else {
          if(g = Fa(f), Ga(g.x, g.y)) {
            e = "[" + g.x + "|" + g.y + "]", "" != h.villagename && "0" != h.villagename && (e = h.villagename)
          }else {
            if("undefined" != typeof h.showmissinglink) {
              if(a.nolink = h.nolink ? h.noLink : !0, "" != h.villagename && "0" != h.villagename) {
                e = h.villagename
              }else {
                l.html('<i class="bbCodes_missingLink_small_illu" tooltip tooltip-translate="MissingLink.Village.Tooltip"></i>');
                c(l.contents())(a);
                window.clearTimeout(m);
                return
              }
            }else {
              "" != h.villagename && "0" != h.villagename && (e = h.villagename)
            }
          }
        }
        $(l).text(e);
        a.villId = h.villageid;
        null != m && window.clearTimeout(m)
      }, "village")
    }
    var e = "";
    a.nolink = !1;
    var m = null;
    h.$observe("villageid", function(a) {
      Travian.nameService && "" != a && g()
    });
    h.nolink && h.$observe("nolink", function(c) {
      a.nolink = "true" == c || !0 === c ? !0 : !1
    })
  }}
};
Travian.Directive.villageLink.$inject = ["VillageService", "$compile"];
Travian.Directive.resourceFilter = function() {
  return{restrict:"EA", templateUrl:"tpl/building/marketplace/partials/resourceFilter.html", scope:{resourceObj:"=", onChange:"&", deselectable:"@", disabledEntry:"=?"}, link:function(a) {
    a.select = function(c) {
      !0 != a.deselectable && "true" != a.deselectable || c != a.resourceObj.type || (c = 0);
      a.resourceObj.type = c;
      a.onChange()
    }
  }}
};
Travian.Directive.tradeRoute = function(a, c) {
  return{restrict:"E", scope:{timeCode:"=", travelDuration:"=", recurrences:"=", editable:"@", paused:"="}, templateUrl:"tpl/building/marketplace/partials/tradeRoute.html", link:function(b, l) {
    function h() {
      for(var a = !1, c = 0;24 > c;c++) {
        b.timeCode & Math.pow(2, c) ? b.startMarkers[c] || (e(c, !0), a = !0) : b.startMarkers[c] && (m(c, !0), a = !0)
      }
      return a
    }
    function g() {
      var a = b.travelDuration * b.recurrences / 3600;
      p = Math.max(0, Math.floor(a));
      b.travelBarWidth = a * r - r / 2 + 1;
      if(!(0 >= p)) {
        for(var c = a = 0;24 > c;c++) {
          if(b.startMarkers[c] || 0 < a) {
            0 < a && !b.startMarkers[c] && (e(c), a--);
            for(var f = c + 1;f <= c + p;f++) {
              if(24 > f) {
                b.startMarkers[f] && (m(f), a++)
              }else {
                if(b.startMarkers[f % 24]) {
                  m(c);
                  break
                }
              }
            }
            c += p
          }
        }
      }
      q()
    }
    function e(a, c) {
      var e = Math.pow(2, a);
      if(!c) {
        if(b.timeCode & e) {
          return
        }
        b.timeCode += e
      }
      e = l[0].querySelectorAll(".timeMarker .hour-" + a);
      0 < e.length && (b.startMarkers[a] = !0, "false" != b.editable && U.ca(e[0], f, a))
    }
    function m(a, c) {
      var e = Math.pow(2, a);
      if(!c) {
        if(!(b.timeCode & e)) {
          return
        }
        b.timeCode -= e
      }
      e = l[0].querySelectorAll(".timeMarker .hour-" + a);
      0 < e.length && (b.startMarkers[a] = !1, U.s(e[0]))
    }
    function f(a) {
      var c = n(a);
      if(c[0] != c[1]) {
        var f = a, g = U.H("move", function(e) {
          var g = f;
          e = e.start.x - e.current.x;
          0 > e && (e += r);
          e = a - Math.floor(e / r);
          e = Math.min(c[1], Math.max(c[0], e));
          g != e && (b.startMarkers[g] = !1, b.startMarkers[e] = !0, requestAngularApply());
          f = e
        });
        b.dragging = !0;
        var h = U.H("up", function() {
          g();
          h();
          b.dragging = !1;
          a != f && (e(f), m(a), q());
          requestAngularApply()
        });
        requestAngularApply()
      }
    }
    function n(a) {
      for(var c = !1, e = a, f = 0;e < 24 + p;e++) {
        if(f = 23 <= e ? e - 23 : e + 1, b.startMarkers[f] && f != a) {
          c = !0;
          break
        }
      }
      for(var g = !1, h = a;h > 0 - p;h--) {
        if(f = 0 >= h ? h + 23 : h - 1, b.startMarkers[f] && f != a) {
          g = !0;
          break
        }
      }
      e = c ? Math.min(23, e - p) : 23;
      h = g ? Math.max(0, h + p) : 0;
      return[h, e]
    }
    function q() {
      var a = 0;
      b.freeSpace = !1;
      for(var c = 0;c < p;c++) {
        b.startMarkers[23 - c] && (a = c - p)
      }
      for(c = 0;24 > c;c++) {
        if(a++, b.startMarkers[c] && (a = 0, c += p), a > p) {
          b.freeSpace = !0;
          break
        }
      }
      requestAngularApply()
    }
    b.freeSpace = !0;
    b.dragging = !1;
    b.startMarkers = [];
    var p = 0, r = 0, s = c.l(), v = null, u = Settings.get(s.data.playerId), t = null, z = 0;
    b.$watch("timeCode", function() {
      h() && g()
    }, !0);
    b.$watch("recurrences", function(a) {
      isNaN(a) && (b.recurrences = 1);
      g()
    }, !0);
    b.$watch("travelDuration", g, !0);
    b.addStartMarker = function() {
      for(var c = a.K(), c = c + 3600 * z, c = (new Date(1E3 * c)).getHours(), f = 0;24 > f;f++) {
        for(var c = (c + 1) % 24, g = !0, h = -p;h <= p;h++) {
          var l = (c + h) % 24;
          0 > l && (l += 24);
          if(b.startMarkers[l]) {
            g = !1;
            break
          }
        }
        if(g) {
          e(c);
          q();
          break
        }
      }
    };
    b.removeStartMarker = function(a) {
      m(a);
      q()
    };
    b.getTimelineOverflowWidth = function() {
      if(0 == b.timeCode) {
        return 0
      }
      for(var a = 0, c = 24;0 <= c;c--) {
        if(b.startMarkers[c]) {
          a = c;
          break
        }
      }
      return Math.max(0, Math.ceil(b.travelBarWidth - (24 - a) * r + r / 2))
    };
    v = s.subscribe(function() {
      null !== t && u.unsubscribe(t);
      u = Settings.get(s.data.playerId);
      t = u.subscribe(function() {
        z = u.data.timeZone - Travian.Config.tzone_offset
      })
    });
    b.$evalAsync(function() {
      h();
      r = l[0].querySelector(".timeline").offsetWidth / 24;
      g()
    });
    b.$on("$destroy", function() {
      null !== v && s.unsubscribe(v);
      null !== t && u.unsubscribe(t);
      for(var a = 0;24 > a;a++) {
        m(a)
      }
    })
  }}
};
Travian.Directive.tradeRoute.$inject = ["ServertimeService", "SessionService"];
Travian.Directive.mellonFrame = function(a) {
  return{restrict:"E", template:'<iframe ng-if="iframeUrl != \'\'" ng-src="{{iframeUrl}}" frameborder="0" allowtransparency="1" class="mellon_iframe {{additionalClass}}"> Your browser does not support iframes </iframe>', scope:{url:"@", additionalClass:"@"}, link:function(c) {
    c.iframeUrl = a.trustAsResourceUrl(c.url)
  }}
};
Travian.Directive.mellonFrame.$inject = ["$sce"];
Travian.Directive.mellonUrl = function() {
  return{transclude:!0, restrict:"A", template:"<span ng-transclude></span>", compile:function() {
    return{post:function(a, c, b) {
      $(c).data({vi:b.mellonUrl, Qe:"#jqFensterModalLayout"}).addClass("jqFenster")
    }}
  }}
};
Travian.Directive.newScope = function() {
  return{scope:!0, link:w()}
};
Travian.Directive.playerProfile = function(a, c) {
  return{restrict:"E", scope:!0, template:a.get("tpl/directive/playerProfile.html"), link:function(a, l, h) {
    function g() {
      a.playerData = m.data;
      a.playerRole = Player.KINGDOM_ROLE_GOVERNOR;
      m.data.isKing && (a.playerRole = Player.KINGDOM_ROLE_KING);
      m.isDuke() && (a.playerRole = Player.KINGDOM_ROLE_DUKE);
      Travian.request("player/getPlayerInfo", {playerId:a.playerId}, function(c) {
        a.playerInfo = c
      })
    }
    function e() {
      var c = m.data.kingdomId;
      0 < c && Travian.request("player/getKingdomStats", {kingId:c}, function(c) {
        a.kingdomStats = c
      })
    }
    var m = null, f = null;
    a.playerModel = Player;
    a.myPlayerId = c.getPlayerId();
    h.$observe("playerid", function(c) {
      a.playerId = c;
      m = Player.get(c);
      a.hero = Hero.get(c);
      f = m.subscribe(function() {
        g();
        e()
      })
    });
    a.$on("$destroy", function() {
      f && m && m.unsubscribe(f)
    })
  }}
};
Travian.Directive.playerProfile.$inject = ["$templateCache", "SessionService"];
Travian.Directive.premiumFeature = function(a, c, b, l) {
  return{restrict:"A", priority:-1, link:function(h, g, e) {
    function m() {
      if($(g).hasClass("disabled") || "undefined" !== typeof e.disabled) {
        return!1
      }
      if(c.hasRight(Session.RIGHT_SPEND_GOLD)) {
        var a = 0 != h.price && e.confirmGoldUsage;
        a && "force" != a && (a = Settings.get(Travian.Player.data.playerId), a = t.data.hasVouchers[v] && 0 < t.data.hasVouchers[v] ? !a.hasPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_PREMIUM_USAGE_CONFIRMATION) : !a.hasPremiumConfirmationFlag(Settings.PREMIUM_CONFIRMATION_FLAGS.DISABLE_GOLD_USAGE_CONFIRMATION));
        a ? (s = (new Date).getTime(), a = {feature:v, crid:s, skipable:"force" != e.confirmGoldUsage}, v == PremiumFeature.FEATURE_NAME_FINISH_NOW && (a.price = h.price), h.openWindow("confirmGoldUsage", a)) : f()
      }else {
        h.openWindow("notEnoughSitterRights", {})
      }
    }
    function f() {
      var a = [v, u];
      v == PremiumFeature.FEATURE_NAME_FINISH_NOW && a.push(h.price);
      r.setData(a);
      r.bookFeature();
      b.U(Ya)
    }
    function n() {
      if(t && !(e.premiumFeature && !v || e.premiumCallbackParam && !u)) {
        var b = Travian.Config.PremiumFeatures[v], c = function(a) {
          a ? h.price = -1 : "undefined" != typeof e.price ? h.price = parseInt(e.price) : b && b.price && (h.price = b.price);
          p()
        };
        q();
        if(e.premiumFeature == PremiumFeature.FEATURE_NAME_FINISH_NOW) {
          if(!h.finishNowQueueType && !h.finishNowBuildingType && !h.finishNowVillageId) {
            return
          }
          if(h.finishNowVillageId) {
            var f = BuildingQueue.get(h.finishNowVillageId), g = UnitResearchQueue.get(h.finishNowVillageId), c = function() {
              if(Village.get(h.finishNowVillageId).isWWVillage()) {
                h.price = t.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] ? -1 : 0, p(!0)
              }else {
                h.price = t.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] ? -1 : b.priceAll;
                var a = g.canUseInstantConstruction() || f.canUseInstantConstruction();
                p(!a)
              }
            };
            C.push(Cache.cb([g, f], c))
          }else {
            var m = function(e) {
              e = e[0].finished - Travian.ServerTime;
              if(!(0 >= e)) {
                if(e > b.timeFree) {
                  var f = e;
                  e > b.timeReduced ? (h.price = b.price, f -= b.timeReduced) : (h.price = b.priceReduced, f -= b.timeFree);
                  A = a(c, 1E3 * Math.min(parseInt(f), 10));
                  t.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] && (h.price = -1)
                }else {
                  h.price = 0
                }
              }
            };
            h.finishNowBuildingType && (g = UnitResearchQueue.get(l.getActiveVillageId()), c = function() {
              A && (a.cancel(A), A = null);
              var b = g.data.buildingTypes[h.finishNowBuildingType || u], c = l.i().isWWVillage();
              !b || 0 == b.length || c ? (h.price = t.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] ? -1 : 0, p(!0)) : (m(b), p(!1))
            }, C.push([g, g.subscribe(c)]));
            if(h.finishNowQueueType) {
              h.price = b.price;
              var r = Travian.Config.buildingConfig, f = BuildingQueue.get(l.getActiveVillageId()), c = function() {
                A && (a.cancel(A), A = null);
                var b = f.data.queues[h.finishNowQueueType || u], c = l.i().isWWVillage();
                !b || 0 == b.length || c || r[b[0].buildingType] && !r[b[0].buildingType].canFinishInstantly ? (h.price = t.data.hasVouchers[PremiumFeature.FEATURE_NAME_FINISH_NOW] ? -1 : 0, p(!0)) : (m(b), p(!1))
              };
              C.push([f, f.subscribe(c)])
            }
          }
        }else {
          A && (a.cancel(A), A = null)
        }
        if("undefined" != typeof t.data.hasVouchers[e.premiumFeature]) {
          var n = t.data.hasVouchers[e.premiumFeature];
          C.push([t, t.subscribe(function() {
            n != t.data.hasVouchers[e.premiumFeature] && (n = t.data.hasVouchers[e.premiumFeature], c(n))
          })]);
          e.premiumFeature != PremiumFeature.FEATURE_NAME_FINISH_NOW && c(n)
        }else {
          c()
        }
        t.filled && null != z && (t.unsubscribe(z), z = null)
      }
    }
    function q() {
      for(var a = 0;a < C.length;a++) {
        var b = C[a];
        "function" == typeof b ? b() : b[0].unsubscribe(b[1])
      }
      C = []
    }
    function p(a) {
      0 >= h.price ? ($(g).removeClass("premium"), $(g).addClass("free")) : ($(g).addClass("premium"), $(g).removeClass("free"));
      !0 == a && $(g).addClass("disabled");
      !1 == a && $(g).removeClass("disabled")
    }
    var r = new PremiumFeature(h, g, a), s = 0, v = "", u = null, t = null, z = null, A = null, C = [];
    Travian.Player && Travian.Player.filled ? (t = Voucher.get(Travian.Player.data.playerId), t.filled || (z = t.subscribe(n))) : c.o(function() {
      t = Voucher.get(Travian.Player.data.playerId);
      t.filled || (z = t.subscribe(n))
    });
    e.$observe("premiumFeature", function(a) {
      "undefined" !== typeof a && (v = a, n())
    });
    e.$observe("premiumCallbackParam", function(a) {
      "undefined" !== typeof a && ("string" == typeof a && 0 <= a.indexOf(":") ? (a = a.split(":"), h[a[0]] = a[1], u = a[1]) : u = a, n())
    });
    U.Ma(g[0], m);
    h.$on("confirmGoldUsage", function(a, b) {
      b === s && (f(), s = 0)
    });
    h.$on("$destroy", function() {
      U.ld(g[0], m);
      null != z && t.unsubscribe(z);
      q();
      A && a.cancel(A)
    })
  }}
};
Travian.Directive.premiumFeature.$inject = ["$timeout", "SessionService", "AudioService", "VillageService"];
Travian.Directive.questGiver = function(a, c) {
  return{scope:{data:"="}, templateUrl:"tpl/directive/questGiver.html", link:function(b, l) {
    b.QuestGiver = QuestGiver;
    b.questGiverDirectionMapping = {};
    b.questGiverDirectionMapping[QuestGiver.WREN] = "from";
    b.questGiverDirectionMapping[QuestGiver.SCOUT] = "from";
    b.questGiverDirectionMapping[QuestGiver.CHIEF] = "to";
    b.questGiverDirectionMapping[QuestGiver.ENVOY] = "to";
    b.questGiverDirectionMapping[QuestGiver.ADVENTURER] = "to";
    b.startDialog = a.startDialog;
    var h = null;
    if(QuestGiver.ANIMATIONS[b.data.npcId]) {
      var g = $(l).find(".questGiver"), e = function(a) {
        a.delay = 50 + Math.ceil(150 * Math.random());
        var c = Math.ceil(Math.random() * QuestGiver.ANIMATIONS[b.data.npcId].length);
        a.baseClass = QuestGiver.STRING[b.data.npcId] + "_anim" + c + "_frame";
        a.frames = QuestGiver.ANIMATIONS[b.data.npcId][c - 1]
      }, m = {};
      e(m);
      h = c.ih(g, m.baseClass, m.frames, m.delay, e)
    }
    b.$on("$destroy", function() {
      "function" == typeof h && h()
    })
  }}
};
Travian.Directive.questGiver.$inject = ["TutorialService", "AnimationService", "$timeout"];
Travian.Directive.serverautocomplete = function(a, c, b, l) {
  return{restrict:"E", replace:!0, template:b.get("tpl/directive/generalElements/serverautocomplete.html"), require:"ngModel", link:function(b, g, e, m) {
    function f(a) {
      var c = angular.copy(l.S().data);
      if(("true" === a || !0 === a) && 1 < c.length) {
        for(b.showOwnVillages = !0, b.ownVillages = [], c.sort(function(a, b) {
          return a.data.name.localeCompare(b.data.name)
        }), a = 0;a < c.length;a++) {
          t.data.villageId != c[a].data.villageId && b.ownVillages.push(c[a].data)
        }
      }
    }
    function n() {
      if("undefined" === typeof e.lastSearchDataObj) {
        return!1
      }
      for(var a = b, c = e.lastSearchDataObj.split("."), f = 0;f < c.length - 1;f++) {
        a = a[c[f]]
      }
      return"object" == typeof a[c[c.length - 1]]
    }
    function q(a) {
      for(var c = b, f = e.lastSearchDataObj.split("."), g = 0;g < f.length - 1;g++) {
        c = c[f[g]]
      }
      f = f[f.length - 1];
      "object" == typeof c[f] && (c[f].data = a)
    }
    function p(b) {
      null != b && null != b.item && (A = b.item.obj);
      null === A || "undefined" === typeof A.searchType || "playerVillages" != A.searchType && "allianceVillages" != A.searchType ? (null !== A && null !== b && n() ? q([A]) : n() && "" == y.val() && q([]), "undefined" != typeof e.autocompletecb && r(b)) : "undefined" !== typeof e.lastSearchDataObj && n() ? a.emit("autocomplete", {type:C, string:A.name, lastSelected:A}, function(a) {
        q(a);
        "undefined" != typeof e.autocompletecb && (r(null), A = null)
      }) : c(function() {
        null !== A && y.autocomplete("search", A.name)
      }, 160)
    }
    function r(a) {
      for(var c = b, f = e.autocompletecb.split("."), g = 0;g < f.length - 1;g++) {
        c = c[f[g]]
      }
      f = f[f.length - 1];
      if("function" == typeof c[f]) {
        if(null != a && null != a.item) {
          c[f](a.item.obj)
        }else {
          if(null != a && null != a.village) {
            c[f](a.village)
          }else {
            c[f](null)
          }
        }
      }
      null !== A && b.$$postDigest(function() {
        $(y).blur();
        A = null
      });
      requestAngularApply()
    }
    function s(a, b) {
      if(null == A || "" == y.val()) {
        if(null == b.item && "" != y.val()) {
          if(0 < z.length) {
            b.item = z[0], y.val(b.item.value)
          }else {
            2 < y.val().length || p(null);
            return
          }
        }
        p(b)
      }
    }
    function v(a, b) {
      var c = [];
      A = null;
      if("function" == typeof b && n() && -1 == C.indexOf("playerVillages") && -1 == C.indexOf("allianceVillages")) {
        q(a)
      }else {
        for(var e = 0;e < a.length;e++) {
          var f = "";
          1 < C.length && ("undefined" != typeof a[e].allianceId && (f = "(" + Travian.translate("Alliance") + ")"), "undefined" != typeof a[e].playerId && "undefined" == typeof a[e].villageId && 0 < a[e].playerId && (f = "(" + Travian.translate("Player") + ")"));
          var g = a[e].name.replace(/[&<>"]/g, function(a) {
            return{"&":"&amp;", "<":"&lt;", ">":"&gt;", '"':"&#34;"}[a] || a
          });
          "undefined" != typeof a[e].villageId && 0 < a[e].playerId && (f = B("", a[e].x, a[e].y));
          c.push({label:'<div class="resultRow"><span class="resultName">' + g + '</span><span class="resultType">' + f + "</span></div>", value:a[e].name, obj:a[e]})
        }
        z = c;
        "function" == typeof b ? b(c) : s(0, {item:null})
      }
    }
    function u(b, c) {
      a.emit("autocomplete", {type:C, string:b, lastSelected:A}, function(a) {
        v(a, c)
      })
    }
    var t = l.i();
    g = $(g);
    var z = [], A = null, C = [], D = (new Date).getTime(), y = g.find("input"), B = Travian.Filter.bidiCoordinate(), H = parseInt($(y).css("width")), I = g.find("label");
    $(I).css("width", H - 24 + "px");
    g = function() {
      var a = "undefined" !== typeof e.verticalAlign && "above" == e.verticalAlign ? "top" : "bottom", b = "top" == a ? "bottom" : "top", c = "ltr" == getDirection() ? "left" : "right";
      "top" == a && I.addClass("above");
      return{my:c + " " + b, at:c + " " + a}
    }();
    b.disabledInput = !1;
    b.showAllVillages = !1;
    b.showOwnVillagesList = !1;
    b.ownVillagesListVisible = !1;
    b.searchTypes = "";
    b.modelInput = "";
    b.changeInput = w();
    b.onFocus = w();
    e.$observe("autocompletedata", function(a) {
      if("undefined" != typeof a) {
        var c = a.split(",");
        1 == c.length && (c = a.split(" "));
        C = c;
        a = [];
        for(c = 0;c < C.length;c++) {
          "" != C[c] && "emptyCoords" != C[c] && a.push(Travian.translate("Search." + C[c].charAt(0).toUpperCase() + C[c].slice(1)))
        }
        b.searchTypes = a.join(", ")
      }
    });
    e.$observe("disabledInput", function(a) {
      b.disabledInput = "true" == a
    });
    e.$observe("changeInput", function(a) {
      b.changeInput = a
    });
    e.$observe("onFocus", function(a) {
      "function" == typeof b[a] && (b.onFocus = b[a])
    });
    e.$observe("showOwnVillages", f);
    b.toggleOwnVillagesList = function() {
      A = null;
      b.ownVillagesListVisible = !b.ownVillagesListVisible
    };
    b.hideOwnVillagesList = function() {
      b.ownVillagesListVisible = !1
    };
    b.selectOwnVillage = function(a) {
      b.modelInput = b.ownVillages[a].name;
      b.hideOwnVillagesList();
      r({village:b.ownVillages[a]})
    };
    b.$watch("modelInput", function() {
      m.$setViewValue(b.modelInput)
    });
    m.$render = function() {
      m.$viewValue || (m.$viewValue = "");
      b.modelInput = m.$viewValue
    };
    y.autocomplete({source:function(a, b) {
      z = [];
      3 > a.term.length && (0 > C.indexOf("alliance") && 0 > C.indexOf("allianceVillages") || 1 > a.term.length) ? n() && (q([]), requestAngularApply()) : "undefined" != typeof e.disableSearch && e.disableSearch == a.term ? e.disableSearch = "" : (new Date).getTime() < D + 500 || u(a.term, b)
    }, messages:{noResults:"", results:w()}, close:s, select:function(a, b) {
      var c = p(b);
      "undefined" !== typeof e.autoFocusAfterSelect && $(e.autoFocusAfterSelect).focus();
      return c
    }, autoFocus:!0, position:g}).data("ui-autocomplete")._renderItem = function(a, b) {
      a.addClass("serverautocomplete dropdownBody");
      return $('<li class="autocomplete">').append($("<a>").html(b.label)).appendTo(a)
    };
    $(y).bind("keyup", function(a) {
      switch(a.keyCode) {
        case 46:
        ;
        case 8:
          0 == y.val().length && p(null)
      }
    });
    $(y).attr("placeholder") || $(y).attr("placeholder", Travian.translate("AutoCompletion.Placeholder.Search"));
    "true" === e.inputAutofocus && b.$$postDigest(function() {
      y.focus()
    });
    e.$observe("inputAutofocus", function(a) {
      "true" === a && b.$$postDigest(function() {
        y.focus()
      })
    });
    b.$on("activeVillageChanged", function() {
      t = l.i();
      f(b.showOwnVillages)
    });
    b.$on("$destroy", function() {
      $(y).unbind();
      $(y).autocomplete("destroy");
      $(y).removeData("autocomplete")
    })
  }}
};
Travian.Directive.serverautocomplete.$inject = ["SocketService", "$timeout", "$templateCache", "VillageService"];
Travian.Directive.tgCoords = function() {
  return function(a, c, b) {
    b.$observe("tgCoords", function(a) {
      c.attr("coords", a)
    })
  }
};
Travian.Directive.troopDetailsRallypoint = function(a, c, b, l, h, g) {
  return{replace:!0, restrict:"EA", scope:{troopDetails:"=", unitInput:"=?", unitInputEnabled:"=?", callback:"&", abort:"&", sendTroops:"&", updateUnitSemaphore:"=?"}, link:function(e, l, f) {
    function n() {
      function p() {
        if(e.updateUnitSemaphore) {
          e.updateUnitSemaphore = !1;
          e.showDeadUnits = !1;
          "undefined" != typeof e.troopDetails.deadUnits && (e.deadUnits = {}, e.showDeadUnits = !0);
          e.units = [];
          "undefined" == typeof e.unitInput && (e.unitInput = []);
          "undefined" == typeof e.unitInputEnabled && (e.unitInputEnabled = []);
          for(var a in e.troopDetails.units) {
            var b = e.troopDetails.units[a];
            -1 == b ? (e.units[a] = "?", e.showDeadUnits && "undefined" != typeof e.troopDetails.deadUnits[a] && (e.deadUnits[a - 1] = e.troopDetails.deadUnits[a])) : 0 < b && (e.units[a] = b, e.showDeadUnits && "undefined" != typeof e.troopDetails.deadUnits[a] && (e.deadUnits[a - 1] = e.troopDetails.deadUnits[a]))
          }
        }
      }
      if(!q) {
        q = !0;
        var n = b.getActiveVillageId(), u = "";
        e.showStolenGoods = !1;
        e.showInputFields = !1;
        "undefined" != typeof f.view && (u = f.view);
        "undefined" != typeof f.showInputFields && (e.showInputFields = !0);
        e.status = e.troopDetails.status;
        e.showUnits = !0;
        e.showAbort = !1;
        e.showBounty = !1;
        e.showSpy = !1;
        e.oasis = !1;
        e.showCatapults = !1;
        e.showDeadUnits = !1;
        e.settle = !1;
        e.updateUnitSemaphore = !0;
        e.isGroup = "undefined" != typeof e.troopDetails.troopsGroup && 0 < e.troopDetails.troopsGroup.length;
        var t = h.sg(e.troopDetails.troopId);
        e.markerColor = r[t];
        e.changeMarker = function() {
          t++;
          3 < t && (t = 0);
          e.markerColor = r[t];
          h.Ah(e.troopDetails.troopId, t)
        };
        p();
        e.$watch("updateUnitSemaphore", p);
        e.showAction = !1;
        if(!e.showInputFields && ("support" == e.status && e.troopDetails.tribeId == Player.TRIBE.NATURE && (e.status = "nature"), e.troopDetails.status == Troops.STATUS_SUPPORT && (e.troopDetails.villageId == n ? (e.action = "Call", e.status = "awaySupport") : e.action = "Send", "oasis" == u && (e.status = "oasisSupport"), "ownSupport" == u && (e.status = "ownSupport"), e.showAction = !0), e.troopDetails.status == Troops.STATUS_TRAP && (e.troopDetails.villageIdLocation == n ? (e.action = "Release", 
        e.status = "homeTrap") : (e.action = "Disband", e.status = "awayTrap"), e.showAction = !0), e.troopDetails.status == Troops.STATUS_TRANSIT)) {
          e.movementIcon = Troops.MOVEMENT_ICON[e.troopDetails.movement.movementType];
          u = new Troops;
          u.set(e.troopDetails);
          e.movementGroup = u.getMovementGroup(n);
          0 < e.troopDetails.movement.catapultTarget1 && (e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_ATTACK || e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_SIEGE) && (e.showCatapults = !0);
          0 < parseInt(e.troopDetails.movement.spyTarget) && (e.showSpy = !0);
          e.troopDetails.villageId == n && e.troopDetails.villageId != e.troopDetails.villageIdLocation ? (e.isAdventure = e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_ADVENTURE, e.status = "outgoing", e.showAbort = !0, e.abortButtonShowTime = Math.min(parseInt(e.troopDetails.movement.timeFinish), parseInt(e.troopDetails.movement.timeStart) + 90), g.L() && (n = e.troopDetails.movement.movementType, u = parseInt(e.troopDetails.movement.playerIdTarget), (n == Troops.MOVEMENT_TYPE_ATTACK || 
          n == Troops.MOVEMENT_TYPE_SIEGE) && 100 < u && (e.showAbort = !1), n == Troops.MOVEMENT_TYPE_RAID && (!g.hasRight(Session.RIGHT_SEND_RAIDS) && 100 < u) && (e.showAbort = !1), n != Troops.MOVEMENT_TYPE_SUPPORT || (e.troopDetails.playerIdLocation == e.troopDetails.playerId || g.hasRight(Session.RIGHT_SEND_SUPPORT)) || (e.showAbort = !1))) : (e.status = "incoming", e.troopDetails.villageIdLocation != n && (e.oasis = !0), "hide" == e.troopDetails.filter && (e.showUnits = !1));
          if(e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT || e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN) {
            e.showUnits = !1;
            e.showAbort = !1;
            e.showInstantDelivery = !1;
            e.player = Travian.Player;
            n = Voucher.get(Travian.Player.data.playerId);
            e.hasVoucherInstantTrade = n.data.hasVouchers[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY];
            var n = parseInt(e.troopDetails.movement.movementType), z = e.troopDetails.playerId, u = parseInt(e.troopDetails.movement.playerIdTarget);
            n == Troops.MOVEMENT_TYPE_TRANSPORT && (z == e.player.data.playerId && z == u) && (e.showInstantDelivery = !0);
            e.premiumFeatureName = PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY;
            1 == e.hasVoucherInstantTrade ? e.premiumFeaturePrice = -1 : (n = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY], u = e.troopDetails.movement.timeFinish - Travian.ServerTime, e.premiumFeaturePrice = u < 60 * n.minutesMin ? n.priceMin : u < 60 * n.minutesMid ? n.priceMid : n.priceMax);
            e[PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY] = function(a) {
              return{troopId:a}
            }
          }
          e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_SETTLE && (n = id2xy(e.troopDetails.villageIdLocation), e.troopDetails.villageNameLocation = Travian.translate("HabitableField") + " (" + n.x + "|" + n.y + ")", e.settle = !0);
          e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT && (e.status = "incoming", e.showAbort = !1, e.showUnits = !1, e.showInstantDelivery = !0, e.hideCapacity = !0, e.premiumFeatureName = PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY, e.premiumFeaturePrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY].price, e[PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY] = function() {
            return{destinationVillageId:e.troopDetails.villageIdLocation}
          }, e.player = Travian.Player);
          e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TREASURE_RESOURCES && (e.player = Travian.Player, e.status = "incoming", e.showUnits = !1, e.hideCapacity = !0, e.showInstantDelivery = !0, e.premiumFeatureName = PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT, e.premiumFeaturePrice = Travian.Config.PremiumFeatures[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT].price, e[PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT] = function(a) {
            return{troopId:a}
          });
          e.totalResources = 0;
          for(n = 1;4 >= n;n++) {
            0 < e.troopDetails.movement.resources[n] && (e.troopDetails.movement.movementType == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN && (e.oldBounty = !0), e.totalResources += +e.troopDetails.movement.resources[n], e.showBounty = !0)
          }
          0 < e.troopDetails.movement.treasures && (e.showBounty = !0, e.totalResources += +e.troopDetails.movement.treasures, 0 > parseInt(e.troopDetails.movement.villageIdStart) && !Travian.Player.data.isKing && (e.showStolenGoods = !0))
        }
        e.sendBack = function() {
          e.sendTroops({troops:e.troopDetails, type:e.action})
        };
        e.abortMovement = function() {
          e.abort({troopId:e.troopDetails.troopId})
        };
        l.html(c.get("tpl/troopDetails/rallypoint/troopDetailsRallypoint.html"));
        a(l.contents())(e);
        requestAngularApply()
      }
    }
    l = $(l);
    e.openWindow = e.$root.openWindow;
    e.tribes = Player.TRIBE;
    e.tribe = Player.TRIBE_NAME[e.troopDetails.tribeId];
    e.heroId = Troops.TYPE_HERO;
    e.Troops = Troops;
    var q = !1, p = !0;
    "undefined" != typeof f.renderLazy && "false" === f.renderLazy && (p = !1);
    e.renderLazy = p;
    var r = {0:"grey", 1:"green", 2:"yellow", 3:"red"};
    p ? (l[0].ta = function() {
      n()
    }, l.html('<div style="display: inline-block; height: 100px;"></div>'), l.addClass("waitForRender"), "undefined" !== typeof e.scrollbarApi && e.scrollbarApi.checkLazyRenderer(), e.$on("$destroy", function() {
      l[0].ta = null
    })) : n()
  }}
};
Travian.Directive.troopDetailsRallypoint.$inject = "$compile $templateCache VillageService $timeout TroopsService SessionService".split(" ");
Travian.Directive.troopsDetails = function(a, c, b, l) {
  return{restrict:"EA", replace:!0, scope:{troopData:"=", unitInputEnabled:"=", unitInput:"=", unitInputCallback:"=", unitIconCallback:"=", renderLazy:"@"}, link:function(c, g) {
    function e() {
      !c.troopData.originalTroops && c.troopData.units && (c.troopData.originalTroops = c.troopData.units);
      $.each(["lost", "trapped"], function(a, b) {
        var e = !1;
        if(c.troopData[b + "Troops"]) {
          for(var f in c.troopData[b + "Troops"]) {
            if(0 != c.troopData[b + "Troops"][f]) {
              e = !0;
              break
            }
          }
        }
        e || delete c.troopData[b + "Troops"]
      });
      c.unitInputCallback && c.troopData.inputTroops && c.$watch("troopData.inputTroops", function(a, b) {
        c.unitInputCallback(a, b)
      }, !0);
      c.troopData.unitLevels && (c.troopData.unitValues = {}, c.$watch("troopData.unitLevels", function(a, b) {
        for(var e in c.troopData.unitLevels) {
          a[e] != b[e] && (c.troopData.unitValues[e] = {}, $.each(["attack", "defence", "defenceCavalry"], function(a, b) {
            var f = Troops.getUnitValue(b, e, c.troopData.unitLevels[e], c.troopData.tribeId);
            c.troopData.unitValues[e][b] = f
          }))
        }
      }, !0));
      c.troopData.unitValues = {};
      c.troopData.unitValues[Troops.TYPE_HERO] = {attack:-1, defence:-1, defenceCavalry:-1};
      if("undefined" != typeof c.troopData.units && "undefined" != typeof c.troopData.units[Troops.TYPE_HERO] && 1 == c.troopData.units[Troops.TYPE_HERO] || "undefined" != typeof c.troopData.originalTroops && 0 < c.troopData.originalTroops[Troops.TYPE_HERO]) {
        var e = Hero.get(c.troopData.playerId), l = e.subscribe(function() {
          var a = -1;
          c.troopData.playerId == Travian.Player.data.playerId && (a = parseInt(e.data.fightStrength) + (parseInt(e.data.bonuses[HeroItem.BONUS_FIGHT_STRENGTH]) || 0));
          c.troopData.unitValues[Troops.TYPE_HERO] = {heroLvl:e.data.level, attack:a, defence:a, defenceCavalry:a}
        });
        m.push({heroObj:e, heroObjSubscription:l})
      }
      g.html(b.get("tpl/troopDetails/partials/troopTable.html"));
      a(g.contents())(c);
      requestAngularApply()
    }
    var m = [];
    c.tribeNames = Player.TRIBE_NAME;
    c.Troops = Troops;
    c.troopConfig = Travian.Config.troopConfig;
    c.$watch("troopData", function() {
      !c.troopData.originalTroops && c.troopData.units && (c.troopData.originalTroops = c.troopData.units);
      c.troopData.autofocus && l(function() {
        $(g).find("input:enabled:first").focus()
      }, 0)
    });
    c.addUnit = function(a) {
      c.troopData.inputTroops[a] = c.troopData.originalTroops[a]
    };
    c.getTroopId = function(a, b) {
      return b == Troops.TYPE_HERO ? "hero" : nrToUnitId(b, a)
    };
    "true" == c.renderLazy ? (g[0].ta = function() {
      e()
    }, g.html('<div style="display: inline-block; height: 100px"></div>'), g.addClass("waitForRender")) : e();
    c.$on("$destroy", function() {
      g[0].ta = null;
      for(var a = 0;a < m.length;a++) {
        m[a].heroObj.unsubscribe(m[a].heroObjSubscription)
      }
    })
  }}
};
Travian.Directive.troopsDetails.$inject = ["$compile", "VillageService", "$templateCache", "$timeout"];
Travian.Directive.unitIcon = function() {
  return{restrict:"EA", replace:!0, template:'<i class="unitSmall"/>', link:function(a, c, b) {
    function l() {
      var e = b.data.split(","), l = -1, f;
      1 == e.length && ("merchant" == e[0] ? c.addClass("merchant_illu") : "hero" == e[0] || 98 == e[0] ? c.addClass("hero_illu") : (e[0] = a.$eval(e[0]), l = parseInt(e[0]), 98 == l ? c.addClass("hero_illu") : f = (l - 1) % 10 + 1, l = Math.floor((l - 1) / 10) + 1));
      2 == e.length && (l = e[0], e[0] = a.$eval(e[0]), e[1] = a.$eval(e[1]), 11 == parseInt(e[1]) || "hero" == l ? (c.addClass("hero_illu"), l = -1) : (l = parseInt(e[0]), f = parseInt(e[1])));
      0 < l && (0 < h && h != l && c.removeClass(Player.TRIBE_NAME[h]), h = l, 0 < g && g != f && c.removeClass("unitType" + g), g = f, c.addClass(Player.TRIBE_NAME[l] + " unitType" + f))
    }
    "true" == b.big ? (c.removeClass("unitSmall"), c.addClass("unitMedium")) : (c.removeClass("unitMedium"), c.addClass("unitSmall"));
    var h = 0, g = 0;
    b.$observe("data", l);
    l()
  }}
};
Travian.Directive.unitIcon.$inject = [];
Travian.Directive.unitImage = function() {
  return{restrict:"EA", replace:!0, template:'<img src="layout/images/x.gif" />', link:function(a, c, b) {
    function l() {
      var l = b.data.split(",");
      if(1 == l.length) {
        l[0] = a.$eval(l[0]);
        var f = parseInt(l[0]);
        f == Troops.TYPE_TRAPS ? (troopId = f, e = Player.TRIBE.GAUL) : (troopId = (f - 1) % 10 + 1, e = Math.floor((f - 1) / 10) + 1)
      }
      2 == l.length && (e = parseInt(a.$eval(l[0])), troopId = parseInt(a.$eval(l[1])));
      0 < e && (0 < h && h != e && c.removeClass(Player.TRIBE_NAME[h]), h = e, 0 < g && g != troopId && c.removeClass("unitType" + g), g = troopId, c.addClass(Player.TRIBE_NAME[e] + " unitType" + troopId))
    }
    var h = 0, g = 0, e = 0;
    b.$observe("data", l);
    l();
    b.$observe("size", function() {
      c.removeClass("unitBig");
      c.removeClass("unitFull");
      c.removeClass("unitThumb");
      "big" == b.size ? c.addClass("unitBig") : "full" == b.size ? c.addClass("unitFull") : c.addClass("unitThumb")
    })
  }}
};
Travian.Directive.unitImage.$inject = [];
Travian.Directive.number = function() {
  return{restrict:"A", require:"ngModel", link:function(a, c, b, l) {
    function h(a, b) {
      a !== "" + b && a !== b && (l.$setViewValue(b), l.$render())
    }
    var g = b.number, e = "true" == b.hideZero, m = "true" == b.hideNegative, f = "true" == b.negative, n = b["float"];
    c.attr("type", "tel");
    var q = null;
    c.on("focus", function() {
      q = window.setTimeout(function() {
        q = null;
        c[0].select()
      }, 10)
    });
    c.on("blur", function() {
      null != q && window.clearTimeout(q)
    });
    b.$observe("number", function(a) {
      g = parseInt(a);
      isNaN(g) && (g = -1)
    });
    b.$observe("hideZero", function(a) {
      e = "true" == a
    });
    l.$parsers.push(function(a) {
      if("undefined" != typeof a) {
        if("" !== a && null !== a) {
          var c = "";
          f && (c += "-");
          c += "0-9";
          n && (c += "\\.,");
          c = a.toString().replace(RegExp("[^" + c + "]", "g"), "");
          if(f && "-" == c) {
            h(a, c), a = c
          }else {
            var e = 0;
            if(n) {
              var c = c.replace(",", "."), e = parseFloat(c) || 0, l = parseInt(b["float"]);
              l && (l = Math.pow(10, l), e = Math.floor(e * l) / l);
              "." == c.slice(-1) && (c.indexOf(".") == c.length - 1 && e < g) && (e += ".")
            }else {
              e = parseInt(c, 0) || 0
            }
            0 <= g && e > g && (e = g);
            h(a, e);
            a = e
          }
        }
      }else {
        a = void 0
      }
      return a
    });
    l.$formatters.push(function(a) {
      if(e && 0 == a || m && 0 > a) {
        a = ""
      }
      return a
    })
  }}
};
Travian.Directive.number.$inject = [];
Travian.Directive.afterInput = function(a) {
  return function(c, b, l) {
    var h = 200, g = null;
    l.$observe("afterInputTime", function(a) {
      void 0 != a && (h = parseInt(a))
    });
    $(b).bind("keyup", function() {
      null != g && (a.cancel(g), g = null);
      g = a(function() {
        c.$evalAsync(l.afterInput);
        g = null
      }, h)
    })
  }
};
Travian.Directive.afterInput.$inject = ["$timeout"];
Travian.Directive.autoFocus = function(a) {
  return{restrict:"A", link:function(c, b, l) {
    "undefined" != typeof l.autoFocus && "resetCursor" == l.autoFocus ? a(function() {
      var a = b[0];
      a.setSelectionRange ? (a.focus(), a.setSelectionRange(0, 0)) : a.createTextRange && (a = a.createTextRange(), a.collapse(!0), a.moveStart("character", 0), a.select())
    }, 0) : b[0].focus()
  }}
};
Travian.Directive.autoFocus.$inject = ["$timeout"];
Travian.Directive.carousel = function(a, c, b) {
  return{restrict:"E", scope:{carouselTemplate:"@", carouselItems:"=", carouselActiveItem:"=", carouselWindowHeight:"=", carouselCols:"=", carouselItemPrimaryKey:"@", carouselWideCols:"=", carouselCallback:"="}, templateUrl:"tpl/mainlayout/partials/carousel.html", link:function(l, h) {
    function g() {
      l.player = Travian.Player;
      m && (l.carousel = new ua({ta:function(a) {
        return a
      }, cols:q, element:h, compile:a, mf:l, template:m, Mf:h.find(".items"), Ug:l.carouselItemPrimaryKey, rows:n && n.length <= q ? 1 : 660 < f ? 2 : 1, Df:function() {
        e()
      }}), l.carousel.setItems(n))
    }
    function e() {
      1 >= l.carousel.pages.length ? (h.addClass("arrowsHidden"), p.hide(), r.width(h.find(".carousel").width())) : (h.removeClass("arrowsHidden"), p.show(), r.width(h.find(".carousel").width() - 2 * p.width()));
      r.find(".item").width(Math.floor(r.width() / q - 2))
    }
    h = $(h);
    var m = null, f = 0, n = null, q = l.carouselCols || 4, p = h.find(".carouselArrow"), r = h.find(".items");
    b.get(l.carouselTemplate, {cache:c}).success(function(a) {
      m = a;
      g()
    });
    h.addClass("col_" + q);
    l.$watch("carouselItems", function(a) {
      n = a;
      if(!a || "undefined" === typeof l.carousel) {
        return!1
      }
      l.carousel.setItems(n);
      e()
    }, !0);
    l.$watch("carouselWindowHeight", function(a) {
      if(!a || "undefined" === typeof a) {
        return!1
      }
      f = a;
      "undefined" !== typeof l.carousel && l.carousel.setRows(n && n.length <= q ? 1 : 660 < a ? 2 : 1);
      "undefined" !== typeof l.$parent.w && l.$parent.w.updateWindowHeight()
    }, !0)
  }}
};
Travian.Directive.carousel.$inject = ["$compile", "$templateCache", "$http"];
Travian.Directive.clickable = function(a, c) {
  return function(a, l, h) {
    h.clickable && ($(l).addClass("clickable"), U.Ma(l[0], function() {
      var g = $(l).attr("disabled");
      if($(l).hasClass("disabled") || "undefined" !== typeof g && !1 !== g) {
        return!0
      }
      "undefined" != typeof h.playOnClick && c.U(h.playOnClick);
      return a.$apply(h.clickable)
    }), a.$on("$destroy", function() {
      U.s(l[0])
    }))
  }
};
Travian.Directive.clickable.$inject = ["$timeout", "AudioService"];
Travian.Directive.draggable = function() {
  return function(a, c, b) {
    function l() {
      "function" == typeof g && g();
      var l = a.$eval(b.draggable);
      l && (g = U.ec(c[0], function() {
        b.onDragInit && (a.$eval(b.onDragInit, {object:l}), requestAngularApply());
        b.dragOut && h();
        return l
      }, function() {
        b.onDragStop && (a.$eval(b.onDragStop, {object:l, dragOut:e}), requestAngularApply())
      }, l))
    }
    function h() {
      var a = $("." + b.dragOut);
      if(0 < a.length) {
        var c = parseInt(b.dragOutDistance) || 0, g = U.H("move", function(b) {
          var g = a[0].getBoundingClientRect(), g = b.current.x < g.left - c || b.current.x > g.right + c || b.current.y < g.top - c || b.current.y > g.bottom + c;
          g != e && b.q && (e ? $(b.q).removeClass("dragOut") : $(b.q).addClass("dragOut"));
          e = g
        }), h = U.H("up", function() {
          g();
          h()
        })
      }
    }
    if("touch" != U.Xa() || "true" != b.disableTouchDrag) {
      var g = null, e = !1;
      b.$observe("draggable", l);
      a.$on("$destroy", function() {
        "function" == typeof g && g()
      })
    }
  }
};
Travian.Directive.draggable.$inject = ["$timeout"];
Travian.Directive.dropable = function() {
  return function(a, c, b) {
    if("touch" != U.Xa() || "true" != b.disableTouchDrag) {
      a.$eval(b.draggable), U.Rg(c[0], function(c, h, g) {
        return a.$eval(b.dropable, {object:g})
      }), a.$on("$destroy", function() {
        U.s(c[0])
      })
    }
  }
};
Travian.Directive.dropable.$inject = ["$timeout"];
Travian.Directive.i18ndt = function(a, c) {
  function b(b, c, h) {
    "undefined" === typeof c && (c = "mediumDate");
    return void 0 !== Travian.datetimeFormats && void 0 !== Travian.datetimeFormats[h] && void 0 !== Travian.datetimeFormats[h][c] ? a("date")(b, Travian.datetimeFormats[h][c]) : a("date")(b, c)
  }
  var l = getStdTimezoneOffset(), h = null;
  return{link:function(a, e, m) {
    var f = null;
    a.$on("$destroy", function() {
      null != f && clearInterval(f)
    });
    m.$observe("i18ndt", function(a) {
      function g() {
        var a, c = new Date(v), f = new Date((new Date).getTime() + s + p), h = +new Date(f.getFullYear(), f.getMonth(), f.getDate() - 1), l = +new Date(f.getFullYear(), f.getMonth(), f.getDate()), q = +new Date(f.getFullYear(), f.getMonth(), f.getDate() + 1), n = +new Date(f.getFullYear(), f.getMonth(), f.getDate() + 2);
        a = a || m.format;
        f = null;
        h < c && l > c ? f = Travian.translate("Chat.Time_Yesterday") + " " : q < c && n > c ? f = Travian.translate("Chat.Time_Tomorrow") + " " : l < c && q > c && (f = Travian.translate("Chat.Time_Today") + " ");
        h = "";
        if(f) {
          switch(a) {
            case "fullDate":
            ;
            case "longDate":
            ;
            case "mediumDate":
            ;
            case "shortDate":
              h = f.trim();
              break;
            case "medium":
            ;
            case "short":
              h = f + b(c, a + "Time", r);
              break;
            case "veryShort":
              h = l < c && q > c ? b(c, "shortTime", r) : b(c, a, r);
              break;
            default:
              h = b(c, a, r)
          }
        }else {
          h = b(c, a, r)
        }
        e.text(h)
      }
      var p = 0, r = Travian.Config.defaultTimeFormat;
      null != Travian.Player && 0 < Travian.Player.data.playerId && (null == h && (h = Settings.get(Travian.Player.data.playerId)), p = 36E5 * h.data.timeZone, r = h.data.timeFormat);
      var s = 6E4 * l;
      if("undefined" != typeof a) {
        var v = 1E3 * a + p + s;
        if("undefined" != typeof m.relative) {
          if(v += c.wg(), 6048E5 < 1E3 * c.K() - v) {
            g()
          }else {
            var v = v - (p + s), u = moment(v), t = function() {
              e.text(u.fromNow())
            };
            t();
            null != f && clearInterval(f);
            f = setInterval(t, 5E3)
          }
        }else {
          "undefined" != typeof m.fastOffset ? (a = 1E3 * parseInt(a), null != f && clearInterval(f), f = setInterval(function() {
            e.text(b(new Date(a + 1E3 * Math.floor(c.K()) + s + p), m.format, r))
          }, 100)) : g()
        }
      }
    })
  }}
};
Travian.Directive.i18ndt.$inject = ["$filter", "ServertimeService"];
Travian.Directive.onPointerOut = function() {
  return function(a, c, b) {
    U.onPointerOut(c[0], function() {
      a.$eval(b.onPointerOut);
      requestAngularApply()
    });
    a.$on("$destroy", function() {
      U.s(c[0])
    })
  }
};
Travian.Directive.onPointerOver = function() {
  return function(a, c, b) {
    U.onPointerOver(c[0], function() {
      a.$eval(b.onPointerOver);
      requestAngularApply()
    });
    a.$on("$destroy", function() {
      U.s(c[0])
    })
  }
};
Travian.Directive.rerender = function(a) {
  return{xi:!0, transclude:"element", priority:600, terminal:!0, restrict:"A", Zh:!0, link:function(c, b, l, h, g) {
    var e, m;
    c.$watch(l.rerender, function() {
      m && (m.$destroy(), m = null);
      e && (e.remove(), e = null);
      g(function(c, g) {
        m = g;
        e = c;
        a.enter(c, b.parent(), b)
      });
      return!1
    })
  }}
};
Travian.Directive.rerender.$inject = ["$animate"];
Travian.Directive.resizable = function(a) {
  return{restrict:"A", scope:{resizable:"="}, link:function(c, b, l) {
    b = $(b);
    var h = $("<div>", {"class":"resizer window_resizehandle_small_illu"}), g = $("<div>", {"class":"resizeHelper"});
    b.append(h);
    b.append(g);
    var e = !1, m = null, f = null;
    U.ca(h[0], function() {
      e = !0;
      var a = U.M();
      m = {x:a.current.x, y:a.current.y};
      f = {x:g.outerWidth(), y:g.outerHeight()};
      g.css({display:"block"});
      return!1
    });
    var n = parseInt(l.minWidth, 10), q = parseInt(l.maxWidth, 10);
    l.padding && (n += parseInt(l.padding, 10), q += parseInt(l.padding, 10));
    var p = U.H("move", function() {
      if(e) {
        var a = U.M(), a = {x:f.x + (a.current.x - m.x), y:f.y + (a.current.y - m.y)};
        l.minWidth && (a.x = Math.max(n, a.x));
        l.minHeight && (a.y = Math.max(l.minHeight, a.y));
        l.maxWidth && (a.x = Math.min(q, a.x));
        g.css({width:a.x + "px", height:a.y + "px"})
      }
    }), r = U.H("up", function() {
      if(e) {
        var a = U.M(), a = {x:a.current.x - m.x, y:a.current.y - m.y};
        g.css({display:"none"});
        c.resizable(a)
      }
      e = !1
    });
    a(function() {
      var a = {x:300, y:300};
      l.initWidth && (a.x = parseInt(l.initWidth));
      l.initHeight && (a.y = parseInt(l.initHeight));
      c.resizable(a)
    }, 10);
    c.$on("$destroy", function() {
      p();
      r();
      U.s(b[0]);
      U.s(h[0]);
      h.remove();
      g.remove()
    })
  }}
};
Travian.Directive.resizable.$inject = ["$timeout"];
Travian.Directive.scrollable = function() {
  return{restrict:"A", scope:!1, transclude:!0, templateUrl:"tpl/mainlayout/partials/scrollable.html", link:function(a, c, b) {
    function l() {
    }
    function h() {
    }
    function g(e) {
      var f = c.find(".scrollContent");
      if(!f) {
        return!1
      }
      if("true" != b.scrollingDisabled) {
        "undefined" !== typeof a.tabData && ("number" === typeof a.tabData.scrollContentHeightOffset ? q = a.tabData.scrollContentHeightOffset : "undefined" !== typeof a.tabData.scrollContentHeightOffset && "number" === typeof a.tabData.scrollContentHeightOffset[a.tabData.currentTab] && (q = a.tabData.scrollContentHeightOffset[a.tabData.currentTab]));
        e && f.css({height:"auto"});
        var g = 0, h = "height";
        "undefined" !== typeof a.w ? "undefined" != typeof a.overlayMaxScrollHeight ? (g = a.overlayMaxScrollHeight, h = "maxHeight") : g = a.w.maxWindowBodySize : q = 0;
        var l = c.height(), m = c.find(".scrollContentInnerWrapper").height(), n = !1;
        if(r || e) {
          if(n = !0, r = !1, e = c.css("height"), -1 < e.indexOf("px") && (e = e.substring(0, e.indexOf("px")), e = parseInt(e)), l != e && e != c.outerHeight(!0) && 0 != e && 0 != l) {
            var s = c.innerHeight() - l;
            p = e - s
          }
        }
        e = {height:"auto", maxHeight:"none"};
        -1 != p ? e[h] = p : (s = g, void 0 !== a.w && void 0 !== a.w.maxWindowBodySizeObj && (s = a.w.maxWindowBodySizeObj.max), 0 < m && !n && (m + q >= s ? g = s - q : m > g && (g = m)), e[h] = "fix" == (b.heightDependency || "fix") ? l || g : g || m);
        f.css(e)
      }
    }
    function e() {
      g(!0);
      v.update()
    }
    function m() {
      g();
      v.update()
    }
    function f() {
      v = new Pa({element:c, autoUpdate:!0, scrollDown:"undefined" !== typeof b.scrollDown, onScrolling:function() {
        a.$broadcast("contentScrolling", a.$id);
        a.$emit("contentScrolling", a.$parent.$id)
      }, initUpdateTick:function(b) {
        h = a.$watch(b)
      }});
      v.updateHeight = g;
      v.handleResize = m;
      v.resetHeight = e;
      a.scrollbarApi = v;
      l = a.$watch(function() {
        if(null === c[0].offsetParent) {
          return!0
        }
        var a = c[0].scrollHeight, b = c[0].scrollWidth;
        if(a != u || b != t) {
          -1 != u && m(), u = a, t = b
        }
        return!0
      });
      z || (z = !0, a.$on("scrollbarApi", function(a, b) {
        v[b]()
      }));
      $(window).on("resize", m)
    }
    function n() {
      $(window).off("resize", m);
      v.destroy();
      h();
      l()
    }
    c = $(c);
    c.addClass("scrollable");
    var q = 0, p = -1, r = !0, s = !1, v;
    b.$observe("scrollingDisabled", function(a) {
      !0 === a || "true" == a ? (s = !0, c.find(".scrollContent").css({height:"auto", maxHeight:"none"}), c.attr("style", ""), c.addClass("scrollingDisabled"), v.oh(), n()) : s && (c.removeClass("scrollingDisabled"), r = !0, f(), m())
    });
    b.$observe("scrollPosition", function(a) {
      v.scrollTo(a, !0, !0)
    });
    "static" == c.css("position") && c.css("position", "relative");
    var u = -1, t = -1, z = !1;
    f();
    g();
    a.$on("$destroy", n)
  }}
};
Travian.Directive.scrollable.$inject = [];
Travian.Directive.swipeable = function() {
  return function(a, c, b) {
    $(c).addClass("swipeable");
    U.bh(c[0], function(l) {
      var h = $(c).attr("disabled");
      if($(c).hasClass("disabled") || "undefined" !== typeof h && !1 !== h) {
        return!1
      }
      l = b.swipeable.replace("{direction}", l);
      a.$apply(l)
    })
  }
};
Travian.Directive.touchTooltips = function() {
  return function(a, c, b) {
    U.ca(c[0], function() {
      U.Sb && "undefined" == typeof b.forceTouchTooltips || U.$e()
    });
    a.$on("$destroy", function() {
      U.s(c[0])
    })
  }
};
Travian.Directive.visibleTabUpdate = function() {
  return{restrict:"A", scope:{resizable:"="}, link:function(a, c, b) {
    a.$on("setVisibleTab", function(a, h) {
      h == b.visibleTabUpdate ? c.css("display", "block") : c.css("display", "none")
    });
    a.$root.$broadcast("setVisibleTab", b.visibleTabUpdate)
  }}
};
Travian.Directive.zoom = function() {
  return{restrict:"A", scope:!1, link:function(a, c, b) {
    function l(a) {
      var e = $(c), h = $(document).height(), f = $(c[0].parentNode).width();
      if(0 == f) {
        a || window.setTimeout(function() {
          l(!0)
        }, 10)
      }else {
        a = parseInt(b.orgHeight);
        var n = parseInt(b.orgWidth), q = parseInt(b.offsetHeight), p = Math.min(1, h / parseInt(b.minHeight), f / parseInt(b.minWidth)), r = Math.max(h / a, f / n);
        1 == p && 1 < r && (p = r);
        h = Math.round((h - a) / 2 + q);
        f = Math.round((f - n) / 2);
        e[0].Of = p;
        e.css({top:h + "px", left:f, right:"auto", height:a + "px"});
        1 != p ? (f = Math.round(50 * p) / 50, 0.98 < f && 1 > f && (f = 1), e.css({transform:"perspective(1000px) scale3d(" + f + ", " + f + ", 1)", "transform-origin":"50% 50%", webkitFilter:"blur(0)", webkitPerspective:"1000px"}), e[0].zoomScale = f) : (e.css({transform:"none", zoom:1}), e[0].zoomScale = 1)
      }
    }
    a.$on("urlChanged", function(a, b) {
      "undefined" != typeof b.page && l()
    });
    l();
    $(window).on("resize", l);
    var h = a.$watch("page", l);
    a.$on("$destroy", function() {
      $(window).off("resize", l);
      h()
    })
  }}
};
Travian.Directive.zoom.$inject = ["$compile", "$timeout"];
Travian.Filter.HHMM = function() {
  return function(a) {
    return a && "undefined" !== typeof a ? la(parseInt(a), !0) : 0
  }
};
Travian.Filter.HHMMSS = function() {
  return function(a) {
    return a && "undefined" !== typeof a ? la(parseInt(a)) : 0
  }
};
Travian.Filter.bidiCoordinate = function() {
  Travian.Filter.bidiNumber();
  return function(a, c, b) {
    a = new qa({value:a, Bd:c, Cd:b});
    c = a.Mc.surroundingDirection === a.config.Kb ? a.config.Bc : a.config.Jd;
    var l = a.Gb + c + ")" + a.config.nb;
    b = '<span class="coordinateX">' + (a.Gb + c + "(" + a.config.nb) + ra(a, a.Bd) + "</span>";
    l = '<span class="coordinateY">' + ra(a, a.Cd) + l + "</span>";
    return a.Gb + c + b + '<span class="coordinatePipe">|</span>' + l + a.config.nb
  }
};
Travian.Filter.bidiNumber = function() {
  return function(a, c, b, l, h, g, e) {
    return sa(new qa({value:a, Ha:c, td:b, dc:l, threshold:h, Rb:g, Ua:e}))
  }
};
Travian.Filter.bidiRatio = function() {
  return function(a, c, b, l, h, g) {
    return ta(new qa({current:c, Va:b, threshold:99999, Rb:0, Hb:l, dc:!0, Ha:h, vd:g}))
  }
};
Travian.Filter.range = function() {
  return function(a, c, b) {
    c = parseInt(c);
    for(b = parseInt(b);c <= b;c++) {
      a.push(c)
    }
    return a
  }
};
Travian.Filter.rank = function() {
  return function(a) {
    return!a && 0 !== a || "undefined" === typeof a ? "" : isNaN(a) ? a : a + 1
  }
};
Travian.Filter.resource = function() {
  return function(a) {
    return 1 == a ? "wood" : 2 == a ? "clay" : 3 == a ? "iron" : 4 == a ? "crop" : "unkown"
  }
};
Travian.Filter.shortBigNumber = function() {
  return function(a, c, b) {
    if(!a || "undefined" === typeof a) {
      return 0
    }
    var l = parseInt(a, 10);
    "undefined" !== typeof c && Math.abs(l) <= parseInt(c) ? l = sa(new qa({value:a})) : (a = b, a = "undefined" !== typeof a ? a : 1, l = Math.abs(l), 1E3 <= l ? (l = l / 1E3 * Math.pow(10, a), l = Math.floor(l), l /= Math.pow(10, a), l += "k") : l = parseInt(l));
    return l
  }
};
Travian.Filter.sortObjectsByNumericProperty = function() {
  return function(a, c) {
    if(!angular.isObject(a)) {
      return a
    }
    var b = [], l;
    for(l in a) {
      a[l].key = l, b.push(a[l])
    }
    b.sort(function(a, b) {
      a = parseInt(a[c]);
      b = parseInt(b[c]);
      return a - b
    });
    return b
  }
};
Travian.Filter.toHtml = function() {
  return function(a) {
    return"" == a || "undefined" == typeof a || null == a ? "" : escapeHtmlTags(a).replace(/\\n/g, "<br/>")
  }
};
"use strict";
Travian.Service.AnimationService = function(a, c) {
  function b() {
    return!n || n.getSetting("disableAnimations")
  }
  function l() {
    if(b()) {
      for(var a = 0;a < m.length;a++) {
        var c = m[a];
        c.elem.removeClass(c.baseClass + c.currentFrame);
        c.currentFrame = -c.delay;
        if("function" == typeof c.onEnd) {
          c.onEnd(c, !0)
        }
        c.loop || (e(c.index), a--)
      }
      null != f && (Travian.tick.unbind(f), f = null)
    }else {
      h()
    }
  }
  function h() {
    !f && (0 < m.length && !b()) && (f = Travian.tick.bind(g))
  }
  function g() {
    for(var a = 0;a < m.length;a++) {
      var b = m[a];
      if("undefined" == typeof b.currentFrame) {
        b.currentFrame = -b.delay + 1
      }else {
        if(b.elem.removeClass(b.baseClass + b.currentFrame), b.currentFrame++, b.currentFrame > b.frames) {
          if("function" == typeof b.onEnd) {
            b.onEnd(b)
          }
          if(b.loop) {
            b.currentFrame = -b.delay
          }else {
            e(b.index);
            continue
          }
        }
      }
      0 <= b.currentFrame && b.elem.addClass(b.baseClass + b.currentFrame)
    }
  }
  function e(a) {
    m[a].index = -1;
    m.splice(a, 1);
    if(0 == m.length) {
      null != f && (Travian.tick.unbind(f), f = null)
    }else {
      for(;a < m.length;a++) {
        m[a].index--
      }
    }
  }
  var m = [], f = null, n = null;
  c.o(function() {
    n = Settings.get(Travian.Player.data.playerId);
    n.subscribe(l)
  });
  return new function() {
    var a = this;
    this.Lb = 300;
    this.ih = function(a, b, c, f, g) {
      var l = {elem:a instanceof jQuery ? a : $(a), baseClass:b, frames:c, delay:f || 0, loop:!0, onEnd:g};
      l.index = m.push(l) - 1;
      h();
      return function() {
        0 < l.index && e(l.index)
      }
    };
    this.bb = {};
    this.jb = function(c, e, f, g, h, l, m, n, C, D, y) {
      function B(b) {
        f.remove();
        b || "function" != typeof n || n(C);
        y && a.bb[y] && window.setTimeout(function() {
          delete a.bb[y]
        }, 1E3)
      }
      if(y) {
        if(a.bb[y]) {
          return
        }
        a.bb[y] = !0
      }
      if(b() || "hidden" == $(e).css("visibility")) {
        return"function" == typeof n && n(C), y && y && a.bb[y] && window.setTimeout(function() {
          delete a.bb[y]
        }, 1E3), !0
      }
      g = $(g || "body");
      if(0 == g.length) {
        return!1
      }
      "string" == typeof f && (f = $('<i class="' + f + '"></i>'));
      if(!(f instanceof jQuery)) {
        return!1
      }
      f.css("pointerEvents", "none");
      D || (D = {start:1, end:1});
      var H = {}, I = !1;
      $.each({start:c, end:e}, function(a, b) {
        var c = b;
        "string" == typeof c && (c = $(c));
        c instanceof jQuery && 0 < c.length && (H[a] = c.offset(), H[a].top += c.outerHeight() * D[a] / 2, H[a].left += c.outerWidth() * D[a] / 2);
        "object" == typeof c && (c.top && c.left) && (H[a] = c);
        if(H[a]) {
          H[a].top -= g.offset().top, H[a].left -= g.offset().left, g[0].zoomScale && (H[a].top /= g[0].zoomScale, H[a].left /= g[0].zoomScale)
        }else {
          return I = !0, !1
        }
        return!0
      });
      if(I) {
        return!1
      }
      c = (h || 1E3) / 1E3 + "s " + (m || "linear");
      l && (c += " " + l / 1E3 + "s");
      g.append(f.css({position:"absolute", top:H.start.top, left:H.start.left, transition:"top " + c + ", left " + c, zIndex:9999}));
      f.css({marginTop:"-" + f.outerHeight() / 2 + "px", marginLeft:"-" + f.outerWidth() / 2 + "px"});
      f.one("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function() {
        f.unbind("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd");
        B()
      });
      f.show().css(H.end);
      return B
    };
    this.showAnimatedElement = function(a, b) {
      a = $(a);
      b = $(b || "body");
      a.one("animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd", function() {
        a.remove()
      });
      b.append(a)
    };
    this.zd = function(a, c, e) {
      b() || (a instanceof jQuery || (a = $(a)), e ? (a = $('<i class="' + e + " " + c + '"></i>').insertAfter(a), a.one("animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd", function() {
        a.unbind("animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd");
        a.remove()
      })) : (a.removeClass(c), a[0].offsetWidth, a.addClass(c)))
    };
    this.showScreenFlashNotification = function(a, b) {
      function c() {
        return!Travian.rootScope.windows.screenFlashNotification && !Travian.rootScope.windows.questVictory
      }
      b = b || {};
      b.notificationType = a;
      if(c()) {
        Travian.rootScope.openWindow("screenFlashNotification", {}, b, !0)
      }else {
        var e = Travian.rootScope.$watch("windows", function() {
          c() && (Travian.rootScope.openWindow("screenFlashNotification", {}, b, !0), e())
        }, !0)
      }
    }
  }
};
Travian.Service.AnimationService.$inject = ["$rootScope", "SessionService"];
"use strict";
Travian.Service.AudioService = function(a, c, b, l) {
  function h() {
    if(g) {
      0 < Travian.Player.data.tribeId && (e || "undefined" == typeof c || (e = new Za(b, c)), m || "undefined" == typeof l.page || (m = new $a(l.page)));
      f || (f = new ab);
      n || (n = new bb);
      q || (q = new cb);
      var a = 0, h = 0, s = 0;
      g.data.muteAll || (a = g.data.musicVolume / 100, h = g.data.soundVolume / 100, s = g.data.uiSoundVolume / 100);
      e && e.Eb(a);
      m && m.Eb(h);
      f.Eb(h);
      n.Eb(h);
      q.Eb(s)
    }
  }
  var g = null, e, m, f, n, q;
  l.UISound = {};
  l.UISound.BUTTON_CLICK = Ta;
  l.UISound.BUTTON_CANCEL = Va;
  l.UISound.BUTTON_ZOOM_IN = Ca;
  l.UISound.BUTTON_ZOOM_OUT = Ba;
  l.UISound.BUILDING_UPGRADE = Ra;
  l.UISound.BUILDING_UPGRADE_CANCEL = db;
  l.UISound.BUTTON_CLOSE = eb;
  l.UISound.TAB_SWITCH = Wa;
  l.UISound.BUTTON_MASTER_BUILDER = fb;
  l.UISound.SUBTAB_SWITCH = Xa;
  l.UISound.BUTTON_SPEND_GOLD = Ya;
  l.UISound.BUTTON_TRAIN_TROOPS = gb;
  l.UISound.BUTTON_SEND_RESSOURCES = hb;
  l.UISound.BUTTON_SEND_TROOPS = ib;
  l.UISound.BUTTON_CANCEL_TROOP_MOVEMENT = jb;
  l.UISound.BUTTON_COLLECT_TRIBUTES = kb;
  l.UISound.BUTTON_SELL_ITEM = lb;
  l.UISound.BUTTON_SELL_STOLEN_GOODS = mb;
  l.UISound.BUTTON_BET_ON_ITEM = nb;
  l.UISound.OPEN_REPORT = ob;
  l.UISound.BUTTON_SQUARE_CLICK = pb;
  l.UISound.BUTTON_COLLECT_OASIS_RES = qb;
  a.o(function() {
    g = Settings.get(Travian.Player.data.playerId);
    g.subscribe(h);
    if(0 >= Travian.Player.data.tribeId) {
      var a = Travian.Player.subscribe(function() {
        0 < Travian.Player.data.tribeId && (Travian.Player.unsubscribe(a), h())
      })
    }
  });
  l.$on("urlChanged", function(a, b) {
    !m && ("undefined" != typeof l && Travian.Player && 0 != Travian.Player.data.tribeId) && (m = new $a(l.page));
    m && (b.page && 0 < m.volume) && m.dh(b.page)
  });
  l.$on("notificationReceived", function(a, b) {
    for(var c = 0;c < b.length;c++) {
      "undefined" != typeof n && n.Ka && n.play(b[c].data.type)
    }
  });
  return new function() {
    this.Nh = function() {
      "undefined" != typeof e && e.play()
    };
    this.ef = function() {
      h()
    };
    this.eh = function(a) {
      "undefined" == typeof f && (f = new ab);
      f.Ye(a);
      0 < f.volume && (f.Ka || f.Aa(), f.play(a))
    };
    this.Qh = function(a) {
      "undefined" != typeof f && (f.Ye(0), f.stop(a))
    };
    this.Le = function(a) {
      "undefined" != typeof n && n.Ka && n.play(a)
    };
    this.U = function(a) {
      "undefined" != typeof q && q.Ka && q.play(a)
    };
    this.Uh = function() {
      null != g && (g.data.muteAll = !g.data.muteAll, g.persist())
    }
  }
};
function rb(a, c, b, l, h) {
  function g() {
    this.Q = !0
  }
  function e() {
    this.Q = !1
  }
  this.df = !1;
  this.kf = c;
  this.kc = !1;
  a = Travian.Config.cdnPrefix + a;
  l || (l = function() {
    this.loop() || (this.Q = !1);
    b && this.play()
  });
  "undefined" != typeof h && (this.df = h);
  this.Lg = function() {
    this.La = new Howl({src:[a + ".ogg", a + ".mp3"], volume:this.kf, onend:l, onplay:g, onpause:e, onloaderror:function() {
      console.log("unable to load", this)
    }});
    this.kc = !0
  };
  this.Q = !1;
  this.play = function() {
    this.kc || this.Lg();
    this.La.Q && !this.df || this.La.play()
  };
  this.stop = function() {
    this.kc && (this.La.stop(), this.La.Q = !1)
  };
  this.pause = function() {
    this.kc && this.La.pause()
  };
  this.volume = function(a) {
    this.kf = a;
    "undefined" != typeof this.La && this.La.volume(a)
  }
}
function sb() {
  this.tribeId = 0;
  this.path = "";
  this.volume = 0;
  this.Ka = !1;
  this.C = {};
  this.ya = [];
  this.$g = this.loop = !1;
  this.play = function(a) {
    0 < this.volume && this.C.hasOwnProperty(a) && this.C[a].play()
  };
  this.pause = function(a) {
    this.C.hasOwnProperty(a) && this.C[a].pause()
  };
  this.dd = this.stop = function() {
    for(var a in this.C) {
      this.C[a].stop()
    }
  };
  this.eb = this.play;
  this.Eb = function(a) {
    if(!(0 > this.volume || this.volume == a)) {
      var c = this.volume;
      this.volume = a;
      0 == a ? this.dd() : (this.Ka || this.Aa(), 0 == c && this.eb());
      for(var b in this.C) {
        a = this.C[b], this.C[b].audioTrack && (a = this.C[b].audioTrack), a.volume(this.volume)
      }
    }
  };
  this.Aa = function() {
    for(var a = 0;a < this.ya.length;a++) {
      this.C[this.ya[a].key] = new rb(this.path + this.ya[a].name, this.volume, this.loop, this.$g, this.ya[a].simultaneousPlay)
    }
    this.Ka = !0
  };
  this.parent = this
}
function Za(a, c) {
  var b = "Travian_tribe_" + Player.TRIBE_NAME[Travian.Player.data.tribeId] + "s_master_part", l, h, g = c.B(null, [Troops.COLLECTION_MOVING, TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]), e = this;
  this.Ef = 4;
  this.Q = !1;
  this.path = "audio/music/";
  this.Aa = function() {
    for(var a = 1;a <= this.Ef;a++) {
      4 > a ? (l = 30, h = 20) : (l = 10, h = 40), this.C[a] = {audioTrack:new rb(this.path + b + a, this.volume, !1, this.fh), normalChance:l, intenseChance:h}
    }
    this.Ka = !0
  };
  this.fh = function() {
    this.Q = !1;
    e.C[e.Qb].audioTrack.Q = !1;
    e.Qb = e.le();
    e.C[e.Qb].audioTrack.play()
  };
  this.le = function() {
    var b = Math.floor(100 * Math.random() + 1), c, e, h = 0;
    a: {
      c = g.u();
      for(var l = 0;l < c.length;l++) {
        if(300 > c[l].data.movement.timeFinish - a.K()) {
          c = !0;
          break a
        }
      }
      c = !1
    }
    c = c ? "intenseChance" : "normalChance";
    for(var r in this.C) {
      if(b <= this.C[r][c] + h) {
        e = r;
        break
      }
      h += this.C[r][c]
    }
    return e
  };
  this.play = function() {
    !this.Q && 0 < this.volume && (this.Qb = this.le(), this.Q = !0, this.C[this.Qb].audioTrack.play())
  };
  this.dd = this.stop = function() {
    this.Q = !1;
    for(var a in this.C) {
      this.C[a].audioTrack.stop()
    }
  };
  this.eb = this.play;
  0 < this.volume && this.Aa()
}
Za.prototype = new sb;
function $a(a) {
  var c = Travian.Player.data.tribeId, b = "T5AS_" + Player.TRIBE_NAME[c] + "Village", c = "T5AS_" + Player.TRIBE_NAME[c] + "VillageResources";
  this.Q = !1;
  this.wa = a;
  this.path = "audio/AmbientSounds/";
  this.ya = [{key:"village", name:b}, {key:"resources", name:c}, {key:"map", name:"T5AS_strategic"}];
  this.loop = !0;
  this.play = function(a) {
    this.wa = void 0 === a ? Travian.rootScope.page : a;
    this.Q || (this.C[this.wa].play(), this.Q = !0)
  };
  this.pause = function() {
    this.Q = !1;
    this.parent.pause(this.wa)
  };
  this.dh = function(a) {
    this.wa != a && (this.C[this.wa].pause(), this.wa = a, this.C[this.wa].play())
  };
  this.dd = this.pause;
  this.eb = this.play;
  0 < this.volume && (this.Aa(), this.play(this.wa))
}
$a.prototype = new sb;
function ab() {
  this.path = "audio/BuildingSounds/";
  this.ed = 0;
  this.ya = [{key:Building.TYPE.WOOD, name:"T5BS_" + Building.TYPE.WOOD}, {key:Building.TYPE.CLAY, name:"T5BS_" + Building.TYPE.CLAY}, {key:Building.TYPE.IRON, name:"T5BS_" + Building.TYPE.IRON}, {key:Building.TYPE.CROP, name:"T5BS_" + Building.TYPE.CROP}, {key:Building.TYPE.SAWMILL, name:"T5BS_" + Building.TYPE.SAWMILL}, {key:Building.TYPE.CLAY_BAKERY, name:"T5BS_" + Building.TYPE.CLAY_BAKERY}, {key:Building.TYPE.IRON_FOUNDRY, name:"T5BS_" + Building.TYPE.IRON_FOUNDRY}, {key:Building.TYPE.MILL, 
  name:"T5BS_" + Building.TYPE.MILL}, {key:Building.TYPE.BAKERY, name:"T5BS_" + Building.TYPE.BAKERY}, {key:Building.TYPE.WAREHOUSE, name:"T5BS_" + Building.TYPE.WAREHOUSE}, {key:Building.TYPE.GREAT_WAREHOUSE, name:"T5BS_" + Building.TYPE.WAREHOUSE}, {key:Building.TYPE.GRANARY, name:"T5BS_" + Building.TYPE.GRANARY}, {key:Building.TYPE.GREAT_GRANARY, name:"T5BS_" + Building.TYPE.GRANARY}, {key:Building.TYPE.BLACKSMITH, name:"T5BS_" + Building.TYPE.BLACKSMITH}, {key:Building.TYPE.TOURNAMENT_SQUARE, 
  name:"T5BS_" + Building.TYPE.TOURNAMENT_SQUARE}, {key:Building.TYPE.MAIN_BUILDING, name:"T5BS_" + Building.TYPE.MAIN_BUILDING}, {key:Building.TYPE.RALLY_POINT, name:"T5BS_" + Building.TYPE.RALLY_POINT}, {key:Building.TYPE.MARKET, name:"T5BS_" + Building.TYPE.MARKET}, {key:Building.TYPE.EMBASSY, name:"T5BS_" + Building.TYPE.EMBASSY}, {key:Building.TYPE.BARRACKS, name:"T5BS_" + Building.TYPE.BARRACKS}, {key:Building.TYPE.GREAT_BARRACKS, name:"T5BS_" + Building.TYPE.BARRACKS}, {key:Building.TYPE.STABLE, 
  name:"T5BS_" + Building.TYPE.STABLE}, {key:Building.TYPE.GREAT_STABLE, name:"T5BS_" + Building.TYPE.STABLE}, {key:Building.TYPE.WORKSHOP, name:"T5BS_" + Building.TYPE.WORKSHOP}, {key:Building.TYPE.ACADEMY, name:"T5BS_" + Building.TYPE.ACADEMY}, {key:Building.TYPE.CRANNY, name:"T5BS_" + Building.TYPE.CRANNY}, {key:Building.TYPE.TOWN_HALL, name:"T5BS_" + Building.TYPE.TOWN_HALL}, {key:Building.TYPE.RESIDENCE, name:"T5BS_" + Building.TYPE.RESIDENCE}, {key:Building.TYPE.PALACE, name:"T5BS_" + Building.TYPE.PALACE}, 
  {key:Building.TYPE.TREASURY, name:"T5BS_" + Building.TYPE.TREASURY}, {key:Building.TYPE.TRADE_OFFICE, name:"T5BS_" + Building.TYPE.TRADE_OFFICE}, {key:Building.TYPE.CITY_WALL, name:"T5BS_" + Building.TYPE.CITY_WALL}, {key:Building.TYPE.EARTH_WALL, name:"T5BS_" + Building.TYPE.EARTH_WALL}, {key:Building.TYPE.PALLISADE, name:"T5BS_" + Building.TYPE.PALLISADE}, {key:Building.TYPE.STONEMASON, name:"T5BS_" + Building.TYPE.STONEMASON}, {key:Building.TYPE.BREWERY, name:"T5BS_" + Building.TYPE.BREWERY}, 
  {key:Building.TYPE.TRAPPER, name:"T5BS_" + Building.TYPE.TRAPPER}, {key:Building.TYPE.WONDER_OF_WORLD, name:"T5BS_" + Building.TYPE.WONDER_OF_WORLD}, {key:Building.TYPE.HORSE_DRINKING_TROUGH, name:"T5BS_" + Building.TYPE.HORSE_DRINKING_TROUGH}, {key:Building.TYPE.TEAHOUSE, name:"T5BS_" + Building.TYPE.TEAHOUSE}, {key:"active_" + Building.TYPE.BLACKSMITH, name:"T5BS_active_" + Building.TYPE.BLACKSMITH}, {key:"active_" + Building.TYPE.MARKET, name:"T5BS_active_" + Building.TYPE.MARKET}, {key:"active_" + 
  Building.TYPE.BARRACKS, name:"T5BS_active_" + Building.TYPE.BARRACKS}, {key:"active_" + Building.TYPE.STABLE, name:"T5BS_active_" + Building.TYPE.STABLE}, {key:"active_" + Building.TYPE.WORKSHOP, name:"T5BS_active_" + Building.TYPE.WORKSHOP}, {key:"active_" + Building.TYPE.ACADEMY, name:"T5BS_active_" + Building.TYPE.ACADEMY}, {key:"active_" + Building.TYPE.BREWERY, name:"T5BS_active_" + Building.TYPE.BREWERY}, {key:"active_" + Building.TYPE.TEAHOUSE, name:"T5BS_active_" + Building.TYPE.TEAHOUSE}];
  this.ma = {};
  this.ma[Building.TYPE.BLACKSMITH] = Building.TYPE.BLACKSMITH;
  this.ma[Building.TYPE.MARKET] = Building.TYPE.MARKET;
  this.ma[Building.TYPE.BARRACKS] = Building.TYPE.BARRACKS;
  this.ma[Building.TYPE.STABLE] = Building.TYPE.STABLE;
  this.ma[Building.TYPE.WORKSHOP] = Building.TYPE.WORKSHOP;
  this.ma[Building.TYPE.ACADEMY] = Building.TYPE.ACADEMY;
  this.ma[Building.TYPE.BREWERY] = Building.TYPE.BREWERY;
  this.ma[Building.TYPE.TEAHOUSE] = Building.TYPE.TEAHOUSE;
  this.play = function(a) {
    if(this.C.hasOwnProperty(a)) {
      var c = a;
      this.ma.hasOwnProperty(a) && (c = "active_" + a);
      0 < this.volume && this.C.hasOwnProperty(c) && this.C[c].play()
    }
  };
  this.eb = function() {
    0 != this.ed && this.play(this.ed)
  };
  this.Ye = function(a) {
    this.ed = a
  };
  0 < this.volume && this.Aa()
}
ab.prototype = new sb;
function bb() {
  this.path = "audio/EventSounds/";
  this.ya = [{key:Notifications.BUILDING_FINISHED, name:"T5ES_" + tb}, {key:Notifications.BUILDING_COMPLETELY_DESTROYED, name:"T5ES_" + ub}, {key:Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES, name:"T5ES_" + vb}, {key:Notifications.REPORT_ATTACKER_WON_WITH_LOSSES, name:"T5ES_" + wb}, {key:Notifications.REPORT_ATTACKER_LOST, name:"T5ES_" + xb}, {key:Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES, name:"T5ES_" + vb}, {key:Notifications.REPORT_DEFENDER_WON_WITH_LOSSES, name:"T5ES_" + wb}, {key:Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES, 
  name:"T5ES_" + xb}, {key:Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES, name:"T5ES_" + xb}, {key:Notifications.REPORT_SUPPORT_ARRIVED, name:"T5ES_" + yb}, {key:Notifications.TROOPS_RETURNED, name:"T5ES_" + yb}, {key:Notifications.REPORT_TRADE, name:"T5ES_" + zb}, {key:Notifications.REPORT_TRADE_WOOD, name:"T5ES_" + zb}, {key:Notifications.REPORT_TRADE_CLAY, name:"T5ES_" + zb}, {key:Notifications.REPORT_TRADE_IRON, name:"T5ES_" + zb}, {key:Notifications.REPORT_TRADE_CROP, name:"T5ES_" + zb}, 
  {key:Notifications.TRIBUTE_COLLECTED, name:"T5ES_" + Ab}, {key:Notifications.REPORT_ADVENTURE, name:"T5ES_" + Bb}, {key:Sa, name:"T5ES_" + Sa}];
  this.eb = w();
  0 < this.volume && this.Aa()
}
var tb = 1, ub = 2, vb = 3, wb = 4, xb = 5, yb = 6, zb = 7, Bb = 8, Ab = 9, Sa = "questComplete";
bb.prototype = new sb;
function cb() {
  this.path = "audio/UISounds/";
  this.ya = [{key:Ta, name:"T5UIS_" + Ta, simultaneousPlay:!0}, {key:Va, name:"T5UIS_" + Va}, {key:Ca, name:"T5UIS_" + Ca, simultaneousPlay:!0}, {key:Ba, name:"T5UIS_" + Ba, simultaneousPlay:!0}, {key:Ra, name:"T5UIS_" + Ra}, {key:db, name:"T5UIS_" + db}, {key:eb, name:"T5UIS_" + eb}, {key:Wa, name:"T5UIS_" + Wa, simultaneousPlay:!0}, {key:fb, name:"T5UIS_" + fb}, {key:Xa, name:"T5UIS_" + Xa, simultaneousPlay:!0}, {key:Ya, name:"T5UIS_" + Ya}, {key:gb, name:"T5UIS_" + gb}, {key:hb, name:"T5UIS_" + 
  hb}, {key:ib, name:"T5UIS_" + ib}, {key:jb, name:"T5UIS_" + jb}, {key:kb, name:"T5UIS_" + kb}, {key:lb, name:"T5UIS_" + lb}, {key:mb, name:"T5UIS_" + mb}, {key:nb, name:"T5UIS_" + nb}, {key:ob, name:"T5UIS_" + ob, simultaneousPlay:!0}, {key:pb, name:"T5UIS_" + pb, simultaneousPlay:!0}, {key:qb, name:"T5UIS_" + qb}];
  this.eb = w();
  0 < this.volume && this.Aa()
}
var Ta = 1, Va = 2, Ca = 3, Ba = 4, Ra = 5, db = 6, eb = 7, Wa = 8, fb = 9, Xa = 10, Ya = 11, gb = 12, hb = 13, ib = 14, jb = 15, kb = 16, lb = 17, mb = 18, nb = 19, ob = 20, pb = 21, qb = 22;
cb.prototype = new sb;
Travian.Service.AudioService.$inject = ["SessionService", "TroopsService", "ServertimeService", "$rootScope"];
"use strict";
Travian.Service.BuildingService = function(a, c) {
  function b(a) {
    var b = a.data.villageId + "_" + a.data.locationId;
    0 == f[b] ? f[b] = 1 : 2 > Cache.Bb && g[a.data.villageId].callSubscribers()
  }
  function l(a) {
    for(var c = 0;c < g[a].data.length;c++) {
      var e = g[a].data[c], l = e.data.locationId;
      if("undefined" != typeof m[a][l]) {
        for(var n = 0;n < m[a][l].length;n++) {
          m[a][l][n](e)
        }
        delete m[a][l]
      }
      var u = "type" + e.data.buildingType;
      if("undefined" != typeof m[a][u] && "undefined" == typeof e.data.rubble) {
        for(n = 0;n < m[a][u].length;n++) {
          m[a][u][n](e)
        }
        delete m[a][u]
      }
      l = a + "_" + l;
      "undefined" == typeof f[l] && (f[l] = 0, e.subscribe(b))
    }
    for(var t in m[a]) {
      for(n = 0;n < m[a][t].length;n++) {
        m[a][t][n](null)
      }
      delete m[a][t]
    }
    h(a)
  }
  function h(a) {
    if("undefined" != typeof g[a]) {
      var b = c.pa(a);
      if(null != b) {
        var f = e[a];
        if("undefined" == typeof f) {
          f = BuildingQueue.get(a), e[a] = f, f.subscribe(function() {
            h(a);
            requestAngularApply()
          })
        }else {
          for(b.getResources(), b = 0;b < g[a].data.length;b++) {
            f = g[a].data[b], f.setQueue(e[a].getEntriesForLocation(f.data.locationId))
          }
        }
      }
    }
  }
  var g = {}, e = {}, m = {}, f = {}, n = {0:"constructBuilding", 1:"resources", 2:"resources", 3:"resources", 4:"resources", 15:"mainBuilding", 16:"rallypoint", 17:"marketplace", 19:"trainTroops", 18:"embassy", 13:"smithy", 20:"trainTroops", 21:"trainTroops", 22:"academy", 23:"hideout", 24:"townHall", 25:"palace", 26:"palace", 27:"treasury", 29:"trainTroops", 30:"trainTroops", 35:"drinkHouse", 36:"trapper", 40:"worldWonder", 41:"drinkingTrough", 44:"drinkHouse", 45:"hiddenTreasury"};
  a.$on("resourcesChanged", function(a, b) {
    h(b)
  });
  return new function() {
    this.ig = function(a) {
      if(!a || "undefined" === typeof a || 0 > a) {
        a = 0
      }
      return"undefined" == typeof n[a] ? "default" : n[a]
    };
    this.R = function(a, b, e) {
      e || (e = c.i().data.villageId);
      "undefined" == typeof m[e] && (m[e] = {});
      "undefined" == typeof m[e][a] && (m[e][a] = []);
      m[e][a].push(b);
      this.na(e)
    };
    this.na = function(a) {
      "undefined" == typeof m[a] && (m[a] = {});
      "undefined" == typeof g[a] ? (g[a] = Building.getCollection(a), g[a].subscribe(function() {
        l(a)
      })) : g[a].filled && l(a);
      return g[a]
    };
    this.Ib = function(a, b) {
      for(var c = Building.getCollection(a), e = 0;e < c.data.length;e++) {
        var f = c.data[e];
        if(f.data.buildingType == b && 0 < f.data.lvl) {
          return!0
        }
      }
      return!1
    };
    this.za = function(a, b) {
      for(var c = Building.getCollection(a), e = 0;e < c.data.length;e++) {
        var f = c.data[e];
        if(f.data.buildingType == b && (0 < f.data.lvl || b == Building.TYPE.WONDER_OF_WORLD)) {
          return f
        }
      }
      return!1
    };
    this.Uc = function() {
      var a;
      a || (a = c.getActiveVillageId());
      a = this.na(a);
      for(var b = 0, e = 0;e < a.data.length;e++) {
        0 <= $.inArray(a.data[e].data.locationId, Building.PREMIUM_LOCATIONS) && b++
      }
      return b
    }
  }
};
Travian.Service.BuildingService.$inject = ["$rootScope", "VillageService"];
"use strict";
Travian.Service.ChatService = function(a, c, b, l, h, g, e) {
  function m(a) {
    var b = ("" + a.data.roomId).split("."), c = b[0];
    a.data.roomType = c;
    if(c == ChatRoom.TYPE_PRIVATE) {
      var e = b[2];
      b[1] != Travian.Player.data.playerId && (e = b[1]);
      a.data.isPrivateChat = !0;
      a.data.playerId = e;
      b = E.ub(e);
      null != b ? (a.data.roomViewName = b.data.name, a.data.playerName = a.data.roomViewName, a.data.otherPlayer = E.sb(e)) : Travian.nameService.getNameForId(e, function(b) {
        a.data.roomViewName = b;
        a.data.playerName = a.data.roomViewName;
        a.data.otherPlayer = E.sb(e)
      })
    }else {
      if(3 == b.length && (a.data.isMassMail = !0), c == ChatRoom.TYPE_ALLIANCE && (a.data.roomViewName = Travian.translate("Chat.AllianceChat")), c == ChatRoom.TYPE_ALLIANCE_LEADERS && (a.data.roomViewName = Travian.translate("Chat.AllianceLeaderChat")), c == ChatRoom.TYPE_KINGDOM && Travian.nameService.getNameForId(b[1], function() {
        a.data.roomViewName = Travian.translate("Chat.KingdomChat")
      }), c == ChatRoom.TYPE_SECRET_SOCIETY) {
        for(b = b[1], c = 0;c < D.data.length;c++) {
          if(D.data[c].data.groupId == b) {
            a.data.roomViewName = D.data[c].data.name;
            break
          }
        }
      }
    }
  }
  function f(a) {
    var b = a.data.playerId, c = a.data.roomId, e = ("" + c).split("."), h = e[0];
    a.data.roomViewName || m(a);
    if(a.data.isMassMail) {
      a.data.ownUnread = !1;
      -1 == a.data.lastOwnRead ? a.data.linePlayerId != Travian.Player.data.playerId ? a.data.ownUnread = !0 : a.data.linePlayerId == Travian.Player.data.playerId && a.data.timestamp != a.data.lastTimestamp && (a.data.ownUnread = !0) : 0 < a.data.lastOwnRead && a.data.lastOwnRead < a.data.lastTimestamp && (a.data.ownUnread = !0);
      a.data.otherRead = 0;
      "undefined" != typeof a.data.playersRead[Travian.Player.data.playerId] && (a.data.lastOwnRead = a.data.playersRead[Travian.Player.data.playerId], a.data.ownUnread = a.data.lastOwnRead < a.data.lastTimestamp);
      var l = [];
      h == ChatRoom.TYPE_ALLIANCE && (l = g.ge());
      h == ChatRoom.TYPE_ALLIANCE_LEADERS && (l = g.ge(!0));
      h == ChatRoom.TYPE_KINGDOM && (l = g.rg());
      h == ChatRoom.TYPE_SECRET_SOCIETY && (l = g.Cg(e[1]));
      if(null === l) {
        g.hh(function() {
          f(a)
        });
        return
      }
      a.data.totalParticipents = l.length - 1;
      for(b in a.data.playersRead) {
        if(b != a.data.linePlayerId) {
          for(e = 0, h = l.length;e < h;e++) {
            if(l[e].playerId == b) {
              a.data.otherRead++;
              break
            }
          }
        }
      }
    }
    a.data.roomType == ChatRoom.TYPE_PRIVATE && (a.data.totalParticipents = 1, a.data.ownUnread = !1, a.data.otherRead = !1, a.data.linePlayerId != Travian.Player.data.playerId || ChatRoom.isMonologue(c) ? a.data.ownUnread = a.data.lastOwnRead < a.data.lastTimestamp : a.data.otherRead = a.data.lastOtherRead >= a.data.lastTimestamp);
    n();
    2 > Cache.Bb && (C = !0, B.inbox.callSubscribers(), C = !1)
  }
  function n() {
    B.newIGMs = 0;
    B.hasUnreadEntries = !1;
    for(var a = [], b = 0;b < B.inbox.data.length;b++) {
      var c = B.inbox.data[b];
      c.data.ownUnread && (B.hasUnreadEntries = !0, -1 === c.data.lastOwnRead && (B.newIGMs++, a.push(c)))
    }
    h.Ih(a, B.newIGMs)
  }
  function q() {
    if(y) {
      for(var a = [], b = B.openChatWindows.length - 1;0 <= b;b--) {
        a.push(B.openChatWindows[b].data.roomId)
      }
      Travian.writeRequest("player/setOpenChatWindows", {windows:a})
    }
  }
  function p() {
    null !== I && Travian.tick.unbind(I);
    var a = 0, b = 0, c = 0, e = 0, f = ChatUser.get(Travian.Player.data.playerId);
    I = Travian.tick.bind(function() {
      a++;
      if(0 == a % 100) {
        var g = U.M();
        g.current.clientX === b && g.current.clientY === c ? 0 === e ? e = (new Date).getTime() : 6E5 < (new Date).getTime() - e && f.data.status === ChatUser.STATUS_ONLINE && (f.data.status = ChatUser.STATUS_AFK, E.Xe(ChatUser.STATUS_AFK)) : (e = 0, f.data.status === ChatUser.STATUS_AFK && (f.data.status = ChatUser.STATUS_ONLINE, E.Xe(ChatUser.STATUS_ONLINE)));
        b = g.current.clientX;
        c = g.current.clientY
      }
    })
  }
  function r() {
    for(var b = 0, c = 0;c < B.inbox.data.length;c++) {
      var e = B.inbox.data[c];
      if(e.data.isPrivateChat && 0 < e.data.unread) {
        for(var f = !1, g = 0;g < B.openChatWindows.length;g++) {
          B.openChatWindows[g].data.roomId == e.data.roomId && (f = !0)
        }
        f || (e = E.vb(e.data.roomId), e.data.isNew = !0, B.openChatWindows.push(e), b++)
      }
    }
    0 < b && a.$broadcast("checkDynTabs")
  }
  function s() {
    var a = 10;
    if(void 0 === a || isNaN(a)) {
      a = 10
    }
    null === J && (J = setTimeout(function() {
      var a = G[0].data.roomId, b = v(G);
      (new Notification(b.title, b.options)).onclick = function() {
        E.Ca(a);
        window.focus();
        this.cancel ? this.cancel() : this.close && this.close()
      };
      J = null;
      G = []
    }, 1E3 * a))
  }
  function v(a) {
    var b;
    if(1 == G.length) {
      b = Travian.translate("DesktopNotifications.Chat.newMessage"), a = a[0].data.linePlayerName + ": " + a[0].data.line
    }else {
      b = Travian.translate("DesktopNotifications.Chat.newMessages", {amount:a.length});
      var c = {};
      a.forEach(function(a) {
        var b = a.data.linePlayerId;
        c[b] || (c[b] = {name:a.data.linePlayerName, text:""});
        c[b].text += "\n" + a.data.line
      });
      a = "";
      for(var e in c) {
        var f = c[e];
        a += f.name + ": " + f.text.substring(0, 50) + (50 < f.text.length ? "..." : "") + "\n\n"
      }
    }
    return{title:b, options:{body:a, dir:Travian.Config.direction, icon:"layout/images/illustration/chat/logoTK.png"}}
  }
  function u(a) {
    N = "focus" == a.type;
    "focus" == a.type && (null !== J && (clearTimeout(J), J = null), G = [])
  }
  function t() {
    z = b.oe();
    void 0 === z.vf && (z.vf = !0, z.on("chatCache", function(a) {
      ChatCache.fill(a);
      requestAngularApply()
    }), z.on("chatTyping", function(a) {
      "undefined" == typeof B.typingStatus[a.roomId] && (B.typingStatus[a.roomId] = {});
      a.playerId != Travian.Player.data.playerId && (B.typingStatus[a.roomId][a.playerId] = a.status);
      requestAngularApply()
    }), ChatCache.Gh(z), Travian.tick.bind("chatConnection", function() {
      B.connected = b.Yc()
    }));
    D = Society.getCollection();
    a.openChat = E.Ca;
    B.friendRequests = FriendRequest.getCollection();
    B.friendList = ChatUser.getCollection("friends");
    void 0 !== H.friendList && B.friendList.unsubscribe(H.friendList);
    B.chatRooms = ChatRoom.getCollection();
    void 0 !== H.chatRooms && B.chatRooms.unsubscribe(H.chatRooms);
    B.inbox = ChatInbox.getCollection();
    void 0 === H.inbox && (B.inbox.Rc = !0);
    void 0 !== H.inbox && B.inbox.unsubscribe(H.inbox);
    H.inbox = B.inbox.subscribe(function() {
      if(!C) {
        for(var b = 0;b < B.inbox.data.length;b++) {
          var c = B.inbox.data[b];
          "undefined" == typeof A[c.serverId] && c.filled && (A[c.serverId] = c.subscribe(f))
        }
        for(var e in A) {
          for(var g = !1, b = 0;b < B.inbox.data.length;b++) {
            if(c = B.inbox.data[b], c.serverId == e) {
              g = !0;
              break
            }
          }
          g || delete A[e]
        }
        n();
        B.inbox.data.sort(function(a, b) {
          return a.data.lastTimestamp > b.data.lastTimestamp ? -1 : a.data.lastTimestamp < b.data.lastTimestamp ? 1 : 0
        });
        if(0 < B.inbox.data.length) {
          c = B.inbox.data[0].data;
          e = !1;
          if(l.Za("igm") || l.Za(c.roomId)) {
            l.Za(c.roomId) || a.windows.igm.params.roomId != c.roomId ? l.Za(c.roomId) && (e = !0) : e = !0
          }
          if(!e) {
            for(g = E.getViewModel().openChatWindows, b = 0;b < g.length;b++) {
              g[b].data.isDocked && g[b].data.roomId == c.roomId && (e = !0)
            }
          }
          c.linePlayerId == c.myPlayerId || (!c.ownUnread || e || B.inbox.Rc) || a.$broadcast("chatInboxUpdated", {roomId:c.roomId})
        }
        B.inbox.Rc ? (B.inbox.Rc = !1, Travian.request("player/getOpenChatWindows", {}, function(a) {
          y = !0;
          if($.isArray(a)) {
            for(var b = 0;b < a.length;b++) {
              var c = E.vb(a[b]);
              -1 == B.openChatWindows.indexOf(c) && B.openChatWindows.push(c)
            }
          }
          r()
        })) : (0 < B.inbox.data.length && B.inbox.data[0].data.isPrivateChat && ("undefined" != typeof Notification && ("undefined" != typeof Notification.requestPermission && !N) && "granted" === Notification.permission) && (G.push(angular.copy(B.inbox.data[0])), s()), r())
      }
    });
    p();
    window.removeEventListener("blur", u, !1);
    window.removeEventListener("focus", u, !1);
    window.addEventListener("blur", u, !1);
    window.addEventListener("focus", u, !1);
    a.$broadcast("chatServiceReady")
  }
  var z = null, A = {}, C = !1, D = null, y = !1, B = {connected:!1, inbox:null, friendList:null, friendRequests:null, chatRooms:null, openChatWindows:[], unreadChatLines:{}, newIGMs:0, hasUnreadEntries:!1, typingStatus:{}}, H = {}, I = null, G = [], J = null, N = !0, E = new function() {
    var c = this;
    this.getViewModel = function() {
      return B
    };
    this.ub = function(a) {
      if(!B.connected) {
        return null
      }
      for(var b = 0;b < B.friendList.data.length;b++) {
        if(B.friendList.data[b].data.playerId == a) {
          return B.friendList.data[b]
        }
      }
      return null
    };
    this.Yb = function(a) {
      if(!B.connected) {
        return null
      }
      for(var b = 0;b < B.friendRequests.data.length;b++) {
        if(B.friendRequests.data[b].data.playerId == a) {
          return B.friendRequests.data[b]
        }
      }
      return null
    };
    this.sb = function(a, b) {
      var e = c.ub(a);
      if(null == e) {
        var e = c.Yb(a), f = ChatUser.get(a);
        if(null != e && null != f) {
          return f.data.sourceId = e.data.sourceId, f
        }
        if(null == e && (e = f, !e.filled)) {
          for(var g in b) {
            e.data[g] = b[g]
          }
        }
      }
      return e
    };
    this.Te = function(b) {
      e.putObject("desktopNotifications", {action:b ? "accept" : "cancel", timestamp:(new Date).getTime()});
      a.$broadcast("NotificationPermissionChange")
    };
    this.af = function(a) {
      a = ChatRoom.isPrivate(a);
      var b = e.getObject("desktopNotifications"), c = "undefined" !== typeof Notification && "undefined" !== typeof Notification.permission && "default" == Notification.permission, b = "undefined" == typeof b || b.timestamp + 864E5 < (new Date).getTime();
      return a && c && b
    };
    this.vb = function(a) {
      for(var b = 0;b < B.openChatWindows.length;b++) {
        if(B.openChatWindows[b].data.roomId == a) {
          return B.openChatWindows[b]
        }
      }
      var c = new PrivateChat(a);
      c.setChatUser(E.sb(c.getPlayerId()));
      for(var e = null, b = 0;b < B.inbox.data.length;b++) {
        var f = B.inbox.data[b];
        if(f.data.roomId == a) {
          e = f;
          break
        }
      }
      c.setChatInbox(e);
      return c
    };
    this.Ya = function(a) {
      return Travian.Player.data.playerId > parseInt(a) ? "1." + Travian.Player.data.playerId + "." + a : "1." + a + "." + Travian.Player.data.playerId
    };
    this.Ec = function(a) {
      b.emit("chat", "addFriend", a)
    };
    this.Yd = function(a) {
      b.emit("chat", "deleteFriend", a)
    };
    this.Nd = function(a, c) {
      b.emit("chat", "acceptFriend", {otherId:a, timestamp:c})
    };
    this.Wd = function(a, c) {
      b.emit("chat", "declineFriend", {otherId:a, timestamp:c})
    };
    this.Sd = function(a, c) {
      b.emit("chat", "cancelFriendRequest", {otherId:a, timestamp:c})
    };
    this.Wa = function(a, b) {
      return"undefined" != typeof b ? ChatLine.getCollection(a, b) : ChatLine.getCollection(a)
    };
    this.sendMessage = function(a, c) {
      b.emit("chat", "sendMessage", {roomId:a, text:c})
    };
    this.qh = function(a, c) {
      b.emit("chat", "sendPrivMessage", {uid:a, text:c})
    };
    this.Ba = function(a) {
      b.emit("chat", "markAsRead", a)
    };
    this.sc = function(a, c) {
      parseInt(("" + a).split(".")[0], 10) === ChatRoom.TYPE_PRIVATE && b.emit("chat", "setTypingStatus", {roomId:a, status:c})
    };
    this.Pf = function(a) {
      b.emit("chat", "deleteInboxEntry", a)
    };
    this.Xe = function(a) {
      b.emit("chat", "setOnlineStatus", a)
    };
    this.Vg = function(a) {
      b.emit("chat", "joinRoom", a)
    };
    this.cg = function(a) {
      b.emit("chat", "enterRoom", a)
    };
    this.zg = function(a) {
      b.emit("chat", "getRoomOnlinePlayers", a)
    };
    this.Ae = function(a) {
      for(var e = 0;e < B.openChatWindows.length;e++) {
        if(B.openChatWindows[e].data.roomId == a) {
          B.openChatWindows.splice(e, 1);
          q();
          break
        }
      }
      ("" + a).split(".")[0] != ChatRoom.TYPE_PRIVATE && b.emit("chat", "leaveRoom", a);
      c.jc(a)
    };
    this.Ca = function(b, e, f) {
      e = "undefined" == typeof e ? b : c.Ya(b);
      b = c.vb(b);
      b.data.isDocked ? f ? b.data.isDocked = !1 : a.$broadcast("setActiveChatRoom", e) : l.Za(e) || (b.data.isNew ? (b.data.isNew = !1, q()) : c.Cf(b), b.data.isDocked = !0, a.$broadcast("checkDynTabs"), a.$broadcast("setActiveChatRoom", e))
    };
    this.Cf = function(b) {
      for(var c = !1, e = 0;e < B.openChatWindows.length;e++) {
        B.openChatWindows[e].data.roomId == b.data.roomId && (c = !0)
      }
      c || (B.openChatWindows.push(b), a.$broadcast("setActiveChatRoom", b.data.roomId), q())
    };
    this.jc = function(b, c) {
      E.vb(b).data.isDocked = c;
      a.$broadcast("checkDynTabs")
    };
    this.nd = function(b, c) {
      b !== ChatRoom.GLOBAL && b !== ChatRoom.BEGINNER || !Travian.Config.features.chatAutoBan ? Travian.request("player/reportConversation", {roomId:b}, function() {
        a.openWindow("reportConversation", {roomId:b})
      }) : a.openWindow("reportConversation", {roomId:b, playerId:c})
    };
    this.mh = function(b, c) {
      Travian.request("player/reportConversationFinalize", {roomId:b, comment:c}, function() {
        a.closeWindow("reportConversation")
      })
    };
    this.nh = function(a, b, c, e) {
      Travian.request("player/reportPlayer", {roomId:a, playerId:b, reason:c}, function(a) {
        e(a)
      })
    }
  };
  b.we() && t();
  a.$on("chatConnected", t);
  return E
};
Travian.Service.ChatService.$inject = "$rootScope SessionService SocketService WindowService NotificationService MembershipService $cookies".split(" ");
var Ua = new function() {
  function a(b, c) {
    a.Cc = 1;
    a.Dc = 2;
    this.qb = c;
    this.fd = null;
    this.type = b;
    this.Ge = this.cd = null
  }
  function c(a, b, c, e) {
    var f = a.getContext("2d");
    a.width = b;
    a.height = c;
    if(3 < arguments.length) {
      for(var g = 0;g < e.length;g++) {
        e[g].hasAttribute("crossOrigin") || e[g].setAttribute("crossOrigin", "anonymous"), f.drawImage(e[g], 0, 0)
      }
    }
    if(f.getImageData) {
      return f.getImageData(0, 0, b, c)
    }
    if(f.createImageData) {
      return f.createImageData(b, c)
    }
  }
  function b(a, b, g) {
    var h = document.createElement("canvas"), l = new Image;
    l.setAttribute("crossOrigin", "anonymous");
    if(h.getContext) {
      if("undefined" != typeof q[a]) {
        return q[a]
      }
      var p = 1, r = function() {
        if(p < b.length + 1) {
          p++
        }else {
          var a = document.createElement("canvas"), q = [l], r = l.width, s = l.height;
          if(0 < b.length) {
            for(var v = 0;v < q.length;v++) {
              b[v].width > r && (r = b[v].width), b[v].height > s && (s = b[v].height)
            }
            q = b.concat(q)
          }
          q = c(a, r, s, q).data;
          r = m;
          g && (r = g);
          for(var s = a.width + 2 * r, v = c(h, s, a.height + 2 * r), E = v.data, y = [], B = 0;B < a.width;B++) {
            for(var D = 0;D < a.height;D++) {
              var X = q[4 * (B + D * a.width) + 3], Z = !1;
              if(0 == B || 0 == D || B == a.width - 1 || D == a.height - 1) {
                X > n && (Z = !0)
              }else {
                if(X > n) {
                  for(var M = B - 1;M <= B + 1;M++) {
                    for(var T = D - 1;T <= D + 1;T++) {
                      if(q[4 * (M + T * a.width) + 3] <= n) {
                        Z = !0;
                        M = B + 2;
                        break
                      }
                    }
                  }
                }
              }
              Z && (E[4 * (B + r + (D + r) * s)] = e.r, E[4 * (B + r + (D + r) * s) + 1] = e.g, E[4 * (B + r + (D + r) * s) + 2] = e.b, E[4 * (B + r + (D + r) * s) + 3] = 255, hash = 1E4 * (B + r) + (D + r), y[hash] = 0)
            }
          }
          Z = [];
          for(M = -1;1 >= M;M++) {
            for(Z[M] = [], T = -1;1 >= T;T++) {
              Z[M][T] = Math.sqrt(Math.pow(M, 2) + Math.pow(T, 2))
            }
          }
          for(rr = 1;rr <= r;rr++) {
            newOutlineHash = [];
            for(coord in y) {
              for(var da = y[coord], B = Math.floor(coord / 1E4), D = coord % 1E4, M = B - 1;M <= B + 1;M++) {
                for(T = D - 1;T <= D + 1;T++) {
                  if(M != B || T != D) {
                    d = Z[M - B][T - D];
                    var P = E[4 * (M + T * s) + 3], ia = 0;
                    if(1 == rr) {
                      var X = M - r, K = T - r;
                      0 <= X && (0 <= K && X < a.width && K < a.height) && (ia = q[4 * (X + K * a.width) + 3])
                    }
                    X = 2 * (127 - Math.ceil(120 * (da + d) / r * f));
                    P < X && (ia < n && 0 < X) && (E[4 * (M + T * s)] = e.r, E[4 * (M + T * s) + 1] = e.g, E[4 * (M + T * s) + 2] = e.b, E[4 * (M + T * s) + 3] = X, hash = 1E4 * M + T, newOutlineHash[hash] = da + d)
                  }
                }
              }
            }
            y = newOutlineHash
          }
          h.getContext("2d").putImageData(v, 0, 0)
        }
      };
      if(b) {
        for(var s = 0;s < b.length;s++) {
          var B = new Image;
          B.setAttribute("crossOrigin", "anonymous");
          B.src = b[s];
          B.onload = r;
          b[s] = B
        }
      }else {
        b = []
      }
      l.setAttribute("crossOrigin", "anonymous");
      l.src = a;
      l.onload = r;
      return q[a] = h
    }
    l.src = "api/getGlowImage.php?file=" + a;
    return l
  }
  function l(a) {
    if("IMG" == a.tagName) {
      return{el:a, imgName:a.src}
    }
    var b = computedStyle(a, "background-image");
    if(null != b && "none" != b) {
      "url" == b.substring(0, 3) && (b = b.substring(b.indexOf("(") + 1), b = b.substring(0, b.indexOf(")")));
      if('"' == b.substring(0, 1) || "'" == b.substring(0, 1)) {
        b = b.substring(1), b = b.substring(0, b.length - 1)
      }
      return{el:a, imgName:b}
    }
    for(;0 < a.childNodes;) {
      return l(a.childNodes[0])
    }
    return!1
  }
  function h(a) {
    var b = 0, c = 0;
    if("absolute" == computedStyle(a, "position")) {
      var b = parseInt(computedStyle(a, "left")) + parseInt(computedStyle(a, "margin-left")), e = parseInt(computedStyle(a, "right")) + parseInt(computedStyle(a, "margin-right")), c = parseInt(computedStyle(a, "top")) + parseInt(computedStyle(a, "margin-top"));
      return e ? {x:e, y:c, el:a, dir:"rtl"} : {x:b, y:c, el:a, dir:"ltr"}
    }
    for(;a.offsetParent;) {
      b += a.offsetLeft;
      c += a.offsetTop;
      e = computedStyle(a.offsetParent, "position");
      if("absolute" == e || "relative" == e) {
        return{x:b, y:c, el:a}
      }
      a = a.offsetParent
    }
    b += a.offsetLeft;
    c += a.offsetTop;
    return{x:b, y:c, el:a}
  }
  function g(a) {
    for(var b = 0, c = r.length;b < c;b++) {
      var e = r[b];
      if(e.qb == a || e.fd == a || e.cd == a) {
        return e
      }
    }
    return null
  }
  var e = {r:255, g:255, b:255}, m = 2, f = 0, n = 100, q = {}, p = [], r = [], s = this;
  this.lh = function(b) {
    b = g(b);
    if(null != b) {
      b.type == a.Dc && null != b.qb && (b.qb.style.textShadow = b.Ge);
      b.type == a.Cc && null != b.qb.parentNode && b.qb.parentNode.removeChild(b.cd);
      for(var c = 0, e = r.length;c < e;c++) {
        if(r[c] == b) {
          r.splice(c, 1);
          break
        }
      }
    }
  };
  this.hd = function(c, e, f, n) {
    if("undefined" != typeof c && null == g(c)) {
      var q = null, p = l(c);
      if(!1 !== p) {
        var s = h(p.el);
        e = b(p.imgName, e, n);
        e.style.position = "absolute";
        "rtl" == s.dir ? e.style.right = parseInt(s.x) - m + 1 + "px" : e.style.left = parseInt(s.x) - m + 1 + "px";
        e.style.top = parseInt(s.y) - m + "px";
        e.style.zIndex = computedStyle(p.el, "z-index");
        f && (e.style.zIndex = f);
        p.el.parentNode && (p.el.parentNode.insertBefore(e, p.el), q = new a(a.Cc, p.el), q.type = a.Cc, q.fd = c, q.cd = e)
      }else {
        q = new a(a.Dc, c), q.type = a.Dc, q.fd = c, q.Ge = computedStyle(c, "text-shadow")
      }
      null != q && (q.animation = !1, r.push(q))
    }
  };
  this.cf = function(a, b, c) {
    s.md(a);
    computedStyle(a, "width");
    computedStyle(a, "height");
    var e = 2;
    c && (e = 15);
    b = b.split(",");
    for(var f = 9999, g = 0, h = 9999, l = 0, m = 0;m < b.length;m += 2) {
      var n = parseInt(b[m]), q = parseInt(b[m + 1]);
      n > g && (g = n);
      q > l && (l = q);
      n < f && (f = n);
      q < h && (h = q)
    }
    var p = document.createElement("canvas"), r = p.getContext("2d");
    p.width = (g - f + 2 * e) / e;
    p.height = (l - h + 2 * e) / e;
    r.fillStyle = c ? "rgba(255,255,255,0.6)" : "rgba(255,255,255,0.2)";
    r.strokeStyle = "rgba(255,255,255,1)";
    r.lineWidth = 1;
    r.beginPath();
    for(m = 0;m < b.length;m += 2) {
      n = parseInt(b[m]) - f + e, q = parseInt(b[m + 1]) - h + e, 0 == m ? r.moveTo(n / e, q / e) : r.lineTo(n / e, q / e)
    }
    r.closePath();
    c ? r.fill() : (r.fill(), r.stroke());
    p.style.position = "absolute";
    p.style.zIndex = 1;
    p.style.left = f - e + "px";
    p.style.top = h - e + "px";
    p.style.width = g - f + 2 * e + "px";
    p.style.height = l - h + 2 * e + "px";
    a.Xc = p;
    a.appendChild(p)
  };
  this.md = function(a) {
    "undefined" != typeof a.Xc && (a.removeChild(a.Xc), delete a.Xc)
  };
  this.yf = function(a, b) {
    var c = void 0, e = "", f = {};
    "undefined" != typeof a.elem && (f = a, e = a.additionalClass, a = a.elem);
    if(0 == a.length) {
      return!1
    }
    var g = a[0].getBoundingClientRect(), h = $(window).scrollTop(), l = $(window).scrollLeft(), g = {width:g.right - g.left, height:g.bottom - g.top, top:g.top + h, left:g.left + l};
    if(g.top <= h && g.left <= l && 0 == g.width && 0 == g.height) {
      return!1
    }
    "undefined" != typeof a.arrowOffset && (g.top += a.arrowOffset.top, g.left += a.arrowOffset.left);
    "undefined" != typeof f.offset && (g.top += f.offset.top, g.left += f.offset.left);
    h = null;
    for(l = 0;l < p.length;l++) {
      p[l].target[0] == a[0] && (h = p[l].el)
    }
    var l = "up", m = "tutorial_arrowUp_large_illu";
    c || (c = "tutorialArrow");
    "questMarker" == c && (l = "down");
    "undefined" != typeof f.direction && (l = f.direction, m = "tutorial_arrow" + (l.charAt(0).toUpperCase() + l.slice(1)) + "_large_illu");
    "undefined" != typeof f.type && (c = f.type);
    "undefined" != typeof f.width && (g.width = f.width);
    f = "";
    typeof c && (f = c + " " + l + " " + e + " " + m);
    null == h ? (h = document.createElement("div"), h.className = f, document.body.appendChild(h), p.push({target:a, el:h, group:b}), window.getComputedStyle(h).opacity, h.style.opacity = 1) : h.className != f && (h.className = f);
    h.style.left = g.left + g.width / 2 + "px";
    "up" == l && (h.style.top = g.top + g.height + "px");
    "down" == l && (h.Rd || (h.Rd = $(h).height()), h.style.top = g.top - h.Rd + "px");
    h.style.zIndex = 4060;
    return!0
  };
  this.rc = function(a, b) {
    for(var c = 0;c < b.length;c++) {
      this.yf(b[c], a) || (b.splice(c, 1), c--)
    }
    for(var e = 0;e < p.length;e++) {
      if(p[e].group == a) {
        for(var f = !1, c = 0;c < b.length;c++) {
          "undefined" != typeof b[c].elem && (b[c] = b[c].elem), p[e].target[0] == b[c][0] && (f = !0)
        }
        f || (document.body.removeChild(p[e].el), p.splice(e, 1), e--)
      }
    }
  }
};
window.Highlighting = Ua;
"use strict";
Travian.Service.MapService = function(a, c, b, l, h) {
  function g() {
    for(var a = 0;a < z.length;a++) {
      var b = z[a];
      null != u && b.rh(u.getTreaties());
      b.fa()
    }
  }
  function e(a, b) {
    z.push(a);
    t ? g() : (t = !0, b.subscribe(function() {
      u = Alliance.get(b.data.allianceId);
      u.subscribe(g);
      b.isOnMap() ? p.sa = Travian.Config.worldRadius : p.sa = 4
    }), AllianceMemberlist.getCollection().subscribe(g))
  }
  function m() {
    for(var a = {}, b = v.u(null, [Troops.COLLECTION_MOVING]), c = [], e = 0;e < b.length;e++) {
      var f = b[e], g = 0;
      if("undefined" != typeof f.data.movement && "undefined" != typeof f.data.movement.villageIdTarget) {
        var h = f.data.movement.villageIdTarget, g = h, l = f.data.movement.movementType;
        if(1 == h) {
          var n = r.P("1_1", F, 0);
          0 < n.yb && window.setTimeout(m, 100);
          "undefined" != typeof n.village && null != n.village && (h = n.id);
          n = r.P("0_1", F, 0);
          "undefined" != typeof n.village && null != n.village && (h = n.id)
        }
        1 == f.data.movement.villageIdStart && 0 > h && (h = 536887296);
        0 < f.data.movement.coordinateID && (h = f.data.movement.coordinateID);
        f.isAttacking && (l = Troops.MOVEMENT_TYPE_ATTACK)
      }else {
        if(g = h = f.data.toVillageId, l = Troops.MOVEMENT_TYPE_TRANSPORT, 0 != f.data.direction) {
          continue
        }
      }
      "undefined" == typeof a[h] && (a[h] = {});
      "undefined" == typeof a[h][l] && (g = f.getMovementGroup(g), a[h][l] = {cnt:0, first:-1, group:g, icon:Troops.MOVEMENT_ICON[f.data.movement.movementType], realPlayer:!1});
      c.push(f.data.troopId);
      h = a[h][l];
      h.cnt++;
      if(-1 == h.first || h.first > f.data.movement.timeFinish) {
        h.first = f.data.movement.timeFinish
      }
      !h.realPlayer && 0 < f.data.movement.villageIdStart && (h.realPlayer = !0)
    }
    b = v.u(null, [TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]);
    for(e = 0;e < b.length;e++) {
      if(f = b[e], !(0 <= c.indexOf(f.data.troopId))) {
        h = f.data.villageIdTarget;
        f.data.movement = f.data;
        l = Troops.MOVEMENT_TYPE_RAID;
        "undefined" == typeof a[h] && (a[h] = {});
        "undefined" == typeof a[h][l] && (a[h][l] = {cnt:0, first:-1, group:"incoming_attacks", icon:"movement_attack_small_flat_black", realPlayer:!1});
        h = a[h][l];
        h.cnt++;
        if(-1 == h.first || h.first > f.data.movement.timeFinish) {
          h.first = f.data.movement.timeFinish
        }
        !h.realPlayer && 0 < f.data.movement.villageIdStart && (h.realPlayer = !0)
      }
    }
    r.Hh(a)
  }
  function f(a) {
    var b = new V($(document).width(), $(document).height()), f = new V(126, 68), g = Travian.Config.cdnPrefix + "layout/images/source/iso/", s = c.l(), t = Marker.getCollection();
    q = new xa(g);
    r = new Ia(t);
    p = new Ma(r, b, f, f, q, s);
    $(window).on("resize", function() {
      var a = new V($(document).width(), $(document).height());
      p.zh(a);
      n.fa()
    });
    n = new ya(r, p, a, s, h);
    t.subscribe(function() {
      r.Ne();
      n.fa()
    });
    e(n, s);
    v = l.B(null, [Troops.COLLECTION_MOVING, TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE], m)
  }
  var n = null, q = null, p = null, r = null, s = null, v = null, u = null, t = !1, z = [];
  b.$on("activeVillageChanged", function() {
    var b = a.i();
    null != n && n.ga(b.data.x, b.data.y)
  });
  b.$on("mapChanged", function(a, b) {
    null != n && r.Qf(b)
  });
  b.$on("mapReport", function(a, b) {
    null != n && r.yh(b)
  });
  b.$on("reload", function() {
    null != n && (n.fb(), r.fb())
  });
  b.$on("clearCache", function() {
    null != n && (n.fb(), r.fb())
  });
  return new function() {
    var g = null;
    this.init = function(b) {
      null == n && f(this);
      p.Od($("#map")[0]);
      if(null != s) {
        n.ga(s.x, s.y, !1, !0)
      }else {
        var c = a.i();
        n.ga(c.x, c.y, !1, !0)
      }
      n.fa();
      n.pd(b);
      return n
    };
    this.xh = function(a) {
      "function" == typeof a && (g = a)
    };
    this.Nf = function(a, b, g) {
      null == n && f(this);
      var l = new V($(b).width(), $(b).height()), m = new V(126, 68), m = m.multiply(0.15), p = c.l(), l = new Ma(r, l, new V(126, 68), m, q, p);
      l.Od($(b)[0]);
      b = new ya(r, l, this, p, h);
      b.qd(2, 0.08);
      e(b, p);
      a = id2xy(a);
      b.ga(a.x, a.y);
      b.fa();
      b.pd(g);
      return b
    };
    this.eg = function(a, c) {
      b.$broadcast("contextMenuOpen", a, c)
    };
    this.dg = function() {
      b.$broadcast("contextMenuClose", void 0)
    };
    this.If = function(b) {
      a.ka(b)
    };
    this.Wh = function(a) {
      s = {x:a.x, y:a.y};
      "function" == typeof g && g({x:Math.round(s.x), y:Math.round(s.y)})
    };
    this.Se = function(a) {
      null != n && (a = id2xy(a), n.ga(a.x, a.y))
    };
    this.Xb = function() {
      if(null != n) {
        var a = n.Xb();
        return{x:Math.round(a.x), y:Math.round(a.y)}
      }
    };
    this.yg = function(a) {
      return null != n ? r.$b(a) : null
    };
    this.Rf = function(a) {
      a = z.indexOf(a);
      0 <= a && z.splice(a, 1)
    }
  }
};
Travian.Service.MapService.$inject = ["VillageService", "SessionService", "$rootScope", "TroopsService", "AudioService"];
"use strict";
Travian.Service.MellonService = function(a, c, b, l, h) {
  function g() {
    n = new MellonBridge(f);
    var b = c.url();
    if(b && -1 !== b.indexOf("msid=")) {
      var b = b.match(/msid=([a-z0-9]+)/)[1] || !1, e = n.getCookie("msid");
      b && b != e && n.setCookie("msid", b)
    }
    window.mellonBridgeInit || (window.mellonBridgeInit = function(b) {
      var c = n.getNewChannel(b);
      c.on("close", function() {
        var a = $("div.jqFensterModal:visible");
        a.length && $.fensterFinder(a).close().destroy()
      }).on("redirect", function(a) {
        window.location.href = a.url
      }).on("resize", function(a, b) {
        a = 300 > a ? 300 : a;
        b = 200 > b ? 200 : b;
        $("div.jqFensterModalContent iframe").animate({width:a, height:b + 20}, "fast")
      }).on("marketingTracking", function(a) {
        n.getTrackingIframeCallback()(a, w())
      }).on("event", function(b) {
        a.$broadcast("mellonEvent", b)
      });
      return c.createInstance(b)
    })
  }
  function e(a) {
    f.application.languageId = getLocale(a);
    g()
  }
  var m = {getBase:ha("")};
  config.mellon.useMellon && (m = new MellonUrl(config.mellon.url));
  var f = {url:m.getBase(), application:{id:config.mellon.applicationId, countryId:config.mellon.applicationCountryId, instanceId:config.mellon.applicationInstanceId, languageId:"en_US", inGame:!0}, cookie:{domain:config.mellon.cookieDomain}}, n = null;
  l.o(function() {
    var a = Settings.get(Travian.Player.data.playerId);
    e(a.data.lang);
    a.subscribe(function() {
      e(a.data.lang)
    });
    var b = l.Eg();
    if(b) {
      var c = l.fg();
      c && (m.getAjaxSessionValidate && null != n) && (b = m.getAjaxSessionValidate(b, c), b = b + "?msid=" + n.getCookie("msid"), $.ajax({url:b, type:"GET", oi:"json", success:function(a) {
        a.isValid || ("undefined" == typeof config.mellon.checkSession || !config.mellon.checkSession || l.Pg()) || (h.remove("msid"), l.ab())
      }}))
    }
  });
  g();
  a.$on("mellonEvent", function(a, b) {
    switch(b) {
      case "instantUpgradeDone":
        $(".jqFensterModalClose").trigger("click");
        break;
      case "instantMergeDone":
        $(".jqFensterModalClose").trigger("click");
        break;
      case "accountActivated":
        $(".jqFensterModalClose").trigger("click")
    }
  });
  return new function() {
    this.ba = function() {
      return m
    };
    this.We = function(a) {
      e(a)
    };
    this.ia = function(a, c) {
      var e = $.fenster("#jqFensterModalLayout");
      e.element.data("mellonIframeUrl", a);
      e.options.delayOpen = 100;
      e.options.callbackOpen = function() {
        b.getParam("mellonPopup") != c && b.m("mellonPopup", c)
      };
      $(".jqFensterHolder").on("jqFensterCallbackClose", function() {
        b.O("mellonPopup")
      });
      return e
    }
  }
};
Travian.Service.MellonService.$inject = ["$rootScope", "$location", "RoutingService", "SessionService", "$cookies"];
"use strict";
Travian.Service.MembershipService = function(a, c) {
  function b() {
    var a = s;
    s = [];
    for(var b = 0;b < a.length;b++) {
      a[b]()
    }
  }
  function l() {
    r = !0;
    0 < Travian.Player.data.allianceId && Travian.Player.data.allianceId != h && (null != e && g.unsubscribe(e), h = Travian.Player.data.allianceId, g = Alliance.get(h), e = g.subscribe(b));
    0 < Travian.Player.data.kingdomId && Travian.Player.data.kingdomId != m && (m = Travian.Player.data.kingdomId, null != q && f.unsubscribe(q), f = Player.getCollection(Player.COLLECTION_KINGDOM, Travian.Player.data.kingdomId), q = f.subscribe(function() {
      n = [];
      for(var a = 0;a < f.data.length;a++) {
        n.push(f.data[a].data)
      }
      b()
    }));
    b()
  }
  var h = -1, g = null, e = null, m = -1, f = null, n = [], q = null, p = null, r = !1, s = [];
  c.o(function() {
    Travian.Player.subscribe(l);
    p = Society.getCollection()
  });
  return new function() {
    this.hh = function(a) {
      s.push(a)
    };
    this.ge = function(a) {
      if(!r) {
        return null
      }
      if(-1 === g) {
        return[]
      }
      if(!g.filled) {
        return null
      }
      if(a) {
        a = [];
        for(var b = 0, c = g.data.members.length;b < c;b++) {
          var e = g.data.members[b];
          0 < e.allianceRights && a.push(e)
        }
        return a
      }
      return g.data.members
    };
    this.rg = function() {
      return r ? null == f ? [] : f.filled ? n : null : null
    };
    this.Cg = function(a) {
      if(!p.filled) {
        return null
      }
      for(var b = 0, c = p.data.length;b < c;b++) {
        if(p.data[b].data.groupId == a) {
          return p.data[b].data.members
        }
      }
      return[]
    }
  }
};
Travian.Service.MembershipService.$inject = ["$rootScope", "SessionService"];
Travian.Service.NotificationService = function(a, c, b) {
  function l(a, b) {
    b || (b = Notifications.TYPE_FLASH);
    if(b == Notifications.TYPE_FLASH) {
      for(var c = 0, g = e.length;c < g;c++) {
        if(e[c].id == a.id) {
          e.splice(c, 1);
          return
        }
      }
    }
    if(b == Notifications.TYPE_CHAT) {
      for(c = 0, g = f.length;c < g;c++) {
        if(f[c].id == a.id) {
          f.splice(c, 1);
          break
        }
      }
    }
  }
  function h(b) {
    if((0 < n || 0 < m.data.length) && !0 == r) {
      for(var e = 0, f = 0;f < m.data.length;f++) {
        e += m.data[f].data.count
      }
      a.webPageTitle = "(" + (e + n) + ") ";
      a.webPageTitle = b ? 0 < n && 0 < e ? Travian.translate("TravianTitle.ReportsAndChat", {amount:e + n}) : 0 < n ? 1 == q.length ? Travian.translate("TravianTitle.ChatRoom", {amount:n, name:q[0].data.roomViewName}) : Travian.translate("TravianTitle.ChatMessages", {amount:e + n}) : Travian.translate("TravianTitle.Reports", {amount:e + n}) : a.webPageTitle + (Travian.translate("TravianTitle") + " " + config.gameWorld);
      null == p && (p = c(function() {
        p = null;
        h(!b)
      }, 3E3))
    }else {
      a.webPageTitle = Travian.translate("TravianTitle") + " " + config.gameWorld
    }
  }
  function g() {
    var a = b.getPlayerId();
    0 < a ? (r = Settings.get(a).data.enableTabNotifications, Cache.A(m), m = Notifications.getCollection(), m.subscribe(h)) : window.setTimeout(g, 50)
  }
  var e = [], m = Cache.Ja(Notifications.getCollection), f = [], n = 0, q = null, p = null, r = !0;
  b.o(g);
  return new function() {
    this.Qa = function(a, b, f) {
      f || (f = -1);
      for(var g = null, h = 0, m = e.length;h < m;h++) {
        if(e[h].text == a) {
          g = e[h];
          g.count++;
          break
        }
      }
      null == g && (g = {id:b + "_" + Math.random(), text:a, type:b, timeout:f, "class":"", count:1, timer:null}, e.push(g));
      0 < f && (c(function() {
        g["class"] = "fadeOut"
      }, f), null != g.timer && c.cancel(g.timer), g.timer = c(function() {
        l(g)
      }, f + 1E3))
    };
    this.Jc = function(a) {
      null != a.fadeOutTimeout && c.cancel(a.fadeOutTimeout);
      null != a.timer && c.cancel(a.timer)
    };
    this.setTimeout = function(a) {
      a.fadeOutTimeout = c(function() {
        a["class"] = "fadeOut"
      }, a.timeout);
      a.timer = c(function() {
        l(a, a.type)
      }, a.timeout + 1E3)
    };
    this.zf = function(a) {
      for(var b = 0;b < f.length;b++) {
        if(f[b].timestamp == a.timestamp && f[b].text == a.text && f[b].playerId == a.playerId) {
          return
        }
      }
      a.id = Notifications.TYPE_CHAT + "_" + Math.random();
      a.timeout = 3500;
      a.type = Notifications.TYPE_CHAT;
      a.fadeOutTimeout = null;
      a.timer = null;
      a["class"] = "";
      3 <= f.length && (this.Jc(a), this.remove(f[0], Notifications.TYPE_CHAT));
      f.push(a);
      this.setTimeout(a)
    };
    this.remove = function(a, b) {
      l(a, b)
    };
    this.og = function() {
      return e
    };
    this.xg = function() {
      return m
    };
    this.kg = function() {
      return f
    };
    this.Ih = function(a, b) {
      n = b;
      q = a;
      h()
    };
    this.uh = function(a) {
      r = a;
      null == p && h()
    }
  }
};
Travian.Service.NotificationService.$inject = ["$rootScope", "$timeout", "SessionService"];
var PlayerAllianceMapper = new function() {
  var a = {}, c = {};
  this.removeMemberships = function(b) {
    for(var l = 0, h = b.length;l < h;l++) {
      var g = a[b[l]];
      if("undefined" != typeof g && 0 != g) {
        for(var e = 0;e < c[g].length;e++) {
          if(c[g][e] == b[l]) {
            c[g].splice(e, 1);
            break
          }
        }
      }
      a[b[l]] = 0
    }
  };
  this.setMemberships = function(b, l) {
    c[b] = l;
    for(var h = 0, g = l.length;h < g;h++) {
      a[l[h]] = b
    }
  };
  this.Bh = function(b, l) {
    a[b] = l;
    0 != l && (c[l] ? c[l].push(b) : c[l] = Array(b))
  };
  this.ha = function(b) {
    b = a[b];
    "undefined" == typeof b && (b = 0);
    return b
  }
}, U = new function() {
  function a(a) {
    a || (a = window.event);
    if("touch" == z) {
      return"undefined" == typeof a.changedTouches && (a.identifier = a.pointerId, a.changedTouches = [a], a.touches = [a]), a
    }
    a.pageX || a.pageY || (a.pageX = a.clientX + document.body.scrollLeft, a.pageY = a.clientY + document.body.scrollTop);
    return a
  }
  function c(a) {
    for(var b = 0;b < B[a].length;b++) {
      if(null != B[a][b]) {
        B[a][b](t)
      }
    }
  }
  function b(a, b) {
    if(1 == t.touches.length) {
      var c = t.touches[0], e = window.pageXOffset, f = window.pageYOffset, g = c.clientX, h = c.clientY;
      if(0 === c.pageY && Math.floor(h) > Math.floor(c.pageY) || 0 === c.pageX && Math.floor(g) > Math.floor(c.pageX)) {
        g -= e, h -= f
      }else {
        if(h < c.pageY - f || g < c.pageX - e) {
          g = c.pageX - e, h = c.pageY - f
        }
      }
      t.current.x = g;
      t.current.y = h;
      t.current.clientX = t.current.x;
      t.current.clientY = t.current.y
    }else {
      e = [];
      c = [];
      t.current.x = 0;
      for(f = t.current.y = 0;f < t.touches.length;f++) {
        g = t.touches[f].identifier, e.push({x:t.xd[g].x, y:t.xd[g].y}), c.push({x:a.touches[f].clientX, y:a.touches[f].clientY}), t.status != u ? g == t.Sc && (t.current.x = a.touches[f].clientX, t.current.y = a.touches[f].clientY) : (t.current.x += a.touches[f].clientX, t.current.y += a.touches[f].clientY)
      }
      t.status == u && (t.current.x /= 2, t.current.y /= 2);
      2 == t.touches.length && (e = Math.sqrt(Math.pow(e[0].x - e[1].x, 2) + Math.pow(e[0].y - e[1].y, 2)), c = Math.sqrt(Math.pow(c[0].x - c[1].x, 2) + Math.pow(c[0].y - c[1].y, 2)), t.status != u && l(t.p, "touchZoomStart", !0, c / e), t.ze = c / e, t.status = u, l(t.p, "touchZoom", !0, c / e))
    }
    t.status != u && (t.p = window.document.elementFromPoint(t.current.x, t.current.y), b || (t.lc != t.p ? (l(t.lc, "touchOut"), l(t.p, "touchOver")) : l(t.p, "touchMove")))
  }
  function l(a, b, c, e, f) {
    if(null == a || f instanceof MouseEvent && 2 < f.which) {
      return!0
    }
    if("undefined" != typeof a.ea) {
      var g = !0;
      a.bd || (g = a.ea.fire(b, e));
      if(!1 === g) {
        return g = window.event || f, void 0 !== g && (void 0 !== g.stopPropagation && g.stopPropagation(), void 0 !== g.preventDefault && g.preventDefault()), !1
      }
    }
    (c || 3 > arguments.length) && l(a.parentNode, b, !0, e, f)
  }
  function h() {
    var a = [];
    this.removeAll = function(b) {
      if(0 == arguments.length || null == b) {
        return a = [], !0
      }
      a[b] = []
    };
    this.remove = function(b) {
      for(var c in a) {
        for(var e = 0;e < a[c].length;e++) {
          a[c][e].Qc == b && (a[c].splice(e, 1), e--)
        }
      }
    };
    this.add = function(b, c, e) {
      "undefined" == typeof a[b] && (a[b] = []);
      for(var f = a[b], g = !1, h = 0, l = f.length;h < l;h++) {
        c == f[h].Qc && (g = !0)
      }
      g || a[b].push({Qc:c, param:e})
    };
    this.fire = function(b, c) {
      if("undefined" == typeof a[b]) {
        return null
      }
      for(var e = a[b], f = !0, g = 0, h = e.length;g < h;g++) {
        !1 === e[g].Qc(e[g].param, c) && (f = !1)
      }
      return f
    }
  }
  function g(a, b, c, f, g) {
    null != a && ("undefined" == typeof a.ea && (a.ea = new h, a.bd = !1, "mouse" == z && (a.onclick = function(a) {
      if(5 > Math.abs(t.start.x - t.current.x) && 5 > Math.abs(t.start.y - t.current.y)) {
        return l(this, "onclick", !0, void 0, a)
      }
    }, a.ondblclick = function(a) {
      return l(this, "ondblclick", !0, void 0, a)
    }, a.onmousedown = function(a) {
      return l(this, "onmousedown", !0, void 0, a)
    }, a.onmouseup = function(a) {
      return l(this, "onmouseup", !0, void 0, a)
    }, a.onmousewheel = function(a) {
      return e(a, this)
    })), "mouse" == z ? ("onmouseover" == b && "undefined" == typeof a.mouseEventName && (a.onmouseover = function() {
      return l(this, "onmouseover")
    }), "onmouseout" == b && "undefined" == typeof a.mouseEventName && (a.onmouseout = function(a) {
      a = a.toElement || a.relatedTarget;
      if(a != this) {
        for(var b = 0;6 > b && null != a;b++) {
          if(a.parentNode == this) {
            return
          }
          a = a.parentNode
        }
        return l(this, "onmouseout", !1)
      }
    }), "onmousemove" == b && "undefined" == typeof a.mouseEventName && (a.onmousemove = function() {
      return l(this, "onmousemove")
    }), a.ea.add(b, f, g)) : a.ea.add(c, f, g))
  }
  function e(a, b) {
    var c = 0;
    a || (a = window.event);
    a.detail ? c = -a.detail / 3 : a.wheelDelta && (c = a.wheelDelta / 120, window.opera && (c = -c));
    if(c) {
      var e = null;
      0 < c ? (l(b, "touchZoomStart"), e = l(b, "onmousewheel", !0, 1.2), l(b, "touchZoomEnd", !0, 1.2)) : (l(b, "touchZoomStart"), e = l(b, "onmousewheel", !0, 1 / 1.2), l(b, "touchZoomEnd", !0, 1 / 1.2));
      return e
    }
  }
  function m(a, b) {
    b.ea = a.ea;
    b.onmousemove = a.onmousemove;
    b.onclick = a.onclick;
    b.onmousedown = a.onmousedown;
    b.onmouseup = a.onmouseup
  }
  function f(a) {
    var b = a.obj;
    if(null != t.v) {
      A.kb()
    }else {
      b.bd = !0;
      t.v = b;
      t.Nc = a;
      if(a.doClone) {
        var c = b.getBoundingClientRect();
        t.J = [];
        t.J.width = computedStyle(b, "width");
        t.J.height = computedStyle(b, "height");
        t.J.top = computedStyle(b, "top");
        t.J.left = computedStyle(b, "left");
        t.J.display = computedStyle(b, "display");
        0 < t.J.width.indexOf("%") && (t.J.width = b.clientWidth, t.J.height = b.clientHeight);
        b.style.visibility = "hidden";
        t.q = b.cloneNode(!0);
        t.q.className += " msAntiScroll drag";
        t.q.xe = !0;
        m(b, t.q);
        var e = t.q;
        e.style.display = "block";
        e.style.visibility = "visible";
        e.style.position = "absolute";
        e.style.width = t.J.width;
        e.style.height = t.J.height;
        e.style.top = c.top + "px";
        e.style.left = c.left + "px";
        e.style.right = "auto";
        e.style.zIndex = 99999;
        document.body.appendChild(e);
        t.q.ondragstart = ha(!1)
      }else {
        c = {left:parseInt(computedStyle(b, "left")), top:parseInt(computedStyle(b, "top"))}, e = b, t.J = b.style, t.q = b
      }
      t.J.Mh = c.top;
      t.J.Lh = c.left;
      b = n(b);
      t.J.Oh = parseInt(b[0]);
      t.J.Ph = parseInt(b[1]);
      t.v.ondragstart = ha(!1);
      null != t.v && ("undefined" != typeof t.v.Tb && null != t.v.Tb) && (t.be = t.v.Tb(e, a.callBackParams))
    }
  }
  function n(a) {
    a = $(a).css("transform").match(/matrix(?:(3d)\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))(?:, (-{0,1}\d+)), -{0,1}\d+\)|\(-{0,1}\d+(?:, -{0,1}\d+)*(?:, (-{0,1}\d+))(?:, (-{0,1}\d+))\))/);
    if(!a) {
      return[0, 0, 0]
    }
    if("3d" == a[1]) {
      return a.slice(2, 5)
    }
    a.push(0);
    return a.slice(5, 8)
  }
  function q() {
    if(t.$) {
      var a = Math.round(t.J.Oh + (t.current.x - t.start.x) / D) + "px", b = Math.round(t.J.Ph + (t.current.y - t.start.y) / D) + "px";
      r(t.q, a, b);
      p()
    }
  }
  function p() {
    !G && t.q.attributes["drop-class"] && (G = window.setTimeout(function() {
      if(t.q) {
        t.q.style.display = "none";
        var a = window.document.elementFromPoint(t.current.x, t.current.y);
        t.q.style.display = "block";
        if(a && t.aa != a) {
          if(t.aa && t.aa.attributes.dropable) {
            var b = t.aa.className.replace(RegExp("[s]?" + t.q.attributes["drop-class"].value, "g"), "");
            t.aa.className = b
          }
          a.attributes.dropable && (a.className += " " + t.q.attributes["drop-class"].value);
          t.aa = a
        }
      }
      G = null
    }, 250))
  }
  function r(a, b, c) {
    a.style.transform = "translate3d(" + b + ", " + c + ",0)";
    a.style.msTransform = "translate3d(" + b + ", " + c + ",0)";
    a.style.wi = "translate3d(" + b + ", " + c + ",0)";
    a.style.bi = "translate3d(" + b + ", " + c + ",0)";
    a.style.webkitTransform = "translate3d(" + b + ", " + c + ",0)"
  }
  function s() {
    var a = Math.round(Math.sqrt(Math.pow(t.start.x - t.current.x, 2) + Math.pow(t.start.y - t.current.y, 2)));
    if(null == t.v) {
      70 < a && (Math.abs(t.start.x - t.current.x) > Math.abs(t.start.y - t.current.y) ? t.start.x > t.current.x ? l(t.start.Ab, "onSwipeLeft") : l(t.start.Ab, "onSwipeRight") : t.start.y > t.current.y ? l(t.start.Ab, "onSwipeUp") : l(t.start.Ab, "onSwipeDown"))
    }else {
      t.aa && (t.aa.attributes.dropable && (a = t.aa.className.replace(RegExp("[s]?" + t.q.attributes["drop-class"].value, "g"), ""), t.aa.className = a), t.aa = null);
      t.Nc && t.Nc.saveTransformInName && (y[t.Nc.saveTransformInName] = n(t.v));
      if(t.q.xe) {
        t.q.style.display = "none";
        var b = window.document.elementFromPoint(t.current.clientX, t.current.clientY);
        t.q.style.display = "block"
      }
      b = v(b);
      a = !0;
      if(null != b) {
        if(a = !1, b.$f(t.v, b, t.be)) {
          if(null == t.v) {
            return
          }
          "function" == typeof t.v.Ia && t.v.Ia(!0)
        }else {
          a = !0
        }
      }
      "function" == typeof t.v.Ia && (a = !t.v.Ia(!1));
      a ? A.Zf() : null != b && "undefined" != typeof b.De && b.De || A.kb()
    }
  }
  function v(a) {
    return null == a ? null : a.ag ? a : v(a.parentNode)
  }
  var u = 2, t = {$:!1, Sc:-1, touches:[], xd:[], ze:1, status:0, start:{x:0, y:0, obj:null}, current:{x:0, y:0, clientX:0, clientY:0}, J:{top:0, left:0, display:""}, startTime:0, be:null, v:null, q:null, aa:null, p:null, lc:null}, z = "mouse", A = this, C = navigator.userAgent.toLowerCase(), D = 1, y = {}, B = {down:[], move:[], up:[]}, H = !0, I = !1;
  this.lb = !0;
  this.Sb = !1;
  this.M = function() {
    return t
  };
  this.Kg = function() {
    -1 < C.search(/(iphone|ipod|ipad|opera mini|fennec|palm|blackberry|android|symbian|touch;)/) ? A.Ng() : A.ve()
  };
  this.ve = function(b) {
    z = "mouse";
    var f = document;
    0 < arguments.length && (f = document.getElementById(b));
    document.onmouseout = function(b) {
      if(void 0 === b || void 0 === b.pageX) {
        b = a(b)
      }
      if(null == b.relatedTarget || "HTML" == b.relatedTarget.tagName) {
        t.$ = !1, s()
      }
    };
    f.onmousemove = function(b) {
      if(void 0 === b || void 0 === b.pageX) {
        b = a(b)
      }
      t.current.x = b.pageX;
      t.current.y = b.pageY;
      t.current.clientX = b.clientX;
      t.current.clientY = b.clientY;
      null != t.v && q();
      c("move")
    };
    f.onmousedown = function(b) {
      if(void 0 === b || void 0 === b.pageX) {
        b = a(b)
      }
      t.$ = !0;
      t.start.x = b.pageX;
      t.start.y = b.pageY;
      t.current.x = b.pageX;
      t.current.y = b.pageY;
      t.current.clientX = b.clientX;
      t.current.clientY = b.clientY;
      t.p = document.elementFromPoint(t.current.clientX, t.current.clientY);
      t.start.Ab = t.p;
      c("down")
    };
    f.onmouseup = function() {
      t.$ = !1;
      s();
      c("up")
    };
    window.addEventListener && window.addEventListener("DOMMouseScroll", function(a) {
      t.p = document.elementFromPoint(t.current.x, t.current.y);
      return e(a, t.p)
    }, !1)
  };
  this.Ng = function(e) {
    if("touch" != z) {
      A.ve = w();
      z = "touch";
      var f = document;
      0 < arguments.length && (f = document.getElementById(e));
      f.ontouchstart = function(e) {
        e = a(e);
        t.p = e.target;
        t.$ = !0;
        t.touches = e.touches;
        for(var f = 0;f < e.changedTouches.length;f++) {
          t.xd[e.changedTouches[f].identifier] = {x:e.changedTouches[f].clientX, y:e.changedTouches[f].clientY}
        }
        t.start.Ab = t.p;
        if(null != t.p && "INPUT" == t.p.tagName) {
          return!0
        }
        1 == t.touches.length && (t.Sc = t.touches[0].identifier, t.startTime = (new Date).getTime(), b(e, !0), t.start.x = t.current.x, t.start.y = t.current.y, l(t.p, "touchStart"), l(t.p, "touchOver"));
        c("down");
        if(!A.lb) {
          return e.preventDefault(), !1
        }
      };
      f.ontouchmove = function(e) {
        e = a(e);
        t.p = e.target;
        b(e);
        if(null != t.p && "INPUT" == t.p.tagName) {
          return!0
        }
        t.touches = e.touches;
        t.lc = t.p;
        null != t.v && q();
        c("move");
        if(!A.lb) {
          return e.preventDefault(), !1
        }
      };
      f.ontouchend = function(b) {
        b = a(b);
        null != t.p && l(t.p, "touchOut");
        t.p = b.target;
        t.$ = !1;
        t.bg = (new Date).getTime();
        t.touches = b.touches;
        if(null != t.p && "INPUT" == t.p.tagName) {
          return!0
        }
        I && A.ph();
        c("up");
        if(t.status == u) {
          0 == t.touches.length && (l(t.p, "touchZoomEnd", !0, t.ze), t.status = 0)
        }else {
          if(0 == t.touches.length || 1 === t.touches.length && "MSPointerUp" === t.touches[0].type) {
            l(t.p, "touchEnd"), t.Sc = -1
          }
        }
        500 > t.bg - t.startTime && l(t.p, "touchClick");
        s();
        if(!A.lb) {
          return!1
        }
      };
      f.addEventListener("MSPointerDown", f.ontouchstart, !1);
      f.addEventListener("MSPointerMove", f.ontouchmove, !1);
      f.addEventListener("MSPointerUp", f.ontouchend, !1)
    }
  };
  this.mg = function() {
    return window.document.elementFromPoint(t.current.x, t.current.y)
  };
  this.Xa = function() {
    return z
  };
  this.onPointerOver = function(a, b, c) {
    g(a, "onmouseover", "touchOver", b, c)
  };
  this.onPointerOut = function(a, b, c) {
    g(a, "onmouseout", "touchOut", b, arguments[2])
  };
  this.ca = function(a, b, c) {
    g(a, "onmousedown", "touchStart", b, arguments[2])
  };
  this.He = function(a, b) {
    g(a, "onmousemove", "touchMove", b, void 0)
  };
  this.Ie = function(a, b) {
    g(a, "onmouseup", "touchEnd", b, void 0)
  };
  this.Ma = function(a, b) {
    g(a, "onclick", "touchClick", b, void 0)
  };
  this.ah = function(a, b) {
    g(a, "ondblclick", "touchClick", b, void 0)
  };
  this.bh = function(a, b) {
    a.onmousedown = ha(!1);
    g(a, "onSwipeLeft", "onSwipeLeft", b, "left");
    g(a, "onSwipeRight", "onSwipeRight", b, "right");
    g(a, "onSwipeUp", "onSwipeUp", b, "up");
    g(a, "onSwipeDown", "onSwipeDown", b, "down")
  };
  this.Je = function(a, b) {
    g(a, "onmousewheel", "touchZoom", b)
  };
  this.s = function(a, b) {
    "undefined" != typeof a && null != a && "undefined" != typeof a.ea && a.ea.removeAll(b)
  };
  this.ld = function(a, b) {
    "undefined" != typeof a && null != a && "undefined" != typeof a.ea && a.ea.remove(b)
  };
  this.H = function(a, b) {
    for(var c = -1, e = 0;e < B[a].length;e++) {
      if(null == B[a][e] || B[a][e] == b) {
        c = e;
        break
      }
    }
    -1 != c ? B[a][c] = b : (c = B[a].length, B[a].push(b));
    return function() {
      B[a][c] = null
    }
  };
  this.$e = function() {
    H = A.lb;
    A.lb = !1;
    I = !0
  };
  this.ph = function() {
    A.lb = H
  };
  this.vg = n;
  this.ug = function(a) {
    for(var b = 0, c = 0;a.offsetParent;) {
      b += a.offsetLeft, c += a.offsetTop, a = a.offsetParent
    }
    b += a.offsetLeft;
    c += a.offsetTop;
    return{x:b, y:c}
  };
  var G = null;
  this.Zf = function() {
    if("undefined" != typeof AnimationManager) {
      var a = new Animation(t.q, "top", parseInt(t.q.style.top), parseInt(t.J.Mh));
      a.mi = "px";
      a.duration = 300;
      a.timing = Animation.ai;
      null != t.v && "undefined" != typeof t.v.Ia && (a.callback = t.v.Ia);
      var b = a.clone();
      b.li = "left";
      b.Ai = parseInt(t.q.style.left);
      b.qi = parseInt(t.J.Lh);
      AnimationManager.xf(a);
      AnimationManager.xf(b);
      b.callback = function() {
        A.kb()
      }
    }else {
      A.kb()
    }
  };
  this.kb = function() {
    null != t.v && (t.v.bd = !1, t.q.xe && (document.body.removeChild(t.q), t.q.style.display = "none", t.v.style.display = t.J.display, t.v.style.visibility = "visible"), t.v = null, t.q = null)
  };
  this.ec = function(a, b, c, e, h, m, n, p) {
    function q(a) {
      void 0 !== p && p();
      var b = {x:t.current.x, y:t.current.y};
      A.$e();
      var c = A.H("move", function() {
        var e = {x:t.current.x, y:t.current.y};
        5 > Math.sqrt(Math.pow(e.x - b.x, 2) + Math.pow(e.y - b.y, 2)) || (c(), t.v != a.obj && t.$ ? (f(a), A.s(a.obj, "onmousemove"), A.s(a.obj, "touchMove")) : t.v == a.obj ? l(t.lc, "onmouseout") : (A.s(a.obj, "onmousemove"), A.s(a.obj, "touchMove")))
      })
    }
    if(null == a) {
      return!1
    }
    a.className += " msAntiScroll";
    var s = a;
    h && (s = h);
    "undefined" == typeof m && (m = !0);
    g(a, "onmousedown", "touchStart", q, {obj:s, callBackParams:e, doClone:m, saveTransformInName:n});
    a.ondragstart = ha(!1);
    a.draggable = !0;
    a.Tb = b;
    a.Ia = c;
    s.Tb = b;
    s.Ia = c;
    n && void 0 !== y[n] && (a = y[n], r(s, a[0] + "px", a[1] + "px"));
    return function() {
      A.ld(s, q)
    }
  };
  this.Rg = function(a, b) {
    null != a && (a.ag = !0, a.$f = b, a.De = !0)
  }
};
function Cb(a) {
  function c() {
    g = null;
    if(0 < h.length) {
      for(var b = {type:"askForPrestige", query:[]}, c = 0;c < h.length;c++) {
        b.query.push(parseInt(h[c]))
      }
      h = [];
      a.emit(m, b, e.kd)
    }
  }
  var b = [], l = [], h = [], g = null, e = this, m = "prestigeService";
  e.kd = function(a) {
    if(null != a && Array.isArray(a)) {
      for(var c = 0;c < a.length;c++) {
        var e = a[c].id, g = a[c].prestige;
        g || (g = 0);
        g = parseInt(g, 10);
        "undefined" != typeof b[e] || a[c].outdated || (b[e] = g);
        if("undefined" != typeof l[e]) {
          for(var h = 0;h < l[e].length;h++) {
            l[e][h].callback(g, e), l[e].splice(h, 1), h--
          }
          delete l[e]
        }
      }
    }
  };
  e.getPrestigeForPlayerId = function(a, e) {
    if(isNaN(a) || null === a) {
      e("")
    }else {
      if("undefined" != typeof b[a]) {
        e(b[a])
      }else {
        var m = null, p = (new Date).getTime();
        "undefined" == typeof l[a] ? (l[a] = [], l[a].push({callback:e, timestamp:p}), m = {type:"askForPrestige", query:a}) : (l[a].push({callback:e, timestamp:p}), l[a][0].timestamp < p - 3E3 && (m = {type:"askForPrestige", query:a}));
        null != m && (h.push(a), null == g && (g = window.setTimeout(c, 50)))
      }
      return null
    }
  }
}
"use strict";
Travian.Service.ReportsService = function(a) {
  function c(a, b, c) {
    var e = b + c, l = [], r = e + c;
    0 < g[a] && r > g[a] && (r = g[a]);
    for(var s = b;s < b + c;s++) {
      -1 == $.inArray(s, l) && l.push(s)
    }
    for(var v = b + c, v = b + c > g[a] && 0 != g[a] ? g[a] : b + c, s = b;s < v;s++) {
      h[a].hasOwnProperty(s) || l.push(s)
    }
    for(s = b = 0 <= b - c ? b - c : 0;s < b + c;s++) {
      -1 == $.inArray(s, l) && l.push(s)
    }
    for(s = e;s < r;s++) {
      -1 == $.inArray(s, l) && l.push(s)
    }
    c = [];
    for(s in l) {
      parseInt(l[s]) < r && !h[a].hasOwnProperty(l[s]) && c.push(l[s])
    }
    c.sort();
    return 0 < c.length ? {startIndex:c[0], count:c.length} : !0
  }
  function b() {
    console.log("Flushing buffer");
    h = {};
    g = {};
    for(var a = 0;a < Report.ALL_COLLECTIONS.length;a++) {
      h[Report.ALL_COLLECTIONS[a]] = {}, g[Report.ALL_COLLECTIONS[a]] = 0, "undefined" == typeof e[Report.ALL_COLLECTIONS[a]] && (e[Report.ALL_COLLECTIONS[a]] = [])
    }
  }
  function l(a, b, c, e, l) {
    var r = !1;
    "undefined" != typeof g[a] && (r = !0);
    Travian.request("reports/getLastReports", {collection:a, start:b, count:c, filters:e, alsoGetTotalNumber:r}, function(e) {
      "undefined" != typeof e.totalNumberOfReports ? g[a] = e.totalNumberOfReports : a == Report.COLLECTION_SEARCH && (g[a] = b + e.reports.length);
      var q = b + c;
      q > g[a] && (q = g[a]);
      for(var r = 0, t = b;t < q;t++) {
        0 <= t && (h[a][t] = e.reports[r]), r++
      }
      l(e)
    })
  }
  var h = {}, g = {}, e = {};
  a.$on("newReport", function() {
    b()
  });
  return new function() {
    var a = Report.COLLECTION_PERSONAL;
    this.getReportHeaders = function(b, n, q, p, r) {
      var s = {startIndex:n, count:q}, v = !1;
      p != e[b] && (v = !0, e[b] = p);
      a != b && (v = !0, a = b);
      v ? h[b] = {} : s = c(b, n, q);
      if(0 < s.count) {
        l(b, s.startIndex, s.count, p, function() {
          var a = [], c = n + q;
          c > g[b] && (c = g[b]);
          for(var e = n;e < c;e++) {
            a.push(h[b][e])
          }
          r(a)
        })
      }else {
        p = [];
        s = n + q;
        s > g[b] && (s = g[b]);
        for(v = n;v < s;v++) {
          p.push(h[b][v])
        }
        r(p)
      }
    };
    this.getPrevAndNext = function(b, c, q) {
      var p = h[a], r = null, s = null, v = !1, u;
      for(u in p) {
        if("undefined" == typeof p[u]) {
          break
        }
        var t = p[u]._id.$id, z = p[u].collection;
        if(t == b) {
          v = !0
        }else {
          if(v) {
            if(null == r && 1 < u) {
              if(q) {
                c({prev:r, next:t, prevColl:s, nextColl:z});
                return
              }
              var A = this;
              q = Math.max(0, u - Report.REPORTS_PER_PAGE - 1);
              l(a, q, Report.REPORTS_PER_PAGE + 2, e[a], function() {
                A.getPrevAndNext(b, c, !0)
              })
            }else {
              c({prev:r, next:t, prevColl:s, nextColl:z})
            }
            return
          }
          r = t;
          s = z;
          if(u >= g[a] - 2) {
            c({prev:r, next:null, prevColl:s, nextColl:z});
            return
          }
        }
      }
      v ? q ? c(null) : u >= g[a] - 1 && null == r ? q ? c({prev:r, next:null, prevColl:s, nextColl:z}) : (A = this, q = Math.max(0, u - Report.REPORTS_PER_PAGE - 1), l(a, q, Report.REPORTS_PER_PAGE + 2, e[a], function() {
        A.getPrevAndNext(b, c, !0)
      })) : (A = this, l(a, u, 10, e[a], function() {
        A.getPrevAndNext(b, c, !0)
      })) : c(null)
    };
    this.getTotalNumberOfReports = function(a) {
      return g[a]
    };
    b()
  }
};
Travian.Service.ReportsService.$inject = ["$rootScope"];
"use strict";
Travian.Service.RoutingService = function(a, c, b) {
  function l() {
    if(null != n) {
      f = !0
    }else {
      f = !1;
      var b = window.location.hash.split("#")[1] || "";
      0 < b.indexOf("?") && (b = b.substr(0, b.indexOf("?")));
      b = b.trim("/");
      if(b !== e) {
        var c = h(e);
        e = b;
        m = h(e);
        var b = {}, g;
        for(g in c) {
          "undefined" == typeof m[g] && (b[g] = null)
        }
        for(g in m) {
          "undefined" == typeof c[g] ? b[g] = m[g] : c[g] != m[g] && (b[g] = m[g])
        }
        a.$broadcast("urlChanged", b)
      }
    }
  }
  function h(a) {
    var b = {};
    if(!a) {
      return b
    }
    a = a.split("/");
    for(var c = 0;c < a.length;c++) {
      var e = a[c];
      if("" != e && (e = e.split(":"), !(2 > e.length))) {
        var f = e.splice(0, 1);
        b[f] = e.join(":")
      }
    }
    return b
  }
  function g(a) {
    null == n && (n = b(function() {
      var b = "", e;
      for(e in m) {
        b += "/" + (e + ":" + m[e])
      }
      q == b && f && (n = null, l());
      c.path(b);
      q = b;
      !0 == a && c.replace();
      n = null
    }, 10))
  }
  var e = null, m = null, f = !1;
  a.$on("$locationChangeSuccess", l);
  var n = null, q = null, p = {};
  return new function() {
    this.m = function(a, b) {
      m[a] = b;
      g()
    };
    this.O = function(a, b) {
      delete m[a];
      b ? g(!1) : g(!0)
    };
    this.getParam = function(a) {
      return m[a]
    };
    this.Pe = function(a) {
      p[a] = JSON.parse(JSON.stringify(m))
    };
    this.Be = function(a) {
      "undefined" != typeof p[a] && (m = p[a], g(!1))
    }
  }
};
Travian.Service.RoutingService.$inject = ["$rootScope", "$location", "$timeout"];
"use strict";
Travian.Service.ServertimeService = function(a) {
  function c() {
    a.currentServerTime = Math.round(((new Date).getTime() - l) / 100) / 10;
    Travian.ServerTime = a.currentServerTime
  }
  var b = Math.round((new Date).getTime() / 1E3), l = 0;
  a.currentServerTime = Math.round((new Date).getTime() / 1E3);
  window.setTimeout(function() {
    Travian.tick.bind(c)
  }, 1E3);
  return new function() {
    this.K = function() {
      return a.currentServerTime
    };
    this.Dh = function(a, b) {
      l = (new Date).getTime() - (a + b / 2);
      c()
    };
    this.Zb = function() {
      return b
    };
    this.wg = function() {
      return l
    }
  }
};
Travian.Service.ServertimeService.$inject = ["$rootScope"];
"use strict";
Travian.Service.SessionService = function(a, c) {
  function b() {
    return{session:g, playerId:m}
  }
  function l(a, b) {
    return a && "undefined" !== typeof a.key && "undefined" !== typeof a.id ? (g = a.key, m = a.id, !q || null !== b && "undefined" !== typeof b || localStorage.setItem(n, JSON.stringify({key:g, id:m})), !0) : null !== b && "undefined" !== typeof b ? (g = b.key, m = b.id, !0) : !1
  }
  function h() {
    if(null != e && 0 >= e.data.tribeId) {
      return e.isOnMap() ? (a.loggedIn = !1, a.openWindow("startVillage")) : (a.loggedIn = !0, a.openPage("map"), a.openWindow("selectTribe")), f = Session.get(g), f.subscribe(function() {
        a.$broadcast("login")
      }), !1
    }
    a.loggedIn || (a.loggedIn = !0, f = Session.get(g), f.subscribe(function() {
      a.$broadcast("login")
    }));
    return!0
  }
  var g = null, e = null, m = -1, f = null, n = "t5SessionKey", q = !1, p = [];
  return new function() {
    this.Bg = b;
    this.ac = function() {
      return g
    };
    this.l = function() {
      return e
    };
    this.getPlayerId = function() {
      return m
    };
    this.L = function() {
      return null != f && f.data.type == Session.TYPE_SITTER ? !0 : !1
    };
    this.Sg = function() {
      return null != f && f.data.type == Session.TYPE_DUAL ? !0 : !1
    };
    this.Pg = function() {
      return null != f && f.data.type == Session.TYPE_ADMIN ? !0 : !1
    };
    this.Eg = function() {
      return null != f ? f.data.userAccountIdentifier : !1
    };
    this.fg = function() {
      return null != f ? f.data.avatarIdentifier : !1
    };
    this.ne = function() {
      return f.getRightsAsObject()
    };
    this.hasRight = function(a) {
      return null != f && f.data.type == Session.TYPE_SITTER ? f.hasRight(a) ? !0 : !1 : !0
    };
    this.Rh = function() {
      h()
    };
    this.te = function() {
      return g && m
    };
    this.Mg = function() {
      try {
        localStorage.setItem("localStorageCheck", "localStorageCheck"), localStorage.removeItem("localStorageCheck"), q = !0
      }catch(b) {
        q = !1
      }
      var f = c.getObject(n);
      Travian.Globals.sessionId && (f = {key:Travian.Globals.sessionId, id:Travian.Globals.playerId});
      if(q) {
        var g = [], h = localStorage.getItem(n);
        if(null != h) {
          try {
            g = JSON.parse(h)
          }catch(p) {
            g = []
          }
        }
      }
      l(f, g) && this.te() && (e = Cache.Ja(Player.get, [m]), Travian.Player = e, a.player = Travian.Player, Travian.request("player/getAll", {deviceDimension:screen.width + ":" + screen.height}, function() {
        "undefined" != typeof GlobalLoadingScreenManager && GlobalLoadingScreenManager.achieveStep("get_all")
      }))
    };
    this.Pc = function(b) {
      g = b.sessionId;
      m = b.playerId;
      c.putObject(n, {key:g, id:b.playerId});
      q && localStorage.setItem(n, JSON.stringify({key:g, id:b.playerId}));
      e = Player.get(m);
      Travian.Player = e;
      a.player = Travian.Player;
      e.subscribe(h)
    };
    this.ab = function() {
      Travian.request("login/logout", {}, function(b) {
        a.$broadcast("logout");
        e = g = null;
        c.remove(n);
        q && localStorage.removeItem(n);
        Cache.Xd();
        "undefined" != typeof GlobalLoadingScreenManager && GlobalLoadingScreenManager.showUnload();
        a.loggedIn = !1;
        window.location.href = "" != b.data ? b.data + "&msid=" + c.get("msid") : "" == config.portalLogout ? config.portal : config.portal + config.portalLogout + "-" + (new Date).getTime()
      })
    };
    this.o = function(b) {
      a.loggedIn ? b() : p.push(b)
    };
    a.$on("forceLogout", this.ab);
    var r = null;
    a.$on("login", function() {
      for(var b = 0;b < p.length;b++) {
        p[b]()
      }
      p = [];
      null == r && (r = Gameworld.get(), r.subscribe(function() {
        r.hasMaintenance() && (a.loggedIn = !1, a.openWindow("maintenance"))
      }))
    });
    a.$on("clearCache", function() {
      function a() {
        Travian.Player.filled ? h() : window.setTimeout(a, 10)
      }
      Cache.Xd();
      window.setTimeout(a, 10)
    });
    a.$on("sessionRightsChanged", function() {
      Cache.t(f, 1);
      f = Session.get(g)
    })
  }
};
Travian.Service.SessionService.$inject = ["$rootScope", "$cookies"];
"use strict";
Travian.Service.SocketService = function(a, c, b, l, h, g) {
  function e(a) {
    console.log("[SocketService] " + a)
  }
  function m() {
    var a = "notConnected";
    "undefined" != typeof L.io && ("undefined" != typeof L.io.engine && "undefined" != typeof L.io.engine.transport) && (a = L.io.engine.transport.query.transport);
    return a
  }
  function f() {
    if((new Date).getTime() > t + 1E3 * (u + 60) && A > C) {
      if(z != t) {
        var a = {secs:Math.round(t / 1E3 - l.Zb()), pings:A, pongs:C, start:l.Zb(), transport:m(), disconnects:I};
        Travian.request("player/logError", {data:a});
        z = t = (new Date).getTime()
      }
      Travian.request("player/getAll", {deviceDimension:screen.width + ":" + screen.height});
      q()
    }else {
      A++, Travian.request("player/ping", {cnt:A, lastGlobalMessageTime:B, lastId:H}, function(a) {
        H = a.data
      }), B = l.K()
    }
  }
  function n() {
    var a = (new Date).getTime(), b = a - J;
    J = a;
    6E4 < b && (t = a, I.push("Hibernation" + Math.round(b / 1E3) + "sec-" + Math.round(a / 1E3)), q(), Travian.request("player/getAll", {deviceDimension:screen.width + ":" + screen.height}))
  }
  function q() {
    6E4 > (new Date).getTime() - X ? null == Z && (Z = window.setTimeout(q, 6E4)) : (X = (new Date).getTime(), Z = null, e("Complete reconnect!"), R = !1, L.io.close(), L = null, D = (new Date).getTime(), s())
  }
  function p() {
    if(!R) {
      var a = !0;
      P.Yc() ? (e("Needs authentication."), null != O && 0 < O.playerId ? v({playerId:O.playerId, uniqueClientIdentifier:y, session:O.session}) : e("But we have no session data!")) : (e("Needs authentication. But we are not connected!"), 1E4 < (new Date).getTime() - D && (a = !1, q()));
      a && (T || (T = window.setTimeout(function() {
        T = !1;
        p()
      }, 2E3)))
    }
  }
  function r(b, c, e, f) {
    var g = e;
    "undefined" != typeof e && "function" == typeof e && (g = function() {
      var b = arguments;
      e && a.$evalAsync(function() {
        e.apply(L, b)
      })
    });
    P.Yc() && (R || f ? L.emit(b, c, g) : T || p())
  }
  function s() {
    C = A = 0;
    null == L ? (D = (new Date).getTime(), L = io.connect("http://" + config.node.host + ":" + config.node.port + "/", {path:"/" + N, transports:["polling", "websocket", "flashsocket"]}), L.hf && (L.connect(), e("Used old socket. Try to connect with that one")), L.hf || (null == M && (!1 == E && "undefined" != typeof GlobalLoadingScreenManager) && (M = window.setTimeout(function() {
      GlobalLoadingScreenManager.achieveStep("socket_connect")
    }, 1E3)), L.hf = !0, L.on("message", function(a) {
      b.Wc(a, -1);
      void 0 !== a.missedPackets && r("missedPackets", a.missedPackets)
    }), L.on("connect", function() {
      e("connected via " + m());
      E = !0;
      "undefined" != typeof GlobalLoadingScreenManager && GlobalLoadingScreenManager.achieveStep("socket_connect");
      null != M && (M = null);
      T || p()
    }), L.on("connecting", function() {
      e("Try connecting via " + m())
    }), L.on("connect_failed", function() {
      e("connect failed via " + m())
    }), L.on("connect_error", function() {
      e("connect error via " + m())
    }), L.on("connect_timeout", function() {
      e("connect timeout via " + m())
    }), L.on("disconnect", function() {
      e("disconnected " + m());
      R = E = !1;
      D = (new Date).getTime();
      I.push((new Date).getTime())
    }), L.on("reconnect_error", w()), L.on("reconnect_failed", w()), L.on("reconnect", function() {
      e("reconnect via " + m());
      E = !0;
      T || p()
    }))) : L.io.ki()
  }
  function v(b) {
    r("subscribe", b, function(b) {
      !0 !== b || da ? !0 !== b && (R = !0, da = !1, a.$broadcast("chatConnected"), e("Connection successful"), f()) : (a.openWindow("authError"), da = !0)
    }, !0)
  }
  var u = 100, t = (new Date).getTime(), z = 0, A = 0, C = 0, D = (new Date).getTime(), y = na("client"), B = (new Date).getTime() / 1E3, H = 0;
  g.put("t5socket", y);
  window.setInterval(f, 1E3 * u);
  var I = [];
  a.$on("pong", function(a, b) {
    "undefined" != typeof b && eval(b);
    C++;
    t = (new Date).getTime()
  });
  var G = 0;
  Travian.sanityCheck = function(a) {
    var b = (new Date).getTime();
    G > b - 3E4 || (G = b, a.data = {secs:Math.round(t / 1E3 - l.Zb()), pings:A, pongs:C, start:l.Zb(), transport:m(), disconnects:I}, Travian.request("player/sanityCheck", a, function(a) {
      "undefined" != typeof a && "insane" == a.data && (q(), Travian.request("player/getAll", {deviceDimension:screen.width + ":" + screen.height}))
    }))
  };
  var J = (new Date).getTime();
  a.$on("login", function() {
    J = (new Date).getTime();
    Travian.tick.bind("checkForHibernation", n);
    console.log(h.Bg)
    P.Eh(h.Bg());
    var a = new va(P);
    Travian.nameService = a;
    a = new Cb(P);
    Travian.prestigeService = a
  });
  a.$on("logout", function() {
    L.io.disconnect()
  });
  a.$on("forceReload", function() {
    window.location.replace("/")
  });
  var N = "socket.io", E = !1, R = !1, O = null;
  "undefined" != typeof config.node.resource && "" != config.node.resource && (N = config.node.resource + "/socket.io");
  var L = null, X = (new Date).getTime(), Z, M = null, T = !1, da = !1;
  s();
  var P = new function() {
    this.oe = function() {
      return L
    };
    this.Eh = function(a) {
      O = a;
      E && 0 < O.playerId && (a = {playerId:O.playerId, uniqueClientIdentifier:y, session:O.session}, v(a))
      console.log('CCCCCCCCC')
    };
    this.emit = function(a, b, c) {
      r(a, b, c)
    };
    this.we = function() {
      return R
    };
    this.Yc = function() {
      return L && L.connected
    }
  };
  return P
};
Travian.Service.SocketService.$inject = "$rootScope $window GlobalStateService ServertimeService SessionService $cookieStore".split(" ");
"use strict";
Travian.Service.TrackingService = function() {
  return new function() {
    this.yd = function(a) {
      if(Travian.Config.trackingActive) {
        var c = 0, c = 100 < Travian.Player.data.gold ? 50 * Math.round(Travian.Player.data.gold / 50) : 10 * Math.round(Travian.Player.data.gold / 10);
        Travian.request("player/sendTrackingEvent", {eventName:a, data:{gold:c}})
      }
    }
  }
};
Travian.Service.TrackingService.$inject = ["$rootScope"];
"use strict";
Travian.Service.TroopsService = function(a, c, b, l) {
  function h(a) {
    var b = a.data.villageId;
    if("undefined" == typeof p[b] || r[b] != a.data.playerId) {
      p[b] = {};
      s[b] = {};
      t[b] = {};
      var c = C;
      r[b] = a.data.playerId;
      a.data.playerId != Travian.Player.data.playerId && (c = D);
      for(var f = 0;f < c.collections.length;f++) {
        var g = c.collections[f];
        a.data.playerId != Travian.Player.data.playerId ? (p[b][g] = Cache.Ja(c["class"][f].getCollection, [g + ":" + b]), p[b][g].filled = !0) : p[b][g] = c["class"][f].getCollection(g, b);
        var h = p[b][g].subscribe(e);
        s[b][g] = h;
        for(h = 0;h < A.length;h++) {
          A[h].Ud(b, g, p[b][g])
        }
      }
    }
  }
  function g() {
    for(var a = {}, b = 0;b < B.data.length;b++) {
      a[B.data[b].data.villageId] = !0, h(B.data[b])
    }
    for(b = 0;b < y.data.length;b++) {
      a[y.data[b].data.villageId] = !0, h(y.data[b])
    }
    for(var c in p) {
      if("undefined" == typeof a[c]) {
        for(var e in p[c]) {
          p[c][e].unsubscribe(s[c][e]), delete p[c][e]
        }
        delete p[c]
      }
    }
  }
  function e(b) {
    var e = {}, g = b.serverId.split(":"), h = parseInt(g[3]), g = g[2], l = g + ":" + h;
    "undefined" == typeof t[h][g] && (t[h][g] = {});
    var n = null, p = !1;
    g == Troops.COLLECTION_MOVING && (n = c.pa(h));
    for(var q = 0;q < b.data.length;q++) {
      var r = b.data[q];
      if("undefined" != typeof r) {
        var s = r.serverId;
        e[s] = !0;
        t[h][g][s] = r;
        null != n && r.isAttacking && r.data.movement.villageIdTarget == n.data.villageId && (p = !0);
        "undefined" == typeof v[s] && (u[s] = {}, v[s] = r.subscribe(m));
        "undefined" == typeof u[s][l] && (u[s][l] = !0)
      }
    }
    null != n && p != n.underAttack && (n.underAttack = p, n.callSubscribers(), a.$broadcast("attackStateChanged"));
    for(s in t[h][g]) {
      "undefined" == typeof e[s] && (delete u[s][l], 0 == Object.keys(u[s]).length && (t[h][g][s].unsubscribe(v[s]), delete u[s], delete v[s]), delete t[h][g][s])
    }
    f(l)
  }
  function m(a) {
    a = u[a.serverId];
    for(var b in a) {
      f(b)
    }
  }
  function f(a) {
    "undefined" == typeof z[a] && (z[a] = []);
    for(var b = 0;b < z[a].length;b++) {
      if(null != z[a][b]) {
        z[a][b]()
      }
    }
  }
  function n(a, b, e) {
    var f = this, g = b, h = {}, m = null;
    this.Fe = !1;
    this.Ic = function() {
      null == m && (m = l(function() {
        "function" == typeof e && f.Fe && e();
        m = null
      }, 10))
    };
    b = {};
    this.Ra = [];
    this.u = function(a, c, e) {
      var f = {}, g = [], h;
      for(h in b) {
        if(null == a || 0 <= a.indexOf(parseInt(h))) {
          for(var l in b[h]) {
            if(null == c || 0 <= c.indexOf(l)) {
              for(var m = b[h][l], n = 0;n < m.data.length;n++) {
                "undefined" != typeof m.data[n] && ("undefined" == typeof f[m.data[n].serverId] && (null == e || 0 <= e.indexOf(parseInt(m.data[n].data.movement.movementType)))) && (f[m.data[n].serverId] = !0, g.push(m.data[n]))
              }
            }
          }
        }
      }
      return g
    };
    this.Hc = function(a) {
      for(var b = this.u(), e = [], f = null, g = 0;g < b.length;g++) {
        var f = b[g].data, h = f.villageIdTarget, l = f.playerIdTarget;
        "undefined" == typeof e[l] && (e[l] = {count:0, villages:{}});
        e[l].count++;
        var m = e[l].villages;
        if("undefined" == typeof m[h]) {
          e[l].villages[h] = {count:0, villageName:f.villageNameTarget, nextTimestamp:f.timeFinish, villageId:f.villageIdTarget, kingdom:0, playerName:f.playerNameTarget, playerId:f.playerIdTarget, distance:0};
          var n = c.je(f.villageIdTarget, function() {
            var a = c.je(f.villageIdTarget);
            e[l].villages[h].kingdom = a
          });
          e[l].villages[h].kingdom = n;
          "undefined" != typeof a && (e[l].villages[h].distance = Da(Fa(a), Fa(f.villageIdTarget)))
        }
        e[l].villages[h].count++;
        m[h].nextTimestamp > f.timeFinish && (e[l].villages[h].nextTimestamp = f.timeFinish)
      }
      return e
    };
    this.Ud = function(c, e, l) {
      null != g && 0 > g.indexOf(e) || null != a && 0 > a.indexOf(parseInt(c)) || (f.Ra.push(l), "undefined" == typeof b[c] && (b[c] = {}), b[c][e] = l, l = e + ":" + c, c = e + ":" + c, e = f.Ic, "undefined" == typeof z[c] && (z[c] = []), z[c].push(e), h[l] = z[c].length - 1, f.Ic())
    };
    this.destroy = function() {
      for(var a in b) {
        for(var c in b[a]) {
          var e = c + ":" + a, g = h[c + ":" + a];
          z[e][g] = null;
          for(var l = !0, m = g;m < z[e].length;m++) {
            null != z[e] && (l = !1)
          }
          l && z[e].splice(g, z[e].length)
        }
      }
      for(a = 0;a < A.length;a++) {
        if(A[a] == f) {
          A.splice(a, 1);
          break
        }
      }
    }
  }
  function q(a, b, c) {
    if(0 == a.length) {
      return 0
    }
    for(var e = 0;0 < a.length && 0 > b.data.calculatedStorage[4] && 0 > b.data.production[4];) {
      var f;
      f = a;
      for(var g = 0, h = null, l = 0, m = f.length;l < m;l++) {
        var n = f[l].getUnitAmount();
        n > g && (g = n, h = f[l])
      }
      f = h;
      if(null != f) {
        g = h = 0;
        do {
          h = n = m = 0;
          for(l = 1;10 >= l;l++) {
            var p = f.data.units[l];
            p > m ? (n = m, m = p, h = l) : p > n && (n = p)
          }
          l = f.nrToUnitId(h);
          l = Travian.Config.troopConfig[l];
          n = Math.min(m, m - n + 1);
          m = l.supply * Travian.Config.starvationCropMultiplier;
          p = Math.min(Math.ceil(-b.data.calculatedStorage[4] / m), Math.ceil(-b.data.production[4] / l.supply));
          n = Math.min(p, f.data.units[h], n);
          f.data.units[h] -= n;
          f.data.supplyTroops -= l.supply;
          g += n;
          b.data.calculatedStorage[4] += n * m;
          b.data.storage[4] += n * m;
          b.data.production[4] = parseInt(b.data.production[4], 10) + n * l.supply;
          h = f.getUnitAmount();
          "undefined" != typeof f.data.units[Troops.TYPE_HERO] && (h -= f.data.units[Troops.TYPE_HERO]);
          if(0 >= h) {
            for(l = 0;l < c.length;l++) {
              for(a = c[l].data, m = 0;m < a.length;m++) {
                "undefined" != typeof a[m] && a[m].serverId == f.serverId && delete a[m]
              }
            }
          }
        }while(0 > b.data.calculatedStorage[4] && 0 > b.data.production[4] && 0 < h);
        0 < g && f.callSubscribers();
        e += g
      }else {
        return 0
      }
    }
    return e
  }
  var p = {}, r = {}, s = {}, v = {}, u = {}, t = {}, z = {}, A = [], C = {"class":[Troops, Troops, Troops, Troops, TroopsMovementInfo], collections:[Troops.COLLECTION_STATIONARY, Troops.COLLECTION_ELSEWHERE, Troops.COLLECTION_MOVING, Troops.COLLECTION_TRAPPED, TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]}, D = {"class":[TroopsMovementInfo], collections:[TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE]}, y = null, B = null, H = {};
  b.o(function() {
    y = Cache.Ja(Village.getCollection, [Village.COLLECTION_ALLIANCE]);
    B = c.S();
    B.subscribe(g);
    y.subscribe(g);
    Travian.request("troops/getMarkers", {}, function(a) {
      H = a
    });
    Travian.request("village/getAllianceInformation", {}, function(a) {
      var b = {cache:[], operation:1}, c = [], e;
      for(e in a.villages) {
        var f = Cache.Ja(Village.get, [e]);
        f.data.villageId = e;
        f.data.playerId = a.villages[e];
        f.filled || c.push(f.serverId);
        b.cache.push({name:"Village:" + e, data:f.data})
      }
      y.set(b);
      for(a = 0;a < c.length;a++) {
        Cache.A(c[a])
      }
      g()
    }, null, !0)
  });
  a.$on("raidNotification", function(a, b) {
    for(var c = Cache.rb("Collection:FarmListEntry:"), e = 0;e < c.length;e++) {
      for(var f = 0;f < c[e].data.length;f++) {
        c[e].data[f].data.villageId == b.targetId && Cache.A(c[e].serverId)
      }
    }
  });
  a.$on("starveTroops", function(a, b) {
    var e = c.pa(b);
    if(null != e) {
      var f = null;
      if(!(0 <= e.data.calculatedStorage[4]) && 0 == Travian.Player.data.limitationFlags) {
        var g = Notifications.getCollection(Notifications.TYPE_TIMED);
        if(Cache.Tg(g.serverId)) {
          for(var h = 0;h < g.data.length;h++) {
            var l = g.data[h].data.type;
            if(l == Notifications.TIMER_STARVATION_DEACTIVATED || l == Notifications.GLOBAL_WORLD_ENDED || l == Notifications.TIMER_WORLD_PEACE || l == Notifications.TIMER_WORLD_PEACE_DISABLE_ONLY_STARVATION) {
              return
            }
          }
          for(h = !0;h && 0 > e.data.calculatedStorage[4];) {
            null == f && (f = I.B([e.data.villageId]));
            g = {};
            g[Troops.STATUS_HOME] = [];
            g[Troops.STATUS_SUPPORT + "own"] = [];
            g[Troops.STATUS_SUPPORT + "foreign"] = [];
            g[Troops.STATUS_TRANSIT] = [];
            g[Troops.STATUS_TRAP] = [];
            l = f.u();
            for(h = 0;h < l.length;h++) {
              var m = l[h];
              m.data.villageIdSupply == e.data.villageId && m.data.tribeId != Player.TRIBE.NATAR && m.data.tribeId != Player.TRIBE.NATURE && (m.data.status == Troops.STATUS_SUPPORT ? e.data.playerId == m.data.playerId ? g[Troops.STATUS_SUPPORT + "own"].push(m) : g[Troops.STATUS_SUPPORT + "foreign"].push(m) : g[m.data.status].push(m))
            }
            h = !1;
            h = q(g[Troops.STATUS_SUPPORT + "foreign"], e, f.Ra) || h;
            h = q(g[Troops.STATUS_SUPPORT + "own"], e, f.Ra) || h;
            h = q(g[Troops.STATUS_TRAP], e, f.Ra) || h;
            h = q(g[Troops.STATUS_HOME], e, f.Ra) || h;
            h = q(g[Troops.STATUS_TRANSIT], e, f.Ra) || h
          }
          null != f && f.destroy()
        }
      }
    }
  });
  var I = new function() {
    this.S = function() {
      return[]
    };
    this.B = function(a, b, c, e) {
      "all" === a && (a = null);
      "all" === b && (b = null);
      a = new n(a, b, c);
      for(var f in p) {
        for(var g in p[f]) {
          a.Ud(f, g, p[f][g])
        }
      }
      A.push(a);
      "undefined" != typeof e && e.$on("$destroy", a.destroy);
      a.Fe = !0;
      a.Ic();
      return a
    };
    this.sg = function(a) {
      return"undefined" != typeof H[a] ? H[a].marker : 0
    };
    this.Ah = function(a, b) {
      "undefined" != typeof H[a] ? H[a].marker = b : H[a] = {marker:b};
      Travian.writeRequest("troops/setMarker", {troopId:a, marker:b})
    }
  };
  return I
};
Travian.Service.TroopsService.$inject = ["$rootScope", "VillageService", "SessionService", "$timeout"];
Travian.Service.TutorialService = function(a, c, b, l, h, g, e, m) {
  function f(b, c, e) {
    e = h.get("tpl/mainlayout/partials/UIHint.html").replace("%REPLACE_WITH_INNER_TEMPLATE%", e);
    b = new wa(b, e, c, "UIHint", !0);
    g(b.F.contents())(a);
    return b
  }
  function n() {
    E = !1;
    if(0 <= Travian.Player.data.uiStatus || 0 <= u) {
      var e = Travian.Player.data.uiStatus, g;
      for(g in q) {
        var h = $(q[g]), l = Math.pow(2, g);
        if(e & l) {
          var m = {visibility:"visible", opacity:1, transition:"opacity 1s linear"};
          p[g] ? (h.show(), window.setTimeout(function() {
            h.css(m)
          }, 0)) : h.css(m)
        }else {
          p[g] && h.hide(), h.css({visibility:"hidden", opacity:0})
        }
      }
      u = e
    }
    if(0 < Travian.Player.data.hintStatus || 0 < t) {
      g = Travian.Player.data.hintStatus;
      var n = 0, l = 1;
      do {
        l = Math.pow(2, n), g & l && !(t & l) && (h = $(q[n]), C[n] = f(h, null, Travian.translate("UIHint_" + n))), !(g & l) && t & l && C[n].remove(), n++
      }while(l < g || l < t);
      t = g
    }
    if(!(1 > J.data.length)) {
      var G = c.getParam("page"), l = c.getParam("dialogId");
      g = c.getParam("window");
      var n = {}, da = {}, P = {}, ia = !1;
      B = {};
      I = {};
      for(e = 0;e < J.data.length;e++) {
        var K = J.data[e].data;
        if(K.status == Quest.STATUS_ACTIVATABLE || K.status == Quest.STATUS_DONE) {
          if("undefined" == typeof I[K.questGiver] || K.status == Quest.STATUS_DONE) {
            I[K.questGiver] = K.status
          }
        }
        if(Quest.isTutorial(K.id)) {
          "undefined" == typeof r[K.id] && (r[K.id] = {status:0, progress:0});
          K.status != Quest.STATUS_FINISHED && (990 > K.id && 101 != K.id && 102 != K.id) && (ia = !0);
          if(r[K.id].status == Quest.STATUS_FINISHED) {
            if(r[K.id].status == K.status) {
              continue
            }else {
              r[K.id].status = K.status
            }
          }
          if(r[K.id].status == Quest.STATUS_DONE) {
            var W = 0, aa;
            for(aa in K.rewards) {
              W++
            }
            "questDetails" != g && ("undefined" == typeof A[K.id] && 0 < W) && (A[K.id] = !0, a.openWindow("questDetails", {questId:K.id}))
          }
          if(r[K.id].status != K.status || r[K.id].progress != K.progress) {
            r[K.id].status = K.status, r[K.id].progress = K.progress, delete s[K.id], Ua.rc(K.id, [])
          }
          if("undefined" != typeof QuestCfg[K.id].getHintArrows) {
            var W = [], fa = QuestCfg[K.id].getHintArrows(K, c, v, b, G, g);
            if("undefined" != typeof fa.arrows) {
              for(var W = fa.arrows, ma = 0;ma < fa.hints.length;ma++) {
                n[fa.hints[ma].selector] = fa.hints[ma]
              }
              for(var ba in fa.npcTexts) {
                da[ba] = fa.npcTexts[ba]
              }
            }else {
              W = fa
            }
            "questDetails" == g && (W = []);
            0 < W.length ? P[K.id] = !0 : delete s[K.id];
            Ua.rc(K.id, W)
          }
        }
      }
      for(var Q in s) {
        "undefined" == typeof P[Q] && Ua.rc(Q, [])
      }
      s = P;
      if(ia) {
        $(".sendTroops .tabulation.maintab").css("display", "none");
        $("button.premium").addClass("disabled");
        W = [];
        aa = "village";
        Q = 0;
        for(var ca in B) {
          4 >= ca && (aa = "resources"), Q = !0
        }
        v.disableButton("#buildingQueueDetails .slot .cancel");
        if(G != aa) {
          if(Q) {
            e = Travian.Player.data.uiStatus;
            Q = !1;
            for(var ea in q) {
              if(q[ea] == ".navi_" + aa) {
                Q = Math.pow(2, ea) & e;
                break
              }
            }
            (0 > e || Q) && W.push($(".navi_" + aa))
          }
          "buildingUpgrade" == g && v.disableButton(".upgradeWrapper .upgrade")
        }
        ea = "";
        for(ca in B) {
          ea += ":not(.type_" + ca + ")", W.push($(".buildingStatusButton.type_" + ca + " .buildingBubble")), $(".buildingStatusButton.type_" + ca).css("visibility", "visible")
        }
        $(".buildingStatusButton" + ea).css("visibility", "hidden");
        if(g) {
          if("building" == g) {
            if(ea = $(".carousel .building > .active"), 0 !== ea.length) {
              G = !1;
              for(ca in B) {
                0 !== ea.find(".buildingType" + ca).length && (G = !0)
              }
              if(G) {
                v.enableButton("button.startConstruction"), W.push($("button.startConstruction"))
              }else {
                for(ca in B) {
                  W.push($(".carousel .buildingHuge.buildingType" + ca))
                }
                v.disableButton("button.startConstruction")
              }
            }else {
              for(ca in B) {
                W.push($(".carousel .buildingHuge.buildingType" + ca))
              }
              v.disableButton("button.startConstruction")
            }
          }
          if("buildingUpgrade" == g) {
            ea = "";
            for(ca in B) {
              ea += ":not(.type_" + ca + ")", W.push($(".upgradeWrapper.type_" + ca + " .upgrade")), v.enableButton(".upgradeWrapper.type_" + ca + " .upgrade")
            }
            v.disableButton(".upgradeWrapper" + ea + " .upgrade")
          }
        }else {
          if(G == aa) {
            for(ca in B) {
              -1 == B[ca] && W.push(v.getArrowToFreeLocation())
            }
          }
        }
        H && (W = []);
        Ua.rc(-1, W);
        z = !0
      }else {
        z && ($("button.premium").removeClass("disabled"), z = !1, $(".buildingStatusButton").css("visibility", "visible"))
      }
      for(var ga in n) {
        "undefined" == typeof D[ga] ? (ca = n[ga], D[ga] = f($(ga), ca.position, ca.text)) : D[ga].setPosition()
      }
      for(ga in D) {
        "undefined" == typeof n[ga] && (D[ga].remove(), delete D[ga])
      }
      for(ba in da) {
        "undefined" == typeof y[ba] && (h = $("#jsQuestButtonQuestbook"), v.showTextLine(h, "after", da[ba], ba), y[ba] = !0)
      }
      for(ba in y) {
        "undefined" == typeof da[ba] && (v.removeTextLine(), delete y[ba])
      }
      if(!g) {
        for(e = 0;e < N.data.length;e++) {
          if(ba = N.data[e].data, ba.marker = null, 0 < ba.questId || "undefined" != typeof I[ba.npcId]) {
            ga = null, ga = 0 < ba.dialog ? ba.questStatus : I[ba.npcId], null == ga || l || (ba.marker = "status" + ga)
          }
        }
      }
    }
  }
  var q = {0:".navi_resources", 1:".navi_map", 2:".navi_village", 3:null, 4:"#buildingQueue", 5:"#subNavigation .subButton.population", 6:"#subNavigation .subButton", 7:"#subNavigation .subButton.silver", 8:"#heroQuickInfo", 9:"#jsQuestButtonCommunities", 10:null, 11:"#jsQuestButtonStatistics", 12:"#chatFooterBar", 13:"#resourceBar", 14:null, 15:null, 16:".stockContainer.wood .production", 17:".stockContainer.clay .production", 18:".stockContainer.iron .production", 19:".stockContainer.crop .production", 
  20:"#map .zoomBar", 22:"#jsQuestButtonCommunityAttacks", 23:"#quickLinks", 24:"#map .infoMovements", 25:"#timedNotifications", 26:"#troopsStationed", 27:"#tileInformation", 28:"#jsQuestButtonQuestbook", 29:"#jsQuestButtonIgm", 30:"#jsQuestTreasureCount", 31:"#quickLinks, #villageList, #userArea>a:not(#logoutButton):not(#helpButton):not(#soundButton), .buildingQueue, #reportStream, .toggleChatMenu, #jsQuestButtonQuestbook .notificationCount, .heroStats .stat"}, p = {31:!0}, r = {}, s = {}, v = null, 
  u = -99, t = 0, z = !1, A = {}, C = {}, D = {}, y = {}, B = {}, H = !1, I = {}, G = !1, J = null, N = null, E = !1;
  e.o(function() {
    J = Quest.getCollection();
    N = QuestGiver.getCollection();
    c.O("mellonPopup");
    Travian.rootScope.$watch(function() {
      !1 === E && (E = setTimeout(n, 0))
    })
  });
  return new function() {
    v = this;
    this.init = w();
    var b = {};
    this.ensureDialog = function(a, e, f, g) {
      var h = c.getParam("window");
      if(null == h || 0 > h.indexOf("questDialog")) {
        for(h = 0;h < J.data.length;h++) {
          J.data[h].data.id == a.id && (a = J.data[h].data)
        }
        if(a.status < f || a.progress < g) {
          this.startDialog(0, a.id, e, 0), void 0 === b[a.id + "," + e] ? b[a.id + "," + e] = 1 : (Cache.t(J, 1), J = Quest.getCollection())
        }
      }
    };
    this.startDialog = function(b, c, e, f) {
      if(0 > c) {
        "undefined" != typeof I[b] && a.openWindow("questBook", {npcId:b})
      }else {
        if(Quest.isTutorial(c)) {
          for(var g = null, h = 0;h < J.data.length;h++) {
            var l = J.data[h].data;
            l.id == c && (g = l)
          }
          0 < e ? a.openWindow("questDialog", {questId:c, dialogId:e, lineNr:f}, {questObj:g}) : a.openWindow("questBook", {npcId:b})
        }else {
          a.openWindow("questBook", {npcId:b})
        }
      }
    };
    this.setRewardOpened = function(a) {
      A[a] = !0
    };
    var e = null;
    this.openInstantUpgrade = function() {
      var a = m.ba().getInstantUpgrade();
      console.log("Call with: " + a);
      a = m.ia(a, "instantUpgrade");
      c.m("mellonPopup", "instantUpgrade");
      a.open()
    };
    this.openActivationWindow = function() {
      if(!G) {
        if(G = !0, config.mellon.useMellon) {
          var a = m.ba().getActivation();
          m.ia(a).open()
        }else {
          window.open(config.portal + config.activation + "-" + (new Date).getTime(), "_blank")
        }
      }
    };
    this.removeTextLine = function() {
      null != e && (e.remove(), e = null)
    };
    this.showTextLine = w();
    this.addAllowedBuilding = function(a, b, c) {
      B[a] = b;
      H = c
    };
    this.disableButton = function(b) {
      b = $(b).not(".disabled");
      for(var c = 0;c < b.length;c++) {
        var e = $(b[c]);
        e.addClass("disabled");
        0 == e.find(".disabledOverlay").length && (e = g('<div class="disabledOverlay" tooltip tooltip-translate="Tutorial.Tooltip.ButtonDisabled">')(a), b[c].appendChild(e[0]))
      }
    };
    this.enableButton = function(a) {
      $(a).removeClass("disabled");
      $(a + " .disabledOverlay").remove()
    };
    var f = {};
    this.ensureVictoryScreen = function(b, e) {
      var g = c.getParam("window");
      if(null == g || 0 > g.indexOf("questVictory")) {
        if(void 0 !== f[b]) {
          if((new Date).getTime() < f[b] + 1E3) {
            return
          }
          Cache.t(J, 1);
          J = Quest.getCollection()
        }
        g = b;
        "undefined" != typeof e && !0 == e && (g += "_" + Travian.Player.data.tribeId);
        a.openWindow("questVictory", {questId:b}, {victoryScreenId:g})
      }
      f[b] = (new Date).getTime()
    };
    this.setActiveQuest = function(b) {
      for(var c = 0;c < J.data.length;c++) {
        var e = J.data[c];
        if(e.data.id == b) {
          a.activeQuest = e;
          return
        }
      }
      a.activeQuest = null
    };
    this.getArrowToFreeLocation = function() {
      for(var a = 29;40 > a;a++) {
        if(0 == $(".buildingStatusButton.location.location_" + a).length) {
          var b = $("#tutorialAnchor" + a);
          0 == b.length && (b = config.village.locationPos[a], b = $('<div id="tutorialAnchor' + a + '" style="position: absolute; top: ' + b.y + "px; " + getReadingDirectionFrom() + ": " + b.x + 'px">'), $("#villageView")[0].appendChild(b[0]), b = $("#tutorialAnchor" + a));
          return b
        }
      }
    }
  }
};
Travian.Service.TutorialService.$inject = "$rootScope RoutingService VillageService $timeout $templateCache $compile SessionService MellonService MapService".split(" ");
"use strict";
Travian.Service.VillageService = function(a, c, b, l, h, g) {
  function e(a) {
    0 == p[a.data.villageId] ? p[a.data.villageId] = 1 : (2 > Cache.Bb && (r = !0, v.callSubscribers(), r = !1), s = l("orderBy")(v.data, "data.name"))
  }
  function m(a) {
    for(var b = 0;b < v.data.length;b++) {
      if(v.data[b].data.villageId == a) {
        return v.data[b]
      }
    }
    return null
  }
  function f(a) {
    a = Number(a);
    var c = m(a);
    if(!c) {
      return!1
    }
    null == u && (u = Travian.tick.bind(function() {
      n.getResources()
    }));
    z = UnitQueue.get(a);
    null == t && (t = Travian.tick.bind(function() {
      z.checkUnits()
    }));
    n && n.data.villageId == a || (n.isActive = !1, c.isActive = !0, n = c, Travian.rootScope.$broadcast("activeVillageChanged", a), b.put("village", a));
    return!0
  }
  var n = new Village, q = !0, p = {}, r = !1, s = [], v = Cache.Ja(Village.getCollection, Village.COLLECTION_OWN);
  v.subscribe(function() {
    if(!r) {
      if(q && 0 < v.data.length) {
        q = !1;
        var a = c.getParam("villId");
        a || (a = b.get("village"), a || (a = v.data[0].data.villageId));
        f(a) || (a = v.data[0].data.villageId, f(a))
      }
      for(a = 0;a < v.data.length;a++) {
        var g = v.data[a].data.villageId;
        "undefined" == typeof p[g] && (p[g] = 0, v.data[a].subscribe(e))
      }
      s = l("orderBy")(v.data, "data.name")
    }
  });
  a.$on("urlChanged", function(a, b) {
    b.villId && f(b.villId)
  });
  a.$on("resetHeroItemsDailyUsage", function() {
    Hero.get(g.getPlayerId()).resetHeroItemsDailyUsage()
  });
  var u = null, t = null, z = null;
  return new function() {
    function a() {
      var f = {type:"kingdomsForVillages", villageIds:c};
      c = [];
      g = null;
      h.emit("kingdomService", f, function(a) {
        if(null != a) {
          for(var c = 0;c < a.length;c++) {
            b[a[c].villageId] = a[c].kingdomId
          }
          for(c = 0;c < e.length;c++) {
            e[c]()
          }
        }
      })
    }
    this.S = function() {
      return v
    };
    this.getActiveVillageId = function() {
      return n.data.villageId
    };
    this.i = function() {
      return n
    };
    this.ka = function(a) {
      return f(a)
    };
    this.pa = function(a) {
      return m(a)
    };
    this.Wb = function() {
      for(var a = Troops.getCollection(Troops.COLLECTION_STATIONARY, n.data.villageId), b = 0;b < a.data.length;b++) {
        var c = a.data[b];
        if(c.data.status == Troops.STATUS_HOME) {
          return c
        }
      }
    };
    this.me = function(a) {
      for(var b = 0;b < s.length;b++) {
        if(s[b].data.villageId == n.data.villageId) {
          return a = b + a, 0 > a && (a += s.length), a >= s.length && (a -= s.length), s[a].data.villageId
        }
      }
    };
    var b = {}, c = [], e = [], g = null;
    this.je = function(f, h) {
      if(void 0 === b[f]) {
        b[f] = !1, c.push(f), null === g && (g = window.setTimeout(a, 50))
      }else {
        if(!1 !== b[f]) {
          return b[f]
        }
      }
      void 0 !== h && e.push(h);
      return!1
    };
    this.gg = function(a, b) {
      var c = Building.getCollection(a), e = {}, f;
      for(f in Resources.ID) {
        var g = Resources.ID[f];
        if(!b || b[g]) {
          for(var h = e[g] = 0;h < c.data.length;h++) {
            c.data[h].data.buildingType == g && (e[g] += Math.round(c.data[h].data.currentEffect.values[0] * b[g] / 100))
          }
        }
      }
      return e
    };
    this.Zc = function(a, b) {
      var c = FarmList.getCollection(), e = c.subscribe(function() {
        for(var f = !1, g = 0;g < c.data.length;g++) {
          if(0 < c.data[g].data.villageIds.length && -1 < c.data[g].data.villageIds.indexOf("" + a)) {
            f = !0;
            break
          }
        }
        c.unsubscribe(e);
        b(f)
      })
    }
  }
};
Travian.Service.VillageService.$inject = "$rootScope RoutingService $cookieStore $filter SocketService SessionService".split(" ");
"use strict";
Travian.Service.WindowService = function(a, c, b, l) {
  function h() {
    var b = c.getParam("page");
    if(!b) {
      b = "village", c.m("page", "village")
    }else {
      if(b != a.page) {
        for(var f = 0;f < p.length;f++) {
          p[f](b, a.page)
        }
      }
    }
    a.page = b;
    f = c.getParam("window");
    b = [];
    null != f && (b = f.split(":"));
    for(f = 0;f < b.length;f++) {
      var g = b[f];
      if("undefined" == typeof a.windows[g]) {
        var h = {};
        "building" == g && (h.window = g, h.location = c.getParam("location"));
        e(g, h, null, !0)
      }
    }
    if(0 == b.length) {
      for(g in a.windows) {
        m(g)
      }
    }
  }
  function g() {
    var b = [], e;
    for(e in a.windows) {
      b.push(e)
    }
    0 < b.length ? c.m("window", b.join(":")) : c.O("window", !0)
  }
  function e(b, e, f, g) {
    var h = {};
    if(!g && 0 > $.inArray(b, q)) {
      for(var l in a.windows) {
        !0 !== a.windows[l].params.modalParams.unclosable && l != b && m(l)
      }
    }
    g = {};
    if("undefined" != typeof e && null != e) {
      var h = e, p;
      for(p in e) {
        c.m(p, e[p]), g[p] = !0
      }
    }
    if(f) {
      for(p in f) {
        h[p] = f[p]
      }
    }
    l = n["default"];
    "undefined" !== typeof n[b] && (l = n[b]);
    e = "tpl/mainlayout/modals/default.html";
    l.customTemplate && (e = "tpl/mainlayout/modals/" + l.customTemplate + ".html");
    h.modalParams = {};
    for(p in l) {
      h.modalParams[p] = "undefined" != typeof h[p] ? h[p] : l[p]
    }
    h.modalParams.windowName = b;
    p = "tpl/" + b + "/" + b + ".html";
    f && f.hasOwnProperty("windowName") && (b = f.windowName);
    a.windows[b] = {border:e, inner:p, name:b, params:h, parametersToRemove:g}
  }
  function m(b) {
    if(void 0 !== a.windows[b]) {
      for(var e in a.windows[b].parametersToRemove) {
        c.O(e)
      }
    }
    delete a.windows[b];
    b = Object.keys(a.windows);
    0 < b.length && a.$broadcast("makeWindowActive", b[b.length - 1])
  }
  var f = {additionalClass:"", closeable:!0, customTemplate:!1, modal:!1, noPosition:!1, setFocusWhenActive:!1, unclosable:!1, noLoadingSpinner:!1}, n = {"default":f, chat:$.extend({}, f, {customTemplate:"chat", unclosable:!0}), questDialog:$.extend({}, f, {customTemplate:"noLayout", noPosition:!0}), questDetails:$.extend({}, f, {customTemplate:"small"}), questPuzzle:$.extend({}, f, {customTemplate:"small"}), kingOrGovernor:$.extend({}, f, {customTemplate:"small"}), questDirectionSelection:$.extend({}, 
  f, {customTemplate:"small"}), enterMail:$.extend({}, f, {customTemplate:"small"}), farmListAdd:$.extend({}, f, {customTemplate:"small"}), selectTribe:$.extend({}, f, {customTemplate:"noLayout", closeable:!1, noPosition:!0, modal:!0}), sendTroops:$.extend({}, f, {customTemplate:"noTabulation", unclosable:!0}), startVillage:$.extend({}, f, {closeable:!1}), maintenance:$.extend({}, f, {closeable:!1}), notEnoughGold:$.extend({}, f, {customTemplate:"smallNoOverlay", modal:!0}), confirmGoldUsage:$.extend({}, 
  f, {customTemplate:"small", modal:!0, zIndex:5E3}), notEnoughSitterRights:$.extend({}, f, {customTemplate:"small", modal:!1}), infoPopup:$.extend({}, f, {customTemplate:"small", modal:!0}), logout:$.extend({}, f, {customTemplate:"small", modal:!0}), playerLocked:$.extend({}, f, {customTemplate:"modernWithOverlay", closeable:!0, noPosition:!1, modal:!0, unclosable:!0}), authError:$.extend({}, f, {customTemplate:"modern", closeable:!0, noPosition:!1, modal:!0, unclosable:!0}), questVictory:$.extend({}, 
  f, {customTemplate:"noLayout", closeable:!1, noPosition:!0}), screenFlashNotification:$.extend({}, f, {customTemplate:"noLayout", closeable:!1, noPosition:!0, unclosable:!0, noLoadingSpinner:!0}), worldEnded:$.extend({}, f, {customTemplate:"worldEnd"}), worldEndedModal:$.extend({}, f, {customTemplate:"simple", modal:!0}), welcomePackage:$.extend({}, f, {customTemplate:"noLayout", modal:!0, noPosition:!0}), achievementNotifications:$.extend({}, f, {customTemplate:"noLayout", modal:!0, noPosition:!0}), 
  reportConversation:$.extend({}, f, {customTemplate:"smallNoOverlay", modal:!0})};
  a.windows = {};
  var q = "buildingPopup npcTrader chat questDetails farmListAdd notEnoughGold confirmGoldUsage screenFlashNotification logout".split(" "), p = [];
  $().ready(function() {
    b.o(h)
  });
  a.$on("urlChanged", function() {
    b.te() && h()
  });
  a.openWindow = function(a, b, c, f) {
    e(a, b, c, f);
    g()
  };
  a.closeWindow = function(a, b) {
    l(function() {
      m(a);
      b || g()
    }, 10)
  };
  return new function() {
    this.Xg = function(b) {
      for(var c = !1, e = 0;e < p.length;e++) {
        p.toString() == b.toString() && (c = !0)
      }
      c || (p.push(b), b(a.page))
    };
    this.Za = function(b) {
      return"undefined" != typeof a.windows[b]
    }
  }
};
Travian.Service.WindowService.$inject = ["$rootScope", "RoutingService", "SessionService", "$timeout"];
Travian.ServiceArr = ["filters", "directives", "ngCookies"];
for(var Db in Travian.Service) {
  angular.module(Db, []).factory(Db, Travian.Service[Db]), Travian.ServiceArr.push(Db)
}
Travian.app = angular.module("t5", ["ngSanitize", "ngLocale", "ngRoute", "tmh.dynamicLocale"].concat(Travian.ServiceArr));
Travian.app.Zd = angular.module("directives", []);
Travian.app.filters = angular.module("filters", []);
for(var Eb in Travian.Filter) {
  Travian.app.filters.filter(Eb, Travian.Filter[Eb])
}
for(var Fb in Travian.Directive) {
  Travian.app.Zd.directive(Fb, Travian.Directive[Fb])
}
config.useTemplateCache && Travian.app.factory("$templateCache", ["$cacheFactory", "$http", "$injector", function(a, c, b) {
  var l = a("templates"), h = !1;
  return{get:function(a) {
    var e = l.get(a);
    if(e) {
      return e
    }
    h || (h = c.get(config.templates).then(function(a) {
      b.get("$compile")(a.data);
      return a
    }));
    return h.then(function(b) {
      return{status:b.status, headers:b.headers, data:l.get(a)}
    })
  }, put:function(a, b) {
    l.put(a, b)
  }}
}]);
Travian.app.config(["$routeProvider", function(a) {
  a.when("/:page/", {});
  a.when("/:page/:params", {})
}]);
Travian.app.config(["$controllerProvider", function(a) {
  "function" === typeof a.allowGlobals && a.allowGlobals()
}]);
Travian.app.config(["tmhDynamicLocaleProvider", function(a) {
  "undefined" != typeof config.live && config.live && ($.ajaxSetup({cache:!0}), a.localeLocationPattern(Travian.Config.cdnPrefix + "lang/{{locale}}.js?v=" + Travian.Config.apiVersion))
}]);
Travian.app.config(["$compileProvider", function(a) {
  "undefined" != typeof config.live && config.live && a.debugInfoEnabled(!1)
}]);
Travian.app.run(["$rootScope", "$cookies", "GlobalStateService", "RoutingService", "SessionService", "$http", "$location", "WindowService", "TutorialService", "NotificationService", "ChatService", "MellonService", "AudioService", "TrackingService", "tmhDynamicLocale", function(a, c, b, l, h, g, e, m, f, n, q, p, r, s, v) {
  function u() {
    1 > $(".ingameContentContainer").length ? window.setTimeout(u, 100) : U.Je($(".ingameContentContainer")[0], function(b, c) {
      if(!U.Sb && Travian.Player.isOnMap()) {
        var e = 0;
        for(k in a.windows) {
          a.windows.hasOwnProperty(k) && e++
        }
        0 < e || (new Date).getTime() < A + 500 || (e = l.getParam("page"), 1 > c ? "village" == e ? (r.U(Ba), a.openPage("resources")) : "resources" == e && (r.U(Ba), a.openPage("map")) : "resources" == e && (a.openPage("village"), r.U(Ca)))
      }
    })
  }
  function t() {
    function a(b, c, e) {
      for(var f = 0;f < c.length;f++) {
        var g = c[f];
        e < g ? ($("body").addClass("smallerThan" + b + g), $("html").addClass("smallerThan" + b + g)) : ($("body").removeClass("smallerThan" + b + g), $("html").removeClass("smallerThan" + b + g));
        e >= g && (f == c.length - 1 || e < c[f + 1]) ? $("body").addClass(b.toLowerCase() + g) : $("body").removeClass(b.toLowerCase() + g)
      }
    }
    var b = $(window).width(), c = $(window).height();
    a("Width", [850, 1E3, 1050, 1150, 1280, 1350, 1400], b);
    a("Height", [750], c);
    U.Sb = 750 >= c || 1E3 >= b ? !0 : !1
  }
  a.gameWorld = config.gameWorld;
  a.timeToCheckApiVersion = Date.now();
  Travian.gf = v;
  Travian.tick = new function() {
    var a = {};
    (function B() {
      window.setTimeout(B, 100);
      var b = {}, c;
      for(c in a) {
        a.hasOwnProperty(c) && "function" === typeof a[c] && (a[c](), b[c] = a[c])
      }
      a = b
    })();
    return{bind:function(b, c) {
      "function" === typeof b && (c = b, b = na("tick"));
      c();
      a[b] = c;
      return b
    }, unbind:function(b) {
      a[b] = null
    }}
  };
  Travian.translate = function(a, b) {
    if("undefined" != typeof Travian.txt[a]) {
      if(b) {
        var c = Travian.txt[a];
        for(a in b) {
          c = c.replace("{{" + a + "}}", b[a])
        }
        return c
      }
      return bbCodeParser(Travian.txt[a], !0)
    }
    return"!!" + a + "!!"
  };
  Travian.pendingRequests = new function() {
    function b() {
      e = (new Date).getTime();
      0 !== c && c--;
      0 === c && $(".pendingAjaxRequest").hide();
      a.$broadcast("ajaxPendingRequestsChanged")
    }
    var c = 0, e = 0, f = -1;
    Travian.tick.bind(function() {
      e + 1E3 < (new Date).getTime() && 0 !== c && b();
      0 === c && f != c && $(".pendingAjaxRequest").hide();
      f = c
    });
    return{ajaxStart:function() {
      e = (new Date).getTime();
      $(".pendingAjaxRequest").show();
      c++;
      a.$broadcast("ajaxPendingRequestsChanged")
    }, ajaxStop:function() {
      b()
    }, Jf:function() {
      return 0 < c
    }}
  };
  Travian.request = function(c, e, f, l, m) {
    c = c.split("/");
    var p = c[0], q = c[1], r = 0;
    if("undefined" === typeof e || null === e) {
      e = {}
    }
    a.timeToCheckApiVersion + 1E3 * config.checkApiVersionInterval <= Date.now() && (e.sendAPIVersion = !0, a.timeToCheckApiVersion = Date.now());
    r = (new Date).getTime();
    g.post(getServerUrl("devPHP") + "?c=" + p + "&a=" + q + "&t" + r, getQuery(p, q, e, h.ac())).success(function(c, e, g) {
      void 0 !== g()["api-version"] && g()["api-version"] !== String(a.config.balancing.apiVersion) && n.Qa(Travian.translate("Error.apiIsOutDated"), "error");
      g = (new Date).getTime() - r;
      m && b.Wc(c, g);
      "function" == typeof f && (e = f(c.response), "undefined" != typeof e && (null != e && "object" == typeof e) && (c = e));
      if("undefined" != typeof c.performance) {
        e = c.performance;
        var h = console.log;
        "undefined" != typeof console.info && (h = function(a) {
          console.info(a)
        });
        var l = {select:{count:0, sum:0}, insert:{count:0, sum:0}, update:{count:0, sum:0}, "delete":{count:0, sum:0}};
        "undefined" != typeof e.sql.select && (l.select.count = e.sql.select.count, l.select.sum = e.sql.select.sum);
        "undefined" != typeof e.sql.insert && (l.insert.count = e.sql.insert.count, l.insert.sum = e.sql.insert.sum);
        "undefined" != typeof e.sql.update && (l.update.count = e.sql.update.count, l.update.sum = e.sql.update.sum);
        "undefined" != typeof e.sql["delete"] && (l["delete"].count = e.sql["delete"].count, l["delete"].sum = e.sql["delete"].sum);
        var s = "Request " + p + "/" + q + "\n", s = s + (" Total Time: " + g + "ms, Backend: " + e.global.total.sum + "ms MaxMemory: " + bytesToSize(e.global.total.memory_peak, 2) + "\n"), s = s + (" SQL: " + e.sql.total.count + " Querys - " + e.sql.total.sum + "ms total"), s = s + (" (" + l.select.count + "/" + l.insert.count + "/" + l.update.count + "/" + l["delete"].count + ")"), s = s + (" - (" + l.select.sum + "ms/" + l.insert.sum + "ms/" + l.update.sum + "ms/" + l["delete"].sum + "ms)\n"), 
        s = s + (" Redis: " + e.redis.total.count + " Querys - " + e.redis.total.sum + "ms total\n"), s = s + (" Mongo: " + e.mongo.total.count + " Querys - " + e.mongo.total.sum + "ms total\n");
        h(s);
        h(e)
      }
      "undefined" != typeof c.requestId && Travian.request("login/reportPerformance", {requestId:c.requestId, duration:g});
      m || b.Wc(c, g);
      if("undefined" !== typeof c.response && "undefined" !== typeof c.response.errors) {
        for(g = 0;g < c.response.errors.length;g++) {
          h = c.response.errors[g];
          e = "";
          if("undefined" !== typeof h.params) {
            for(g in h.params) {
              e = e + " " + g + ": " + h.params[g]
            }
          }
          n.Qa(h.message + " " + e, "error")
        }
      }
      Travian.pendingRequests.ajaxStop()
    }).error(function() {
      Travian.pendingRequests.ajaxStop();
      "function" == typeof l && l()
    });
    Travian.pendingRequests.ajaxStart()
  };
  var z = !1;
  Travian.writeRequest = function(a, b, c, e) {
    if(z) {
      return!1
    }
    z = !0;
    Travian.request(a, b, function(a) {
      "function" == typeof c && c(a);
      requestAngularApply(function() {
        z = !1
      })
    }, function() {
      z = !1
    }, e);
    return!0
  };
  a.config = config;
  a.config.balancing = Travian.Config;
  Travian.rootScope = a;
  h.Mg();
  var A = 0;
  a.openPage = function(a, b, c) {
    A = (new Date).getTime();
    l.m("page", a);
    "undefined" != typeof b && "undefined" != typeof c && l.m(b, c);
    if("object" == typeof b) {
      for(var e in b) {
        l.m(e, b[e])
      }
    }
  };
  a.saveRoute = l.Pe;
  a.loadRoute = l.Be;
  a.goldCost = Travian.Config.goldConfig;
  U.Kg();
  Travian.Player = h.l();
  a.player = Travian.Player;
  c = getUrlVar("token");
  null == Travian.Player && null != c ? Travian.request("login/loginWithToken", {token:c}, function(a) {
    "undefined" != typeof a.errors ? ($scope.error = a.errors[0].message, delete a.errors) : a.success && (a = window.location.href, -1 != window.location.href.indexOf("?") && (a = window.location.href.slice(0, window.location.href.indexOf("?"))), window.location.href = a)
  }) : null == Travian.Player && (null == c && "live" == config.SERVER_ENV) && (window.location.href = "" == config.portalLogout ? config.portal : config.portal + config.portalLogout + "-" + (new Date).getTime());
  c = navigator.userAgent;
  e = navigator.appName;
  var C;
  m = c.match(/(opera|chrome|safari|firefox|msie|trident)\/?\s*([\d\.]+)/i) || [];
  (m = m[2] ? [m[1], m[2]] : [e, navigator.appVersion, "-?"]) && null != (C = c.match(/version\/([\.\d]+)/i)) && (m[2] = C[1]);
  0 < m[1].indexOf(".") && (m[1] = m[1].substr(0, m[1].indexOf(".")));
  $("html").addClass(m[0]);
  $("html").addClass(m[0] + m[1]);
  a.$on("login", u);
  a.$on("bookPaymentProduct", function(a, b) {
    window.optimizely = window.optimizely || [];
    window.optimizely.push(["trackEvent", "purchases", {revenue:b}])
  });
  $(window).on("resize", t);
  t();
  window.keyboard = new pa
}]);



/**
 * @constructor
 * @param {Object} modelClass
 */
;window['AbstractCollection'] = function AbstractCollection (modelClass) {
	this.parent = this;
	this.cacheService = Cache;
	this.modelClass = modelClass;
	this.data = [];
	// Used to save serials for each oparation corresponding to collection entries
	this.operationSerials = {};
	this.lastRemovedEntries = [];

	this.set = function (data, recursive, serialNo) {
		var myself = this;
		var myClass = {};
		// Was this a valid className?
		if (typeof(window[this.modelClass]) != 'undefined') {
			myClass = window[this.modelClass];
		}
		myself.lastRemovedEntries = [];

		// Adds new entries to this collection
		var addEntries = function (entries, serialNo, dontUpdateSerials) {
			for (var i = 0; i < entries.length; i++) {
				// Check if this object is already in the list
				var newId = entries[i].serverId;
				if (myself.operationSerials[newId] && myself.operationSerials[newId] > serialNo) {
					continue;
				}
				if (!dontUpdateSerials) {
					myself.operationSerials[newId] = serialNo;
				}
				var found = false;
				for (var j = 0; j < myself.data.length; j++) {
					if (myself.data[j].serverId == newId) {
						found = true;
						break;
					}
				}
				if (!found) {
					myself.data.push(entries[i]);
				}
			}
		};

		// Removes specified entries from this collection
		var removeEntries = function (entries, serialNo) {
			for (var i = 0; i < entries.length; i++) {
				// Get the object for this entry
				var obj = myself.cacheService.c[entries[i].name];
				if (!obj || (myself.operationSerials[obj.serverId] && myself.operationSerials[obj.serverId] > serialNo)) {
					continue;
				}
				// Search it in this collection
				for (var j = 0; j < myself.data.length; j++) {
					if (myself.data[j] == obj) {
						// Remove it from the collection (don't delete it!)
						myself.data.splice(j, 1);
						myself.operationSerials[obj.serverId] = serialNo;
						myself.lastRemovedEntries.push(obj);
						break;
					}
				}
			}
		};

		// Loops over the whole collection and removes all entries
		var resetCollection = function (entries, serialNo) {
			for (var i = 0; i < entries.length; i++) {
				if (!myself.operationSerials[entries[i].serverId] || myself.operationSerials[entries[i].serverId] <= serialNo || typeof(serialNo) == 'undefined') {
					if (typeof(serialNo) != 'undefined') {
						myself.operationSerials[entries[i].serverId] = serialNo;
					}
					// Remove it from the collection (don't delete it!)
					myself.data.splice(i--, 1);
				}
			}
		};

		// REPLACE
		if (data.operation == 1) {
			resetCollection(this.data, serialNo);
			var newObjects = this.cacheService.fill(data, serialNo);
			addEntries(newObjects, serialNo);
		} else {
			// Every other operation is invalid until we have the initial data for this collection
			if ((!this.filled) && (myClass.preventUpdateWithoutFirstFill)) {
				return "retry";
			}
		}


		// ADD
		if (data.operation == 2) {
			// Do a REPLACE-OR-ADD instead. Slower, but safer. We had a problem where the user received the same adventure twice. Once via normal collection get and once via push.
			data.operation = 5;
			/*
			 var newObjects = this.cacheService.fill(data);
			 for ( var i = 0; i < newObjects.length; i++ )
			 {
			 this.data.push(newObjects[i]);
			 }*/
		}
		// REMOVE
		if (data.operation == 3) {
			// We don't delete objects in the cache. We only remove it from the collection (objects might be used somewhere else)
			removeEntries(data.cache, serialNo);
		}
		// INNER UPDATE
		if (data.operation == 4) {
			var newObjects = this.cacheService.fill(data, serialNo);
		}
		// ADD OR REPLACE
		if (data.operation == 5) {
			var newObjects = this.cacheService.fill(data, serialNo);
			addEntries(newObjects, serialNo);
			// Does this class wants to do something special with the new elements
			if (typeof(myClass.collectionUpdatedFct) == 'function') {
				myClass.collectionUpdatedFct(newObjects);
			}
		}
		if (typeof(myClass.collectionSortFct) == 'function') {
			this.data.sort(myClass.collectionSortFct);
		}
		fillSubcollection(this);
	};

	var subCollections = [];

	function fillSubcollection (myself) {
		for (var i = 0; i < subCollections.length; i++) {
			subCollections[i].data = [];
			for (var j = 0; j < myself.data.length; j++) {
				if (subCollections[i].cmpFct(myself.data[j])) {
					subCollections[i].data.push(myself.data[j]);
				}
			}
			subCollections[i].callSubscribers();
		}
	}

	/**
	 * Will return an object that will contain only a subset of data.
	 * You have to pass a filtering function.
	 * This function will be called with every data object and it is required to return a boolean value.
	 * You may call subscribe() on the returned object just like on a normal cache object.
	 * Once you call unsubscribe(), this object will be destroyed!
	 * @param cmpFct function
	 * @returns {AbstractCollection}
	 */
	this.getSubCollection = function (cmpFct) {
		var parentObj = this;
		var newObj = new AbstractCollection();
		subCollections.push(newObj);
		newObj.subscribe = parentObj.subscribe;
		newObj.unsubscribe = function () {
			parentObj.unsubscribe();
			subCollections.splice(subCollections.indexOf(newObj), 1);
		};
		newObj.cmpFct = cmpFct;
		newObj.filled = true;
		fillSubcollection(parentObj);
		return newObj;
	};
}
Cache.register(AbstractCollection, 'Collection:');
Cache.collectionModel = AbstractCollection;
/**
 * @constructor
 * @param {Object} data
 */
;window['AbstractModel'] = function AbstractModel (data) {
	this.name = 'abstract';

	/**
	 * @returns {Object}
	 */
	this.get = function () {
		return this.data;
	};

	/**
	 * @param {String} field
	 * @returns {Number|String|Object|Array}
	 */
	this.getField = function (field) {
		return this.data[field];
	};

	/**
	 * @param {String} data
	 * @returns {void}
	 */
	this.set = function (data, recursive) {
		if (typeof recursive === 'undefined') {
			var recursive = true;
		}

		// merge objects recursively
		if (recursive) {
			$.extend(recursive, this.data, data);
		} else {
			this.data = data;
		}
		// Cast everything that seems to be an number to a number 
		for (var key in this.data) {
			var checkVal = Number(this.data[key]);
			if ("" + checkVal === this.data[key]) {
				this.data[key] = checkVal;
			}
		}
	};

	this.parent = this;
}/**
 * Achievement Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Achievement'] = function Achievement () {
	this.defaultData = {
		'id': 0,
		'playerId': 0,
		'type': 0,
		'level': 0,
		'special': false,
		'extraData': null,
		'langKeySuffix': '' // some achievements use different language keys depending on specific conditions (see set())
	};

	this.set = function(data){
		if(data['extraData']) {
			data['extraData'] = JSON.parse(data['extraData']);
		}
		if(data['type'] == Achievement.TYPE_FINISHED_A_GAMEWORLD && data['extraData'] && data['extraData']['allianceName']) {
			data['langKeySuffix'] = '_hasAlliance';
		}
		this.parent.set.call(this, data);
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'Achievement';
}

Achievement.TYPE_FINISHED_A_GAMEWORLD = 63;

Achievement.prototype = new AbstractModel();
Cache.register(Achievement);
/**
 * Alliance Model
 *
 * @constructor
 * @extends {AbstractModel}
 */
;window['Alliance'] = function Alliance (allianceId) {
	this.defaultData = {
		'allianceId': 0,
		'tag': null,
		'name': null,
		'description': {
			'column1': '',
			'column2': '',
			'internalInfos1': '',
			'internalInfos2': ''
		},
		'members': [],
		'diplomacy': {
			'treaties': [],
			'ownOffers': [],
			'foreignOffers': []
		},
		'forumLink': null
	};

	this.data = {};

	this.sortMembers = function (a, b) {
		if (parseInt(a['population']) > parseInt(b['population'])) {
			return -1;
		}
		if (parseInt(a['population']) < parseInt(b['population'])) {
			return 1;
		}
		return 0;
	};

	this.set = function (data) {
		data.members.sort(this.sortMembers);
		this.parent.set.call(this, data, false);
	};

	this.set(this.defaultData);

	this.name = 'Alliance';

	var that = this;

	/**
	 * @param id
	 * @returns {
	 *     rightConst: bool,
	 *     rightConst: bool,
	 *     ...
	 * }
	 */
	this.getPlayerRights = function (id) {
		for (var i = 0; i < this.data['members'].length; i++) {
			if (this.data['members'][i]['playerId'] == id) {
				return this.data['members'][i]['allianceRights'];
			}
		}
	};

	/**
	 * Get offered rights for a member of alliance
	 * @param id
	 */
	this.getOfferdRightsByPlayerId = function (id) {
		for (var i = 0; i < this.data['members'].length; i++) {
			if (this.data['members'][i]['playerId'] == id) {
				return this.data['members'][i]['offeredRights'];
			}
		}

	};

	/**
	 * Returns a object of two lists of alliance IDs.
	 * A list of friendly (has a NAP or BND with) and a list of war
	 */
	this.getTreaties = function () {
		var treaties = {
			0: {},
			1: {},
			2: {}
		};
		for (var i = 0; i < that.data['diplomacy']['treaties'].length; i++) {
			var t = that.data['diplomacy']['treaties'][i];
			treaties[t['type']][t['otherAllianceId']] = true;
		}
		return treaties;
	};

	this.hasTreatyWith = function (otherAllianceId, treatyType) {
		if (!treatyType) {
			treatyType = Alliance.BND;
		}
		return this.getTreaties()[treatyType][otherAllianceId] === true;
	};

	/**
	 * Saves the alliance internal stats: top10Attacker, Defender, Climber
	 * @param data
	 */
	this.setStats = function (data) {
		this['stats'] = data;
	};
}

Alliance.memberHasRight = function (member, right) {
	if (typeof(member) == 'undefined' || member == null || typeof(member['allianceRights']) == 'undefined') {
		return false;
	}
	return ((member['allianceRights'] & right) == right);
};

Alliance.RIGHT_NONE = 0;
Alliance.RIGHT_GRANT = 1;
Alliance.RIGHT_KICK = 2;
Alliance.RIGHT_EDIT_PROFILE = 4;
Alliance.RIGHT_INVITE = 8;
Alliance.RIGHT_DIPLOMACY = 32;
Alliance.RIGHT_KING_CHAT = 64;
Alliance.RIGHT_KING_REPORTS = 128;
Alliance.RIGHT_FLAGS = 256;
Alliance.RIGHT_VILLAGE_INFO_CROP = 512;
Alliance.RIGHT_VILLAGE_INFO_TROOPS = 1024;
Alliance.RIGHT_FOUNDER = 2047; //2047=has all other Rights

Alliance.NAP = 0;
Alliance.BND = 1;
Alliance.WAR = 2;

Alliance.ROLE_GOVERNOR = 0;
Alliance.ROLE_DUKE = 704;
Alliance.ROLE_KING = 1728;
Alliance.ROLE_TRUSTEE = 2020;
Alliance.ROLE_LEADER = 2047;

Alliance.ROLE_STRING = {
	0: 'governor',
	704: 'duke',
	1728: 'king',
	2020: 'trustee',
	2047: 'leader'
};

Alliance.prototype = new AbstractModel();
Cache.register(Alliance);
;window['AllianceFightvalues'] = function AllianceFightvalues ($statsId) {
	this.defaultData = {
		'statsId' : 0,
		'allianceId': 0,
		'type': 0,
		'd1': 0,
		'd2': 0,
		'd3': 0,
		'd4': 0,
		'd5': 0,
		'd6': 0,
		'd7': 0
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'allianceFightValues';
}

AllianceFightvalues.TYPE_OFF_STRENGTH = 1;
AllianceFightvalues.TYPE_DEF_STRENGTH = 2;
AllianceFightvalues.TYPE_OFF_POINTS = 3;
AllianceFightvalues.TYPE_DEF_POINTS = 4;

AllianceFightvalues.prototype = new AbstractModel();
Cache.register(AllianceFightvalues);
/**
 * @constructor
 * @extends {AbstractModel}
 */
;window['AllianceMemberlist'] = function AllianceMemberlist () {
	this.defaultData = {
		'id': 0,
		'members': []
	};

	this.data = {};
	this.set(this.defaultData);
	this.set = function (data) {
		PlayerAllianceMapper.removeMemberships(this.data['members']);
		this.parent.set.call(this, data, false);
		PlayerAllianceMapper.setMemberships(data.id, angular.copy(this.data['members']));
	};

	this.name = 'AllianceMemberlist';
}
AllianceMemberlist.prototype = new AbstractModel();
Cache.register(AllianceMemberlist);
/**
 * AllianceReports Model
 *
 * @constructor
 * @extends {AbstractModel}
 */
;window['AllianceReports'] = function AllianceReports () {
	this.defaultData = {
		'reportsAttacker': [],
		'reportsAttackerMajor': [],
		'reportsDefender': []
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'AllianceReports';
}

AllianceReports.prototype = new AbstractModel();
Cache.register(AllianceReports);
;window['Auction'] = function Auction () {
	this.defaultData = {
		'id': 0,
		'tribeId': 0,
		'itemTypeId': 0,
		'strength': 0,
		'bonuses': {},
		'amount': 0,
		'status': 0,
		'timeStart': 0,
		'timeEnd': 0,
		'price': 0,
		'bids': 0,
		'highestBid': 0,
		'highestBidderPlayerId': 0,
		'highestBidderName': '',
		'slot': 0,
		'images': [],
		'stackable': false
	};

	this.data = {};
	this.set = function (data) {
		if (data['stackable']) {
			data['pricePerItem'] = Math.round((data['price'] / data['amount']) * 100) / 100;
		}
		this.parent.set.call(this, data);
	};
	this.set(this.defaultData);
	this.name = 'Auction';
}

Auction.prototype = new AbstractModel();
Cache.register(Auction);

Auction.STATUS_RUNNING = 1;
Auction.STATUS_FINISHED = 2;
Auction.STATUS_CANCELED = 3;

/**
 * Only needed for translations. Every translation will be parsed here.
 *
 * simple bbCode Parser. Contains:
 * bold,
 * italic,
 * underline,
 * list (simple listPoints without any ul- or ol-container)
 * breaks (newLine)
 *
 * When we need a more complex structure look here maybe it is a solution
 * https://github.com/patorjk/Extendible-BBCode-Parser
 *
 * @param src {string}
 * @param dontEscape {bool}
 * @returns {string}
 */
;window['bbCodeParser'] = function bbCodeParser (src, dontEscape) {
	function escape (html, encode) {
		if (dontEscape) {
			return html;
		}
		return html
			.replace(!encode ? /&(?!#?\w+;)/g : /&/g, '&amp;')
			.replace(/</g, '&lt;')
			.replace(/>/g, '&gt;')
			.replace(/"/g, '&quot;')
			.replace(/'/g, '&#39;');
	}

	var bbCode = {
		br: /^\[br]/,
		strong: /^\[b]([\s\S]+?)\[\/b]/,
		//em: /^\[i]([\s\S]+?)\[\/i]/,
		//underline: /^\[u]([\s\S]+?)\[\/u]/,
		list: /^\[list]([\s\S]+?)\[\/list]/,
		text: /^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/
	};

	this.rules = bbCode;
	this.renderer = this.renderer || new BBCodeRenderer;

	this.output = function (src) {
		var out = '', cap;

		while (src) {
			// strong
			if (cap = this.rules.strong.exec(src)) {
				src = src.substring(cap[0].length);
				out += this.renderer.strong(this.output(cap[2] || cap[1]));
				continue;
			}

			/*
			 until now not needed

			 // em
			 if (cap = this.rules.em.exec(src)) {
			 src = src.substring(cap[0].length);
			 out += this.renderer.em(this.output(cap[2] || cap[1]));
			 continue;
			 }

			 // underline
			 if (cap = this.rules.underline.exec(src)) {
			 src = src.substring(cap[0].length);
			 out += this.renderer.underline(this.output(cap[2] || cap[1]));
			 continue;
			 }
			 */

			// list
			if (cap = this.rules.list.exec(src)) {
				src = src.substring(cap[0].length);
				out += this.renderer.list(this.output(cap[2] || cap[1]));
				continue;
			}

			// br
			if (cap = this.rules.br.exec(src)) {
				src = src.substring(cap[0].length);
				out += this.renderer.br();
				continue;
			}

			// text
			if (cap = this.rules.text.exec(src)) {
				src = src.substring(cap[0].length);
				out += escape(cap[0]);
				continue;
			}

			if (src) {
				throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));
			}
		}
		return out;
	};

	return this.output(src);
}

function BBCodeRenderer () {
}

BBCodeRenderer.prototype.strong = function (text) {
	return '<strong>' + text + '</strong>';
};

BBCodeRenderer.prototype.em = function (text) {
	return '<em>' + text + '</em>';
};

BBCodeRenderer.prototype.underline = function (text) {
	return '<u>' + text + '</u>';
};

BBCodeRenderer.prototype.list = function (text) {
	return '<li>' + text + '</li>';
};

BBCodeRenderer.prototype.br = function () {
	return '<br>';
};;window['Bid'] = function Bid () {
	this.defaultData = {
		'id': 0,
		'playerId': 0,
		'auctionId': 0,
		'maxBid': 0,
		'time': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'Bid';
}

Bid.prototype = new AbstractModel();
Cache.register(Bid);

/**
 * @constructor
 * @extends {AbstractModel}
 * @param villageId
 * @param locationId
 * @param {Object} [data]
 * @param {VillageService} VillageService
 */
;window['Building'] = function Building (villageId, locationId, data, VillageService) {
	this.data = {
		'buildingType': null,
		'villageId': null,
		'locationId': null,
		'lvl': null,
		'lvlMax': null,
		'lvlNext': null,
		'upgradeCosts': {},
		'nextUpgradeCosts': [],
		'upgradeTime': null,
		'nextUpgradeTimes': [],
		'upgradeSupplyUsage': null,
		'upgradeSupplyUsageSums': [],
		'rubble': {},
		'rubbleDismantleTime': null,
		'effect': [],
		'currentEffect': null,
		'inQueueEffects': [],
		'nextEffect': null
	};

	var that = this;

	this.name = 'Building';
	this.queue = null;
	this.isActive = false;

	this.data.villageId = villageId;
	this.data.locationId = locationId;

	this.isResourceField = function () {
		return (this.data['locationId'] <= 18);
	};

	/**
	 * @param {Object} storage
	 * @returns {Boolean}
	 */
	function hasEnoughResources (storage) {
		for (var resType in storage) {
			if (storage[resType] < that.data['upgradeCosts'][resType]) {
				return false;
			}
		}
		return true;
	}

	/**
	 * Checks if a building type is a wall
	 * @returns {boolean}
	 */
	this.isWall = function() {
		return Building.isWall(this.data['buildingType']);
	};

	/**
	 * Checks if a building is the wonder of the world
	 * @returns {boolean}
	 */
	this.isWorldWonder = function() {
		return (this.data['buildingType'] == Building.TYPE.WONDER_OF_WORLD);
	};

	/**
	 * Check if there are sufficient resources by using the npc trader
	 * @param storage
	 * @param capacity
	 * @param levelOffset
	 * @returns {boolean}
	 */
	this.hasEnoughResourcesUsingNpcTrader = function (storage, capacity, levelOffset) {
		var combinedCosts = 0;
		var combinedStorage = 0;
		var level = that.data['lvl'] + (levelOffset || 0);
		if (!that.data['nextUpgradeCosts'][level]) {
			return false;
		}
		var costs = that.data['nextUpgradeCosts'][level]
		for (var resType in storage) {
			if (costs[resType] > capacity[resType]) {
				return false;
			}
			combinedCosts += that.data['upgradeCosts'][resType];
			combinedStorage += storage[resType];
		}
		return combinedCosts <= combinedStorage;
	};

	/**
	 * Check if there are sufficient capacity for upgrading
	 * @param storage
	 * @param capacity
	 * @returns {boolean}
	 */
	this.hasCapacityForUpgrading = function (storage, capacity) {
		for (var resType in storage) {
			if (that.data['upgradeCosts'][resType] > capacity[resType]) {
				return false;
			}
		}
		return true;
	};

	/**
	 * Checks if maximum buildings level has been reached
	 * @returns {Boolean}
	 */
	this.hasReachedMaxLvl = function () {
		return !(this.data['lvlNext'] <= this.data['lvlMax']);
	};

	this.setQueue = function (queueData) {
		this.queue = queueData;
		this.calculateEffect();
	};

	function getEffectViewModel (data, additionalLevel) {
		var i = additionalLevel;
		var effect = {
			'level': Number(data['lvl']) + Number(i),
			'values': [
				data['effect'][i]
			]
		};
		// If the effect is an array of values
		if ($.isArray(effect['values'][0])) {
			effect['values'][1] = effect['values'][0][1];
			effect['values'][0] = effect['values'][0][0];
		}
		// there is currently only one effect per building
		effect['values'].splice(1, 1);
		return effect;
	}

	this.getRubbleResourcesSum = function() {
		var sum = 0;
		angular.forEach(this.data.rubble, function(value) {
			sum += parseInt(value, 10);
		});
		return sum;
	};

	this.calculateEffect = function () {
		this.data['inQueueEffects'] = [];
		this.data['nextEffect'] = null;
		var additionalLevel = 0;
		var inConstruction = false;

		if (typeof(this.data['effect']) != "undefined") {
			this.data['currentEffect'] = getEffectViewModel(this.data, 0);

			if (this.queue != null && this.queue.length > 0) {
				for (var i = 0; i < this.queue.length; i++) {
					if (this.queue[i]['locationId'] == this.data['locationId']) {
						if (this.queue[i]['queueType'] == BuildingQueue.TYPE_VILLAGE
							|| this.queue[i]['queueType'] == BuildingQueue.TYPE_RESOURCES
							|| this.queue[i]['queueType'] == BuildingQueue.TYPE_MASTER_BUILDER) {
							additionalLevel++;
							this.data['inQueueEffects'].push(getEffectViewModel(this.data, additionalLevel));
							if(this.queue[i]['queueType'] != BuildingQueue.TYPE_MASTER_BUILDER) {
								inConstruction = true;
							}
						}
					}
				}
			}

			this.data['nextEffect'] = getEffectViewModel(this.data, inConstruction ? 2 : 1);
		}
	};

	this.isRubble = function() {
		return (this.data['lvlNext'] == 1 && !this.isWorldWonder() && (this.data['buildingType'] != Building.TYPE.MOAT) && typeof(this.data['rubble']) !== 'undefined');
	};

	this.set = function (data) {
		if (typeof(data) != 'undefined') {
			this.parent.set.call(this, data, false);
		}
		this.calculateEffect();
	};

	this.set(data);

	this.isBreweryOrTeaHouse = function() {
		return (this.data['buildingType'] == Building.TYPE.BREWERY) || (this.data['buildingType'] == Building.TYPE.TEAHOUSE);
	};

	this.isTeaHouse = function() {
		return (this.data['buildingType'] == Building.TYPE.TEAHOUSE);
	};

	this.getImageName = function(tribe, state, small) {
		var cfg = config['buildings'][this.data['buildingType']];
		var fileName = 'g' + this.data['buildingType'];
		if (this.data['buildingType'] <= 4) {
			return '';
		}

		if (this.data['lvl'] === 0) {
			if (this.isRubble() && !this.isWall()) {
				// Show building rubble
				var rubbleSum = this.getRubbleResourcesSum();
				if (rubbleSum < 2000) {
					fileName = 'destruction/low';
				} else if (rubbleSum >= 2000 && rubbleSum < 20000) {
					fileName = 'destruction/middle';
				} else {
					fileName = 'destruction/high';
				}
				fileName += "/location_" + this.data['locationId'];
				// Ugly exeption for the rallypoint: there is another graphic in the WW
				if ((state != "") && (this.data['buildingType'] == Building.TYPE.RALLY_POINT)) {
					fileName += '_'+state;
				}
			} else if (this.data['lvlNext'] >= 1 // building is in construction from 0 to 1, or from 0 to 1 to 2 or waiting in a queue
				&& this.data['buildingType'] != Building.TYPE.WONDER_OF_WORLD // there won't be a picture for the building state of the natar and WW wall
				&& this.data['buildingType'] != Building.TYPE.NATAR_CITY_WALL) {
				if ((this.data['buildingType'] == Building.TYPE.EARTH_WALL
					|| this.data['buildingType'] == Building.TYPE.PALLISADE
					|| this.data['buildingType'] == Building.TYPE.CITY_WALL)) {
					if(this.data['lvlNext'] > 1) {
						// is in construction
						fileName = 'construction/' + fileName;
						if(state == 'water') {
							fileName += '_' + state;
						}
					} else {
						if (state == 'water') {
							fileName += '_00_' + state;
						} else {
							fileName += '_00_normal';
						}
					}
				} else {
					// Buildings in Constructions
					fileName = 'construction/' + fileName;
				}
				if (!small) {
					return fileName;
				}
			}
		}
		if (typeof(cfg) != 'undefined' && !(this.isRubble() && !this.isWall())) {
			if (cfg['tribe'] || cfg['levels']) {
				fileName += '_';
				if (state == "ww") {
					// Ugly exeption for the rallypoint: Normally there are levels and tribes, but in a WW village, we only have one graphic
					fileName += '00_ww';
				} else {
					// Is this building tribe specific?
					if (cfg['tribe']) {
						if (tribe == Player.TRIBE.ROMAN) {
							fileName += 'r';
						}
						if (tribe == Player.TRIBE.GAUL) {
							fileName += 'g';
						}
						if (tribe == Player.TRIBE.TEUTON) {
							fileName += 't';
						}
					}
					// Has this building different levels?
					if (cfg['levels']) {
						//Search for the max lvl the building reached
						for (var i = cfg['levels'].length - 1; i >= 0; i--) {
							var lvl = cfg['levels'][i];
							if (this.data['lvl'] >= lvl) {
								if (lvl < 10) {
									fileName += '0';
								}
								fileName += lvl;
								break;
							}
						}
					}
					if(state && cfg['states']) {
						fileName += '_';
						for(var i=cfg['states'].length; i>=0 ; i--) {
							if(cfg['states'][i] == state){
								break;
							}
						}
						fileName += cfg['states'][i];
					}
				}
			}
		}
		return fileName;
	};
}

Building.isWall = function (buildingType) {
	switch (buildingType) {
		case Building.TYPE.NATAR_CITY_WALL:
		case Building.TYPE.EARTH_WALL:
		case Building.TYPE.PALLISADE:
		case Building.TYPE.CITY_WALL:
			return true;
	}
	return false;
};

Building.getDescriptionParamByType = function(buildingType){
	if(buildingType == Building.TYPE.TOURNAMENT_SQUARE){
		return config['balancing']['tournamentSquareMinDistance'];
	}
};

Building.EXPANSION_SLOTS = {
	'25': 2,
	'26': 3
};

Building.RESIDENCE_EXPANSION_UNLOCKS = {
	'0': 10,
	'1': 20
};

Building.PALACE_EXPANSION_UNLOCKS = {
	'0': 10,
	'1': 15,
	'2': 20
};

Building.EXPANSION_SLOT_UNLOCKS = {
	'25': Building.RESIDENCE_EXPANSION_UNLOCKS,
	'26': Building.PALACE_EXPANSION_UNLOCKS
};

/**
 * Type IDs
 * @type {Object}
 */
Building.TYPE = {
	WOOD: 1,
	CLAY: 2,
	IRON: 3,
	CROP: 4,
	SAWMILL: 5,
	CLAY_BAKERY: 6,
	IRON_FOUNDRY: 7,
	MILL: 8,
	BAKERY: 9,
	WAREHOUSE: 10,
	GRANARY: 11,
	BLACKSMITH: 13,
	TOURNAMENT_SQUARE: 14,
	MAIN_BUILDING: 15,
	RALLY_POINT: 16,
	MARKET: 17,
	EMBASSY: 18,
	BARRACKS: 19,
	STABLE: 20,
	WORKSHOP: 21,
	ACADEMY: 22,
	CRANNY: 23,
	TOWN_HALL: 24,
	RESIDENCE: 25,
	PALACE: 26,
	TREASURY: 27,
	TRADE_OFFICE: 28,
	GREAT_BARRACKS: 29,
	GREAT_STABLE: 30,
	// roman wall
	CITY_WALL: 31,
	// natar wall
	NATAR_CITY_WALL: 43,
	// teuton wall
	EARTH_WALL: 32,
	// gaul wall
	PALLISADE: 33,
	STONEMASON: 34,
	BREWERY: 35,
	TRAPPER: 36,
	GREAT_WAREHOUSE: 38,
	GREAT_GRANARY: 39,
	WONDER_OF_WORLD: 40,
	HORSE_DRINKING_TROUGH: 41,
	MOAT: 42,
	TEAHOUSE: 44,
	HIDDEN_TREASURY: 45
};

Building.WALL_TYPES = {
	1: Building.TYPE['CITY_WALL'],
	2: Building.TYPE['EARTH_WALL'],
	3: Building.TYPE['PALLISADE'],
	5: Building.TYPE['NATAR_CITY_WALL']
};


/**
 * Building categories
 * @type {Object}
 */
Building.CATEGORY = {
	INFRASTRUCTURE: 1,
	MILITARY: 2,
	RESOURCES: 3
};

/* Building upgrade possibilities */
Building.UPGRADE = {
	// free slot in buildingqueue and enough resources
	POSSIBLE: 'possible',
	// buildingqueue full or not enough resources
	NOT_NOW: 'notNow',
	// fully upgraded
	MAX_LEVEL: 'maxLevel',
	// not enough free supply
	NOT_AT_ALL: 'notAtAll',
	// currently demolished
	DEMOLISH: 'demolish'
};

Building.MAX_LEVEL = 20;
Building.WW_MAX_LEVEL = 100;

Building.MIN_FREE_CROP_AVAILABLE = 2;

Building.PREMIUM_LOCATIONS = [42, 43];

Building.RALLY_POINT_LOCATION = 32;

Building.initConstants = function(){
	Building.CATAPULT_TARGETS = {
		1: {RANDOM_TARGET: 99},
		3: {
			RANDOM_TARGET: 99,
			INFRASTRUCTURE: [10, 11]
		},
		5: {
			RANDOM_TARGET: 99,
			RESOURCES: [1, 2, 3, 4, 5, 6, 7, 8, 9],
			INFRASTRUCTURE: [10, 11]
		},
		10: {
			RANDOM_TARGET: 99,
			RESOURCES: [1, 2, 3, 4, 5, 6, 7, 8, 9],
			INFRASTRUCTURE: [10, 11, 15, 17, 18, 24, 25, 26, 27, 28, 38, 39],
			MILITARY: [13, 14, 16, 19, 20, 21, 22, 29, 30],
			TRIBE_SPECIFIC: {
				1: [41],
				2: [(Travian.Config['teahouse'] == "true" || Travian.Config['teahouse'] === true) ? 44 : 35],
				3: []
			}
		},
		NO_TARGET: -1
	};
};

onConfigLoaded.push(Building.initConstants);

Building.prototype = new AbstractModel();
Cache.register(Building);/**
 * @constructor
 * @extends {AbstractData}
 */
;window['BuildingQueue'] = function BuildingQueue () {
	this.defaultData = {
		'villageId': 0,
		'tribeId': 0,
		'freeSlots': [],
		'queues': [],
		'canUseInstantConstruction': false,
		'canUseInstantConstructionOnlyInVillage': false,
		'levelDifference': 0 // Difference between the level this order will upgrade to and the current building level (see set())
	};

	this.data = {};

	var buildingFinishedTimer = null;
	var myself = this;

	function queryForSanity(entry, inSeconds) {
		buildingFinishedTimer = window.setTimeout(function () {
			Travian.sanityCheck({
				'villageId': myself.data['villageId'],
				'eventType': 'Building',
				'eventId': entry['id'],
				'eventData': entry
			});
		}, (inSeconds+300) * 1000);
	}

	this.set = function (data) {
		this.parent.set.call(this, data, false);

		if (buildingFinishedTimer != null) {
			window.clearTimeout(buildingFinishedTimer);
			buildingFinishedTimer = null;
		}
		var nextFinished = null;
		var inQueue = {};
		for (var queueType in this.data['queues']) {
			for (var i = 0; i < this.data['queues'][queueType].length; i++) {
				var entry = this.data['queues'][queueType][i];

				entry['paid'] = (entry['paid'] == 1);

				if (queueType != BuildingQueue.TYPE_DESTRUCTION) {
					if (typeof inQueue[entry['locationId']] == 'undefined') {
						inQueue[entry['locationId']] = 0;
					} else {
						inQueue[entry['locationId']]++;
					}
					entry['levelDifference'] = inQueue[entry['locationId']];
				}

				// Check if this entry is the next finishing construction
				if (queueType == BuildingQueue.TYPE_VILLAGE || queueType == BuildingQueue.TYPE_RESOURCES) {
					var secsLeft = entry['finished'] - Travian.rootScope['currentServerTime'];
					// Find the entry that is finished next
					if ((nextFinished == null) || (nextFinished > secsLeft)) {
						if (secsLeft > 0) {
							nextFinished = secsLeft;
						}
					}
				}

			}
		}


		if (nextFinished != null) {
			// If there is some entry, set a timer to the expected ending time plus 30 seconds. After that query the server
			queryForSanity(entry, secsLeft);
		}
	};

	/**
	 * Returns all the queue entries for this location ID
	 */
	this.getEntriesForLocation = function (locationId, type) {
		var returnArr = [];
		for (var queueType in this.data['queues']) {
			for (var i = 0; i < this.data['queues'][queueType].length; i++) {
				var entry = this.data['queues'][queueType][i];
				if (entry['locationId'] == locationId && (typeof(type) == 'undefined' || type == queueType)) {
					entry['queuePosition'] = i;
					returnArr.push(entry);
				}
			}
		}
		return returnArr;
	};

	/**
	 * Checks if there is a building slot (instantly or waiting queue) available for the given building
	 */
	this.hasFreeBuildingSlots = function (building) {
		if (building.isResourceField()) {
			return this.data['freeSlots'][BuildingQueue.TYPE_RESOURCES] > 0;
		} else {
			return this.data['freeSlots'][BuildingQueue.TYPE_VILLAGE] > 0;
		}
	};

	/**
	 * If we have more buildings in building queue and not all of them are forbidden we can use InstantConstruction
	 *
	 * @param building
	 * @returns {boolean}
	 */
	this.canUseInstantConstruction = function (building) {
		//romans has 1 more slot ONLY FOR RESOURCES
		if(building != null && !building.isResourceField() && this.data['tribeId'] == Player.TRIBE.ROMAN){
			return this.data['canUseInstantConstructionOnlyInVillage'];
		}else{
			return this.data['canUseInstantConstruction'];
		}
	};

	/**
	 * Returns the type of the queue that prevents a given building from getting upgraded
	 * @param building
	 * @returns {number}
	 */
	this.getBlockingQueueType = function (building) {
		var queueType = BuildingQueue.TYPE_VILLAGE;
		if (building.isResourceField()) {
			queueType =  BuildingQueue.TYPE_RESOURCES;
		}
		if(myself.data['tribeId'] != Player.TRIBE.ROMAN) {
			if(myself.data['queues'][BuildingQueue.TYPE_RESOURCES].length > 0) {
				return BuildingQueue.TYPE_RESOURCES;
			}
			if(myself.data['queues'][BuildingQueue.TYPE_VILLAGE].length > 0) {
				return BuildingQueue.TYPE_VILLAGE;
			}
		}
		return queueType;
	};

	this.set(this.defaultData);

	this.name = 'BuildingQueue';
}

BuildingQueue.getQueueType = function(building) {
	return (building.isResourceField() ? BuildingQueue.TYPE_RESOURCES : BuildingQueue.TYPE_VILLAGE);
};

BuildingQueue.TYPE_VILLAGE = 1;
BuildingQueue.TYPE_RESOURCES = 2;
BuildingQueue.TYPE_MASTER_BUILDER = 4;
BuildingQueue.TYPE_DESTRUCTION = 5;

BuildingQueue.MASTER_BUILDER_SLOTS = 4;
BuildingQueue.FREE_MASTER_BUILDER_SLOTS = 1;

BuildingQueue.prototype = new AbstractModel();
Cache.register(BuildingQueue);
/**
 * CardgameRolls Model
 *
 * @param $playerId
 * @constructor
 * @extends {AbstractData}
 */
;window['CardgameRolls'] = function CardgameRolls ($playerId) {
	this.defaultData = {
		'playerId': 0,
		'freeRolls': 0,
		'hasDailyRoll': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'CardgameRolls';
}

CardgameRolls.prototype = new AbstractModel();
Cache.register(CardgameRolls);/**
 * @constructor
 * @extends {AbstractData}
 */
;window['CelebrationQueue'] = function CelebrationQueue () {
	'use strict';

	this.defaultData = {
		'villageId': 0,
		'lastFinished': [],
		'queues': []
	};

	this.data = {};

	this.set = function (data) {
		this.parent.set.call(this, data, false);

	};

	this.set(this.defaultData);

	this.getQueue = function getQueue (buildingType) {
		return this.data.queues[buildingType];
	};

	this.getLastFinished = function getLastFinished (buildingType) {
		return this.data.lastFinished[buildingType];
	};

	this.name = 'CelebrationQueue';
}

CelebrationQueue.prototype = new AbstractModel();
Cache.register(CelebrationQueue);
/**
 * ExchangeOffice Model
 * @class
 * @constructor
 */
;window['ExchangeOffice'] = function ExchangeOffice (player, callback) {
	/**
	 * the type which should be changed to another (result type)
	 * @see ExchangeOffice.TYPE_*
	 * @type {string}
	 * @private
	 */
	var exchangeType;
	/**
	 * the rate between the exchangeType amount and the result
	 * @type {number}
	 * @private
	 */
	var rate = 0;
	/**
	 * maximum amount which can be chosen
	 * @type {number}
	 * @private
	 */
	var maxAmount = 0;

	/**
	 * @type {number}
	 * @public incl. template
	 */
	this['result'] = 1;
	/**
	 * has to be an Object for the slider-directive
	 * @link slider.js
	 * @public incl. template
	 */
	this['amount'] = {
		'value': 0
	};

	var requestCallback = callback;
	/**
	 * getter for rate
	 * @returns {number}
	 * @public incl. template
	 */
	this['getRate'] = function () {
		return rate;
	};

	/**
	 * Getter for maxAmount
	 * @returns {number}
	 * @public incl. template
	 */
	this['getMaxAmount'] = function () {
		return maxAmount;
	};

	/**
	 * Set the value of amount, NOT the amount-Object
	 * @param value {number}
	 * @public only for the Ctrl
	 */
	this.setAmount = function (value) {
		this['amount']['value'] = value;
	};

	/**
	 * initialize the amount
	 * @public only for the Ctrl
	 */
	this.initAmount = function () {
		var minAmount = 0;

		if (exchangeType == ExchangeOffice.TYPE_SILVER) {
			minAmount = rate;
		} else {
			minAmount = 1;
		}
		var amount = Math.max(0, Math.min(player['data'][exchangeType], minAmount));
		this.setAmount(amount);
	};

	/**
	 * Get the value of amount, NOT the amount-Object
	 * @returns {number}
	 * @public only for the Ctrl
	 */
	this.getAmount = function () {
		return this['amount']['value'];
	};

	/**
	 * get the exchangeType
	 * @returns {string} => 'silver' or 'gold' @see ExchangeOffice.TYPE_*
	 * @public only for the Ctrl
	 */
	this.getType = function () {
		return exchangeType;
	};

	/**
	 * calculate the maxAmount
	 * @public only for the Ctrl
	 */
	this.calculateMaxAmount = function () {
		if (exchangeType == ExchangeOffice.TYPE_SILVER || exchangeType == ExchangeOffice.TYPE_GOLD) {
			maxAmount = Math.max(0, Math.min(player['data'][exchangeType], Travian.Config['exchangeOffice']['maxAmount']));
		}
	};

	/**
	 * Initialized this Object for the given type
	 * @param type {string} => 'silver' or 'gold' @see ExchangeOffice.TYPE_*
	 * @public only for the Ctrl
	 */
	this.init = function (type) {
		exchangeType = type;
		this.calculateMaxAmount();
		if (exchangeType == ExchangeOffice.TYPE_SILVER) {
			rate = Travian.Config['exchangeOffice']['silverToGoldRate'];
		} else {
			rate = Travian.Config['exchangeOffice']['goldToSilverRate'];
			this['result'] = rate;
		}
		this.initAmount();
	};
	/**
	 * This Function is a callback function for PremiumFeature-Class to get the parameters for the Backend
	 * Both functions will be handles by the PremiumFeature class
	 * @returns {{amount: number, type: string, callback: function}}
	 */
	this.premiumParamsCallback = function () {
		return {'amount': this.getAmount(), 'type': this.getType(), 'callback': requestCallback};
	}
}

ExchangeOffice.TYPE_SILVER = 'silver';
ExchangeOffice.TYPE_GOLD = 'gold';;window['ExpansionListEntry'] = function ExpansionListEntry () {
	this.defaultData = {
		'villageId': 0,
		'villageName': "",
		'ownerName': "",
		'population': 0,
		'coordinates': {
			'x': 0,
			'y': 0
		},
		'foundingTime': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'ExpansionListEntry';
}

ExpansionListEntry.prototype = new AbstractModel();
Cache.register(ExpansionListEntry);
;window['FarmList'] = function FarmList () {
	this.defaultData = {
		'listId': 0,
		'listName': 0,
		'lastSent': 0,
		'units': {},
		'troopsAmount': 0,
		'orderNr': 0,
		'villageIds': [],
		'entryIds': [],
		'isDefault': true,
		'maxEntriesCount': 0
	};

	this.data = {};
	this.set = function (data) {
		this.parent.set.call(this, data, false);
		this.data['troopsAmount'] = 0;
		for (var i in this.data['units']) {
			this.data['troopsAmount'] += parseInt(this.data['units'][i]);
		}
	};
	this.set(this.defaultData);
	this.name = 'FarmList';
}

FarmList.prototype = new AbstractModel();
Cache.register(FarmList);
;window['FarmListEntry'] = function FarmListEntry () {
	this.defaultData = {
		'entryId': 0,
		'villageId': 0,
		'units': {},
		'troopsAmount': 0,
		'targetOwnerId': 0,
		'belongsToKing': 0,
		'villageName': '',
		'population': 0,
		'coords': {},
		'lastReport': {},
		'isOasis': false
	};

	this.data = {};
	this.set = function (data) {
		this.parent.set.call(this, data);
		this.data['troopsAmount'] = 0;
		for (var i in this.data['units']) {
			this.data['troopsAmount'] += parseInt(this.data['units'][i]);
		}
	};
	this.set(this.defaultData);
	this.name = 'FarmListEntry';
}

FarmListEntry.preventUpdateWithoutFirstFill = true;

/*
	Is only used in this Frontend, because we used in the past the farmListCtrl/moveEntry for adding, moving and coping a FarmListEntry.
	to separate those actions by using still just one template we are using now those actions
 */
FarmListEntry.ACTION = {
	ADD: 1,
	COPY: 2,
	TOGGLE: 3
};

FarmListEntry.prototype = new AbstractModel();
Cache.register(FarmListEntry);
;window['FieldMarkerGlobal'] = function FieldMarkerGlobal () {
	this.defaultData = {
		'id': 0,
		'regionId': 0,
		'cellId': 0,
		'creatorPlayerId': 0,
		'isGlobal': 0,
		'playerId': 0,
		'kingdomId': 0,
		'allianceId': 0,
		'societyId': 0,
		'text': 0,
		'timestamp': 0,
		'duration': 0,
		'isMinimized': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'FieldMarkerGlobal';

	this.getTimeAgoString = function() {
		var s = Travian.ServerTime - this.data.timestamp;
		var m = Math.floor(s/60)%60;
		var h = Math.floor(s/3600);
		// Set the correct display type of the time
		var agoType = 1;
		if ((m > 1) || (h > 0)) {
			agoType = 2;
			if (h > 0) {
				agoType = 3;
				if (m < 10) {
					m = '0' + m;
				}
			}
			if (h >= 2) {
				agoType = 4;
			}
		}
		return Travian.translate('FieldMarker.TimeAgo_' + agoType, {'minutes': m, 'hours': h});
	};

	this.getDisappearTime = function() {
		return this.data.timestamp + this.data.duration - Travian.ServerTime;
	};
}
FieldMarkerGlobal.prototype = new AbstractModel();
Cache.register(FieldMarkerGlobal);

FieldMarkerGlobal.TYPE_GOVERNOR_RELOCATE = 'FieldMarker.GovernorRelocate';
;window['FieldMarkerPersonal'] = function FieldMarkerPersonal () {
	this.defaultData = {
		'id': 0,
		'regionId': 0,
		'cellId': 0,
		'creatorPlayerId': 0,
		'isGlobal': 0,
		'playerId': 0,
		'kingdomId': 0,
		'allianceId': 0,
		'societyId': 0,
		'text': 0,
		'timestamp': 0,
		'duration': 0,
		'minimizedState': 0,
		'isClosed': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'FieldMarkerPersonal';
}
FieldMarkerPersonal.prototype = new FieldMarkerGlobal();
Cache.register(FieldMarkerPersonal);

FieldMarkerPersonal.KINGDOM = 2;
FieldMarkerPersonal.ALLIANCE = 3;
FieldMarkerPersonal.SOCIETY = 4;
FieldMarkerPersonal.PLAYER = 5;

FieldMarkerPersonal.MINIMIZED_DEFAULT = 0;
FieldMarkerPersonal.MINIMIZED_MINIMIZED = 1;
FieldMarkerPersonal.MINIMIZED_MAXIMIZED = 2;
;window['Gameworld'] = function Gameworld() {
	this.defaultData = {
		'status': 0,
		'data': '',
		'messageTitle': '',
		'messageText': '',
		'startTime': 0,
		'worldWonderActivated': 0,
		'maintenance': false
	};

	this.data = {};
	this.set(this.defaultData);


	this.name = 'Gameworld';
	this.hasMaintenance = function () {
		return this.data['maintenance'];
	};
}


Gameworld.STATUS_OPEN = 0;
Gameworld.STATUS_CLOSED = 1;
Gameworld.STATUS_ENDED = 2;
Gameworld.STATUS_SETUP = 3;


Gameworld.prototype = new AbstractModel();
Cache.register(Gameworld);;window['GroupInvitation'] = function GroupInvitation (id) {
	this.defaultData = {
		'id': id,
		'groupId': 0,
		'groupName': '',
		'playerId': 0
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'GroupInvitation';
}
GroupInvitation.prototype = new AbstractModel();
Cache.register(GroupInvitation);

GroupInvitation.TYPE_ALLIANCE = 1;
GroupInvitation.TYPE_SECRET_SOCIETY = 2;
GroupInvitation.TYPE_KINGDOM = 3;

GroupInvitation.COLLECTION_FOR_GROUP = 'group';
;window['Hero'] = function Hero ($playerId) {

	this.defaultData = {
		'playerId': 0,
		'villageId': 0,
		'destVillageId': 0,
		'level': 0,
		'status': 0,
		'xp': 0,
		'health': 0,
		'lastHealthTime': 0,
		'fightStrengthPoints': 0,
		'baseRegenerationRate': 0,
		'attBonusPoints': 0,
		'defBonusPoints': 0,
		'resBonusPoints': 0,
		'resBonusType': 0,
		'freePoints': 0,
		'speed': 0,
		'untilTime': 0,
		'bonuses': {},
		'maxScrollsPerDay': 0,
		'scrollsUsedToday': 0,
		'artworkUsedToday': 0,
		'waterbucketUsedToday': 0,
		'ointmentsUsedToday': 0,
		'resourceChestsUsedToday': 0,
		'cropChestsUsedToday': 0,
		'adventurePointCardUsedToday': 0,
		'isMoving': false,
		'adventurePoints': 0,
		'adventurePointTime': 0,
		'heroCreationTime': 0,
		'adventurePointsSpeedup': 0,
		'levelUp': 0
	};
	var myself = this;
	var tick = null;
	var skip = 0;

	var lastHealthValue = 0;
	var lastHealthTime = 0;

	var lastReviveValue = {'duration': 0 };

	this.getBonus = function (bonusType) {
		if (this.data['bonuses'].hasOwnProperty(bonusType)) {
			return this.data['bonuses'][bonusType];
		}
		return null;
	};

	this.data = {};

	/**
	 * Extrapolates the actual health of the hero once per second.
	 */
	function extrapolate () {
		// only execute every 10th tick -> once per second
		skip++;
		if (skip % 10 != 1 || myself.data['health'] >= 100 || myself.data['health'] <= 0) return;
		var diff = Travian.ServerTime - myself.data['lastHealthTime'];
		var heroItemsHealthRegen = parseFloat(myself.data['bonuses'][HeroItem.BONUS_HEALTH_REGEN] || 0);
		// Calculate actual Health of the Hero
		var actualHealthValue = lastHealthValue + ((myself.data['baseRegenerationRate'] + heroItemsHealthRegen) * diff) / 86400;
		if (actualHealthValue > 100) actualHealthValue = 100;
		myself.data['health'] = Math.ceil(actualHealthValue);
		//If Hero is dead, calculate actual revive Costs
		if (myself.data['status'] == Hero.STATUS_DEAD) {
			//Reduce Duration
			var duration = lastReviveValue['duration'] - myself.data['reviveDurationReduction'] * (diff / 1000);
			if (duration < myself.data['reviveDurationMinimal']) duration = myself.data['reviveDurationMinimal'];
			myself.data['reviveDuration'] = Math.ceil(duration);
			//Reduce Costs
			for (var i = 1; i <= 4; i++) {
				var cost = lastReviveValue['costs'][i] - myself.data['reviveCostReduction'][i] * (diff / 1000);
				if (cost < myself.data['reviveCostMinimal'][i]) cost = myself.data['reviveCostMinimal'][i];
				myself.data['reviveCosts'][i] = Math.ceil(cost);
			}
		}
	}

	this.set = function (data) {
		data = data || {};
		lastHealthValue = parseFloat(data['health']);
		data['health'] = Math.ceil(lastHealthValue);
		if (data['status'] == Hero.STATUS_DEAD) {
			lastReviveValue['duration'] = data['reviveDuration'];
			lastReviveValue['costs'] = data['reviveCosts'];
		}
		if ((data['status'] == Hero.STATUS_DEAD) || (data['status'] == Hero.STATUS_REVIVING)) {
			data['notAlive'] = true;
		} else {
			data['notAlive'] = false;
		}
		if (data['levelUp'] > this.data['levelUp']) {
			// This update contains a level up, show an according screen flash notification
			getAngularService('AnimationService').showScreenFlashNotification('heroLevelUp');
		}
		this.parent.set.call(this, data, false);
		// We should wait until player loaded - data['playerId'] will be filled in
		// Afterwards bind heroRegeneration only for your hero, and not others (others player profiles), which will not have health
		if (tick == null && data['playerId'] && !isNaN(data['health'])) {
			tick = Travian.tick.bind('heroRegeneration', extrapolate);
		}
	};

	this.resetHeroItemsDailyUsage = function() {
		angular.forEach(myself.data, function(value, key) {
			if (key.indexOf('UsedToday') > -1) {
				myself.data[key] = 0;
			}
		});
		this.callSubscribers();
	};

	this.set(this.defaultData);

	this.name = 'Hero';
}
Hero.STATUS_IDLE = 0;
Hero.STATUS_RETURNING = 1;
Hero.STATUS_TO_VILLAGE = 2;
Hero.STATUS_TO_OASIS = 3;
Hero.STATUS_TO_ADVENTURE = 4;
Hero.STATUS_SUPPORTING = 5;
Hero.STATUS_TRAPPED = 6;
Hero.STATUS_DEAD = 7;
Hero.STATUS_REVIVING = 8;

//Remember: you have to change the zIndex in heroImage.php, too
Hero.zIndex = {
	'hair': 90,
	'nose': 80,
	'beard': 70,
	'mouth': 60,
	'eyebrow': 40,
	'eye': 30,
	'face0': 10,
	'ear': 5
};

Hero.prototype = new AbstractModel();
Cache.register(Hero);;window['HeroFace'] = function HeroFace () {
	this.defaultData = {
		'playerId': 0,
		'gender': null,
		'hairColor': 0,
		'face': null
	};

	var viewModel = {
		'gender': 'male',
		'hairColor': 'black',
		'face': {}
	};

	var lastData = viewModel;
	var somethingChanged = false;
	this.data = {};
	this.set = function (data) {
		this.data['face'] = {};
		if (data['face'] == null) {
			this.data['face'] = {};
			this.data['gender'] = Math.floor(Math.random() * 2);
			if (!Travian.Config['features']['femaleHero']) {
				this.data['gender'] = 0;
			}
			this.selectRandomFace();
			data = angular.copy(this.data);
		}
		lastData = data;
		this.parent.set.call(this, data);
		this.updateViewModel();
	};
	this.name = 'HeroFace';

	var colors = ['black', 'brown', 'grey', 'red', 'yellow','whiteblonde', 'brightbrown', 'blueblack'];
	var genders = ['male', 'female'];
	var attrsWithColor = ['femalehair', 'malehair', 'malebeard'];

	// Generates the view model
	// Only adds some values to the "face" object and takes care of the hair color
	this.updateViewModel = function () {
		viewModel['gender'] = genders[this.data['gender']];
		viewModel['hairColor'] = colors[this.data['hairColor']];
		somethingChanged = (this.data['hairColor'] != lastData['hairColor']);
		if (!viewModel['hairColor']) {
			// Fallback, if this hair color isn't available anymore (hero customisations have changed!)
			var colorId = charCustomisations[viewModel['gender']]['color'].slice(-1)[0];
			viewModel['hairColor'] = colors[colorId];
			this.data['hairColor'] = colorId;
		}
		viewModel['face'] = {};
		var attributes = this.data['face'];
		for (var attr in attributes) {
			if (!charCustomisations[viewModel['gender']][attr]) {
				continue;
			}
			var type = this.data['face'][attr];
			if (type != lastData['face'][attr]) {
				somethingChanged = true;
			}
			if (!charCustomisations[viewModel['gender']][attr][type]) {
				// Fallback, if this customization isn't available anymore (hero customisations have changed!)
				type = charCustomisations[viewModel['gender']][attr].slice(-1)[0];
				this.data['face'][attr] = type;
			}
			if ($.inArray(viewModel['gender'] + attr, attrsWithColor) > -1) {
				if (type != 'None') {
					type = type + '-' + viewModel['hairColor'];
				}
			}
			viewModel['face'][attr] = {
				'attr': attr,
				'type': type,
				'z': Hero.zIndex[attr]
			};
		}
	};

	this.getViewModel = function () {
		return viewModel;
	};

	this.somethingChanged = function () {
		return somethingChanged;
	};

	this.selectRandomFace = function () {
		this.data['hairColor'] = Math.floor(Math.random() * colors.length);
		this.data['face'] = {};
		var attributes = charCustomisations[genders[this.data['gender']]];
		for (var attr in attributes) {
			if ((attr == 'color') || (attr == 'colorStrings')) {
				continue;
			}
			var type = attributes[attr][Math.floor(Math.random() * attributes[attr].length)];
			this.data['face'][attr] = type;
		}
		this.updateViewModel();
	};

	this.resetChangeStatus = function () {
		somethingChanged = false;
	};

	this.set(this.defaultData);
}

HeroFace.prototype = new AbstractModel();
Cache.register(HeroFace);;window['HeroItem'] = function HeroItem () {
	this.defaultData = {
		'id': 0,
		'playerId': 0,
		'tribeId': 0,
		'inSlot': 0,
		'itemId': 0,
		'itemType': 0,
		'amount': 0,
		'strength': 100,
		'images': [],
		'bonuses': [],
		'stackable': false,
		'slot': 0,
		'lastChange': 0,
		'hasSpeedBonus': false,
		'inventorySlotNr': 0,
		'previousOwners': 0,
		'upgradeLevel': 0,
		'upgradableItemType': 0,
		'itemQuality': 0,
		'itemTier': 0,
		'baseUpgradeBonus': 0,
		'cardGameItem': false,
		'premiumItem': false,
		'upgradedItem': false
	};

	this.data = {};
	this.set = function (data) {
		this.parent.set.call(this, data, false);
		if (typeof this.data['maxPerDay'] != 'undefined') {
			if (typeof this.data['usedPerDay'] == 'undefined') {
				this.data['usedPerDay'] = 0;
			}
			this.data['maxCanUse'] = Math.min(this.data['amount'], this.data['maxPerDay'] - this.data['usedPerDay']);
		} else {
			this.data['maxCanUse'] = this.data['amount'];
		}
		this.data['zIndex'] = this.getZIndex();
	};

	this.getZIndex = function () {
		if (this.data['inSlot'] <= HeroItem.SLOT_INVENTORY) {
			return 0;
		}
		// The hero body should have a zIndex of 2
		switch (this.data['inSlot']) {
			case HeroItem.SLOT_BAG:
				return 10;
			case HeroItem.SLOT_HELMET:
				return 9;
			case HeroItem.SLOT_RIGHT_HAND:
				return 8;
			case HeroItem.SLOT_BODY:
				return 6;
			case HeroItem.SLOT_SHOES:
				return 3;
			case HeroItem.SLOT_LEFT_HAND:
				if (this.data['images'][0].indexOf('shield') != -1) {
					// Shields are the only left hand items that need to be displayed in front of the body
					// If there are more exceptions than shields we should use a config instead of this
					return 7;
				}
				return 1;
		}
		return 0;
	};

	this.setUseInfos = function (hero, equippedItems) {
		if (!hero || !hero.filled) {
			return;
		}
		var isHeroMoving = hero.data['isMoving'];
		var isHeroDeadOrReviving = hero.data['status'] == Hero.STATUS_DEAD || hero.data['status'] == Hero.STATUS_REVIVING;
		var isWaterBucket = this.data['itemType'] == HeroItem.TYPE_WATERBUCKET;
		var isOintment = this.data['itemType'] == HeroItem.TYPE_OINTMENT;
		var itemSpeedBonus = this.data['hasSpeedBonus'];
		var isArtwork = this.data['itemType'] == HeroItem.TYPE_ARTWORK;
		var isScroll = this.data['itemType'] == HeroItem.TYPE_SCROLLS;
		var isBook = this.data['itemType'] == HeroItem.TYPE_BOOK;

		// Hero-Status specific things
		var speedBonusWhileMoving = isHeroMoving && itemSpeedBonus;
		var waterBucketWhileAlive = isWaterBucket && !isHeroDeadOrReviving;
		var ointmentWhileDead = isOintment && isHeroDeadOrReviving;
		var artworkWhileDead = isArtwork && isHeroDeadOrReviving;
		var bookWhileDead = isBook && isHeroDeadOrReviving;
		var scrollWhileDead = isScroll && isHeroDeadOrReviving;


		// Item modifications
		this.data['notUsableItem'] = speedBonusWhileMoving || waterBucketWhileAlive || ointmentWhileDead || artworkWhileDead || bookWhileDead || scrollWhileDead;
		this.data['notUsableReason'] = false;

		if (speedBonusWhileMoving) {
			this.data['notUsableReason'] = "NoEquipItemHeroMoving";
		} else
			if (waterBucketWhileAlive) {
				this.data['notUsableReason'] = "NoEquipItemHeroAlive";
			} else
				if (ointmentWhileDead || artworkWhileDead || bookWhileDead || scrollWhileDead) {
					this.data['notUsableReason'] = "NoEquipItemHeroDead";
				}

		// Is there some item currently equipped that may not be unequipped?
		if (equippedItems && equippedItems[this.data['slot']] !== undefined) {
			var otherItem = equippedItems[this.data['slot']];
			if (otherItem != this && otherItem.data['notUsableReason'] == 'NoEquipItemHeroMoving') {
				this.data['notUsableReason'] = "NoEquipItemHeroMoving2";
				this.data['notUsableItem'] = true;
			}
		}

		//is item stackable consumable with limited daily use?
		switch (this.data['itemType']) {
			case HeroItem.TYPE_ARTWORK:
				this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxArtworksPerDay'];
				this.data['usedPerDay'] = hero.data['artworkUsedToday'];
				break;
			case HeroItem.TYPE_WATERBUCKET:
				this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxWaterbucketsPerDay'];
				this.data['usedPerDay'] = hero.data['waterbucketUsedToday'];
				break;
			case HeroItem.TYPE_OINTMENT:
				this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxOintmentsPerDay'];
				this.data['usedPerDay'] = hero.data['ointmentsUsedToday'];
				break;
			case HeroItem.TYPE_ADVENTURE_POINT:
				this.data['maxPerDay'] = Travian.Config['heroConfig']['MaxAdventurePointsCardPerDay'];
				this.data['usedPerDay'] = hero.data['adventurePointCardUsedToday'];
				break;
			case HeroItem.TYPE_RESOURCE_BONUS_3:
			case HeroItem.TYPE_RESOURCE_BONUS_4:
			case HeroItem.TYPE_RESOURCE_BONUS_5:
				this.data['maxPerDayWithoutLock'] = Travian.Config['heroConfig']['MaxResourceChestsPerDay'];
				this.data['usedPerDay']= hero.data['resourceChestsUsedToday'];
				break;
			case HeroItem.TYPE_CROP_BONUS_3:
			case HeroItem.TYPE_CROP_BONUS_4:
			case HeroItem.TYPE_CROP_BONUS_5:
				this.data['maxPerDayWithoutLock'] = Travian.Config['heroConfig']['MaxCropChestsPerDay'];
				this.data['usedPerDay'] = hero.data['cropChestsUsedToday'];
				break;
			case HeroItem.TYPE_SCROLLS:
				if (hero.data['maxScrollsPerDay'] > 0) {
					this.data['maxPerDay'] = hero.data['maxScrollsPerDay'];
				} else {
					this.data['maxPerDay'] = (hero.data['xpNextLevel'] - hero.data['xpThisLevel']) / 10;
				}
				this.data['usedPerDay'] = hero.data['scrollsUsedToday'];
				break;
		}
		if (this.data['itemType'] == HeroItem.TYPE_WATERBUCKET) {
			if (hero.data['health'] != 0) {
				this.data['maxCanUse'] = 0;
			} else {
				this.data['maxCanUse'] = this.data['amount'];
			}
		}
	};

	this.set(this.defaultData);

	this.name = 'HeroItem';
}

HeroItem.getImages = function (itemType) {
	return Travian.Config.heroItemImages[itemType];
};

HeroItem.SLOT_INSTANT_USE = -1;
HeroItem.SLOT_INVENTORY = 0;
HeroItem.SLOT_HELMET = 1;
HeroItem.SLOT_RIGHT_HAND = 2;
HeroItem.SLOT_LEFT_HAND = 3;
HeroItem.SLOT_BODY = 4;
HeroItem.SLOT_SHOES = 5;
HeroItem.SLOT_HORSE = 6;
HeroItem.SLOT_BAG = 7;

HeroItem.BONUS_XP = 1;
HeroItem.BONUS_BARRACKS = 2;
HeroItem.BONUS_STABLE = 3;
HeroItem.BONUS_WORKSHOP = 4;
HeroItem.BONUS_SPEED_RETURN = 5;
HeroItem.BONUS_SPEED_OWN_VILLAGES = 6;
HeroItem.BONUS_SPEED_ALLY_VILLAGES = 7;
HeroItem.BONUS_SPEED_STAMINA = 8;
HeroItem.BONUS_RAID = 9;
HeroItem.BONUS_NATARS = 10;
HeroItem.BONUS_UNIT_ID = 11;
HeroItem.BONUS_UNIT_STRENGTH = 12;
HeroItem.BONUS_FIGHT_STRENGTH = 13;
HeroItem.BONUS_HEALTH_REGEN = 14;
HeroItem.BONUS_CULTURE_POINTS = 15;
HeroItem.BONUS_ARMOR = 16;
HeroItem.BONUS_SPEED_HERO = 17;
HeroItem.BONUS_SPEED_HORSE = 18;
HeroItem.BONUS_RESKILL = 20;
HeroItem.BONUS_TROOP_HEALING = 21;
HeroItem.BONUS_EYESIGHT = 22;
HeroItem.BONUS_CHICKEN = 23;
HeroItem.BONUS_RESOURCES = 24;
HeroItem.BONUS_CROP = 25;
HeroItem.BONUS_POTION = 26;


HeroItem.TYPE_OINTMENT = 112;
HeroItem.TYPE_SCROLLS = 113;
HeroItem.TYPE_WATERBUCKET = 114;
HeroItem.TYPE_BOOK = 115;
HeroItem.TYPE_ARTWORK = 116;
HeroItem.TYPE_BANDAGE_25 = 117;
HeroItem.TYPE_BANDAGE_33 = 118;
HeroItem.TYPE_CAGES = 119;
HeroItem.TYPE_TREASURES = 120;
HeroItem.TYPE_HEALING_POTION = 124;
HeroItem.TYPE_ARMOR_UPGRADE = 125;
HeroItem.TYPE_WEAPON_UPGRADE = 126;
HeroItem.TYPE_LEFT_HAND_UPGRADE = 127;
HeroItem.TYPE_HELMET_UPGRADE = 128;
HeroItem.TYPE_SHOE_UPGRADE = 129;
HeroItem.TYPE_RESOURCE_BONUS_3 = 130;
HeroItem.TYPE_RESOURCE_BONUS_4 = 131;
HeroItem.TYPE_RESOURCE_BONUS_5 = 132;
HeroItem.TYPE_CROP_BONUS_3 = 133;
HeroItem.TYPE_CROP_BONUS_4 = 134;
HeroItem.TYPE_CROP_BONUS_5 = 135;
HeroItem.TYPE_ADVENTURE_POINT = 136;
HeroItem.TYPE_BUILDING_GROUND = 137;
HeroItem.TYPE_FINISH_IMMEDIATELY = 138;
HeroItem.TYPE_NPC_TRADER = 139;
HeroItem.TYPE_INSTANT_TRADE_DELIVERY = 140;
HeroItem.TYPE_BANDAGE_25_UPGRADED = 141;
HeroItem.TYPE_BANDAGE_33_UPGRADED = 142;

HeroItem.IconName = {};
HeroItem.IconName['Slot1'] = 'helmet';
HeroItem.IconName['Slot4'] = 'body';
HeroItem.IconName['Slot3'] = 'leftHand';
HeroItem.IconName['Slot2'] = 'rightHand';
HeroItem.IconName['Slot5'] = 'shoes';
HeroItem.IconName['Slot6'] = 'horse';
HeroItem.IconName[HeroItem.TYPE_OINTMENT] = 'ointment';
HeroItem.IconName[HeroItem.TYPE_SCROLLS] = 'scroll';
HeroItem.IconName[HeroItem.TYPE_WATERBUCKET] = 'bucket';
HeroItem.IconName[HeroItem.TYPE_BOOK] = 'bookOfWisdom';
HeroItem.IconName[HeroItem.TYPE_ARTWORK] = 'artwork';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_25] = 'smallBandage';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_25_UPGRADED] = 'smallBandage';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_33] = 'bandage';
HeroItem.IconName[HeroItem.TYPE_BANDAGE_33_UPGRADED] = 'bandage';
HeroItem.IconName[HeroItem.TYPE_CAGES] = 'cage';

HeroItem.UPGRADE_ITEMS = [
	HeroItem.TYPE_ARMOR_UPGRADE,
	HeroItem.TYPE_WEAPON_UPGRADE,
	HeroItem.TYPE_LEFT_HAND_UPGRADE,
	HeroItem.TYPE_HELMET_UPGRADE,
	HeroItem.TYPE_SHOE_UPGRADE
];

HeroItem.ITEM_IMPROVEMENTS = {};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_BANDAGE_25] = {'id' : HeroItem.TYPE_BANDAGE_25_UPGRADED, 'bonus': 5};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_BANDAGE_33] = {'id' : HeroItem.TYPE_BANDAGE_33_UPGRADED, 'bonus': 5};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_RESOURCE_BONUS_3] = {'id' : HeroItem.TYPE_RESOURCE_BONUS_4, 'bonus': 1};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_RESOURCE_BONUS_4] = {'id' : HeroItem.TYPE_RESOURCE_BONUS_5, 'bonus': 1};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_CROP_BONUS_3] = {'id' : HeroItem.TYPE_CROP_BONUS_4, 'bonus': 1};
HeroItem.ITEM_IMPROVEMENTS[HeroItem.TYPE_CROP_BONUS_4] = {'id' : HeroItem.TYPE_CROP_BONUS_5, 'bonus': 1};

HeroItem.preventUpdateWithoutFirstFill = true;
HeroItem.prototype = new AbstractModel();
Cache.register(HeroItem);;window['IngameHelp'] = function IngameHelp() {
	var config = {
		'Buildings': {
			'type': IngameHelp.Topic,
			'order': 0,
			'children': {
				'Buildings_Infrastructure': {
					'type': IngameHelp.Group,
					'order': 0,
					'children': {
						// will be filled later
					}
				},
				'Buildings_Military': {
					'type': IngameHelp.Group,
					'order': 1,
					'children': {
						// will be filled later
					}
				},
				'Buildings_Resources': {
					'type': IngameHelp.Group,
					'order': 2,
					'children': {
						// will be filled later
					}
				}
			}
		},
		'Troops': {
			'type': IngameHelp.Topic,
			'order': 1,
			'children': {
				'Troops_Romans': {
					'type': IngameHelp.Group,
					'order': 0,
					'children': {
						// will be filled later
					}
				},
				'Troops_Teutons': {
					'type': IngameHelp.Group,
					'order': 1,
					'children': {
						// will be filled later
					}
				},
				'Troops_Gauls': {
					'type': IngameHelp.Group,
					'order': 2,
					'children': {
						// will be filled later
					}
				}
			}
		},
		'Village': {
			'order': 2,
			'type': IngameHelp.Topic,
			'children': {
				'Village_Rubble': {
					'type': IngameHelp.View,
					'order': 0,
					'featureFlag': 'rubble'
				},
				'Village_ProtectingYourself': {
					'type': IngameHelp.View,
					'order': 1
				},
				'Village_Research': {
					'type': IngameHelp.View,
					'order': 2
				},
				'Village_ExpansionRequirements': {
					'type': IngameHelp.View,
					'order': 3
				},
				'Village_Cities': {
					'type': IngameHelp.View,
					'order': 4
				}
			}
		},
		'Robbers': {
			'type': IngameHelp.Topic,
			'order': 3,
			'children': {
				'Robbers_RobberCamps': {
					'type': IngameHelp.View,
					'order': 0
				},
				'Robbers_RobberHideouts': {
					'type': IngameHelp.View,
					'order': 1
				},
				'Robbers_StolenGoodsAndTreasures': {
					'type': IngameHelp.View,
					'order': 2
				}
			}
		},
		'Kingdom': {
			'type': IngameHelp.Topic,
			'order': 4,
			'children': {
				'Kingdom_MapAndDetailView': {
					'type': IngameHelp.View,
					'order': 0
				},
				'Kingdom_Tributes': {
					'type': IngameHelp.View,
					'order': 1
				},
				'Kingdom_Influence': {
					'type': IngameHelp.View,
					'order': 2
				},
				'Kingdom_Invitations': {
					'type': IngameHelp.View,
					'order': 3
				},
				'Kingdom_Dukes': {
					'type': IngameHelp.View,
					'order': 4
				}
			}
		},
		'Hero': {
			'type': IngameHelp.Topic,
			'order': 5,
			'children': {
				'Hero_Adventures': {
					'type': IngameHelp.View,
					'order': 0
				},
				'Hero_Consumables': {
					'type': IngameHelp.View,
					'order': 1
				},
				'Hero_Equipment': {
					'type': IngameHelp.View,
					'order': 2
				},
				'Hero_Auctions': {
					'type': IngameHelp.View,
					'order': 3
				},
				'Hero_HeroProduction': {
					'type': IngameHelp.View,
					'order': 4
				},
				'Hero_Attributes': {
					'type': IngameHelp.View,
					'order': 5
				},
				'Hero_CapturingAnimals': {
					'type': IngameHelp.View,
					'order': 6
				},
				'Hero_Resurrection': {
					'type': IngameHelp.View,
					'order': 7
				}
			}
		},
		'Oases': {
			'type': IngameHelp.Topic,
			'order': 7,
			'children': {
				'Oases_WildOases': {
					'type': IngameHelp.View,
					'order': 0
				},
				'Oases_AssignOasis': {
					'type': IngameHelp.View,
					'order': 1
				},
				'Oases_TroopsInOases': {
					'type': IngameHelp.View,
					'order': 2
				}
			}
		},
		'Trading': {
			'type': IngameHelp.Topic,
			'order': 8,
			'children': {
				'Trading_TradingResources': {
					'type': IngameHelp.View,
					'order': 0
				},
				'Trading_OfferingResources': {
					'type': IngameHelp.View,
					'order': 1
				},
				'Trading_SendingResources': {
					'type': IngameHelp.View,
					'order': 2
				},
				'Trading_TradeRoutes': {
					'type': IngameHelp.View,
					'order': 3
				}
			}
		},
		'Progress': {
			'type': IngameHelp.Topic,
			'order': 9,
			'children': {
				'Progress_Achievements': {
					'type': IngameHelp.View,
					'order': 0,
					'featureFlag': 'achievements'
				},
				'Progress_DailyQuests': {
					'type': IngameHelp.View,
					'order': 1,
					'featureFlag': 'dailyQuests'
				},
				'Progress_Prestige': {
					'type': IngameHelp.View,
					'order': 2,
					'featureFlag': 'prestige'
				}
			}
		},
		'MilitaryAndDiplomacy': {
			'type': IngameHelp.Topic,
			'order': 10,
			'children': {
				'MilitaryAndDiplomacy_AttackTypes': {
					'type': IngameHelp.View,
					'order': 0
				},
				'MilitaryAndDiplomacy_SupportOtherPlayers': {
					'type': IngameHelp.View,
					'order': 1
				},
				'MilitaryAndDiplomacy_StrategicMap': {
					'type': IngameHelp.View,
					'order': 2
				},
				'MilitaryAndDiplomacy_Alliance': {
					'type': IngameHelp.View,
					'order': 3
				},
				'MilitaryAndDiplomacy_SecretSocieties': {
					'type': IngameHelp.View,
					'order': 4
				},
				'MilitaryAndDiplomacy_VictoryPoints': {
					'type': IngameHelp.View,
					'order': 5
				},
				'MilitaryAndDiplomacy_WonderOfTheWorld': {
					'type': IngameHelp.View,
					'order': 6
				},
				'MilitaryAndDiplomacy_FarmLists': {
					'type': IngameHelp.View,
					'order': 7
				},
				'MilitaryAndDiplomacy_Conquering': {
					'type': IngameHelp.View,
					'order': 8
				}
			}
		},
		'Premium': {
			'type': IngameHelp.Topic,
			'order': 11,
			'children': {
				'Premium_CardGame': {
					'type': IngameHelp.View,
					'order': 0,
					'featureFlag': 'cardGame'
				},
				'Premium_RuntimeFeatures': {
					'type': IngameHelp.View,
					'order': 1
				},
				'Premium_InstantFeatures': {
					'type': IngameHelp.View,
					'order': 2
				},
				'Premium_InviteAFriend': {
					'type': IngameHelp.View,
					'order': 3,
					'featureFlag': 'inviteFriend'
				},
				'Premium_MasterBuilder': {
					'type': IngameHelp.View,
					'order': 4
				}
			}
		},
		'AccountSystem': {
			'type': IngameHelp.Topic,
			'order': 12,
			'children': {
				'AccountSystem_AccountAndAvatars': {
					'type': IngameHelp.View,
					'order': 0
				},
				'AccountSystem_DualsAndSitters': {
					'type': IngameHelp.View,
					'order': 1
				},
				'AccountSystem_GoldTransfer': {
					'type': IngameHelp.View,
					'order': 2
				}
			}
		}
	};

	//The sort order the buildings will appear in the navigation list
	var buildingsOrder = {
		1:[//Infrastructure
			Building.TYPE.MAIN_BUILDING,
			Building.TYPE.WAREHOUSE,
			Building.TYPE.GRANARY,
			Building.TYPE.CRANNY,
			Building.TYPE.MARKET,
			Building.TYPE.EMBASSY,
			Building.TYPE.RESIDENCE,
			Building.TYPE.PALACE,
			Building.TYPE.TOWN_HALL,
			Building.TYPE.TREASURY,
			Building.TYPE.HIDDEN_TREASURY,
			Building.TYPE.STONEMASON,
			Building.TYPE.TRADE_OFFICE,
			Building.TYPE.WONDER_OF_WORLD,
			Building.TYPE.GREAT_WAREHOUSE,
			Building.TYPE.GREAT_GRANARY
		],
		2:[//Military
			Building.TYPE.RALLY_POINT,
			Building.TYPE.BARRACKS,
			Building.TYPE.STABLE,
			Building.TYPE.WORKSHOP,
			Building.TYPE.ACADEMY,
			Building.TYPE.BLACKSMITH,
			Building.TYPE.TRAPPER,
			Building.TYPE.CITY_WALL,// roman wall
			Building.TYPE.EARTH_WALL,// teuton wall
			Building.TYPE.PALLISADE,// gaul wall
			Building.TYPE.NATAR_CITY_WALL,// natar wall
			Building.TYPE.MOAT,
			Building.TYPE.TOURNAMENT_SQUARE,
			Building.TYPE.HORSE_DRINKING_TROUGH,
			Building.TYPE.BREWERY,
			Building.TYPE.TEAHOUSE,
			Building.TYPE.GREAT_BARRACKS,
			Building.TYPE.GREAT_STABLE
		],
		3:[//Resources
			Building.TYPE.WOOD,
			Building.TYPE.CLAY,
			Building.TYPE.IRON,
			Building.TYPE.CROP,
			Building.TYPE.SAWMILL,
			Building.TYPE.CLAY_BAKERY,
			Building.TYPE.IRON_FOUNDRY,
			Building.TYPE.MILL,
			Building.TYPE.BAKERY
		]
	};

	function getSortOrder(category, buildingType){

		if(typeof(buildingsOrder[category]) !== 'undefined' && typeof(buildingsOrder[category].indexOf(buildingType)) !== 'undefined'){
			return buildingsOrder[category].indexOf(buildingType);
		}
		return 0;
	}

	function enabledElements(children){
		// removes disabled features' from help structure,
		// also removes category if it contains 0 children
		var totalActiveChildren = 0;
		for(var childId in children) {
			if(children.hasOwnProperty(childId)) {
				if (children[childId]['featureFlag'] && !Travian.Config['features'][children[childId]['featureFlag']]) {
					delete children[childId];
				} else {
					totalActiveChildren++;
					if (typeof(children[childId]['children']) != 'undefined') {
						var actualChildren = enabledElements(children[childId]['children']);
						if (actualChildren) {
							children[childId]['children'] = actualChildren;
						} else {
							delete children[childId];
						}
					}
				}
			}
		}
		if(!totalActiveChildren) {
			return null;
		}
		return children;
	}

	function loadBuildings () {
		for(var buildingType in Travian.Config['buildingConfig']) {
			if ((buildingType == Building.TYPE.BREWERY) && (Travian.Config['teahouse'] === "true" || Travian.Config['teahouse'] === true)) {
				continue;
			}
			if ((buildingType == Building.TYPE.TEAHOUSE) && (Travian.Config['teahouse'] === "false" || Travian.Config['teahouse'] === false)) {
				continue;
			}
			var data = angular.copy(Travian.Config['buildingConfig'][buildingType]);
			data["descriptionParam"] = Building.getDescriptionParamByType(buildingType);

			var building = {
				'type': IngameHelp.Building,
				'order': getSortOrder(data['category'],parseInt(buildingType)),
				'data': data
			};

			switch (building['data']['category']) {
				case Building.CATEGORY.INFRASTRUCTURE:
					config['Buildings']['children']['Buildings_Infrastructure']['children']['Buildings_Infrastructure_' + buildingType] = building;
					break;
				case Building.CATEGORY.MILITARY:
					config['Buildings']['children']['Buildings_Military']['children']['Buildings_Military_' + buildingType] = building;
					break;
				case Building.CATEGORY.RESOURCES:
					config['Buildings']['children']['Buildings_Resources']['children']['Buildings_Resources_' + buildingType] = building;
					break;
			}
		}
	}

	function loadUnits () {
		for(var unitId in Travian.Config['troopConfig']) {
			var data = angular.copy(Travian.Config['troopConfig'][unitId]);
			data['time'] = Math.ceil(data['time'] / Travian.Config['TG_SPEED']);

			var unit = {
				'type': IngameHelp.Unit,
				'order': data['nr'],
				'data': data
			};

			switch (unit['data']['tribe']) {
				case Player.TRIBE.ROMAN:
					config['Troops']['children']['Troops_Romans']['children']['Troops_Romans_' + unit['data']['nr']] = unit;
					break;
				case Player.TRIBE.TEUTON:
					config['Troops']['children']['Troops_Teutons']['children']['Troops_Teutons_' + unit['data']['nr']] = unit;
					break;
				case Player.TRIBE.GAUL:
					if (unit['data']['nr'] != 79) {
						// 79 troop type is Trap
						config['Troops']['children']['Troops_Gauls']['children']['Troops_Gauls_' + unit['data']['nr']] = unit;
					}
					break;
			}
		}
	}

	this.getBuildingViewIdByType = function(type){

		for(var category in config['Buildings']['children']){
			if (typeof(config['Buildings']['children'][category]['children'][category + '_' + type]) != "undefined") {
				return category + '_' + type
			}
		}

	};

	this.getItemViewIdByItemIdAndCategory = function(category, itemId){
		var item = null;
		var tribe = null;
		if("buildings" == category) {
			item =  Travian.Config.buildingConfig[itemId];
			return this.getBuildingViewIdByType(item['buildingType']);
		} else if("troops" == category) {
			item =  Travian.Config['troopConfig'][itemId];
			tribe = Player.TRIBE_NAME[item['tribe']];
			var navitagtionLevel = category.ucfirst() + '_' + tribe.ucfirst() + 's';
			if (typeof(config[category.ucfirst()]['children'][navitagtionLevel]['children'][navitagtionLevel + '_' + item['nr']]) != "undefined") {
				return navitagtionLevel + '_' + item['nr'];
			}
		}
	};

	this.getRandomTopic = function(){
		var topicsToChooseFrom = Object.keys(config);
		topicsToChooseFrom.splice(topicsToChooseFrom.indexOf('Troops'), 1);
		topicsToChooseFrom.splice(topicsToChooseFrom.indexOf('Buildings'), 1);
		var topic = config[topicsToChooseFrom[Math.floor(Math.random() * topicsToChooseFrom.length)]];
		var childKeys = Object.keys(topic.children);
		return {
			'viewId': childKeys[childKeys.length * Math.random() << 0],
			'type': IngameHelp.View
		};
	};

	this.getParentForId = function(id, firstLevel) {
		var Ids = id.split('_');

		if (Ids.length <= 1) {
			return false;
		}

		var parent = config;
		var grandparents = null;
		var parentId = null;
		for(var i = 0; i < Ids.length - 1; i++) {
			if(parentId == null) {
				parentId = Ids[i];
			} else {
				parentId = parentId + '_'+Ids[i];
			}

			grandparents = parent;
			if(typeof parent[parentId] !== 'undefined') {
				parent = parent[parentId];
			} else {
				parent = parent['children'][parentId];
			}
		}
		if(firstLevel && parent['type'] == 'group'){
			return grandparents;
		}
		return parent;
	};

	this.getById = function (id) {
		var Ids = id.split('_');

		if (Ids.length < 1 || id == 'index') {
			return config;
		}
		var element = config;
		var parentId = null;
		for(var i = 0; i < Ids.length; i++){
			if(parentId == null) {
				parentId = Ids[i];
			} else {
				parentId = parentId + '_'+Ids[i];
			}
			if(typeof element[parentId] !== 'undefined') {
				element = element[parentId];
			} else {
				if ((element['children'] !== undefined) && (element['children'][parentId] !== undefined)) {
					element = element['children'][parentId];
				} else {
					return null;
				}
			}
		}

		return element;
	};

	loadBuildings();
	loadUnits();
	//leave only enabled features' pages after all pages were loaded
	config = enabledElements(config);
}

IngameHelp.Index = 'index';
IngameHelp.Topic = 'topic';
IngameHelp.View = 'view';
IngameHelp.Group = 'group';
IngameHelp.Building = 'building';
IngameHelp.Unit = 'unit';;window['KingdomTreasures'] = function KingdomTreasures () {
	this.defaultData = {
		'kingdomId' : 0,
		'treasuresLatestWeek': 0,
		'treasuresCurrent': 0
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'kingdomTreasures';
}

KingdomTreasures.prototype = new AbstractModel();
Cache.register(KingdomTreasures);
/**
 * MapDetails Model
 *
 * @constructor
 * @extends {AbstractData}
 * @param x
 * @param y
 */
;window['MapDetails'] = function MapDetails (id) {
	this.defaultData = {
		'x': null,
		'y:': null,
		'reports': null,
		'troops': null,
		'isOasis': null,
		'hasVillage': null,
		'isWonder': false,
		'resType': null,
		'oasisBonus': null,
		'playerId': null,
		'allianceId': null
	};

	this.data = {};

	this.filteredTroops = [];

	this.set = function (data) {
		data = data || {};

		this.parent.set.call(this, data, false);

		this.filteredTroops = [];

		if (this.data.npcInfo) {
			//Robber villages have npcInfo field with necessary data
			//For consistency we pull out troops and tribe info from npcInfo
			this.data.troops = this.data.npcInfo.troops;
			this.data.tribeId = this.data.npcInfo.tribeId;
		}

		if (this.data.troops != null) {
			for (var troopNr in this.data.troops.units) {
				if (this.data.troops.units[troopNr] > 0) {
					this.filteredTroops.push({'nr': troopNr, 'amount': this.data.troops.units[troopNr]});
				}
			}
		}
	};

	this.set(this.defaultData);


	this.name = 'MapDetails';
}

MapDetails.prototype = new AbstractModel();
Cache.register(MapDetails, 'MapDetails:', 60);
/**
 * Marker Model
 *
 * @constructor
 * @extends {AbstractData}
 */
;window['Marker'] = function Marker () {
	this.defaultData = {
		'id': 0,
		'owner': 0,
		'ownerId': 0,
		'type': 0,
		'targetId': 0,
		'color': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'Marker';
}

Marker.OWNER_PLAYER = 1;
Marker.OWNER_ALLIANCE = 2;

Marker.TYPE_PLAYER = 1;
Marker.TYPE_ALLIANCE = 2;
Marker.TYPE_COORDINATES = 3;
Marker.TYPE_TROOP_MOVEMENT = 4;
Marker.TYPE_KING_VILLAGE = 5;

Marker.editTypes = {
	TYPE_EDIT: 1,
	TYPE_DELETE: 2,
	TYPE_CREATE: 3
};

Marker.COLOR_BLUE = {
	index: 1,
	name: '01',
	cssStyle: {'background-color': '#3399ff'},
	colorRGBValues: '51, 153, 255'
};
Marker.COLOR_YELLOW = {
	index: 2,
	name: '02',
	cssStyle: {'background-color': '#ff9900'},
	colorRGBValues: '255, 153, 0'
};
Marker.COLOR_BROWN = {
	index: 3,
	name: '03',
	cssStyle: {'background-color': '#996633'},
	colorRGBValues: '153, 102, 51'
};
Marker.COLOR_OWN = {
	index: 4,
	name: '04',
	cssStyle: {'background-color': '#ffe500'},
	colorRGBValues: '255, 229, 0'
};
Marker.COLOR_TEAL = {
	index: 5,
	name: '05',
	cssStyle: {'background-color': '#66ffff'},
	colorRGBValues: '102, 255, 255'
};
Marker.COLOR_DARK_GREEN = {
	index: 6,
	name: '06',
	cssStyle: {'background-color': '#006633'},
	colorRGBValues: '0, 102, 51'
};
Marker.COLOR_LIGHT_GREEN = {
	index: 7,
	name: '07',
	cssStyle: {'background-color': '#66ff66'},
	colorRGBValues: '102, 255, 102'
};
Marker.COLOR_DARK_BLUE = {
	index: 8,
	name: '08',
	cssStyle: {'background-color': '#3366cc'},
	colorRGBValues: '51, 102, 204'
};
Marker.COLOR_ALLIANCE = {
	index: 9,
	name: '09',
	cssStyle: {'background-color': '#3333cc'},
	colorRGBValues: '51, 51, 204'
};
Marker.COLOR_PURPLE = {
	index: 10,
	name: '10',
	cssStyle: {'background-color': '#993399'},
	colorRGBValues: '153, 51, 153'
};
Marker.COLOR_PINK = {
	index: 11,
	name: '11',
	cssStyle: {'background-color': '#ff66ff'},
	colorRGBValues: '255, 102, 255'
};
Marker.COLOR_RED = {
	index: 12,
	name: '12',
	cssStyle: {'background-color': '#cc3333'},
	colorRGBValues: '204, 41, 41'
};
Marker.COLOR_ENEMY = {
	index: 13,
	name: '13',
	cssStyle: {'background-color': '#cc3333'},
	colorRGBValues: '204, 41, 41'
};
Marker.COLOR_NEUTRAL = {
	index: 15,
	name: '15',
	cssStyle: {'background-color': '#daeacd'},
	colorRGBValues: '218, 234, 205'
};
Marker.TREATY_COLOR_NAP = {
	index: 16,
	name: '16',
	cssStyle: {'background-color': '#00ffff'},
	colorRGBValues: '0, 255, 255'
};
Marker.TREATY_COLOR_BND = {
	index: 17,
	name: '17',
	cssStyle: {'background-color': '#00ff00'},
	colorRGBValues: '0, 255, 0'
};

Marker.COLORS = {
	1: Marker.COLOR_BLUE,
	2: Marker.COLOR_YELLOW,
	3: Marker.COLOR_BROWN,
	4: Marker.COLOR_OWN,
	5: Marker.COLOR_TEAL,
	6: Marker.COLOR_DARK_GREEN,
	7: Marker.COLOR_LIGHT_GREEN,
	8: Marker.COLOR_DARK_BLUE,
	9: Marker.COLOR_ALLIANCE,
	10: Marker.COLOR_PURPLE,
	11: Marker.COLOR_PINK,
	12: Marker.COLOR_RED,
	13: Marker.COLOR_ENEMY,
	15: Marker.COLOR_NEUTRAL,
	16: Marker.TREATY_COLOR_NAP,
	17: Marker.TREATY_COLOR_BND
};

Marker.VILLAGE_OWN = 'playerMarker/playerMarker_04';
Marker.VILLAGE_ALLIANCE = 'allianceMarker/allianceMarker_09';
Marker.VILLAGE_GOVERNOR = 'allianceMarker/allianceMarker_14';


Marker.prototype = new AbstractModel();
Cache.register(Marker, 'MapMarker:');/**
 * Medal Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Medal'] = function Medal () {
	this.defaultData = {
		'medalId': 0,
		'type': 0,
		'week': 0,
		'playerId': 0,
		'rank': 0,
		'time': 0,
		'prestige': 0
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'Medal';
}

Medal.prototype = new AbstractModel();
Cache.register(Medal);

Medal.TYPE_CLIMBER = 1;
Medal.TYPE_ATTACKER = 2;
Medal.TYPE_DEFENDER = 3;
Medal.TYPE_ROBBER = 4;
Medal.TypeString =  {
	1: 'climber',
	2: 'attacker',
	3: 'defender',
	4: 'robber'
};/**
 * Merchants Model
 *
 * @constructor
 * @extends {AbstractData}
 */
;window['Merchants'] = function Merchants () {
	this.defaultData = {
		'villageId': 0,
		'max': 0,
		'inOffers': 0,
		'inTransport': 0,
		'carry': 0,
		'speed': 0,
		'merchantsFree': 0,
		'maxCapacity': 0
	};

	this.data = {};
	this.set = function (data) {
		this.parent.set.call(this, data, false);
		this.data['merchantsFree'] = Math.max(0, (this.data['max'] - this.data['inOffers'] - this.data['inTransport']));
		this.data['maxCapacity'] = this.data['carry'] * this.data['merchantsFree'];
	};
	this.set(this.defaultData);
	this.name = 'Merchants';
}
Merchants.getTributeCollectorSpeed = function (tribeId) {
	"use strict";
	return (Travian.Config['merchantSpeed'][tribeId] / 3600) * Travian.Config['TG_SPEED'];
};
Merchants.prototype = new AbstractModel();
Cache.register(Merchants);/**
 * Notepad Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Notepad'] = function Notepad () {
	this.defaultData = {
		'id': 0,
		'positionX': 50,
		'positionY': 50,
		'sizeX': 10,
		'sizeY': 10,
		'text': ""
	};

	this['inEditor'] = false;

	this.data = {};

	this.style = {'left': 0, 'top': 0, 'transform': 'translate3d(0,0,0)', 'width': 0, 'height': 0, 'zIndex': 1000};
	this.editText = '';

	this.set = function (data) {
		this.parent.set.call(this, data);
		this.style['left'] = this.data['positionX']+"%";
		this.style['top'] = this.data['positionY']+"%";
		this.style['width'] = this.data['sizeX']+"%";
		this.style['height'] = this.data['sizeY']+"%";
		if (!this['inEditor']) {
			this.editText = this.data['text'];
		}
		if (Notepad.setNextToEdit) {
			Notepad.setNextToEdit = false;
			this['inEditor'] = true;
		}
	};

	this.setFocus = function() {
		this.style['zIndex'] = Travian.getWindowZIndex();
	};

	this.persist = function () {
		var data = {'newSettings': {}};
		for (var key in this.defaultData) {
			data['newSettings'][key] = this.data[key];
		}
		Travian.request('player/changeNote', data);
	};

	this.delete = function() {
		var data = {'id': this.data['id']};
		Travian.request('player/removeNote', data);
	};

	this.requestNewNote = function() {
		var data = {'x': this.data['positionX'], 'y': this.data['positionY']};
		Notepad.setNextToEdit = true;
		Travian.request('player/addNote', data);
	};

	this.set(this.defaultData);

	this.name = 'Notepad';
}

Notepad.setNextToEdit = false;

Notepad.prototype = new AbstractModel();
Cache.register(Notepad);/**
 * Notifications Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Notifications'] = function Notifications () {
	this.defaultData = {};

	this.data = {};

	this.set = function (data) {
		data.icon = Notifications.getNotificationIcon(data.type, 'medium');
		this.parent.set.call(this, data, false);
	};

	this.name = 'Notifications';
}

Notifications.collectionUpdatedFct = function (newNotifications) {
	Travian.rootScope.$broadcast('notificationReceived', newNotifications);
};

Notifications.TYPE_FLASH = 'flashNotification';
Notifications.TYPE_NORMAL = '';
Notifications.TYPE_TIMED = 'timed';
Notifications.TYPE_CHAT = 'chatNotification';
Notifications.TYPE_IN_GAME_HELP = 'inGameHelp';
Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES = 1;
Notifications.REPORT_ATTACKER_WON_WITH_LOSSES = 2;
Notifications.REPORT_ATTACKER_LOST = 3;
Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES = 4;
Notifications.REPORT_DEFENDER_WON_WITH_LOSSES = 5;
Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES = 6;
Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES = 7;
Notifications.REPORT_SUPPORT_ARRIVED = 8;
Notifications.REPORT_TRADE = 10;
Notifications.REPORT_TRADE_WOOD = 11;
Notifications.REPORT_TRADE_CLAY = 12;
Notifications.REPORT_TRADE_IRON = 13;
Notifications.REPORT_TRADE_CROP = 14;
Notifications.REPORT_SPY_SUCCESS_UNDETECTED = 15;
Notifications.REPORT_SPY_SUCCESS_DETECTED = 16;
Notifications.REPORT_SPY_FAILURE = 17;
Notifications.REPORT_SPY_DEFENDED = 18;
Notifications.REPORT_SPY_NOT_DEFENDED = 19;
Notifications.REPORT_CAPTURED_ANIMALS = 20;
Notifications.REPORT_ADVENTURE = 21;
Notifications.REPORT_WORLD_PEACE = 22;
Notifications.REPORT_PRESTIGE = 23;
Notifications.TRIBUTE_COLLECTED = 31;
Notifications.TROOPS_SEND = 32;
Notifications.CONSTRUCTION_STARTED = 33;
Notifications.TRADER_STARTED = 34;
Notifications.TROOPS_RETURNED = 36;
Notifications.TROOPS_RELEASED = 37;
Notifications.TROOPS_DISBANDED = 38;
Notifications.BUILDING_FINISHED = 39;
Notifications.BUILDING_COMPLETELY_DESTROYED = 41;
Notifications.UNIT_RESEARCH_COMPLETED = 42;
Notifications.NEW_VILLAGE_SETTLED = 43;
Notifications.ATTACK_VILLAGE_STARTED = 44;
Notifications.ALLIANCE_INVITATION_RECEIVED = 45;
Notifications.AUCTION_OVERBID = 46;
Notifications.AUCTION_WON = 47;
Notifications.FRIEND_REQUEST_RECEIVED = 48;
Notifications.SOCIETY_INVITATION_RECEIVED = 49;
Notifications.TRADER_SENT = 50;
Notifications.CELEBRATION_STARTED = 51;
Notifications.CELEBRATION_ENDED = 52;
Notifications.TROOPS_RECRUITING_STARTED = 53;
Notifications.UNIT_RESEARCH_STARTED = 54;
Notifications.TROOPS_SUPPORT_SEND_HOME = 55;
Notifications.TROOPS_INCOMING_FOREIGN_SUPPORT = 57;
Notifications.PLAYER_IS_ATTACKED = 58;
Notifications.REPORT_SHARED_OWN = 60;
Notifications.REPORT_SHARED_KINGDOM = 61;
Notifications.REPORT_SHARED_ALLIANCE = 62;
Notifications.REPORT_SHARED_SOCIETIES = 63;
Notifications.REPORT_SHARED = 64; //we may decide in the future to display a single unified icon for all shared reports
Notifications.KINGDOM_TAX_CHANGED = 65;
Notifications.KINGDOM_CHANGED = 66;
Notifications.REQUEST_SENT = 67;
Notifications.KING_REQUEST_RECEIVED = 68;
Notifications.TROOPS_RELEASED_OTHER_TROOPS = 69;
Notifications.ALLIANCE_PROMOTION_RECEIVED = 70;
Notifications.ALLIANCE_DEGRADED = 71;
Notifications.TIMER_CORONATION = 72;
Notifications.TIMER_NOOB_PROTECTION = 73;
Notifications.TIMER_DELETION = 74;
Notifications.TIMER_STARVATION_DEACTIVATED = 75;
Notifications.TIMER_WORLD_PEACE = 76;
Notifications.TIMER_GOLD_PROMOTION = 78;
Notifications.TIMER_PLUS_RUNS_OUT = 79;
Notifications.TIMER_RES_BONUS_RUNS_OUT = 80;
Notifications.TIMER_CROP_BONUS_RUNS_OUT = 81;
Notifications.SYSTEM_MESSAGE = 82;
Notifications.AUTO_EXTEND_RES_PRODUCTION_BONUS_NOT_ENOUGH_GOLD = 86;
Notifications.AUTO_EXTEND_CROP_PRODUCTION_BONUS_NOT_ENOUGH_GOLD = 87;
Notifications.AUTO_EXTEND_PLUS_NOT_ENOUGH_GOLD = 88;
Notifications.RES_BONUS_ENDS = 89;
Notifications.CROP_BONUS_ENDS = 90;
Notifications.PLUS_BONUS_ENDS = 91;
Notifications.KINGDOM_OASIS_LOST = 92;
Notifications.KINGDOM_OASIS_WON = 93;
Notifications.OASIS_BONUS_CHANGED = 94;
Notifications.TIMER_NATAR_SPIES_ATTACK = 95;
Notifications.HELP_CENTER_MESSAGE_RECEIVED = 97;
Notifications.TIMER_WORLD_PEACE_TO_BE_ACTIVATED = 98;
Notifications.TIMER_WORLD_PEACE_DISABLE_ONLY_STARVATION = 99;
Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE = 100;
Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE_SOON = 101;
Notifications.NEW_ROBBER_CAMPS = 102;
Notifications.GLOBAL_WORLD_ENDED = 104;
Notifications.DUKE_REQUEST_RECEIVED = 105;
Notifications.DUKE_REQUEST_DECLINED = 106;
Notifications.DUKE_REQUEST_ACCEPTED = 107;
Notifications.DUKE_ABDICATED = 108;
Notifications.DUKE_DISMISSED = 109;
Notifications.ACTIVATION_NEEDED = 110; // Pseudo Notification, no event
Notifications.ADDED_CARDGAME_FREE_ROLL = 111;
Notifications.COOP_PACKAGE_GRANTED = 112;
Notifications.INVITATION_EMAIL_SENT = 113;
Notifications.REFERRAL_REWARD_CAN_COLLECT = 114;
Notifications.REPORT_FARMLIST_RAID = 115;
Notifications.ACHIEVEMENT = 116;
Notifications.RELOCATION = 117;
Notifications.REPORT_FARMLIST_COMPLETED_WITHOUT_LOSSES = 118;
Notifications.REPORT_FARMLIST_COMPLETED_WITH_LOSSES = 119;
Notifications.REPORT_FARMLIST_COMPLETED_WITH_FULL_LOSSES = 120;
Notifications.USED_ITEM_ARTWORK = 121;
Notifications.CELEBRATION_STARTED_POINTS_GAINED = 122;
Notifications.CELEBRATION_STARTED_IN_QUEUE = 123;
Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITHOUT_LOSSES   = 124;
Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_LOSSES      = 125;
Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_FULL_LOSSES = 126;
Notifications.FARMLIST_ADDED_VILLAGE = 127;
Notifications.FARMLIST_REMOVED_VILLAGE = 128;

Notifications.FIGHT_AND_SPY_REPORTS = [
	Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES,
	Notifications.REPORT_ATTACKER_WON_WITH_LOSSES,
	Notifications.REPORT_ATTACKER_LOST,
	Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES,
	Notifications.REPORT_DEFENDER_WON_WITH_LOSSES,
	Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES,
	Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES,
	Notifications.REPORT_SPY_SUCCESS_UNDETECTED,
	Notifications.REPORT_SPY_SUCCESS_DETECTED,
	Notifications.REPORT_SPY_FAILURE,
	Notifications.REPORT_SPY_DEFENDED,
	Notifications.REPORT_SPY_NOT_DEFENDED
];

Notifications.TYPE_STRINGS = {};
Notifications.TYPE_STRINGS[Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES] =  'attackerWonWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_ATTACKER_WON_WITH_LOSSES] =  'attackerWonWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_ATTACKER_LOST] =  'attackerLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES] =  'defenderWonWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_WON_WITH_LOSSES] =  'defenderWonWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES] =  'defenderLostWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES] =  'defenderLostWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_SUCCESS_UNDETECTED] =  'spyAttackerWonWithoutLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_SUCCESS_DETECTED] =  'spyAttackerWonWithLosses';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_FAILURE] =  'spyAttackerLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_DEFENDED] =  'spyDefenderWon';
Notifications.TYPE_STRINGS[Notifications.REPORT_SPY_NOT_DEFENDED] =  'spyDefenderLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_ADVENTURE + '_won'] =  'adventureWon';
Notifications.TYPE_STRINGS[Notifications.REPORT_ADVENTURE + '_lost'] =  'adventureLost';
Notifications.TYPE_STRINGS[Notifications.REPORT_CAPTURED_ANIMALS] =  'capturedAnimals';
Notifications.TYPE_STRINGS[Notifications.REPORT_SUPPORT_ARRIVED] =  'support';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE] =  'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_WOOD] =  'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_CLAY] =  'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_IRON] =  'trade';
Notifications.TYPE_STRINGS[Notifications.REPORT_TRADE_CROP] =  'trade';

Notifications.getNotificationIcon = function (notificationType, size) {
	if(size != 'small' && size != 'medium') {
		size == 'small';
	}

	var iconMapping = [];
	iconMapping[Notifications.REPORT_ATTACKER_WON_WITHOUT_LOSSES] = 'movement_attack_' + size + '_flat_positive';
	iconMapping[Notifications.REPORT_ATTACKER_WON_WITH_LOSSES] = 'movement_attack_' + size + '_flat_uncertain';
	iconMapping[Notifications.REPORT_ATTACKER_LOST] = 'movement_attack_' + size + '_flat_negative';
	iconMapping[Notifications.REPORT_DEFENDER_WON_WITHOUT_LOSSES] = 'movement_defend_' + size + '_flat_positive';
	iconMapping[Notifications.REPORT_DEFENDER_WON_WITH_LOSSES] = 'movement_defend_' + size + '_flat_uncertain';
	iconMapping[Notifications.REPORT_DEFENDER_LOST_WITH_LOSSES] = 'movement_defend_' + size + '_flat_negative';
	iconMapping[Notifications.REPORT_DEFENDER_LOST_WITHOUT_LOSSES] = 'movement_defend_' + size + '_flat_neutral';
	iconMapping[Notifications.REPORT_SUPPORT_ARRIVED] = 'movement_support_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_TRADE] = 'movement_trade_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_TRADE_WOOD] = 'movement_trade_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_TRADE_CLAY] = 'movement_trade_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_TRADE_IRON] = 'movement_trade_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_TRADE_CROP] = 'movement_trade_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_SPY_SUCCESS_UNDETECTED] = 'movement_spyAttack_' + size + '_flat_positive';
	iconMapping[Notifications.REPORT_SPY_SUCCESS_DETECTED] = 'movement_spyAttack_' + size + '_flat_uncertain';
	iconMapping[Notifications.REPORT_SPY_FAILURE] = 'movement_spyAttack_' + size + '_flat_negative';
	iconMapping[Notifications.REPORT_SPY_DEFENDED] = 'movement_spyDefend_' + size + '_flat_positive';
	iconMapping[Notifications.REPORT_SPY_NOT_DEFENDED] = 'movement_spyDefend_' + size + '_flat_negative';
	iconMapping[Notifications.REPORT_CAPTURED_ANIMALS] = 'movement_capture_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_ADVENTURE] = 'movement_adventure_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_WORLD_PEACE] = 'movement_peace_' + size + '_flat_black';
	iconMapping[Notifications.ALLIANCE_INVITATION_RECEIVED] = 'action_invite_' + size + '_flat_black';
	iconMapping[Notifications.AUCTION_OVERBID] = 'feature_auction_' + size + '_flat_negative';
	iconMapping[Notifications.AUCTION_WON] = 'feature_auction_' + size + '_flat_positive';
	iconMapping[Notifications.FRIEND_REQUEST_RECEIVED] = 'community_friend_' + size + '_flat_black';
	iconMapping[Notifications.SOCIETY_INVITATION_RECEIVED] = 'action_invite_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_SHARED_OWN] = 'notification_sharedPlayer_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_SHARED_KINGDOM] = 'notification_sharedKingdom_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_SHARED_ALLIANCE] = 'notification_sharedAlliance_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_SHARED_SOCIETIES] = 'notification_sharedSecretSociety_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_SHARED] = 'report_share_' + size + '_flat_black';
	iconMapping[Notifications.KINGDOM_TAX_CHANGED] = 'movement_tribute_' + size + '_flat_black';
	iconMapping[Notifications.KINGDOM_CHANGED] = 'community_kingdom_' + size + '_flat_black';
	iconMapping[Notifications.KING_REQUEST_RECEIVED] = 'action_invite_' + size + '_flat_black';
	iconMapping[Notifications.ALLIANCE_PROMOTION_RECEIVED] = 'community_alliance_' + size + '_flat_positive';
	iconMapping[Notifications.ALLIANCE_DEGRADED] = 'community_alliance_' + size + '_flat_negative';
	iconMapping[Notifications.TIMER_CORONATION] = 'community_kingdom_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_NOOB_PROTECTION] = 'feature_beginnersProtection_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_DELETION] = 'notification_playerDeletion_' + size + '_flat_red';
	iconMapping[Notifications.TIMER_STARVATION_DEACTIVATED] = 'notification_starvation_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_WORLD_PEACE_DISABLE_ONLY_STARVATION] = 'notification_starvation_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_WORLD_PEACE] = 'movement_peace_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_GOLD_PROMOTION] = 'notification_goldPromotion_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_PLUS_RUNS_OUT] = 'notification_plus_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_RES_BONUS_RUNS_OUT] = 'notification_resourceBonus_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_CROP_BONUS_RUNS_OUT] = 'notification_cropBonus_' + size + '_flat_black';
	iconMapping[Notifications.SYSTEM_MESSAGE] = 'notification_systemMessage_' + size + '_flat_black';
	iconMapping[Notifications.AUTO_EXTEND_RES_PRODUCTION_BONUS_NOT_ENOUGH_GOLD] = 'notification_resourceBonus_' + size + '_flat_black';
	iconMapping[Notifications.AUTO_EXTEND_CROP_PRODUCTION_BONUS_NOT_ENOUGH_GOLD] = 'notification_cropBonus_' + size + '_flat_black';
	iconMapping[Notifications.AUTO_EXTEND_PLUS_NOT_ENOUGH_GOLD] = 'notification_plus_' + size + '_flat_black';
	iconMapping[Notifications.RES_BONUS_ENDS] = 'notification_resourceBonus_' + size + '_flat_red';
	iconMapping[Notifications.CROP_BONUS_ENDS] = 'notification_cropBonus_' + size + '_flat_red';
	iconMapping[Notifications.PLUS_BONUS_ENDS] = 'notification_plus_' + size + '_flat_red';
	iconMapping[Notifications.KINGDOM_OASIS_LOST] = 'feature_oasis_' + size + '_flat_negative';
	iconMapping[Notifications.KINGDOM_OASIS_WON] = 'feature_oasis_' + size + '_flat_positive';
	iconMapping[Notifications.OASIS_BONUS_CHANGED] = 'feature_oasis_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_NATAR_SPIES_ATTACK] = 'feature_natars_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_WORLD_PEACE_TO_BE_ACTIVATED] = 'movement_peace_' + size + '_flat_black';
	iconMapping[Notifications.TIMER_STARVATION_DEACTIVATED] = 'notification_starvation_' + size + '_flat_black';
	iconMapping[Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE] = 'unit_culturePoint_' + size + '_flat_black';
	iconMapping[Notifications.ENOUGH_CULTURE_POINTS_FOR_VILLAGE_SOON] = 'unit_culturePoint_' + size + '_flat_black';
	iconMapping[Notifications.NEW_ROBBER_CAMPS] = 'feature_robberCamp_' + size + '_flat_black';
	iconMapping[Notifications.GLOBAL_WORLD_ENDED] = 'feature_worldWonder_' + size + '_flat_black';
	iconMapping[Notifications.ACTIVATION_NEEDED] = 'notification_playerActivation_' + size + '_flat_red';
	iconMapping[Notifications.DUKE_REQUEST_RECEIVED] = 'community_kingdom_' + size + '_flat_positive';
	iconMapping[Notifications.DUKE_REQUEST_DECLINED] = 'notification_dukeDecline_' + size + '_flat_negative';
	iconMapping[Notifications.DUKE_REQUEST_ACCEPTED] = 'notification_dukeAccept_' + size + '_flat_positive';
	iconMapping[Notifications.DUKE_ABDICATED] = 'notification_dukeLeave_' + size + '_flat_negative';
	iconMapping[Notifications.DUKE_DISMISSED] = 'notification_dukeLeave_' + size + '_flat_red';
	iconMapping[Notifications.HELP_CENTER_MESSAGE_RECEIVED] = 'notification_helpCenter_' + size + '_flat_black';
	iconMapping[Notifications.ADDED_CARDGAME_FREE_ROLL] = 'cardGame_cardGame_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_PRESTIGE] = 'feature_prestige_' + size + '_flat_black';
	iconMapping[Notifications.COOP_PACKAGE_GRANTED] = 'notification_coopPackage_' + size + '_flat_black';
	iconMapping[Notifications.REFERRAL_REWARD_CAN_COLLECT] = 'action_invite_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_FARMLIST_RAID] = 'movement_attack_' + size + '_flat_uncertain';
	iconMapping[Notifications.ACHIEVEMENT] = 'feature_achievement_' + size + '_flat_black';
	iconMapping[Notifications.RELOCATION] = 'notification_sharedKingdom_' + size + '_flat_black';
	iconMapping[Notifications.REPORT_FARMLIST_COMPLETED_WITHOUT_LOSSES] = 'farmlist_result_' + size + '_flat_positive';
	iconMapping[Notifications.REPORT_FARMLIST_COMPLETED_WITH_LOSSES] = 'farmlist_result_' + size + '_flat_uncertain';
	iconMapping[Notifications.REPORT_FARMLIST_COMPLETED_WITH_FULL_LOSSES] = 'farmlist_result_' + size + '_flat_negative';
	iconMapping[Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITHOUT_LOSSES] = 'farmlist_resultSingle_' + size + '_flat_positive';
	iconMapping[Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_LOSSES] = 'farmlist_resultSingle_' + size + '_flat_uncertain';
	iconMapping[Notifications.REPORT_FARMLIST_SINGLE_COMPLETED_WITH_FULL_LOSSES] = 'farmlist_resultSingle_' + size + '_flat_negative';

	return iconMapping[notificationType];
};


Notifications.prototype = new AbstractModel();
Cache.register(Notifications);/**
 * @constructor
 * @extends {AbstractData}
 */
;window['OasisTroopRanking'] = function OasisTroopRanking () {
	'use strict';

	this.defaultData = {
		'id': 0,
		'oasisId': 0,
		'oasisType': 0,
		'playerId': 0,
		'rank': 0,
		'amount': 0,
		'maxUsableTroops': 0,
		'villageInfluence': 0,
		'usedByVillage': 0,
		'bonus': 0
	};

	this.data = {};

	this.set = function (data) {
		this.parent.set.call(this, data, false);
		var xy = id2xy(this.data['oasisId']);
		this.data['coordsX'] = xy['x'];
		this.data['coordsY'] = xy['y'];
	};

	this.set(this.defaultData);
}


OasisTroopRanking.prototype = new AbstractModel();
Cache.register(OasisTroopRanking);
/**
 * Marker Player
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Player'] = function Player () {
	this.defaultData = {
		'playerId': 0,
		'name': '',
		'tribeId': 0,
		'kingdomId': 0,
		'allianceId': 0,
		'allianceRights': 0,
		'allianceTag': "",
		'kingdomRole': 0,
		'isKing': null,
		'kingstatus': 0,
		'coronationDuration': 0,
		'brewCelebration': 0,
		'population': 0,
		'gold': 0,
		'silver': 0,
		'deletionTime': 0,
		'taxRate': 0,
		'uiStatus': -1,
		'spawnedOnMap': 0,
		'isInstant': 0,
		'isActivated': 1,
		'signupTime': 0,
		'hasNoobProtection': false,
		'productionBonusTime': 0,
		'cropProductionBonusTime': 0,
		'premiumFeatureAutoExtendFlags': 0,
		'plusAccountTime': 0,
		'limitedPremiumFeatureFlags': 0,
		'lastPaymentTime': 0,
		'isPunished': false,
		'limitationFlags': 0,
		'limitation': 0,
		'bannedUntil': 0,
		'isBannedFromMessaging': false,
		'bannedFromMessaging': 0,
		'uiLimitations' : 0,
		'nextDailyQuestTime': 0,
		'dailyQuestsExchanged': 0,
		'prestige': 0,
		'nextLevelPrestige': 0,
		'level': 0,
		'stars': {'bronze': 0, 'silver': 0, 'gold': 0},
		'filterInformation': true
	};

	var that = this;

	this.treasures = -1;
	this.data = {};
	this.set(this.defaultData);

	this.name = 'Player';

	this.hasPlusAccount = function () {
		return (this.data['plusAccountTime'] >= Travian.rootScope.currentServerTime || this.data['plusAccountTime'] == -1);
	};

	this.hasProductionBonus = function () {
		return (this.data['productionBonusTime'] >= Travian.rootScope.currentServerTime || this.data['productionBonusTime'] == -1);
	};

	this.hasCropProductionBonus = function () {
		return (this.data['cropProductionBonusTime'] >= Travian.rootScope.currentServerTime || this.data['cropProductionBonusTime'] == -1);
	};

	this.isOnMap = function () {
		return this.data['spawnedOnMap'] > 0;
	};

	this.isGoldDeletionTimeout = function () {
		return this.data.lastPaymentTime > Travian.rootScope.currentServerTime - Travian.Config['DeletionAfterBuyingGoldTimeout'];
	};

	this.hasUiLimitationFlag = function (flag) {
		var bits = Math.pow(2, flag);
		return ((this.data.uiLimitations & bits) == bits);
	};


	this.hasLimitation = function (flag) {
		var bits = Math.pow(2, flag);
		return ((this.data.limitation & bits) == bits);
	};

	this.getCoronationStatus = function () {
		if (this.data['kingstatus'] > 0) {
			if (this.data['kingstatus'] <= Travian.ServerTime) {
				return Player.CORONATION_STATUS.CROWNED;
			} else {
				return Player.CORONATION_STATUS.IN_CEREMONY;
			}
		} else {
			return Player.CORONATION_STATUS.NONE;
		}
	};

	this.isDuke = function() {
		return (this.data.kingdomRole == Player.KINGDOM_ROLE_DUKE);
	};

	this.set = function (data, recursive) {
		data = data || {};

		// don't overwrite this model with filtered data when this model is unfiltered, because the own Player should never be filtered
		if(data['filterInformation'] !== undefined && this.data['filterInformation'] === false && data['filterInformation'] === true) {
			return;
		}

		// Check if this player is banned, then set the timeout to change the flag 'isBannedFromMessaging'
		if (data['bannedFromMessaging'] > 0) {
			var bannedUntil = data['bannedFromMessaging'];

			if (bannedUntil > Travian.ServerTime) {
				if (this.bannedTimeout) {
					clearTimeout(this.bannedTimeout);
				}
				this.bannedTimeout = window.setTimeout(function () {
					that.data['isBannedFromMessaging'] = false;
					that.callSubscribers();
				}, parseInt(bannedUntil - Travian.ServerTime, 10) * 1000);
			}
		}

		this.parent.set.call(this, data, recursive);
	}
}

Player.isNPC = function (playerId) {
	return playerId <= 100;
};

Player.fetchPrestige = function(playerId, cb) {
	Travian.prestigeService.getPrestigeForPlayerId(playerId, function (prestige) {
		cb(prestige);
	});
};

Player.ID = {
	NATAR: 1,
	NATURE: 0,
	ROBBER: -1,
	GOVERNOR_NPC: -2
};

Player.TRIBE = {
	ROMAN: 1,
	TEUTON: 2,
	GAUL: 3,
	NATURE: 4,
	NATAR: 5
};

Player.TRIBE_NAME = {
	1: 'roman',
	2: 'teuton',
	3: 'gaul',
	4: 'nature',
	5: 'natar'
};

Player.ACTION_DELETE_ACCOUNT = 1;
Player.ACTION_LEAVE_ALLIANCE = 3;
Player.ACTION_KICK_ALLIANCE = 4;

Player.CORONATION_STATUS = {
	CROWNED: 1,
	IN_CEREMONY: 2,
	NONE: 3
};

Player.TAX_RATE = {};
Player.TAX_RATE.LOW = {'rate': 15, 'rateGovernor': 110};
Player.TAX_RATE.MIDDLE = {'rate': 20, 'rateGovernor': 100};
Player.TAX_RATE.HIGH = {'rate': 25, 'rateGovernor': 90};

Player.KINGDOM_ROLE_GOVERNOR = 0;
Player.KINGDOM_ROLE_KING = 1;
Player.KINGDOM_ROLE_DUKE = 2;

Player.COLLECTION_KINGDOM = 'kingdom';

Player.UI_LIMITATIONS = {};
Player.UI_LIMITATIONS.SHOW_OASIS = 0;
Player.UI_LIMITATIONS.ALWAYS_SHOW_TRADE_ROUTES = 1;

Player.collectionSortFct = function (a, b) {
	if (a['data']['population'] > b['data']['population']) {
		return -1;
	}
	if (a['data']['population'] < b['data']['population']) {
		return 1;
	}
	return 0;
};

Player.prototype = new AbstractModel();
Cache.register(Player);
;window['PlayerHatesKing'] = function PlayerHatesKing () {
	this.defaultData = {
		'playerId': 0,
		'kingPlayerId': 0,
		'time': 0,
		'offerTime': 0
	};

	this.data = {};

	this.name = 'PlayerHatesKing';
	this.set(this.defaultData);
}

PlayerHatesKing.prototype = new AbstractModel();
Cache.register(PlayerHatesKing);
/**
 * PlayerProfile Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['PlayerProfile'] = function PlayerProfile ($playerId) {
	this.defaultData = {
		'description': ''
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'PlayerProfile';
}

PlayerProfile.prototype = new AbstractModel();
Cache.register(PlayerProfile);;window['PlayerProgressTrigger'] = function PlayerProgressTrigger () {
	this.defaultData = {
		'id': '',
		'playerId': 0,
		'type': 0,
		'subType': '',
		'triggered': false,
		'lastUse': 0,
		'data': {}
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'PlayerProgressTrigger';
}

/**
 * Trigger InGame Help Notification
 * @param string helpType
 * @param int additionalCheck
 */
PlayerProgressTrigger.triggerInGameHelp = function (helpType, additionalCheck) {
	var playerId = Travian.Player.data['playerId'];
	var uiStatus = Travian.Player.data['uiStatus'];
	// only trigger this when player is out of tutorial
	if (playerId > 0 && uiStatus == -1) {
		var settings = Settings.get(playerId);
		if (settings.data['enableHelpNotifications']) {
			var playerProgressTrigger = PlayerProgressTrigger.get(playerId + '_' + PlayerProgressTrigger.TYPE_IN_GAME_HELP + '_' + helpType);
			var subscribeId = playerProgressTrigger.subscribe(function() {
				if (playerProgressTrigger.data['triggered'] === false) {
					var data = {
						'helpType': helpType,
						'additionalCheck': additionalCheck
					};
					Travian.writeRequest('player/triggerInGameHelpNotice', data);
				}
				playerProgressTrigger.unsubscribe(subscribeId);
			});
		}
	}
};

PlayerProgressTrigger.TYPE_OPEN_PREMIUM_MENU = 1;
PlayerProgressTrigger.TYPE_ROBBER_GOODS = 2;
PlayerProgressTrigger.TYPE_ADVENTURE = 3;
PlayerProgressTrigger.TYPE_ANNEX_OASIS = 4;
PlayerProgressTrigger.TYPE_INVITE_A_FRIEND = 5;
PlayerProgressTrigger.TYPE_IN_GAME_HELP = 6;

PlayerProgressTrigger.TOPIC_VILLAGE = 'Village';
PlayerProgressTrigger.TOPIC_ROBBERS = 'Robbers';
PlayerProgressTrigger.TOPIC_KINGDOM = 'Kingdom';
PlayerProgressTrigger.TOPIC_HERO = 'Hero';
PlayerProgressTrigger.TOPIC_ITEMS = 'Items';
PlayerProgressTrigger.TOPIC_OASES = 'Oases';
PlayerProgressTrigger.TOPIC_TRADING = 'Trading';
PlayerProgressTrigger.TOPIC_MILITARY_DIPLOMACY = 'MilitaryAndDiplomacy';
PlayerProgressTrigger.TOPIC_PREMIUM = 'Premium';

PlayerProgressTrigger.HELP_PAGE_ROBBER_HIDEOUTS = 'RobberHideouts'; // Tutorial done & detail view or "send troops" view for a Robber Hideout is opened
PlayerProgressTrigger.HELP_PAGE_DUKES = 'Dukes'; // "Kingdom" tab of "Societies" window is opened
PlayerProgressTrigger.HELP_PAGE_MAP_DETAIL_VIEW = 'MapAndDetailView'; //Tutorial done & map view opened
PlayerProgressTrigger.HELP_PAGE_ADVENTURES = 'Adventures'; // Adventure menu opened
PlayerProgressTrigger.HELP_PAGE_HERO_PRODUCTION = 'HeroProduction'; // Hero attribute menu opened
PlayerProgressTrigger.HELP_PAGE_AUCTIONS = 'Auctions'; // Auction menu visited
PlayerProgressTrigger.HELP_PAGE_ASSIGN_OASIS = 'AssignOasis'; // Embassy built & opened "Oases" tab in Embassy window
PlayerProgressTrigger.HELP_PAGE_TROOPS_IN_OASIS = 'TroopsInOases'; // "Assign Oasis" quest was solved & opened non-wild oasis detail view
PlayerProgressTrigger.HELP_PAGE_WILD_OASES = 'WildOases'; // Detail view of wild Oasis opened
PlayerProgressTrigger.HELP_PAGE_TRADING_RESOURCES = 'TradingResources'; // "Buy" tab of marketplace opened
PlayerProgressTrigger.HELP_PAGE_OFFERING_RESOURCES = 'OfferingResources'; // "Sell" tab of marketplace opened
PlayerProgressTrigger.HELP_PAGE_CARD_GAME = 'CardGame'; // Card game screen opened
PlayerProgressTrigger.HELP_PAGE_RUNTIME_FEATURES = 'RuntimeFeatures'; // Premium menu opened
PlayerProgressTrigger.HELP_PAGE_MASTER_BUILDER = 'MasterBuilder'; // Building queue full
PlayerProgressTrigger.HELP_PAGE_TRADE_ROUTES = 'TradeRoutes'; // 3 or more villages owned & marketplace opened & Plus Account active
PlayerProgressTrigger.HELP_PAGE_ATTACK_TYPES = 'AttackTypes'; // Beginner protection ended & "Send troops" screen opened
PlayerProgressTrigger.HELP_PAGE_STRATEGIC_MAP = 'StrategicMap'; // Entered strategic (maximally zoomed out) map view
PlayerProgressTrigger.HELP_PAGE_FARM_LISTS = 'FarmLists'; // Sum of outgoing attacks and raids is at least 3 at the same time OR opened farm list tab
PlayerProgressTrigger.HELP_PAGE_VICTORY_POINTS = 'VictoryPoints'; // Second duke slot was unlocked in the kingdom
PlayerProgressTrigger.HELP_PAGE_INVITE_FRIEND = 'InviteAFriend'; // "Invite a Friend" tab opened
PlayerProgressTrigger.HELP_PAGE_SUPPORTING = 'SupportOtherPlayers'; // Beginner protection ended & player in kingdom is under attack & opened map view

/** Additional Checks in Backend */
PlayerProgressTrigger.CHECK_ASSIGN_OASIS_QUEST_SOLVED = 1;
PlayerProgressTrigger.CHECK_THREE_VILLAGES_OWNED = 2;


PlayerProgressTrigger.prototype = new AbstractModel();
Cache.register(PlayerProgressTrigger);

/**
 * PlayerPunishment Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['PlayerPunishment'] = function PlayerPunishment () {
	this.defaultData = {};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'PlayerPunishment';
}

PlayerPunishment.TYPE_AUTO_BAN = 'playerBanned';
PlayerPunishment.TYPE_SUSPENDED = 'playerSuspended';
PlayerPunishment.TYPE_LOCKED = 'playerLocked';
PlayerPunishment.TYPE_ISOLATED = 'playerIsolated';

PlayerPunishment.STRIKE_REASON_GENERAL = 1;
PlayerPunishment.STRIKE_REASON_MULTI_ACCOUNT = 2;
PlayerPunishment.STRIKE_REASON_PASSWORD_SHARING = 3;
PlayerPunishment.STRIKE_REASON_BUG_ABUSE = 4;
PlayerPunishment.STRIKE_REASON_BOT_OR_SCRIPT_USING = 5;
PlayerPunishment.STRIKE_REASON_SILVER_FRAUD = 6;
PlayerPunishment.STRIKE_REASON_PAYMENT = 7;
PlayerPunishment.STRIKE_REASON_HARASSMENT_INSULT = 8;
PlayerPunishment.STRIKE_REASON_ACP_DELETION = 9;
PlayerPunishment.STRIKE_REASON_ACP_PAYMENT = 10;
PlayerPunishment.STRIKE_REASON_SPAM = 11;
PlayerPunishment.STRIKE_REASON_ADVERTISING = 12;

PlayerPunishment.ACTION_ISOLATED = 1;
PlayerPunishment.ACTION_LOCK = 2;

PlayerPunishment.prototype = new AbstractModel();
Cache.register(PlayerPunishment);/**
 * This Class handles all of the PremiumFeature Stuff
 *
 * To handle the this, there are two attributes for the button HTML
 * premium-feature: {string} this is the name of the PremiumFeature.
 * @use PremiumFeature.FEATURE_NAME_*
 *
;window['to get the parameters for the backend'] =  * premium-callback-param: {*} (optional) this a parameter for the callback-function to get the parameters for the backend (see below)
 *
 * Also, you can use a callback-function in your Controller which must be the same name as your PremiumFeature and must be inside $scope
 * Example for the controller:
 * <code>
 *     $scope[PremiumFeature.FEATURE_NAME_FINISH_NOW] = function () {
 *     		return {'villageId': activeVillage.data['villageId']};
 *     };
 * </code>
 * For the Example we deliver the Backend the Object which has a Parameter villageId
 * In the Backend, the premiumFeature_*Service contains in $params your Object as an associative array
 *
 * @constructor
 */
var PremiumFeature = function (scope, element, $timeout) {

	/**
	 * Backend Config for the given Premium Feature
	 * @type {{}}
	 */
	var featureConfig = {};

	/**
	 * Name of the Premium Feature
	 * @use PremiumFeature.FEATURE_NAME_*
	 * @type {string}
	 */
	var featureName = '';
	/**
	 * a Object for the Backend
	 * This object will be set by the Callback-Function which has the same name as featureName
	 * @use PremiumFeature.FEATURE_NAME_*
	 * This Callback function has to be a part of $scope / directiveScope
	 * There are some keywords which would be filtered in setData:
	 *        callback: {function}            // will be called when we get the Backend-Response
	 *        delayForNextRequest: {Number}   // Timer when we finish the transaction (in milliseconds)
	 *                                        // When that is not set, the transaction stops after we get the Backend-Response
	 *        updateCacheFirst: {boolean}     // updateCacheFirst param for the Travian.writeRequest (default = false)
	 *        notEnoughGoldCallback: {function} // will be called if the user does not have enough gold
	 * @see this.bookFeature.backendData.params
	 *
	 * When premiumParamsCallback returns only false, it will stop the Transaction instantly
	 * @type {{}|boolean}
	 */
	var featureParams = {};

	/**
	 * the scope of Travian.Directive.Button
	 */
	var directiveScope;

	/**
	 * the element of Travian.Directive.Button
	 */
	var directiveElement;

	/**
	 * the $timeout of Travian.Directive.Button
	 */
	var directiveTimeout;

	/**
	 * Timeout return value
	 * @type {null|Promise|bool}
	 */
	var transaction = null;

	/**
	 * callback for the backend call
	 * @type {function}
	 */
	var requestCallback;

	/**
	 * callback for the backend call if the player had not enough gold
	 * @type {function}
	 */
	var notEnoughGoldCallback;

	/**
	 * updateCacheFirst param for the Travian.writeRequest
	 * @type {boolean}
	 */
	var requestUpdateCacheFirst = false;

	/**
	 * Delay must be greater than 0 when we want a delay independent of the backend-response
	 * delay in milliseconds
	 * @type {number}
	 */
	var delayForNextRequest = 0;

	/**
	 * initialize the premiumFeature
	 *
	 * @param {{}} scope          the scope of Travian.Directive.Button (should be also the Ctrl-scope)
	 * @param element             the element of Travian.Directive.Button
	 * @param $timeout             the $timeout of Travian.Directive.Button
	 */
	function init (scope, element, $timeout) {
		directiveScope = scope;
		directiveElement = element;
		directiveTimeout = $timeout;
	}

	/**
	 * set the Data for this premiumFeature
	 * @param {array} data        0 = featureName
	 *                            1 = name of the callback-Function to get the featureParams
	 *                                (the Function should be inside the given scope (controller-Scope)
	 *                            3 = price (optional)
	 */
	this.setData = function (data) {
		featureName = data[0];
		if (typeof directiveScope[featureName] === 'function') {
			featureParams = directiveScope[featureName](data[1]);
			if (typeof featureParams['callback'] !== 'undefined') {
				requestCallback = featureParams['callback'];
				delete(featureParams['callback']);
			}

			if (typeof featureParams['delayForNextRequest'] !== 'undefined') {
				delayForNextRequest = featureParams['delayForNextRequest'];
				delete(featureParams['delayForNextRequest']);
			}

			if (typeof featureParams['updateCacheFirst'] !== 'undefined') {
				requestUpdateCacheFirst = featureParams['updateCacheFirst'];
				delete(featureParams['updateCacheFirst']);
			}

			if (typeof featureParams['notEnoughGoldCallback'] !== 'undefined') {
				notEnoughGoldCallback = featureParams['notEnoughGoldCallback'];
				delete(featureParams['notEnoughGoldCallback']);
			}
			if(typeof data[2] != 'undefined') {
				featureParams['price'] = data[2];
			}
		}
	};

	/**
	 * start the premium Transaction and disabled this.directiveElement
	 * @returns {boolean}    true = all was fine, false = button was already disabled
	 */
	function startTransaction () {
		if (featureParams === false) {
			return false;
		}

		if (directiveElement.hasClass('disabled')) {
			return false;
		}

		// is there still a transaction, then doesn't start again
		if (transaction !== null) {
			return false;
		}

		if (delayForNextRequest > 0) {
			directiveElement.addClass("waiting");
			transaction = directiveTimeout(function () {
				directiveElement.removeClass("waiting");
				transaction = null;
			}, delayForNextRequest);
		} else {
			transaction = true;
		}

		return true;
	}

	/**
	 * stop the transaction
	 */
	function stopTransaction () {
		if (transaction !== null && delayForNextRequest > 0) {
			directiveTimeout.cancel(transaction);
		}
		transaction = null;
	}

	/**
	 * Load this Config from Backend by featureName
	 * @returns {boolean} true = all is fine, false = config doesn't exists
	 */
	function loadFeatureConfig () {
		featureConfig = Travian['Config']['PremiumFeatures'][featureName];
		return typeof featureConfig !== 'undefined';
	}

	/**
	 * After some Checks, this function call the backend to book the PremiumFeature.
	 * When the player has not enough gold, we will call the PaymentShop / the smallestPackage-Window
	 */
	this.bookFeature = function () {
		if (!startTransaction()) {
			return;
		}
		if (!loadFeatureConfig()) {
			stopTransaction();
			return;
		}

		if (!hasEnoughGold() && !hasVoucher()) {
			// Only show buy gold window if player is not punished
			if (!Travian.Player.data['isPunished']) {
				//@TODO open the smallestPackage-Window
				stopTransaction();
				openNotEnoughGoldWindow();
				if (typeof notEnoughGoldCallback !== 'undefined') {
					notEnoughGoldCallback();
				}
				return;
			}
		}

		var backendData = {
			'featureName': featureName,
			'params': featureParams
		};

		window['optimizely'] = window['optimizely'] || [];
		window['optimizely'].push(['trackEvent', featureName]);

		var requestSuccess = Travian.writeRequest('premiumFeature/bookFeature', backendData, function (response) {
			// backend must provide response otherwise we can't check for errors
			// if we are locked auth controller takes over and response is undefined
			if (typeof response != "undefined") {
				if (typeof (response['errors']) != "undefined" && response['errors'][0]['message'] == 'NotEnoughGold') {
					delete (response['errors']);
					openNotEnoughGoldWindow();
					stopTransaction();
					if (typeof notEnoughGoldCallback !== 'undefined') {
						notEnoughGoldCallback();
					}
					return;
				}
			}

			if (typeof requestCallback !== 'undefined') {
				requestCallback(response);
			}
			if (delayForNextRequest == 0) {
				stopTransaction();
			}
		}, requestUpdateCacheFirst);
		if (requestSuccess === false) {
			stopTransaction();
		}
	};

	/**
	 * Checks if the player has enough gold for the desired feature
	 * @returns {boolean} true = has enough gold, false = has not enough gold
	 */
	function hasEnoughGold () {
		var price = getPrice();
		return price <= directiveScope.player.data.gold;
	}

	function hasVoucher () {
		var vouchers = Voucher.get(Travian.Player.data['playerId']);
		var hasVoucher = vouchers.data['hasVouchers'][featureName];
		return hasVoucher > 0;
	}

	/**
	 * return the price you have to pay for your request
	 * @returns {int}
	 */
	function getPrice () {
		var price = featureConfig['price'];
		if (featureName == PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE) {
			price = 0;
			if (featureParams['type'] == ExchangeOffice.TYPE_GOLD) {
				price = featureParams['amount'];
			}
		}
		else if (featureName == PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT && PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT)) {
			price = featureConfig['price2'];
		}
		else if (featureName == PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT && PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT)) {
			price = featureConfig['price3'];
		}
		else if(featureName == PremiumFeature.FEATURE_NAME_TRADER_SLOT && PremiumFeature.hasLimitedFeatureFlag(PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST)){
			price = featureConfig['price2'];
		}

		if(featureParams['price'] !== undefined) {
			price = featureParams['price'];
		}

		return price;
	}

	function openNotEnoughGoldWindow() {
		directiveScope['openWindow']('notEnoughGold', {}, {'price': getPrice()});
	}

	init(scope, element, $timeout);
};

/**
 * Static Variable to save the Timeout-Response
 * @see PremiumFeature.saveAutoExtend()
 * @type {null|Promise}
 */
PremiumFeature.saveAutoExtendTimeout = null;

/**
 * Save function for AutoExtendFlag BitMask form the current Player
 */
PremiumFeature.saveAutoExtend = function (player) {
	var savePlayer = Travian.Player;
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		savePlayer = player;
	}

	if (PremiumFeature.saveAutoExtendTimeout !== null) {
		window.clearTimeout(PremiumFeature.saveAutoExtendTimeout)
	}

	PremiumFeature.saveAutoExtendTimeout = window.setTimeout(function () {
		PremiumFeature.saveAutoExtendTimeout = null;
		Travian.writeRequest('premiumFeature/saveAutoExtendFlags', {'autoExtendFlags': savePlayer.data['premiumFeatureAutoExtendFlags']});
	}, 1000);
};

/**
 * Checks if the current Player has the given AutoExtend-Flag
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param player
 * @returns {boolean}
 */
PremiumFeature.hasAutoExtendFlag = function (flag, player) {
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		return (player.data['premiumFeatureAutoExtendFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
	}
	return (Travian.Player.data['premiumFeatureAutoExtendFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
};

/**
 * Checks if the current Player has the given LimitedFeature-Flag
 * @param {Number} flag
 * @use PremiumFeature.LIMITED_FLAG_*
 * @param {Player} player
 * @returns {boolean}
 */
PremiumFeature.hasLimitedFeatureFlag = function (flag, player) {
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		return (player.data['limitedPremiumFeatureFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
	}
	return (Travian.Player.data['limitedPremiumFeatureFlags'] & Math.pow(2, flag)) == Math.pow(2, flag);
};

/**
 * Add the given AutoExtend-Flag for the currentPlayer
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param {Player} player
 */
PremiumFeature.setAutoExtendFlag = function (flag, player) {
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		player.data['premiumFeatureAutoExtendFlags'] |= Math.pow(2, flag);
	} else {
		Travian.Player.data['premiumFeatureAutoExtendFlags'] |= Math.pow(2, flag);
	}
	PremiumFeature.saveAutoExtend(player);
};

/**
 * Removes the given AutoExtend-Flag for the currentPlayer
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param {Player} player
 */
PremiumFeature.unsetAutoExtendFlag = function (flag, player) {
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		player.data['premiumFeatureAutoExtendFlags'] &= ~Math.pow(2, flag);
	} else {
		Travian.Player.data['premiumFeatureAutoExtendFlags'] &= ~Math.pow(2, flag);
	}
	PremiumFeature.saveAutoExtend();
};

/**
 * toggle the given AutoExtend-Flag for the currentPlayer
 * @param {Number} flag
 * @use PremiumFeature.AUTO_EXTEND_FLAG_*
 * @param {Player} player
 */
PremiumFeature.toggleAutoExtendFlag = function (flag, player) {
	var usePlayer = Travian.Player;
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		usePlayer = player;
	}
	if (PremiumFeature.hasAutoExtendFlag(flag, usePlayer)) {
		PremiumFeature.unsetAutoExtendFlag(flag, usePlayer);
	} else {
		PremiumFeature.setAutoExtendFlag(flag, usePlayer);
	}
};

PremiumFeature.hasPlayerPlusAccount = function (player) {
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		return player.hasPlusAccount();
	}
	return Travian.Player.hasPlusAccount();
};

PremiumFeature.hasProductionBonus = function (player) {
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		return player.hasProductionBonus();
	}
	return Travian.Player.hasProductionBonus();
};

PremiumFeature.hasCropProductionBonus = function (player) {
	if (typeof player !== 'undefined' && typeof player.data !== 'undefined' && player.data['playerId'] > 0) {
		return player.hasCropProductionBonus();
	}
	return Travian.Player.hasCropProductionBonus();
};


// valid PremiumFeature-Names
PremiumFeature.FEATURE_NAME_FINISH_NOW = 'finishNow';
PremiumFeature.FEATURE_NAME_EXCHANGE_OFFICE = 'exchangeOffice';
PremiumFeature.FEATURE_NAME_PRODUCTION_BONUS = 'productionBonus';
PremiumFeature.FEATURE_NAME_CROP_PRODUCTION_BONUS = 'cropProductionBonus';
PremiumFeature.FEATURE_NAME_PLUS_ACCOUNT = 'plusAccount';
PremiumFeature.FEATURE_NAME_NPC_TRADER = 'NPCTrader';
PremiumFeature.FEATURE_NAME_FETCH_TRIBUTE_INSTANTLY = 'tributeFetchInstantly';
PremiumFeature.FEATURE_NAME_TREASURE_RESOURCES_INSTANT = 'treasureResourcesInstant';
PremiumFeature.FEATURE_NAME_STARTER_PACKAGE = 'starterPackage';
PremiumFeature.FEATURE_NAME_BOOK_BUILD_MASTER_SLOT = 'buildingMasterSlot';
PremiumFeature.FEATURE_NAME_TRADER_SLOT = 'traderSlot';
PremiumFeature.FEATURE_NAME_TRADER_ARRIVE_INSTANTLY = 'traderArriveInstantly';
PremiumFeature.FEATURE_NAME_CARDGAME_SINGLE = 'cardgameSingle';
PremiumFeature.FEATURE_NAME_CARDGAME_4OF5 = 'cardgame4of5';

PremiumFeature.AUTO_EXTEND_FLAG_RES_BONUS = 0;
PremiumFeature.AUTO_EXTEND_FLAG_CROP_BONUS = 1;
PremiumFeature.AUTO_EXTEND_FLAG_PLUS_BONUS = 2;

// Limited Premium Features
PremiumFeature.LIMITED_FLAG_STARTER_PACKAGE = 0;
PremiumFeature.LIMITED_FLAG_FIRST_BUILD_MASTER_SLOT = 1;
PremiumFeature.LIMITED_FLAG_SECOND_BUILD_MASTER_SLOT = 2;
PremiumFeature.LIMITED_FLAG_THIRD_BUILD_MASTER_SLOT = 3;
PremiumFeature.LIMITED_FLAG_TRADER_SLOT_FIRST = 4;
PremiumFeature.LIMITED_FLAG_TRADER_SLOT_SECOND = 5;

// Starter package versions
PremiumFeature.STARTER_PACKAGE_VERSION_1 = 1;
PremiumFeature.STARTER_PACKAGE_VERSION_2 = 2;

// Limits the use of the npc trader feature by the amount of traded resources
PremiumFeature.NPC_TRADER_INSIGNIFICANCE_LIMIT = 5;
;window['PrestigeCondition'] = function PrestigeCondition () {
	this.defaultData = {
		'id': 0,
		'avatarIdentifier': 0,
		'conditionType': 0,
		'controlValue': 0,
		'achievedValue': 0,
		'finalValue': 0,
		'threshold': '',
		'fulfilled': 0,
		'type': 0
	};

	this.data = {};

	this.set(this.defaultData);
	this.name = 'PrestigeCondition';
}

PrestigeCondition.prototype = new AbstractModel();
Cache.register(PrestigeCondition);

var PrestigeConditions = {};

PrestigeCondition.LEVELUP_HERO = 1;
PrestigeCondition.COMPLETE_ADVENTURE = 2;
PrestigeCondition.COMPLETE_DAILY_QUEST = 3;
PrestigeCondition.COMPLETE_RESEARCH = 4;
PrestigeCondition.POPULATION_GROW = 5;
PrestigeCondition.WRITE_MESSAGE = 6;
PrestigeCondition.ACQUIRE_VILLAGE = 7;
PrestigeCondition.TREASURES = 8;
PrestigeCondition.IMPROVE_RANK_POPULATION = 9;
PrestigeCondition.IMPROVE_RANK_ATTACKER = 10;
PrestigeCondition.IMPROVE_RANK_DEFENDER = 11;
PrestigeCondition.IMPROVE_RANK_VILLAGES = 12;
PrestigeCondition.IMPROVE_RANK_HEROES = 13;
PrestigeCondition.HOLD_TOP_RANKING = 14;
PrestigeCondition.ATTACK_DEFEND_PLAYER = 15;
/**
 * Quest Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Quest'] = function Quest () {
	this.defaultData = {
		'id': 0,
		'status': 0,
		'progress': 0,
		'finishedSteps': 0,
		'finalStep': 0,
		'questGiver': 0,
		'data': 0,
		'rewards': []
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'Quest';

	this.image = '';

	this.set = function (data) {
		this.parent.set.call(this, data, false);
		var cfg = QuestCfg[data['id']];
		if (cfg) {
			// This is a tutorial quest
			this.data['cfg'] = QuestCfg[data['id']];
		}
		this.data['rewardCnt'] = Object.keys(this.data['rewards']).length;
	};
}

Quest.isAdventure = function (questId) {
	var adventureQuestIds = [991, 992];
	return (adventureQuestIds.indexOf(questId) != -1);
};

Quest.isEnvoyQuest = function (questId) {
	var envoyQuestIds = [101, 102];
	return (envoyQuestIds.indexOf(questId) != -1);
};

Quest.isTutorial = function (questId) {
	// hide UI elements for special payment User Accounts
	if (Travian.Player.data.hasOwnProperty('userAccountIdentifier')) {
		var userAccountIdentifier = Travian.Player.data['userAccountIdentifier'];
		var paymentUserAccountIdentifiers = Travian.Config['paymentUserAccountIdentifiers'];
		if ($.inArray(userAccountIdentifier, paymentUserAccountIdentifiers)) {
			return false;
		}
	}
	return typeof (QuestCfg[questId]) != 'undefined';
};

Quest.prototype = new AbstractModel();
Cache.register(Quest);

Quest.STATUS_INACTIVE = 1;
Quest.STATUS_ACTIVATABLE = 2;
Quest.STATUS_ACTIVE = 3;
Quest.STATUS_DONE = 4;
Quest.STATUS_FINISHED = 5;

Quest.DAILY_QUESTS_NUMBER = 3;

Quest.DAILY_CONDITIONAL_OPEN_PREMIUM_MENU = 10015;

// The tutorial quests will be inserted into this config (see quests folder)
var QuestCfg = {};
/**
 * QuestGiver Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['QuestGiver'] = function QuestGiver () {
	this.defaultData = {
		'npcId': 0,
		'questId': 0,
		'dialog': 0,
		'questStatus': 0
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'QuestGiver';
}

QuestGiver.DAILY = -1;
QuestGiver.MYSELF = 0;
QuestGiver.WREN = 1;
QuestGiver.FARMER = 2;
QuestGiver.SCOUT = 3;
QuestGiver.WOODCUTTER = 4;
QuestGiver.CLAY_MAN = 5;
QuestGiver.MINER = 6;
QuestGiver.TRADER = 7;
QuestGiver.ROBBER = 8;
QuestGiver.CHIEF = 9;
QuestGiver.ENVOY = 10;
QuestGiver.ADVENTURER = 11;
QuestGiver.GENERAL = 12;

// Quest givers which stand in the main village
QuestGiver.VILLAGERS = [
	QuestGiver.WREN,
	QuestGiver.SCOUT,
	QuestGiver.CHIEF,
	QuestGiver.ENVOY,
	QuestGiver.ADVENTURER
];

// The animations will be randomly played, see questGiver directive
QuestGiver.ANIMATIONS = {};
//QuestGiver.ANIMATIONS[QuestGiver.WREN] = [17, 50, 36]; // Count of frames for each animation
//QuestGiver.ANIMATIONS[QuestGiver.SCOUT] = [42, 30, 29];
//QuestGiver.ANIMATIONS[QuestGiver.CHIEF] = [35, 36, 37];

QuestGiver.STRING = {};
QuestGiver.STRING[QuestGiver.DAILY] = 'daily';
QuestGiver.STRING[QuestGiver.MYSELF] = 'myself';
QuestGiver.STRING[QuestGiver.WREN] = 'wren';
QuestGiver.STRING[QuestGiver.FARMER] = 'farmer';
QuestGiver.STRING[QuestGiver.SCOUT] = 'scout';
QuestGiver.STRING[QuestGiver.WOODCUTTER] = 'woodcutter';
QuestGiver.STRING[QuestGiver.CLAY_MAN] = 'clayMan';
QuestGiver.STRING[QuestGiver.MINER] = 'miner';
QuestGiver.STRING[QuestGiver.TRADER] = 'trader';
QuestGiver.STRING[QuestGiver.ROBBER] = 'robber';
QuestGiver.STRING[QuestGiver.CHIEF] = 'chief';
QuestGiver.STRING[QuestGiver.ENVOY] = 'envoy';
QuestGiver.STRING[QuestGiver.ADVENTURER] = 'adventurer';
QuestGiver.STRING[QuestGiver.GENERAL] = 'general';

QuestGiver.prototype = new AbstractModel();
Cache.register(QuestGiver);/**
 * Report Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Report'] = function Report () {
	this.defaultData = {};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'Report';
}

Report.COLLECTION_PERSONAL = 'own';
Report.COLLECTION_KING = 'king';
Report.COLLECTION_ALLIANCE = 'alliance';
Report.COLLECTION_KING_MINIONS = 'king_minions';
Report.COLLECTION_ALLIANCE_MINIONS = 'alliance_minions';
Report.COLLECTION_SOCIETY = 'society';
Report.COLLECTION_FAVORITE = 'favorite';
Report.COLLECTION_SEARCH = 'search';
Report.COLLECTION_PRESTIGE = 'prestige';
Report.ALL_COLLECTIONS = [
	Report.COLLECTION_PERSONAL,
	Report.COLLECTION_KING,
	Report.COLLECTION_ALLIANCE,
	Report.COLLECTION_KING_MINIONS,
	Report.COLLECTION_ALLIANCE_MINIONS,
	Report.COLLECTION_SOCIETY,
	Report.COLLECTION_FAVORITE,
	Report.COLLECTION_SEARCH,
	Report.COLLECTION_PRESTIGE
];

Report.DISPLAY_TYPE_SUPPORT = 1;
Report.DISPLAY_TYPE_TRADE = 2;
Report.DISPLAY_TYPE_ADVENTURE = 3;
Report.DISPLAY_TYPE_FIGHT = 4;
Report.DISPLAY_TYPE_SPY = 5;
Report.DISPLAY_TYPE_VISIT = 6;
Report.DISPLAY_TYPE_SUPPORT_ATTACKED = 7;
Report.DISPLAY_TYPE_TROOP_RELEASE = 8;
Report.DISPLAY_TYPE_ANIMALS_CAPTURE = 9;
Report.DISPLAY_TYPE_PRESTIGE = 10;
Report.DISPLAY_TYPE_FARMLIST_RAID = 11;
Report.DISPLAY_TYPE_FARMLIST_RAID_COMPLETE = 12;

Report.DISPLAY_TYPES_FIGHT = [
	Report.DISPLAY_TYPE_FIGHT,
	Report.DISPLAY_TYPE_SPY,
	Report.DISPLAY_TYPE_VISIT,
	Report.DISPLAY_TYPE_SUPPORT_ATTACKED,
	Report.DISPLAY_TYPE_ANIMALS_CAPTURE
];

Report.ADVENTURE_LOOT_TYPE_NOTHING = 0;
Report.ADVENTURE_LOOT_TYPE_RESOURCES = 3;
Report.ADVENTURE_LOOT_TYPE_SILVER = 4;
Report.ADVENTURE_LOOT_TYPE_TROOPS = 5;

Report.REPORTS_PER_PAGE = 10;

Report.prototype = new AbstractModel();
Cache.register(Report);/**
 * ReportFavorites Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['ReportFavorites'] = function ReportFavorites () {
	this.defaultData = {};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'ReportFavorites';
}
ReportFavorites.prototype = new AbstractModel();
Cache.register(ReportFavorites);/**
 * Research Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Research'] = function Research (villageId) {
	this.defaultData = {};

	this.data = {
		'researchQueueFull': false,
		'upgradeQueueFull': false,
		'units': []
	};
	this.set(this.defaultData);

	this.name = 'Research';

	this.getUnitLevel = function (unitId) {
		for (var i = 0; i < this.data['units'].length; i++) {
			if (this.data['units'][i]['unitType'] == unitId) {
				return this.data['units'][i]['unitLevel'];
			}
		}
		return 0;
	}
}
Research.prototype = new AbstractModel();
Cache.register(Research);;window['Resources'] = function Resources (resources) {
	for (var i = 1; i <= 4; i++) {
		if (typeof (resources) != 'undefined') {
			this[i] = parseInt(resources[i]);
		}
		else {
			this[i] = 0;
		}

	}

	this.multiply = function (factor) {
		for (var i = 1; i <= 4; i++) {
			this[i] *= factor;
		}
	};

	this.getSum = function () {
		return Math.floor(this['1'] + this['2'] + this['3'] + this['4']);
	};

	this.getResources = function () {
		return {
			1: this[1],
			2: this[2],
			3: this[3],
			4: this[4]
		}
	};

	this.addResources = function (otherRes) {
		for (var i = 1; i <= 4; i++) {
			if (otherRes[i] !== undefined) {
				this[i] += otherRes[i];
			}
		}
	};

	/**
	 * resources are first set to desired distribution.
	 * the remained resources are distributet to the four resources
	 * (added or removed, depending on the sum of available resources, if they are more or less, than the desired sum)
	 * @param capacity
	 * @param preDefinedDistribution
	 * @param production
	 * @param resourceSlots
	 * @returns {copy|*|XMLList|XML|copy|copy}
	 */
	this.distribute = function (capacity, preDefinedDistribution, production, resourceSlots) {
		// get the sum of available and desired resources
		var sumAvailable = this.getSum();
		var sumDesired = preDefinedDistribution.getSum();

		// first set the distribution to the desired one
		// we need to copy this instance of Resources
		// so we don't change the original object.
		var returnDistribution = new Resources(preDefinedDistribution.getResources());

		// get the difference between available and desired resources, that still has to be distributet
		var differenceToDistribute = Math.abs(sumAvailable - sumDesired);

		// If we don't have enough resources for the desired output, we might want to take the resource production into account
		if (sumDesired > sumAvailable) {
			if (production) {
				var differencePerRes = (sumDesired - sumAvailable) / 4;
				// Sum up the current production per hour 
				var prodPerTimeSum = 0;
				for (var i = 1; i <= 4; i++) {
					prodPerTimeSum += parseInt(production[i]);
				}
				// Change the desired distribution accordingly to the production
				for (var i = 1; i <= 4; i++) {
					var diff = Math.round(differenceToDistribute * (parseInt(production[i]) / prodPerTimeSum));
					if (diff > returnDistribution[i]) {
						diff = returnDistribution[i];
					}
					returnDistribution[i] -= diff;
				}

				sumDesired = returnDistribution.getSum();
				differenceToDistribute = Math.abs(sumAvailable - sumDesired);
			}
		}

		// do we have more or less resources than desired? -> do we need to add or substract the differenc?
		var addDifference = (sumAvailable > sumDesired ? true : false);

		// free resource slots to add or substract resources (get removed from the array, no more change is possible)
		if(!resourceSlots) {
			resourceSlots = [1, 2, 3, 4];
		}
		// loop as long, as there are no more resources left to distribute
		while (differenceToDistribute > 0 && resourceSlots.length > 0) {
			// calculate an evenly distribution of the difference, depending on the number of slots
			var changePerSlot = Math.floor(differenceToDistribute / resourceSlots.length);

			// don't forget the remainder
			var remainder = differenceToDistribute - changePerSlot * resourceSlots.length;

			// for now the difference is fully distributed
			differenceToDistribute = 0;

			// now lets add/substract the distributed difference to the single slots,
			// and also distribute the remainder
			for (var i = 0; i < resourceSlots.length; i++) {
				var resourceIndex = resourceSlots[i];

				if (addDifference) {
					returnDistribution[resourceIndex] += changePerSlot;
					if (remainder > 0) {
						returnDistribution[resourceIndex]++;
						remainder--;
					}
				}
				else {
					returnDistribution[resourceIndex] -= changePerSlot;
					if (remainder > 0) {
						returnDistribution[resourceIndex]--;
						remainder--;
					}
				}

				// if there is an overflow (higher than capacity or lower then 0),
				// put the overflow back to the differenceToDistriute
				// and lock this slot for further changes
				if (returnDistribution[resourceIndex] >= capacity[resourceIndex]) {
					differenceToDistribute += (returnDistribution[resourceIndex] - capacity[resourceIndex]);
					returnDistribution[resourceIndex] = parseInt(capacity[resourceIndex]);
					resourceSlots.splice(i, 1);
					i--;
				}
				else if (returnDistribution[resourceIndex] <= 0) {
					differenceToDistribute += Math.abs(returnDistribution[resourceIndex]);
					returnDistribution[resourceIndex] = 0;
					resourceSlots.splice(i, 1);
					i--;
				}
			}
		}

		return returnDistribution;
	};

	this.toString = function () {
		return "1: " + this[1] + " 2: " + this[2] + " 3: " + this[3] + " 4: " + this[4] + " (sum: " + this.getSum() + ")";
	}
}

Resources.STRING = {
	0: 'resourcesAll',
	1: 'wood',
	2: 'clay',
	3: 'iron',
	4: 'crop'
};

Resources.ID = {
	'wood': 1,
	'clay': 2,
	'iron': 3,
	'crop': 4
};

Resources.WOOD = 1;
Resources.CLAY = 2;
Resources.IRON = 3;
Resources.CROP = 4;

module.exports = Resources;;window['Session'] = function Session() {
	this.defaultData = {
		'playerId': 0,
		'sessionId': '',
		'type': 0,
		'rights' : 0
	};

	this.data = {};

	this.name = 'Session';

	this.set(this.defaultData);
	var myself = this;

	this.hasRight = function (right) {
		right = Math.pow(2, right);
		var myRight = parseInt(myself['data']['rights']);
		var res = myRight & right;
		return res == right;
	};

	this.getRightsAsObject = function() {
		var obj = {};
		for(var i=1; i <= 4; i++) {
			obj[i] = myself.hasRight(i);
		}
		return obj;
	};
}
Session.TYPE_PLAYER  = 0;
Session.TYPE_DUAL = 1;
Session.TYPE_SITTER = 2;
Session.TYPE_ADMIN = 3;

Session.RIGHT_SEND_RAIDS = 1;
Session.RIGHT_SEND_SUPPORT = 2;
Session.RIGHT_SEND_MERCHANTS = 3;
Session.RIGHT_SPEND_GOLD = 4;
Session.RIGHT_ACCESS_CHAT = 5;

Session.prototype = new AbstractModel();
Cache.register(Session);
;window['Settings'] = function Settings () {
	this.defaultData = {
		'premiumConfirmation': 2,
		'lang': 'en',
		'onlineStatusFilter': 0,
		'extendedSimulator': false,
		'musicVolume': 100,
		'soundVolume': 100,
		'uiSoundVolume': 100,
		'muteAll': false,
		'timeZone': 0,
		'timeFormat': null,
		'attacksFilter': 0,
		'mapFilter': 0,
		'enableTabNotifications': false,
		'disableAnimations': true,
		'enableHelpNotifications': true,
		'notpadsVisible': false
	};

	var booleanValues = {
		'extendedSimulator': true,
		'muteAll': true,
		'enableTabNotifications': true,
		'disableAnimations': true,
		'enableHelpNotifications': true,
		'notpadsVisible': true
	};

	this.hasPremiumConfirmationFlag = function (flag) {
		var bits = Math.pow(2, flag);
		return ((this.data['premiumConfirmation'] & bits) == bits);
	};

	this.setPremiumConfirmationFlag = function (flag) {
		this.data['premiumConfirmation'] |= Math.pow(2, flag);
	};

	this.unsetPremiumConfirmationFlag = function (flag) {
		var newPremiumConfirmations = this.data['premiumConfirmation'] &= ~Math.pow(2, flag);
		this.data['premiumConfirmation'] = parseInt(newPremiumConfirmations);
	};

	this.hasMapFilterFlag = function (flag) {
		var bits = Math.pow(2, flag);
		return ((this.data['mapFilter'] & bits) == bits);
	};

	this.data = {};

	this.name = 'Settings';

	this.set(this.defaultData);
	this.set = function (data) {
		if (!data['disableAnimations'] != this.data['disableAnimations']) {
			if(data['disableAnimations'] && data['disableAnimations'] != 0) {
				$('body').addClass('noAnimations').removeClass('withAnimations');
			} else {
				$('body').removeClass('noAnimations').addClass('withAnimations');
			}
		}
		// Map the data from 0/1 to false/true if this is a boolean value
		for (var key in data) {
			if (booleanValues[key]) {
				if (data[key] == 1) {
					data[key] = true;
				}
				if (data[key] == 0) {
					data[key] = false;
				}
			}
		}
		this.parent.set.call(this, data);
	};

	this.persist = function (callback) {
		var data = {'newSettings': {}};
		for (var key in this.defaultData) {
			data['newSettings'][key] = this.data[key];
		}
		Travian.request('player/changeSettings', data, callback);
	};

	this.getSetting = function (key) {
		return this.data[key];
	};

	this.getAttackSettings = function () {
		var show = {'kingdom': true, 'alliance': true};
		var attacksFilter = this.getSetting('attacksFilter');
		var i = 2;
		for (var key in show) {
			show[key] = (attacksFilter & Math.pow(2, i - 1)) > 0;
			i--;
		}
		return show;
	}
}

Settings.prototype = new AbstractModel();

Settings.TIME_FORMATS = {
	EU: 0,
	US: 1,
	UK: 2,
	ISO: 3
};

Settings.PREMIUM_CONFIRMATION_FLAGS = {
	'DISABLE_GOLD_USAGE_CONFIRMATION': 0,
	'DISABLE_PREMIUM_USAGE_CONFIRMATION': 1
};

Cache.register(Settings);
;window['SilverChange'] = function SilverChange () {
	this.defaultData = {
		'id': 0,
		'playerId': 0,
		'silver': 0,
		'operationType': 0,
		'itemType': 0,
		'itemStrength': 0,
		'itemAmount': 0,
		'time': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'SilverChange';
}

SilverChange.prototype = new AbstractModel();
Cache.register(SilverChange);;window['Society'] = function Society (societyId) {
	this.defaultData = {
		'groupId': 0,
		'name': '',
		'createdBy': '',
		'attitude': '',
		'members': []
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'Society';

	this.isShared = function (right) {
		return (this['data']['sharedInformations'] & right);
	}
}

Society.ATTITUDE_WHITE = 1;
Society.ATTITUDE_BLACK = 2;

Society.TARGET_VILLAGE = 1;
Society.TARGET_PLAYER = 2;
Society.TARGET_KINGDOM = 3;
Society.TARGET_ALLIANCE = 4;
Society.TARGET_SOCIETY = 5;

Society.CONDITION_WHITE_SEND_RESOURCES = 1;
Society.CONDITION_WHITE_LOST_UNITS = 2;
Society.CONDITION_WHITE_PROVIDED_UNITS = 3;
Society.CONDITION_BLACK_STOLE_RESOURCES = 4;
Society.CONDITION_BLACK_DEFEAT_UNITS = 5;
Society.CONDITION_BLACK_STOLE_TREASURE = 6;

Society.SHARED_CHAT = 1;
Society.SHARED_REPORTS = 2;
Society.SHARED_NEXT_ATTACKS = 4;
Society.SHARED_VILLAGE_DETAILS = 8;


Society.prototype = new AbstractModel();
Cache.register(Society);
;window['SocietyConditions'] = function SocietyConditions () {
	this.defaultData = {
		'type': 0,
		'value': 0,
		'ownValue': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'SocietyConditions';
}

SocietyConditions.TYPE_RESOURCES = 1;
SocietyConditions.TYPE_TROOPS = 2;
SocietyConditions.TYPE_TREASURES = 3;
SocietyConditions.TYPE_TROOPS_DEPLOYED = 4;

SocietyConditions.prototype = new AbstractModel();
Cache.register(SocietyConditions);;window['SocietyInvitation'] = function SocietyInvitation (id) {
	this.defaultData = {
		'id': id,
		'societyId': 0,
		'societyName': '',
		'playerId': 0
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'SocietyInvitation';
}
SocietyInvitation.prototype = new AbstractModel();
Cache.register(SocietyInvitation);
;window['SocietyStats'] = function SocietyStats () {
	this.defaultData = {
		'id': 0,
		'playerId': 0,
		'destVillageId': 0,
		'destPlayerId': 0,
		'destKingdomId': 0,
		'destAllianceId': 0,
		'resourcesSent': 0,
		'resourcesStolen': 0,
		'troopsKilled': 0,
		'troopsLost': 0,
		'treasuresStolen': 0,
		'troopsDeployed': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'SocietyStats';
}

SocietyStats.prototype = new AbstractModel();
Cache.register(SocietyStats);;window['StatsFightStrengthAlly'] = function StatsFightStrengthAlly (allianceId) {

	this.defaultData = {
		'strength': [],
		'fightingPoints': []
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'StatsFightStrengthAlly';
}
StatsFightStrengthAlly.prototype = new AbstractModel();
Cache.register(StatsFightStrengthAlly);/**
 * StatsWeeklyTop Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['StatsWeeklyTop'] = function StatsWeeklyTop (id, rankingType) {
	this.defaultData = {
		'top10Attacker': [],
		'top10Climber': [],
		'top10Defender': [],
		'top10Robber': []
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'StatsWeeklyTop';
}
StatsWeeklyTop.prototype = new AbstractModel();
Cache.register(StatsWeeklyTop);/**
 * @constructor
 * @extends {AbstractData}
 * @param {Object} data
 */
;window['TradeOffer'] = function TradeOffer () {
	this.defaultData = {
		'villageId': 0
	};

	this.data = {};
	this.set(this.defaultData);
	this.name = 'TradeOffer';
}
TradeOffer.COLLECTION_OWN = 'own';
TradeOffer.COLLECTION_ALL = 'all';

TradeOffer.prototype = new AbstractModel();
Cache.register(TradeOffer);
/**
 * @constructor
 * @extends {AbstractData}
 * @param {Object} data
 */
;window['TradeRoute'] = function TradeRoute () {
	this.defaultData = {
		'id': 0,
		'villageId': 0,
		'destVillageId': 0,
		'resources': {},
		'times': 0,
		'lastExecuted': 0,
		'nextExecution': 0,
		'merchants': 0,
		'duration': 0,
		'recurrences': 1,
		'status': 1
	};

	// Array of numbers that represent the hours at which this route should start
	this.hours = [];
	this.resources = new Resources();

	this.data = {};


	this.set = function (data) {
		data = data || {};

		this.parent.set.call(this, data);

		this.hours = [];
		for (var i = 0; i < 24; i++) {
			if ((this.data['times'] & Math.pow(2, i)) > 0) {
				this.hours.push(i);
			}
		}

		this.resources = new Resources(this.data['resources']);
	};

	/**
	 * Checks if the given hour is "active" in this trade route
	 */
	this.isHourSet = function (hour) {
		return ((this.data['times'] & Math.pow(2, hour)) > 0);
	};

	this.set(this.defaultData);

	this.name = 'TradeRoute';
}

TradeRoute.prototype = new AbstractModel();
Cache.register(TradeRoute);
/**
 * Troop Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Troops'] = function Troops (data) {
	this.defaultData = {
		'troopId': 0,
		'playerId': 0,
		'playerName': '',
		'tribeId': 0,
		'units': {},
		'villageId': 0,
		'villageName': '',
		'villageIdLocation': 0,
		'villageIdSupply': 0,
		'status': '',
		'capacity': 0,
		'movement': {
			'troopId': 0,
			'villageIdStart': 0,
			'playerNameStart': '',
			'villageNameStart': '',
			'villageIdTarget': 0,
			'villageNameTarget': '',
			'playerNameTarget': '',
			'playerIdTarget': 0,
			'timeStart': 0,
			'timeFinish': 0,
			'movementType': 1,
			'resources': {
				1: 0,
				2: 0,
				3: 0,
				4: 0
			},
			'treasures': 0,
			'spyTarget': 0,
			'catapultTarget1': 0,
			'catapultTarget2': 0,
			'culturePoints': 0
		}
	};
	this.troopAmount = 0;
	this.name = 'Troops';
	this.data = {};
	var myself = this;
	this.isAttacking = false;
	this.fetchedNames = false;


	this.set = function (data) {
		// clear units
		this.data['units'] = {};

		// correct new incoming data if necessary
		if (data['units'] === null || data['units'] instanceof Array) {
			data['units'] = {};
		}

		// reset villages names if its id were changed (inbound troops)
		if (this.data['movement'] && data['movement'] && this.data['movement']['villageIdStart'] != data['movement']['villageIdStart']) {
			this.data['movement']['villageNameStart'] = '';
			this.data['movement']['villageNameTarget'] = '';
			this.fetchedNames = false;
		}

		this.parent.set.call(this, data);
		// the units array is called originalTroops in the troopsDetails directive
		this.data['originalTroops'] = this.data['units'];

		this.troopAmount = 0;
		for (var nr in this.data['units']) {
			this.troopAmount += parseInt(this.data['units'][nr]);
		}

		this.isAttacking = (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_ATTACK
		|| this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RAID
		|| this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SIEGE
		|| this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SPY);
	};
	this.set(this.defaultData);

	/**
	 * Returns a group name or null if troops are not connected to the given village
	 *
	 * @param {Number} villageId
	 * @returns {String}
	 */
	this.getMovementGroup = function (villageId) {
		if (this.data['status'] != 'transit') {
			return null;
		}

		var prefix = '';
		if (this.data['movement']['villageIdTarget'] == villageId) {
			prefix = 'incoming_';
		} else
			if (this.data['movement']['villageIdStart'] == villageId) {
				prefix = 'outgoing_';
			}
		if (prefix == '') {
			return null;
		}

		if (this.isAttacking) {
			return prefix + 'attacks';
		}

		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RETURN ||
			this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RETURN_ADVENTURE) {
			return 'return';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_REGENERATION) {
			return prefix + 'healing';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SUPPORT) {
			return prefix + 'support';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SETTLE) {
			return prefix + 'settlement';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT) {
			return prefix + 'tribute';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_ADVENTURE) {
			return prefix + 'adventure';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TRANSPORT) {
			return prefix + 'merchant';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TRANSPORT_RETURN) {
			return prefix + 'merchant_return';
		}
		if (this.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_TREASURE_RESOURCES) {
			return prefix + 'treasureResources';
		}
		return prefix;
	};

	/**
	 * Return UnitTypeId from given unit number
	 *
	 * @param nr
	 * @returns {number}
	 */
	this.nrToUnitId = function (nr) {
		// Exeption for the hero: Everytime id 98
		if (nr == 11) {
			return 98;
		}
		return (this.data['tribeId'] - 1) * 10 + (nr * 1);
	};

	/**
	 * Returns the number of spies in these troops.
	 * Takes care of the different index number of the spy in the tribes.
	 */
	this.getSpyId = function () {
		if (this.data['tribeId'] == Player.TRIBE.GAUL) {
			return 3;
			//this.data['units'][3];
		}
		else {
			return 4;
			//this.data['units'][4];
		}
	};


	function fetchNameForMovement(to, id, type) {
		if (myself.data['movement'][to] == '') {
			Travian['nameService']['getNameForId'](id, function(name) {
				myself.data['movement'][to] = name;
			}, type);
		}
	}

	function fetchMovementTargetNames(){
		// if it is a adventure then just display 'advnture' and not fetch any names same as
		// it it is setteling then display the coordinates
		if(myself.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_ADVENTURE) {
			myself.data['movement']['villageNameTarget'] = Travian.translate('TroopMovementInfo_outgoing_adventure');
		} else if(myself.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_SETTLE) {
			var coordinates = id2xy(myself.data['movement']['villageIdTarget']);
			myself.data['movement']['villageNameTarget'] = '(' + coordinates['x'] + '|' + coordinates['y'] + ')';
		} else{
			fetchNameForMovement('playerNameTarget', myself.data['movement']['playerIdTarget'], 'player');
			if(parseInt(myself.data['movement']['playerIdTarget']) > 0) {
				fetchNameForMovement('villageNameTarget', myself.data['movement']['villageIdTarget'], 'village');
			} else {
				fetchNameForMovement('villageNameTarget', myself.data['villageIdLocation'], 'village');
			}
		}
	}
	function fetchMovementStartNames(){
		if(myself.data['movement']['movementType'] == Troops.MOVEMENT_TYPE_RETURN_ADVENTURE) {
			myself.data['movement']['villageNameStart'] = Travian.translate('TroopMovementInfo_outgoing_adventure');
		} else {
			fetchNameForMovement('villageNameStart', myself.data['movement']['villageIdStart'], 'village');
		}
		if(myself.data['playerId'] != Travian.Player.data['playerId']){
			fetchNameForMovement('playerNameStart', myself.data['playerId'], 'player');
		}else{
			myself.data['movement']['playerNameStart'] = Travian.Player.data['name'];
		}
	}

	/**
	 * will fetch the names of the target player, target village and start village.
	 */
	this.fetchNames = function(){
		if(!this.fetchedNames) {
			this.fetchedNames = true;
			fetchMovementTargetNames();
			fetchMovementStartNames();
		}
	};

	/**
	 * Returns the number of units in this troop. Only used by starvation so exclude the hero (doesn't starve)
	 */
	this.getUnitAmount = function () {
		var amount = 0;
		for (var nr in this.data['units']) {
			if (nr != Troops.TYPE_HERO) {
				amount += parseInt(this.data['units'][nr]);
			}
		}
		return amount;
	};
}

Troops.getUnitValue = function (value, unitId, level, tribeId) {
	if (tribeId) {
		unitId = nrToUnitId(unitId, tribeId);
	}
	if (!level || level < 0) {
		level = 0;
	} else {
		level = parseInt(level);
	}
	var cfg = Travian.Config['troopConfig'][unitId];
	if (cfg && cfg[value]) {
		var strength = cfg[value];
		for (var i = 0; i < level; i++) {
			strength = strength * Travian.Config['unitResearchStrengthMultiplier'] + Travian.Config['unitResearchSupplyMultiplier'] * cfg['supply'];
		}
		return Math.floor(strength);
	}
	return 0;
};

Troops.getHeroBaseStrength = function (tribeId) {
	if (tribeId == Player.TRIBE['ROMAN']) {
		return Travian.Config['heroConfig']['HeroBaseStrengthRomans'];
	}
	return Travian.Config['heroConfig']['HeroBaseStrengthOthers'];
};

Troops.STATUS_HOME = 'home';
Troops.STATUS_TRANSIT = 'transit';
Troops.STATUS_SUPPORT = 'support';
Troops.STATUS_TRAP = 'trap';

Troops.COLLECTION_STATIONARY = 'stationary';
Troops.COLLECTION_MOVING = 'moving';
Troops.COLLECTION_TRAPPED = 'trapped';
Troops.COLLECTION_ELSEWHERE = 'elsewhere';
Troops.COLLECTION_ALL = 'all';

Troops.MOVEMENT_TYPE_ATTACK = 3;
Troops.MOVEMENT_TYPE_RAID = 4;
Troops.MOVEMENT_TYPE_SUPPORT = 5;
Troops.MOVEMENT_TYPE_SPY = 6;
Troops.MOVEMENT_TYPE_TRANSPORT = 7;
Troops.MOVEMENT_TYPE_RETURN = 9;
Troops.MOVEMENT_TYPE_SETTLE = 10;
Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT = 12;
Troops.MOVEMENT_TYPE_ADVENTURE = 20;
Troops.MOVEMENT_TYPE_RETURN_ADVENTURE = 27;
Troops.MOVEMENT_TYPE_TRANSPORT_RETURN = 33;
Troops.MOVEMENT_TYPE_REGENERATION = 36;
Troops.MOVEMENT_TYPE_SIEGE = 47;
Troops.MOVEMENT_TYPE_TREASURE_RESOURCES = 50;

Troops.TYPE_RAM = 7;
Troops.TYPE_CATAPULT = 8;
Troops.TYPE_LEADER = 9;
Troops.TYPE_SETTLER = 10;
Troops.TYPE_HERO = 11;

Troops.TYPE_TRAPS = 79;

Troops.SECOND_TARGET_CATAPULTS = 20;

Troops.MAX_LEVEL = 20;

Troops.MOVEMENT_ICON = {};
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_ATTACK] = 'movement_attack_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SIEGE] = 'movement_attack_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_RAID] = 'movement_attack_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SUPPORT] = 'movement_support_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SPY] = 'movement_spy_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TRANSPORT] = 'movement_trade_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_RETURN] = 'movement_support_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_SETTLE] = 'movement_settle_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TRIBUTE_COLLECT] = 'movement_tribute_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_ADVENTURE] = 'movement_adventure_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_RETURN_ADVENTURE] = 'movement_support_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TRANSPORT_RETURN] = 'movement_trade_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_REGENERATION] = 'movement_heal_small_flat_black';
Troops.MOVEMENT_ICON[Troops.MOVEMENT_TYPE_TREASURE_RESOURCES] = 'movement_trade_small_flat_black';

Troops.prototype = new AbstractModel();
Cache.register(Troops);;window['TroopsMovementInfo'] = function TroopsMovementInfo (data) {
	"use strict";
	this.defaultData = {
		'troopId': 0,
		'villageIdStart': 0,
		'villageNameStart': '',
		'villageIdTarget': 0,
		'villageNameTarget': '',
		'playerNameTarget': '',
		'playerIdTarget': 0,
		'timeStart': 0,
		'timeFinish': 0,
		'movementType': 1,
		'resources': {
			1: 0,
			2: 0,
			3: 0,
			4: 0
		},
		'treasures': 0,
		'spyTarget': 0,
		'catapultTarget1': 0,
		'catapultTarget2': 0,
		'coordinateID': 0
	};

	this.data = {};

	this.name = 'TroopsMovementInfo';
}
TroopsMovementInfo.COLLECTION_ATTACK_VILLAGE = "attackVillage";

TroopsMovementInfo.prototype = new AbstractModel();
Cache.register(TroopsMovementInfo);/**
 * @constructor
 * @extends {AbstractData}
 * @param {Object} data
 */
;window['UnitQueue'] = function UnitQueue () {
	this.defaultData = {
		'villageId': 0,
		'buildingTypes': {},
		'unitsInQueue': {}
	};

	this.data = {};

	this.set = function (data) {
		this.data = data;

		// Compose an array of all units that are currently in production
		var inProduction = [];
		for (var j = 1; j <= 11; j++) {
			inProduction[j] = 0;
		}
		inProduction[Troops.TYPE_TRAPS] = 0;

		for (var buildingType in data['buildingTypes']) {
			for (var i = 0; i < data['buildingTypes'][buildingType].length; i++) {
				var unitNr = unitIdToNr(data['buildingTypes'][buildingType][i]['unitType']);
				if (data['buildingTypes'][buildingType][i]['unitType'] == 99) {
					unitNr = Troops.TYPE_TRAPS;
				}
				inProduction[unitNr] += parseInt(data['buildingTypes'][buildingType][i]['count']);
			}
		}
		this.data['unitsInQueue'] = inProduction;
	};

	this.set(this.defaultData);

	this.name = 'UnitQueue';

	var unitProductionRequestInProgress = (new Date()).getTime();
	// Checks if any unit training has finished and triggers the server to recalculate crop consumption (is called periodically via tick)
	this.checkUnits = function() {
		if (!this.filled) {
			return;
		}
		for (var buildingType in this.data['buildingTypes']) {
			var queue = this.data['buildingTypes'][buildingType];
			for (var i = 0; i < queue.length; i++) {
				var unit = queue[i];
				if (unit['timeFinishedNext'] < Travian.rootScope['currentServerTime']) {
					var now = (new Date()).getTime();
					if (unitProductionRequestInProgress < now - 1000) {
						unitProductionRequestInProgress = (new Date()).getTime();
						Travian.writeRequest('village/checkUnitProduction', {'villageId': this.data['villageId']});
					}
				}
			}
		}
	}.bind(this);
}

UnitQueue.prototype = new AbstractModel();
Cache.register(UnitQueue);
;window['UnitResearchQueue'] = function UnitResearchQueue (villageId) {
	this.defaultData = {};

	this.data = {
		'villageId': 0,
		'buildingTypes': {}
	};
	this.set(this.defaultData);

	this.canUseInstantConstruction = function() {
		for (var buildingType in this.data['buildingTypes']) {
			for (var i = 0; i < this.data['buildingTypes'][buildingType].length; i++) {
				if (this.data['buildingTypes'][buildingType][i]['pause'] < 0) {
					return true;
				}
			}
		}
		return false;
	}

	this.name = 'UnitResearchQueue';
}
UnitResearchQueue.prototype = new AbstractModel();
Cache.register(UnitResearchQueue);/**
 * Village Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['Village'] = function Village (data) {
	this.data = {
		'villageId': null,
		'playerId': null,
		'name': '',
		'tribeId': 0,
		'type': 0,
		'supplyBuildings': 0,
		'supplyTroops': 0,
		'production': {
			1: 0,
			2: 0,
			3: 0,
			4: 0
		},
		'storage': {
			1: 0,
			2: 0,
			3: 0,
			4: 0
		},
		'storageCapacity': {
			1: 0,
			2: 0,
			3: 0,
			4: 0
		},
		// These values don't come from the server
		'lastProduction': 0,
		'lastCalculation': 0,
		'lastTributeProduction': 0,
		'lastTributeCalculation': 0,
		'cropBrutto': 0,
		'x': 0,
		'y': 0,
		'isActive': false,
		'calculatedStorage': {
			1: 0,
			2: 0,
			3: 0,
			4: 0
		},
		'belongsToKing': 0,
		'tributes': {
			1: 0,
			2: 0,
			3: 0
		},
		'treasury': {
			1: 0,
			2: 0,
			3: 0
		},
		'calculatedTributes': {
			1: 0,
			2: 0,
			3: 0
		},
		'tributeBonusResources': {
			1: 0,
			2: 0,
			3: 0
		},
		'tributeTreasures': null,
		'tributesCapacity': 0,
		'tributesOnTheirWay': false,
		'culturePoints': 0,
		'culturePointProduction': 0,
		'realTributePercent': 0,
		'bonusCulturePointProduction': 0,
		'tributeSum': 0,
		'canFetchTributes': false,
		'tributePercentage': 0,
		'tributeTreasureMarker': 0,
		'timeUntilTributeFetch': 0,
		'tributeProduction': 0,
		'position': 0
	};

	var that = this;

	this.name = 'Village';
	this.granaryState = -1;
	this.warehouseState = -1;
	this.underAttack = false;

	this.set = function (data) {
		data = data || {};

		/**
		 * Timestamp when the last production was calculated Note: This is not very accurate due to XHR Response Time
		 * vice versa
		 *
		 * @type {Number}
		 */
		data.lastProduction = new Date().getTime();
		data.lastTributeProduction = new Date().getTime();

		/**
		 * Calculate village position
		 */
		if (data['villageId'] > 0) {
			var pos = id2xy(data['villageId']);
			data['x'] = pos.x;
			data['y'] = pos.y;
		}

		this.data.celebrations = [];
		this.parent.set.call(this, data);

		// calculate cropBrutto
		this.data['cropBrutto'] = this.data['production'][4] + this.data['supplyBuildings'] + this.data['supplyTroops'];
		this.data['calculatedTributes'] = {1: 0, 2: 0, 3: 0};

		this.data['name'] = "" + this.data['name'];

		extrapolateResourceObject();
		extrapolateTributeObject();
	};

	this.getResources = function () {
		// Calculate the current resources only once per second
		var now = new Date().getTime();
		if (now > this.data.lastCalculation + 1000) {
			this.data.lastCalculation = now;
			extrapolateResourceObject();
		}
		return this.data.calculatedStorage;
	};

	this.getCapacity = function () {
		return this.data['storageCapacity'];
	};

	this.getProduction = function () {
		return this.data['production'];
	};

	/**
	 * @param {Object} costs
	 * @returns {Boolean}
	 */
	this.hasEnoughResources = function (costs) {
		var res = this.getResources();
		for (var resType in costs) {
			if ((costs[resType] > res[resType]) && (costs[resType] > 0)) {
				return false;
			}
		}
		return true;
	};

	this.getTributes = function () {
		// If there is an active treasury we don't generate tributes (the returned object only has 0 res)
		if (this.data.treasuresUsable > 0) {
			return this.data.tributes;
		}
		// Calculate the current resources only once per second
		var now = new Date().getTime();
		if (now > this.data.lastTributeCalculation + 1000) {
			this.data.lastTributeCalculation = now;
			extrapolateTributeObject();
		}
		return this.data['calculatedTributes'];
	};

	/**
	 * Calculate the current amount of resources. Note: This utilizes "this.data.lastProduction" to extrapolate the
	 * resources. It's not exact due to XHR Response time and vice versa
	 *
	 * @param {Number} storage
	 * @param {Number} storageCapacity
	 * @param {Number} production
	 * @returns {Number}
	 */
	function extrapolate (storage, storageCapacity, production) {
		return Math.floor(Math.min(Number(storage) + (production / 3600 * ((new Date().getTime() - that.data.lastProduction) / 1000)), storageCapacity));
	}

	/**
	 * Extrapolate all resources
	 */
	function extrapolateResourceObject () {
		var newResources = {};
		var somethingChanged = false;

		for (var resourceType in that.data.calculatedStorage) {
			var old = Math.floor(that.data.calculatedStorage[resourceType]);
			newResources[resourceType] = extrapolate(that.data['storage'][resourceType], that.data['storageCapacity'][resourceType], that.data['production'][resourceType]);
			if (Math.floor(newResources[resourceType]) != old) {
				somethingChanged = true;
			}
			that.data.calculatedStorage[resourceType] = newResources[resourceType];
		}

		if (somethingChanged) {
			if (that.data.calculatedStorage[Resources.ID['crop']] < 0) {
				// Trigger starvation check
				if (that.data.calculatedStorage[Resources.ID['crop']] < -1) {
					Travian.rootScope.$broadcast('starveTroops', that.data['villageId']);
				}
				// Ensure that there is no actual negative crop in the storage for all further calculations
				that.data.calculatedStorage[Resources.ID['crop']] = Math.max(0, that.data.calculatedStorage[Resources.ID['crop']]);
				that.data['storage'][Resources.ID['crop']] = Math.max(0, that.data['storage'][Resources.ID['crop']]);
			}
			calcStorageBuildingStates();
			Travian.rootScope.$broadcast('resourcesChanged', that.data['villageId'], newResources);
		}
	}

	/**
	 * Extrapolate all Tributes
	 *
	 * @param {Object} currTributes
	 */
	function extrapolateTributeObject () {
		var currentTributes = {};
		var currentTributesRounded = {};
		var somethingChanged = false;

		var oldSum = 0;
		var newSum = 0;
		for (var resourceType in that.data['calculatedTributes']) {
			var old = Math.floor(that.data['calculatedTributes'][resourceType]);
			oldSum += old;
		}
		// extrapolate tributes only if we are not yet on the maximum
		if (oldSum < that.data.tributesCapacity) {
			for (var resourceType in that.data['calculatedTributes']) {
				var old = Math.floor(that.data['calculatedTributes'][resourceType]);
				currentTributes[resourceType] = Math.min(Number(that.data['tributes'][resourceType]) + (that.data['production'][resourceType] / 3600 * ((new Date().getTime() - that.data.lastTributeProduction) / 1000) * that.data['realTributePercent']), that.data['storageCapacity'][resourceType]);
				currentTributesRounded[resourceType] = Math.floor(currentTributes[resourceType]);
				if (Math.floor(currentTributesRounded[resourceType]) != old) {
					somethingChanged = true;
				}
				newSum += currentTributesRounded[resourceType];
			}
			//we may have no too much resources produced...
			if (newSum > that.data['tributesCapacity']) {
				//All tributes shares the same capacity.. and we have to much, so lets cap them
				var distributed = 0;
				for (var resourceType in that.data['calculatedTributes']) {
					var res = currentTributesRounded[resourceType];
					//how much percentage we got
					var percentage = (res / newSum);
					var newValue = Math.floor(percentage * that.data['tributesCapacity']);
					currentTributesRounded[resourceType] = newValue;
					distributed += newValue;
				}
				var leftResources = that.data['tributesCapacity'] - distributed;
				// Distribute left resources
				for (var i = 0; i < leftResources; i++) {
					var type = (i % 3) + 1;
					currentTributesRounded[type]++;
				}
			}
			that.data['calculatedTributes'] = currentTributesRounded;
		}

		that.data['tributeSum'] = 0;
		for (var tributeId in that.data['calculatedTributes']) {
			that.data['tributeSum'] += that.data['calculatedTributes'][tributeId];
		}
		that.data['tributePercentage'] = Math.round(that.data['tributeSum'] / that.data['tributesCapacity'] * 100);
		that.data['tributeTreasureMarker'] = Math.ceil(that.data['tributesRequiredToFetch'] / that.data['tributesCapacity'] * 100);
		var newCanFetch = false;
		if (that.data['tributeSum'] >= that.data['tributesRequiredToFetch']) {
			newCanFetch = true;
		}
		if (that.data['canFetchTributes'] != newCanFetch) {
			Travian.rootScope.$broadcast('tributesChanged', that['data']['villageId'], that.data['calculatedTributes']);
		}
		that.data['canFetchTributes'] = newCanFetch;

		// calculates the time needed until there are enough fetchable tributes
		var tributeSum = 0;
		if (that.data['tributeProduction']) {
			for (var resourceType in currentTributes) {
				tributeSum += currentTributes[resourceType]
			}
			var secondsToFull = ((that.data['tributesCapacity'] - tributeSum) / that.data['tributeProduction']) * 3600;
			that.data['timeUntilTributeFull'] = Travian.ServerTime + secondsToFull;
		}
		if ((!newCanFetch) && (that.data['tributesRequiredToFetch'] && that.data['tributeProduction'])) {
			var secondsToTributeFetch = ((that.data['tributesRequiredToFetch'] - tributeSum) / that.data['tributeProduction']) * 3600;
			that.data['timeUntilTributeFetch'] = Travian.ServerTime + secondsToTributeFetch;
		}
	}

	/**
	 * Returns the timestamp of when there will be enough resources in this village. -1 when it will never reach these
	 * resources.
	 */
	this.getDestTimeForResources = function (res, onlyGetSeconds, ignoreCapacity) {
		var storage = this.getResources();
		var maxTime = 0;
		for (var resourceType in res) {
			if (res[resourceType] <= 0) {
				continue;
			}
			var currentRes = Math.min(Number(that.data['storage'][resourceType]) + (that.data['production'][resourceType] / 3600 * ((new Date().getTime() - that.data.lastProduction) / 1000)), that.data['storageCapacity'][resourceType]);
			var diff = res[resourceType] - currentRes;
			var production = this.data.production[resourceType];
			var capacity = this.data.storageCapacity[resourceType];
			if (ignoreCapacity) {
				capacity = res[resourceType];
			}
			// Do we need extra resources?
			if (diff > 0) {
				// Do we ever reach those?
				if ((capacity >= res[resourceType]) && (production > 0)) {
					var time = diff / production;
					if (time > maxTime) {
						maxTime = time;
					}
				} else {
					// We never reach them
					return -1;
				}
			}
		}
		if (onlyGetSeconds) {
			return maxTime * 3600;
		}
		return Math.round(Travian.ServerTime + maxTime * 3600);
	};

	/**
	 * Calculates the time reduction of a npc trade based on given resource costs
	 * @param costs
	 * @returns {number}
	 */
	this.calculateNpcTradingTimeBoost = function (costs) {
		// Calculate the time that it would take to have enough resources after we used the trader.
		var available = new Resources(that.getResources());
		var costDistribution = new Resources(costs);
		var resDistribution = available.distribute(that.getCapacity(), costDistribution, that.getProduction());
		// Create a new cost object that differs from the current resource storage in exactly the same way as the new distribution would.
		var newCostRes = new Resources();
		for (var i = 1; i <= 4; i++) {
			var diff = costDistribution[i] - resDistribution[i];
			newCostRes[i] = available[i] + diff;
		}
		var oldDestTime = that.getDestTimeForResources(costDistribution, true);
		var newDestTime = that.getDestTimeForResources(newCostRes, true, true);

		return oldDestTime - newDestTime;
	}

	/**
	 * Returns the best resource distribution based on the village capacity, production and given costs
	 * @param costs
	 * @returns {Resources}
	 */
	this.getCostsDistribution = function (costs) {
		var capacity = that.getCapacity();
		var available = new Resources(that.getResources());
		var costDistribution = new Resources(costs);
		return available.distribute(capacity, costDistribution, that.getProduction());
	}

	/**
	 * Returns the count of changes to achieve the best distribution of resources based on given costs
	 * @param costs
	 * @returns {number}
	 */
	this.getCostsDistributionDifference = function (costs) {
		var diff = 0;
		var current = new Resources(that.getResources());
		var distribution = that.getCostsDistribution(costs);
		for (var i = 1; i <= 4; i++) {
			diff += Math.abs(current[i] - distribution[i]);
		}
		return diff;
	}


	this.isMainVillage = function () {
		return Village.isMainVillage(this.data['type']);
	};

	this.isWWVillage = function () {
		return Village.isWWVillage(this.data['type']);
	};

	this.hasActiveTreasury = function() {
		return this.data['treasuresUsable'] > 0;
	};

	// Caculates the state (fill level) of granary and warehouse (0 = 0%, 1 = 50%, 2 = 100%)
	function calcStorageBuildingStates () {
		// Get the current storage
		var storage = that.getResources();
		// Calculate the new granary state
		var cropId = Resources.ID['crop'];
		var percent = storage[cropId] / that.data['storageCapacity'][cropId];
		var newGranaryState = Math.floor(percent * 2);
		var stateChanged = newGranaryState != that.granaryState;
		that.granaryState = newGranaryState;
		// Calculate the new warehouse state
		var warehouseCurrent = storage[Resources.ID['wood']] + storage[Resources.ID['clay']] + storage[Resources.ID['iron']];
		var warehouseCapacity = that.data['storageCapacity'][Resources.ID['wood']] * 3;
		percent = warehouseCurrent / warehouseCapacity;
		var newWarehouseState = Math.floor(percent * 2);
		stateChanged = stateChanged || newWarehouseState != that.warehouseState;
		that.warehouseState = newWarehouseState;
		if (stateChanged) {
			Travian.rootScope.$broadcast('warehouseStateChanged', that.data['villageId']);
		}
	}

	this.set(data);
}

Village.collectionSortFct = function (a, b) {
	if (a['data']['name'] > b['data']['name']) {
		return 1;
	}
	if (a['data']['name'] < b['data']['name']) {
		return -1;
	}
	return 0;
};

Village.isWWVillage = function (type) {
	return type == Village.TYPE_WORLD_WONDER_VILLAGE ||
		type == Village.TYPE_WORLD_WONDER_TOWN;
};

Village.isMainVillage = function (type) {
	return (type == Village.TYPE_MAIN) || (type == Village.TYPE_MAIN_TOWN);
};

Village.isTown = function (type) {
	var townTypes = [Village.TYPE_TOWN, Village.TYPE_MAIN_TOWN, Village.TYPE_WORLD_WONDER_TOWN];
	return (townTypes.indexOf(parseInt(type)) >= 0);
};

Village.TYPE_NORMAL = 0;
Village.TYPE_MAIN = 1;
Village.TYPE_TOWN = 2;
Village.TYPE_MAIN_TOWN = 3;
Village.TYPE_WORLD_WONDER_VILLAGE = 4;
Village.TYPE_ROBBER_VILLAGE = 5;
Village.TYPE_GOVERNOR_NPC_VILLAGE = 6;
Village.TYPE_WORLD_WONDER_TOWN = 7;
Village.TYPE_KINGDOM_ROBBER = 8;

Village.TYPE_OASIS = 10;

Village.COLLECTION_OWN = 'own';
Village.COLLECTION_KINGDOM = 'kingdom';
Village.COLLECTION_ALLIANCE = 'alliance';
Village.COLLECTION_NPCS = 'npc';
Village.COLLECTION_SOCIETY = 'society';

Village.PRODUCTION_TYPE_BUILDING = 1;
Village.PRODUCTION_TYPE_OASIS = 2;
Village.PRODUCTION_TYPE_HERO = 3;
Village.PRODUCTION_TYPE_KING_TAX = 4;
Village.PRODUCTION_TYPE_TREASURES = 5;
Village.PRODUCTION_TYPE_GOLD = 6;
Village.PRODUCTION_TYPE_OASIS_TROOPS = 7;

Village.OASIS_STATUS_NO_OASIS = 0;
Village.OASIS_STATUS_OCCUPIED = 1;
Village.OASIS_STATUS_WILD = 3;

Village.prototype = new AbstractModel();
Cache.register(Village);/**
 * Voucher Model
 *
 * @constructor
 * @extends {AbstractModel}
 */
;window['Voucher'] = function Voucher () {
	this.defaultData = {
		'playerId': 0,
		'hasVouchers': []
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'Voucher';
}

Voucher.prototype = new AbstractModel();
Cache.register(Voucher);/**
 * Village Model
 *
 * @constructor
 * @extends {AbstractModel}
 * @param {Object} data
 */
;window['WorldWonderResources'] = function WorldWonderResources (data) {
	this.defaultData = {
		'id': 0,
		'villageId': '',
		'playerId': '',
		'resources': new Resources(),
		'resourcesToday': new Resources()
	};

	this.data = {};
	this.set(this.defaultData);

	this.name = 'WorldWonderResources';
}

WorldWonderResources.prototype = new AbstractModel();
Cache.register(WorldWonderResources);/**
 * @constructor
 * @param {Object} modelClass
 */
;window['ChatCollection'] = function ChatCollection (modelClass) {
	this.cacheService = ChatCache;
	this.modelClass = modelClass;
	this.data = [];

	this.set = function (data) {
		var r = this.parent.set.call(this, data);
		// Automatically sort chat collections containing objects with a 'timestamp' field
		if (this.data.length > 0 && typeof this.data[0].data['timestamp'] != 'undefined' && data['operation'] != 3) {
			this.data.sort(function(a, b) {
				return a.data['timestamp'] - b.data['timestamp'];
			});
		}
		return r;
	};
}
ChatCollection.prototype = new AbstractCollection();
ChatCache.register(ChatCollection, 'Collection:');
ChatCache.collectionModel = ChatCollection;
;window['ChatInbox'] = function ChatInbox (uid, roomId) {
	this.defaultData = {
		'_id': '',
		'roomId': roomId,
		'myPlayerId': uid,
		'group': '',
		'playerId': 0,		// Filled by ChatService, if this is a 1-on-1 chat. Will contain the other player id
		'playerName': 0,	// Filled by ChatService, if this is a 1-on-1 chat
		'roomViewName': '', // Filled by ChatService
		'roomType': 0, 		// Filled by ChatService
		'ownUnread': false,	// Filled by ChatService
		'otherUnread': false,// Filled by ChatService
		'isMassMail': false,// Filled by ChatService
		'isPrivateChat': false,// Filled by ChatService
		'totalParticipents': 0,// Filled by ChatService
		'linePlayerId': 0,
		'linePlayerName': '',
		'line': '',
		'timestamp': 0,
		'lastTimestamp': 0,
		'unread': 0,
		'lastOwnRead': -1,	// If this is a massmail it will be overwritten by the ChatService
		'lastOtherRead': -1,
		'playersRead': {}
	};

	this['oldTimestamp'] = 0;		// Used to check if we have new messages. Will automatically open the chat in the bottom bar.

	this['isDocked'] = false;	// When this is true, the chat is displayed in a small "window" near the bottom bar

	this.data = {};
	this.set = function (data) {
		this['oldTimestamp'] = this.data['timestamp'];

		data = data || {};

		this.parent.set.call(this, data);
	};

	this.set(this.defaultData);
}
ChatInbox.prototype = new AbstractModel();
ChatCache.register(ChatInbox);
;window['ChatLine'] = function ChatLine (id) {
	this.defaultData = {
		'id': id,
		'playerId': 0,
		'playerName': '',
		'timestamp': 0,
		'text': '',
		'roomId': ''
	};

	this.data = {};
	this.set(this.defaultData);
}
ChatLine.preventUpdateWithoutFirstFill = true;
ChatLine.prototype = new AbstractModel();
ChatCache.register(ChatLine);
/**
 * Non permanent chat room notification
 * @param roomId
 * @param type
 * @param playerName
 * @param playerId
 * @constructor
 */
;window['ChatNotification'] = function ChatNotification (roomId, type, playerName, playerId) {
	this.data = {
		'roomId': roomId,
		'type': type,
		'playerName': playerName,
		'playerId': playerId
	};
}

ChatNotification.PLAYER_JOINED = 1;
ChatNotification.PLAYER_LEFT = 2;
ChatNotification.PLAYER_ONLINE = 3;
ChatNotification.PLAYER_OFFLINE = 4;

ChatNotification.prototype = new AbstractModel();
ChatCache.register(ChatNotification);;window['FriendRequest'] = function FriendRequest (otherPlayerId) {
	this.defaultData = {
		'playerId': otherPlayerId,
		'name': '',
		'sourceId': 0
	};

	this.data = {};
	this.set(this.defaultData);

	this.set = function (data) {
		var myself = this;
		Travian.nameService.getNameForId(data['playerId'], function (name) {
			myself.data['name'] = name;
		});
		this.parent.set.call(this, data);

		otherPlayerId = this.data['playerId'];
		if (Travian.Player.data['playerId'] > parseInt(otherPlayerId)) {
			this.data['roomId'] = "1." + Travian.Player.data['playerId'] + "." + otherPlayerId;
		} else {
			this.data['roomId'] = "1." + otherPlayerId + "." + Travian.Player.data['playerId'];
		}
	}
}
FriendRequest.prototype = new AbstractModel();
ChatCache.register(FriendRequest);
;window['ChatRoom'] = function ChatRoom (roomId) {
	this.defaultData = {
		'roomId': roomId,
		'publicName': '',
		'lastRead': 0,
		'members': 0,
		'joined': 0 // Time when player joined the room (clicking on Join button)
	};

	this.data = {};
	this.set(this.defaultData);

	this.getRoomType = function() {
		var tmp = ('' + this.data['roomId']).split('.');
		return parseInt(tmp[0], 10);
	};

	this.getRoomName = function() {
		var tmp = ('' + this.data['roomId']).split('.');
		return parseInt(tmp[1], 10);
	};

	this.resetData = function() {
		// Keep the members number
		var members = this.data['members'];
		var joined = this.data['joined'];
		this.set(this.defaultData);
		// Decrease by 1 (me), if I was in before
		this.data['members'] = joined !== 0 ? members - 1 : members;
	};

	this.getTypeString = function () {
		switch (this.getRoomType()) {
			case ChatRoom.TYPE_ALLIANCE:
				return 'Alliance';
			case ChatRoom.TYPE_KINGDOM:
				return 'Kingdom';
			case ChatRoom.TYPE_SECRET_SOCIETY:
				return 'Society';
			case ChatRoom.TYPE_PUBLIC:
				var tmp = ('' + this.data['roomId']).split('.');
				return tmp[1].charAt(0).toUpperCase() + tmp[1].slice(1);
			default:
				return null;
		}
	};
}

ChatRoom.isMonologue = function (roomId) {
	var splitRoomId = (""+roomId).split('.');
	return (splitRoomId[0] == ChatRoom.TYPE_PRIVATE && splitRoomId[1] == splitRoomId[2]);
};

ChatRoom.isPrivate = function (roomId) {
	var splitRoomId = (""+roomId).split('.');
	return (splitRoomId[0] == ChatRoom.TYPE_PRIVATE);
};


ChatRoom.TYPE_PRIVATE = 1;
ChatRoom.TYPE_ALLIANCE = 2;
ChatRoom.TYPE_GROUP = 3;
ChatRoom.TYPE_PUBLIC = 4;
ChatRoom.TYPE_KINGDOM = 5;
ChatRoom.TYPE_ALLIANCE_LEADERS = 6;
ChatRoom.TYPE_SECRET_SOCIETY = 7;

ChatRoom.GLOBAL = ChatRoom.TYPE_PUBLIC + '.global';
ChatRoom.BEGINNER = ChatRoom.TYPE_PUBLIC + '.beginner';

ChatRoom.prototype = new AbstractModel();
ChatCache.register(ChatRoom);
;window['ChatRoomUser'] = function ChatRoomUser (otherPlayerId) {
	this.defaultData = {
		'playerId': otherPlayerId,
		'name': '',
		'status': -1
	};

	this.data = {};

	this.set = function (data) {
		data = data || {};

		this.parent.set.call(this, data);

		otherPlayerId = this.data['playerId'];
		if (Travian.Player.data['playerId'] > parseInt(otherPlayerId)) {
			this.data['roomId'] = "1." + Travian.Player.data['playerId'] + "." + otherPlayerId;
		} else {
			this.data['roomId'] = "1." + otherPlayerId + "." + Travian.Player.data['playerId'];
		}
	};
	this.set(this.defaultData);
}

ChatRoomUser.STATUS_NOT_AVAILABLE = -1;
ChatRoomUser.STATUS_OFFLINE = 0;
ChatRoomUser.STATUS_ONLINE = 1;
ChatRoomUser.STATUS_AFK = 2;

ChatRoomUser.prototype = new AbstractModel();
ChatCache.register(ChatRoomUser);
;window['ChatUser'] = function ChatUser (otherPlayerId) {
	this.defaultData = {
		'playerId': otherPlayerId,
		'name': '',
		'status': 1
	};

	this.data = {};

	this.set = function (data) {
		var oldOnline = this.data['online'];

		data = data || {};

		this.parent.set.call(this, data);

		otherPlayerId = this.data['playerId'];
		if (Travian.Player.data['playerId'] > parseInt(otherPlayerId)) {
			this.data['roomId'] = "1." + Travian.Player.data['playerId'] + "." + otherPlayerId;
		} else {
			this.data['roomId'] = "1." + otherPlayerId + "." + Travian.Player.data['playerId'];
		}

		if ((this.data['online'] == true) && (!oldOnline) && (this.data['playerId'] != Travian.Player.data['playerId'])) {
			Travian.rootScope.$broadcast('flashNotification', {'notificationId': 59, 'option': this.data['name']});
		}
	};
	this.set(this.defaultData);
}
ChatUser.STATUS_NOT_AVAILABLE = -1;
ChatUser.STATUS_OFFLINE = 0;
ChatUser.STATUS_ONLINE = 1;
ChatUser.STATUS_AFK = 2;

ChatUser.prototype = new AbstractModel();
ChatCache.register(ChatUser);
;window['PrivateChat'] = function PrivateChat (roomId) {
	this.defaultData = {
		'roomId': roomId,
		'playerId': '',
		'chatUser': null,
		'chatInbox': null,
		'isDocked': false,
		'isNew': false
	};

	this.data = {};
	this.set(this.defaultData);

	// Construct default data
	var splitRoom = ("" + roomId).split('.');
	var otherPlayerId = splitRoom[2];
	if (splitRoom[1] != Travian.Player.data['playerId']) {
		otherPlayerId = splitRoom[1];
	}
	this.data['playerId'] = parseInt(otherPlayerId, 10);

	this.getPlayerId = function () {
		return this.data['playerId'];
	};

	this.setChatUser = function (chatUser) {
		this.data['chatUser'] = chatUser;
	};

	this.setChatInbox = function (inboxEntry) {
		this.data['chatInbox'] = inboxEntry;
	};
}

PrivateChat.prototype = new AbstractModel();


Travian.checkPage = function() {
	if (document.readyState != "complete" && document.readyState != "loaded") {
		// Try again later. The page is not complete yet
		window.setTimeout(Travian.checkPage, 2000);
		return;
	}
	// The main travian object is undefined? Then we definitely have to reload the page
	if ((typeof(Travian) === 'undefined') || (typeof(Travian.request) == 'undefined')) {
		// Try to reload the page if we didn't try before
		if (window.location.href.indexOf('nocache') < 0) {
			window.location.replace('/?nocache' + window.location.hash);
		}
		return;
	}
	if ((typeof(window.vitruvian) !== 'undefined') || document.getElementById("vitruvian")) {
		alert("There is malware on your PC! Run a virus scanner or a malware removal tool.");
	}
	// Disable the Check for the moment - its too faulty because of race conditions regarding service/directive initializing
	return;
	// Check if everything is in place
	var y = [];
	for (var x in Travian) {
		y.push(x);
	}
	var data = {
		'version': Travian.Config['apiVersion'],
		'var': 'Travian',
		'value': y.sort().join("")
	};
	Travian.request('login/checkCode', data, function (result) {
		// Is there some kind of problem with this client?
		if (result.data != '1') {
			// Try to reload the page if we didn't try before
			if (window.location.href.indexOf('nocache') < 0) {
				window.location.replace('/?nocache' + window.location.hash);
			}
		}
	});

	var y = [];
	var check = document.body.childNodes;
	for (var i = 0; i < check.length; i++) {
		var tag = check[i].nodeName;
		// Don't push the last UL element because we only have that once we are in game
		if (tag.toLowerCase() != 'ul') {
			y.push(tag);
		}
	}
	var data = {
		'version': Travian.Config['apiVersion'],
		'var': 'dom',
		'value': y.join("")
	};
	Travian.request('login/checkCode', data, function (result) {
		// Is there some kind of problem with this client?
		// when result.data is undefined player migth be banned
		if (typeof(result.data) !== 'undefined' && result.data != '1') {
			alert("There is malware on your PC! Run a virus scanner or a malware removal tool.");
		}
	});

}

